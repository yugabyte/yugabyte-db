CALL TEST_reset();
SELECT yb_xcluster_ddl_replication.get_replication_role();
 get_replication_role 
----------------------
 source
(1 row)

CREATE SCHEMA create_index;
SET search_path TO create_index;
-- Test temp table and index.
CREATE TEMP TABLE temp_foo(i int PRIMARY KEY, a int);
CREATE INDEX foo_idx_temp on temp_foo(a);
DROP INDEX foo_idx_temp;
DROP TABLE temp_foo;
SELECT yb_data FROM yb_xcluster_ddl_replication.ddl_queue ORDER BY ddl_end_time;
                                                            yb_data                                                             
--------------------------------------------------------------------------------------------------------------------------------
 {"user": "yugabyte", "query": "CREATE SCHEMA create_index;", "schema": "public", "version": 1, "command_tag": "CREATE SCHEMA"}
(1 row)

-- Create base table.
CREATE TABLE foo(i int PRIMARY KEY, a int, b text, c int);
-- Create indexes.
CREATE INDEX foo_idx_simple ON foo(a);
CREATE UNIQUE INDEX foo_idx_unique ON foo(b);
CREATE INDEX foo_idx_filtered ON foo(c ASC, a) WHERE a > c;
-- Test that role is captured properly.
CREATE ROLE new_role SUPERUSER;
SET ROLE new_role;
CREATE INDEX foo_idx_include ON foo(lower(b)) INCLUDE (a) SPLIT INTO 2 TABLETS;
SET ROLE NONE;
SELECT yb_data FROM yb_xcluster_ddl_replication.ddl_queue ORDER BY ddl_end_time;
                                                                                                                                      yb_data                                                                                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {"user": "yugabyte", "query": "CREATE SCHEMA create_index;", "schema": "public", "version": 1, "command_tag": "CREATE SCHEMA"}
 {"user": "yugabyte", "query": "CREATE TABLE foo(i int PRIMARY KEY, a int, b text, c int);", "schema": "create_index", "version": 1, "command_tag": "CREATE TABLE", "new_rel_map": [{"rel_name": "foo", "relfile_oid": 16462}]}
 {"user": "yugabyte", "query": "CREATE INDEX foo_idx_simple ON foo(a);", "schema": "create_index", "version": 1, "command_tag": "CREATE INDEX", "new_rel_map": [{"is_index": true, "rel_name": "foo_idx_simple", "relfile_oid": 16467}]}
 {"user": "yugabyte", "query": "CREATE UNIQUE INDEX foo_idx_unique ON foo(b);", "schema": "create_index", "version": 1, "command_tag": "CREATE INDEX", "new_rel_map": [{"is_index": true, "rel_name": "foo_idx_unique", "relfile_oid": 16468}]}
 {"user": "yugabyte", "query": "CREATE INDEX foo_idx_filtered ON foo(c ASC, a) WHERE a > c;", "schema": "create_index", "version": 1, "command_tag": "CREATE INDEX", "new_rel_map": [{"is_index": true, "rel_name": "foo_idx_filtered", "relfile_oid": 16469}]}
 {"user": "new_role", "query": "CREATE INDEX foo_idx_include ON foo(lower(b)) INCLUDE (a) SPLIT INTO 2 TABLETS;", "schema": "create_index", "version": 1, "command_tag": "CREATE INDEX", "new_rel_map": [{"is_index": true, "rel_name": "foo_idx_include", "relfile_oid": 16470}]}
(6 rows)

SELECT yb_data FROM yb_xcluster_ddl_replication.replicated_ddls ORDER BY ddl_end_time;
                                           yb_data                                            
----------------------------------------------------------------------------------------------
 {"query": "CREATE SCHEMA create_index;"}
 {"query": "CREATE TABLE foo(i int PRIMARY KEY, a int, b text, c int);"}
 {"query": "CREATE INDEX foo_idx_simple ON foo(a);"}
 {"query": "CREATE UNIQUE INDEX foo_idx_unique ON foo(b);"}
 {"query": "CREATE INDEX foo_idx_filtered ON foo(c ASC, a) WHERE a > c;"}
 {"query": "CREATE INDEX foo_idx_include ON foo(lower(b)) INCLUDE (a) SPLIT INTO 2 TABLETS;"}
(6 rows)

-- Now drop these indexes.
-- Drop two indexes by themselves.
DROP INDEX foo_idx_unique;
DROP INDEX foo_idx_filtered;
-- Drop base table and cascade deletion of other indexes.
DROP TABLE foo;
SELECT yb_data FROM yb_xcluster_ddl_replication.ddl_queue ORDER BY ddl_end_time;
                                                                                                                                      yb_data                                                                                                                                      
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 {"user": "yugabyte", "query": "CREATE SCHEMA create_index;", "schema": "public", "version": 1, "command_tag": "CREATE SCHEMA"}
 {"user": "yugabyte", "query": "CREATE TABLE foo(i int PRIMARY KEY, a int, b text, c int);", "schema": "create_index", "version": 1, "command_tag": "CREATE TABLE", "new_rel_map": [{"rel_name": "foo", "relfile_oid": 16462}]}
 {"user": "yugabyte", "query": "CREATE INDEX foo_idx_simple ON foo(a);", "schema": "create_index", "version": 1, "command_tag": "CREATE INDEX", "new_rel_map": [{"is_index": true, "rel_name": "foo_idx_simple", "relfile_oid": 16467}]}
 {"user": "yugabyte", "query": "CREATE UNIQUE INDEX foo_idx_unique ON foo(b);", "schema": "create_index", "version": 1, "command_tag": "CREATE INDEX", "new_rel_map": [{"is_index": true, "rel_name": "foo_idx_unique", "relfile_oid": 16468}]}
 {"user": "yugabyte", "query": "CREATE INDEX foo_idx_filtered ON foo(c ASC, a) WHERE a > c;", "schema": "create_index", "version": 1, "command_tag": "CREATE INDEX", "new_rel_map": [{"is_index": true, "rel_name": "foo_idx_filtered", "relfile_oid": 16469}]}
 {"user": "new_role", "query": "CREATE INDEX foo_idx_include ON foo(lower(b)) INCLUDE (a) SPLIT INTO 2 TABLETS;", "schema": "create_index", "version": 1, "command_tag": "CREATE INDEX", "new_rel_map": [{"is_index": true, "rel_name": "foo_idx_include", "relfile_oid": 16470}]}
 {"user": "yugabyte", "query": "DROP INDEX foo_idx_unique;", "schema": "create_index", "version": 1, "command_tag": "DROP INDEX"}
 {"user": "yugabyte", "query": "DROP INDEX foo_idx_filtered;", "schema": "create_index", "version": 1, "command_tag": "DROP INDEX"}
 {"user": "yugabyte", "query": "DROP TABLE foo;", "schema": "create_index", "version": 1, "command_tag": "DROP TABLE"}
(9 rows)

SELECT yb_data FROM yb_xcluster_ddl_replication.replicated_ddls ORDER BY ddl_end_time;
                                           yb_data                                            
----------------------------------------------------------------------------------------------
 {"query": "CREATE SCHEMA create_index;"}
 {"query": "CREATE TABLE foo(i int PRIMARY KEY, a int, b text, c int);"}
 {"query": "CREATE INDEX foo_idx_simple ON foo(a);"}
 {"query": "CREATE UNIQUE INDEX foo_idx_unique ON foo(b);"}
 {"query": "CREATE INDEX foo_idx_filtered ON foo(c ASC, a) WHERE a > c;"}
 {"query": "CREATE INDEX foo_idx_include ON foo(lower(b)) INCLUDE (a) SPLIT INTO 2 TABLETS;"}
 {"query": "DROP INDEX foo_idx_unique;"}
 {"query": "DROP INDEX foo_idx_filtered;"}
 {"query": "DROP TABLE foo;"}
(9 rows)

select * from public.TEST_verify_replicated_ddls();
 test_verify_replicated_ddls 
-----------------------------
 t
(1 row)

