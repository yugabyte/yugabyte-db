<!-- doc/src/sgml/release-15.sgml -->
<!-- See header comment in release.sgml about typical markup -->

 <sect1 id="release-15-12">
  <title>Release 15.12</title>

  <formalpara>
  <title>Release date:</title>
  <para>2025-02-20</para>
  </formalpara>

  <para>
   This release contains a few fixes from 15.11.
   For information about new features in major release 15, see
   <xref linkend="release-15"/>.
  </para>

  <sect2>
   <title>Migration to Version 15.12</title>

   <para>
    A dump/restore is not required for those running 15.X.
   </para>

   <para>
    However, if you are upgrading from a version earlier than 15.9,
    see <xref linkend="release-15-9"/>.
   </para>
  </sect2>

  <sect2>
   <title>Changes</title>

   <itemizedlist>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [efdadeb22] 2025-02-14 18:09:19 -0500
Branch: REL_17_STABLE [a92db3d02] 2025-02-14 18:09:21 -0500
Branch: REL_16_STABLE [111f4dd27] 2025-02-14 18:09:23 -0500
Branch: REL_15_STABLE [22ffbbf24] 2025-02-14 18:09:24 -0500
Branch: REL_14_STABLE [985908df1] 2025-02-14 18:09:25 -0500
Branch: REL_13_STABLE [1f7a05324] 2025-02-14 18:09:27 -0500
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [9f45e6a91] 2025-02-15 16:20:21 -0500
Branch: REL_17_STABLE [3abe6e04c] 2025-02-15 16:20:21 -0500
Branch: REL_16_STABLE [991a60a9f] 2025-02-15 16:20:21 -0500
Branch: REL_15_STABLE [e782a63cc] 2025-02-15 16:20:21 -0500
Branch: REL_14_STABLE [c08309584] 2025-02-15 16:20:21 -0500
Branch: REL_13_STABLE [d6d29b213] 2025-02-15 16:20:21 -0500
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [a7f95859e] 2025-02-16 12:46:35 -0500
Branch: REL_17_STABLE [3977bd298] 2025-02-16 12:46:35 -0500
Branch: REL_16_STABLE [644b7d686] 2025-02-16 12:46:35 -0500
Branch: REL_15_STABLE [2226a2e26] 2025-02-16 12:46:35 -0500
Branch: REL_14_STABLE [f864a4cdf] 2025-02-16 12:46:35 -0500
Branch: REL_13_STABLE [9f052613e] 2025-02-16 12:46:35 -0500
-->
     <para>
      Improve behavior of <application>libpq</application>'s quoting
      functions (Andres Freund, Tom Lane)
      <ulink url="&commit_baseurl;22ffbbf24">&sect;</ulink>
      <ulink url="&commit_baseurl;e782a63cc">&sect;</ulink>
      <ulink url="&commit_baseurl;2226a2e26">&sect;</ulink>
     </para>

     <para>
      The changes made for CVE-2025-1094 had one serious oversight:
      <function>PQescapeLiteral()</function>
      and <function>PQescapeIdentifier()</function> failed to honor their
      string length parameter, instead always reading to the input
      string's trailing null.  This resulted in including unwanted text in
      the output, if the caller intended to truncate the string via the
      length parameter.  With very bad luck it could cause a crash due to
      reading off the end of memory.
     </para>

     <para>
      In addition, modify all these quoting functions so that when invalid
      encoding is detected, an invalid sequence is substituted for just
      the first byte of the presumed character, not all of it.  This
      reduces the risk of problems if a calling application performs
      additional processing on the quoted string.
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-15-11">
  <title>Release 15.11</title>

  <formalpara>
  <title>Release date:</title>
  <para>2025-02-13</para>
  </formalpara>

  <para>
   This release contains a variety of fixes from 15.10.
   For information about new features in major release 15, see
   <xref linkend="release-15"/>.
  </para>

  <sect2>
   <title>Migration to Version 15.11</title>

   <para>
    A dump/restore is not required for those running 15.X.
   </para>

   <para>
    However, if you are upgrading from a version earlier than 15.9,
    see <xref linkend="release-15-9"/>.
   </para>
  </sect2>

  <sect2>
   <title>Changes</title>

   <itemizedlist>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [5dc1e42b4] 2025-02-10 10:03:37 -0500
Branch: REL_17_STABLE [43a77239d] 2025-02-10 10:03:38 -0500
Branch: REL_16_STABLE [92e4170f4] 2025-02-10 10:03:39 -0500
Branch: REL_15_STABLE [370c94d4c] 2025-02-10 10:03:39 -0500
Branch: REL_14_STABLE [e0ef3d776] 2025-02-10 10:03:40 -0500
Branch: REL_13_STABLE [c906bfe1b] 2025-02-10 10:03:40 -0500
Branch: master [4dc289635] 2025-02-10 10:03:37 -0500
Branch: REL_17_STABLE [7d43ca6fe] 2025-02-10 10:03:38 -0500
Branch: REL_16_STABLE [6e05b195d] 2025-02-10 10:03:39 -0500
Branch: REL_15_STABLE [703b3fd5d] 2025-02-10 10:03:39 -0500
Branch: REL_14_STABLE [5bc33cbea] 2025-02-10 10:03:40 -0500
Branch: REL_13_STABLE [db3eb0e82] 2025-02-10 10:03:40 -0500
Branch: master [3e98c8ce5] 2025-02-10 10:03:37 -0500
Branch: REL_17_STABLE [61ad93cdd] 2025-02-10 10:03:38 -0500
Branch: REL_16_STABLE [56aa2dcdd] 2025-02-10 10:03:39 -0500
Branch: REL_15_STABLE [b1756da75] 2025-02-10 10:03:39 -0500
Branch: REL_14_STABLE [2ae54ae17] 2025-02-10 10:03:40 -0500
Branch: REL_13_STABLE [5df4e1632] 2025-02-10 10:03:40 -0500
Branch: master [ac00ff1c9] 2025-02-10 10:03:37 -0500
Branch: REL_17_STABLE [02d4d87ac] 2025-02-10 10:03:38 -0500
Branch: REL_16_STABLE [01784793f] 2025-02-10 10:03:39 -0500
Branch: REL_15_STABLE [de4b92f33] 2025-02-10 10:03:39 -0500
Branch: REL_14_STABLE [46ddf98df] 2025-02-10 10:03:40 -0500
Branch: REL_13_STABLE [4ea3f5ef3] 2025-02-10 10:03:40 -0500
Branch: master [979205e47] 2025-02-10 12:12:14 -0500
Branch: REL_17_STABLE [05abb0f83] 2025-02-10 12:12:53 -0500
Branch: REL_16_STABLE [41343f840] 2025-02-10 12:12:56 -0500
Branch: REL_15_STABLE [a085fa731] 2025-02-10 12:12:58 -0500
Branch: REL_14_STABLE [4a6825c76] 2025-02-10 12:12:59 -0500
Branch: REL_13_STABLE [7beb2af5e] 2025-02-10 12:13:02 -0500
Branch: REL_13_STABLE [00f1a1f66] 2025-02-10 10:03:40 -0500
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [5bf12323b] 2025-02-10 16:30:03 -0500
Branch: REL_17_STABLE [85c1fcc65] 2025-02-10 16:30:31 -0500
Branch: REL_16_STABLE [0075a5c6c] 2025-02-10 16:30:37 -0500
Branch: REL_15_STABLE [9862de917] 2025-02-10 16:30:54 -0500
Branch: REL_14_STABLE [e1f1b030d] 2025-02-10 16:31:01 -0500
Branch: REL_13_STABLE [f9fceef6e] 2025-02-10 16:31:09 -0500
-->
     <para>
      Harden <function>PQescapeString</function> and allied functions
      against invalidly-encoded input strings (Andres Freund, Noah Misch)
      <ulink url="&commit_baseurl;370c94d4c">&sect;</ulink>
      <ulink url="&commit_baseurl;703b3fd5d">&sect;</ulink>
      <ulink url="&commit_baseurl;b1756da75">&sect;</ulink>
      <ulink url="&commit_baseurl;de4b92f33">&sect;</ulink>
      <ulink url="&commit_baseurl;a085fa731">&sect;</ulink>
      <ulink url="&commit_baseurl;9862de917">&sect;</ulink>
     </para>

     <para>
      Data-quoting functions supplied by <application>libpq</application>
      now fully check the encoding validity of their input.  If invalid
      characters are detected, they report an error if possible.  For the
      ones that lack an error return convention, the output string is
      adjusted to ensure that the server will report invalid encoding and
      no intervening processing will be fooled by bytes that might happen
      to match single quote, backslash, etc.
     </para>

     <para>
      The purpose of this change is to guard against SQL-injection attacks
      that are possible if one of these functions is used to quote crafted
      input.  There is no hazard when the resulting string is sent
      directly to a <productname>PostgreSQL</productname> server (which
      would check its encoding anyway), but there is a risk when it is
      passed through <application>psql</application> or other client-side
      code.  Historically such code has not carefully vetted encoding, and
      in many cases it's not clear what it should do if it did detect such
      a problem.
     </para>

     <para>
      This fix is effective only if the data-quoting function, the server,
      and any intermediate processing agree on the character encoding
      that's being used.  Applications that insert untrusted input into
      SQL commands should take special care to ensure that that's true.
     </para>

     <para>
      Applications and drivers that quote untrusted input without using
      these <application>libpq</application> functions may be at risk of
      similar problems.  They should first confirm the data is valid in
      the encoding expected by the server.
     </para>

     <para>
      The <productname>PostgreSQL</productname> Project thanks
      Stephen Fewer for reporting this problem.
      (CVE-2025-1094)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [34486b609] 2024-12-28 16:08:50 -0500
Branch: REL_17_STABLE [15b4c46c3] 2024-12-28 16:08:50 -0500
Branch: REL_16_STABLE [41a252c2c] 2024-12-28 16:08:50 -0500
Branch: REL_15_STABLE [3d1ecc92a] 2024-12-28 16:08:50 -0500
Branch: REL_14_STABLE [c58b0c43d] 2024-12-28 16:08:50 -0500
Branch: REL_13_STABLE [70d067cec] 2024-12-28 16:08:50 -0500
-->
     <para>
      Exclude parallel workers from connection privilege checks and limits
      (Tom Lane)
      <ulink url="&commit_baseurl;3d1ecc92a">&sect;</ulink>
     </para>

     <para>
      Do not
      check <literal>datallowconn</literal>, <literal>rolcanlogin</literal>,
      and <literal>ACL_CONNECT</literal> privileges when starting a
      parallel worker, instead assuming that it's enough for the leader
      process to have passed similar checks originally.  This avoids, for
      example, unexpected failures of parallelized queries when the leader
      is running as a role that lacks login privilege.  In the same vein,
      enforce <literal>ReservedConnections</literal>,
      <literal>datconnlimit</literal>, and <literal>rolconnlimit</literal>
      limits only against regular backends, and count only regular
      backends while checking if the limits were already reached.  Those
      limits are meant to prevent excessive consumption of process slots
      for regular backends --- but parallel workers and other special
      processes have their own pools of process slots with their own limit
      checks.
     </para>
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master [1fe5a347e] 2024-12-09 14:23:21 +1300
Branch: REL_17_STABLE [9d5ce4f1a] 2024-12-09 14:24:07 +1300
Branch: REL_16_STABLE [c1d6506ac] 2024-12-09 14:24:34 +1300
Branch: REL_15_STABLE [d54378e98] 2024-12-09 14:24:54 +1300
-->
     <para>
      Fix possible re-use of stale results in window aggregates (David
      Rowley)
      <ulink url="&commit_baseurl;d54378e98">&sect;</ulink>
     </para>

     <para>
      A window aggregate with a <quote>run condition</quote> optimization
      and a pass-by-reference result type might incorrectly return the
      result from the previous partition instead of performing a fresh
      calculation.
     </para>
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master [578a7fe7b] 2024-12-21 23:42:39 +0200
Branch: REL_17_STABLE [7cfdb4d1e] 2024-12-21 23:42:52 +0200
Branch: REL_16_STABLE [9d8ab2c46] 2024-12-21 23:42:55 +0200
Branch: REL_15_STABLE [acd5c28db] 2024-12-21 23:42:57 +0200
Branch: REL_14_STABLE [41eafbb49] 2024-12-21 23:42:59 +0200
Branch: REL_13_STABLE [9c1afd344] 2024-12-21 23:45:56 +0200
-->
     <para>
      Keep <varname>TransactionXmin</varname> in sync
      with <varname>MyProc-&gt;xmin</varname> (Heikki Linnakangas)
      <ulink url="&commit_baseurl;acd5c28db">&sect;</ulink>
     </para>

     <para>
      This oversight could permit a process to try to access data that had
      already been vacuumed away.  One known consequence is
      transient <quote>could not access status of transaction</quote>
      errors.
     </para>
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master [af8cd1639] 2025-01-14 14:28:49 +0200
Branch: REL_17_STABLE [96e61b279] 2025-01-14 14:35:11 +0200
Branch: REL_16_STABLE [91fc447c2] 2025-01-14 14:41:01 +0200
Branch: REL_15_STABLE [ce7c406f0] 2025-01-14 14:29:11 +0200
Branch: REL_14_STABLE [fce17c3a5] 2025-01-14 14:29:13 +0200
Branch: REL_13_STABLE [f217c4105] 2025-01-14 18:54:56 +0200
-->
     <para>
      Fix race condition that could cause failure to add a newly-inserted
      catalog entry to a catalog cache list (Heikki Linnakangas)
      <ulink url="&commit_baseurl;ce7c406f0">&sect;</ulink>
     </para>

     <para>
      This could result, for example, in failure to use a newly-created
      function within an existing session.
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [81772a495] 2025-01-25 11:28:14 -0800
Branch: REL_17_STABLE [1587f7b9f] 2025-01-25 11:28:18 -0800
Branch: master [d28cd3e7b] 2025-01-25 11:28:14 -0800
Branch: REL_17_STABLE [f4af4515b] 2025-01-25 11:28:18 -0800
Branch: REL_16_STABLE [9311fcb86] 2025-01-25 11:28:18 -0800
Branch: REL_15_STABLE [dc02b98bd] 2025-01-25 11:28:19 -0800
Branch: REL_14_STABLE [25e99483c] 2025-01-25 11:28:19 -0800
Branch: REL_13_STABLE [8bfd2ceba] 2025-01-25 11:28:19 -0800
-->
     <para>
      Prevent possible catalog corruption when a system catalog is
      vacuumed concurrently with an update (Noah Misch)
      <ulink url="&commit_baseurl;dc02b98bd">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [38c579b08] 2024-12-20 23:57:02 +1300
Branch: REL_17_STABLE [0350b876b] 2024-12-20 23:57:18 +1300
Branch: REL_16_STABLE [ba02d24ba] 2024-12-20 23:57:26 +1300
Branch: REL_15_STABLE [fb540b6aa] 2024-12-20 23:57:34 +1300
Branch: REL_14_STABLE [23c743b64] 2024-12-20 23:57:53 +1300
Branch: REL_13_STABLE [228091216] 2024-12-20 23:58:08 +1300
Branch: REL_17_STABLE [66aaabe7a] 2025-01-08 10:43:40 +1300
Branch: REL_16_STABLE [c957d7444] 2025-01-08 10:46:45 +1300
Branch: REL_15_STABLE [3181befdc] 2025-01-08 10:47:43 +1300
Branch: REL_14_STABLE [f154f028d] 2025-01-08 10:48:01 +1300
Branch: REL_13_STABLE [a1d17a894] 2025-01-08 10:48:57 +1300
Branch: REL_17_STABLE [45aef9f6b] 2025-01-08 17:02:30 +1300
Branch: REL_16_STABLE [9defaaa1d] 2025-01-08 17:03:25 +1300
Branch: REL_15_STABLE [190054e61] 2025-01-08 17:03:45 +1300
Branch: REL_14_STABLE [049c8cb9a] 2025-01-08 17:04:26 +1300
Branch: REL_13_STABLE [417d41c65] 2025-01-08 17:14:15 +1300
-->
     <para>
      Fix data corruption when relation truncation fails (Thomas Munro)
      <ulink url="&commit_baseurl;fb540b6aa">&sect;</ulink>
      <ulink url="&commit_baseurl;3181befdc">&sect;</ulink>
      <ulink url="&commit_baseurl;190054e61">&sect;</ulink>
     </para>

     <para>
      The filesystem calls needed to perform relation truncation could
      fail, leaving inconsistent state on disk (for example, effectively
      reviving deleted data).  We can't really prevent that, but we can
      recover by dint of making such failures into PANICs, so that
      consistency is restored by replaying from WAL up to just before the
      attempted truncation.  This isn't a hugely desirable behavior, but
      such failures are rare enough that it seems an acceptable solution.
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [75818b3af] 2024-12-03 10:12:05 +1300
Branch: REL_17_STABLE [d4ffbf47b] 2024-12-03 10:19:47 +1300
Branch: REL_16_STABLE [ad5aa7bfd] 2024-12-03 10:20:10 +1300
Branch: REL_15_STABLE [a501fe5a9] 2024-12-03 10:20:22 +1300
Branch: REL_14_STABLE [7d0b91a28] 2024-12-03 10:12:56 +1300
Branch: REL_13_STABLE [1168acbca] 2024-12-03 10:13:49 +1300
-->
     <para>
      Prevent checkpoints from starting during relation truncation
      (Robert Haas)
      <ulink url="&commit_baseurl;a501fe5a9">&sect;</ulink>
     </para>

     <para>
      This avoids a race condition wherein the modified file might not get
      fsync'd before completing the checkpoint, creating a risk of data
      corruption if the operating system crashes soon after.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master Release: REL_16_BR [dac1ff309] 2022-07-05 10:16:12 +0900
Branch: REL_15_STABLE [c1c9df315] 2024-12-20 09:11:03 +0900
Branch: REL_14_STABLE [1f95181b4] 2024-12-20 09:11:08 +0900
Branch: REL_13_STABLE [26a79cbbd] 2024-12-20 09:11:11 +0900
-->
     <para>
      Use <function>rename()</function>
      not <function>link()</function>/<function>unlink()</function> to
      rename files (Nathan Bossart)
      <ulink url="&commit_baseurl;c1c9df315">&sect;</ulink>
     </para>

     <para>
      The previous coding was intended to assure that the operation could
      not accidentally overwrite an existing file.  However a failure
      could leave two links to the same file in existence, confusing
      subsequent operations and creating a risk of data corruption.
      In practice we do not use this functionality in places where the
      target filename could already exist, so it seems better to give up
      the no-overwrite guarantee to remove the multiple-link hazard.
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [ff90ee614] 2024-12-28 07:16:22 -0800
Branch: REL_17_STABLE [fa6131377] 2024-12-28 07:16:26 -0800
Branch: REL_16_STABLE [5d94aa4dc] 2024-12-28 07:16:26 -0800
Branch: REL_15_STABLE [83bb52375] 2024-12-28 07:16:26 -0800
Branch: REL_14_STABLE [536acda0b] 2024-12-28 07:16:27 -0800
Branch: REL_13_STABLE [102546322] 2024-12-28 07:16:27 -0800
-->
     <para>
      Avoid possibly losing an update of
      <structname>pg_database</structname>.<structfield>datfrozenxid</structfield>
      when <command>VACUUM</command> runs concurrently with
      a <command>REASSIGN OWNED</command> that changes that database's
      owner (Kirill Reshke)
      <ulink url="&commit_baseurl;83bb52375">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [ea68ea632] 2025-01-22 11:58:20 -0500
Branch: REL_17_STABLE [2b72fed2d] 2025-01-22 11:58:20 -0500
Branch: REL_16_STABLE [8c57f5485] 2025-01-22 11:58:20 -0500
Branch: REL_15_STABLE [cdeed4de7] 2025-01-22 11:58:20 -0500
Branch: REL_14_STABLE [308599305] 2025-01-22 11:58:20 -0500
Branch: REL_13_STABLE [001c09d8b] 2025-01-22 11:58:20 -0500
-->
     <para>
      Fix incorrect <structfield>tg_updatedcols</structfield> values
      passed to <literal>AFTER UPDATE</literal> triggers (Tom Lane)
      <ulink url="&commit_baseurl;cdeed4de7">&sect;</ulink>
     </para>

     <para>
      In some cases the <structfield>tg_updatedcols</structfield> bitmap
      could describe the set of columns updated by an earlier command in
      the same transaction, fooling the trigger into doing the wrong
      thing.
     </para>

     <para>
      Also, prevent memory bloat caused by making too many copies of
      the <structfield>tg_updatedcols</structfield> bitmap.
     </para>
    </listitem>

    <listitem>
<!--
Author: Álvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [9b21f203d] 2025-01-21 14:53:46 +0100
Branch: REL_17_STABLE [2f30847d1] 2025-01-21 14:53:46 +0100
Branch: REL_16_STABLE [ddab512eb] 2025-01-21 14:53:46 +0100
Branch: REL_15_STABLE [1bc092519] 2025-01-21 14:53:46 +0100
-->
     <para>
      Fix detach of a partition that has its own foreign-key constraint
      referencing a partitioned table (Amul Sul)
      <ulink url="&commit_baseurl;1bc092519">&sect;</ulink>
     </para>

     <para>
      In common cases, foreign keys are defined on a partitioned table's
      top level; but if instead one is defined on a partition and
      references a partitioned table, and the referencing partition is
      detached, the relevant <structname>pg_constraint</structname>
      entries were updated incorrectly.  This led to errors
      like <quote>could not find ON INSERT check triggers of foreign key
      constraint</quote>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [3220ceaf7] 2024-12-07 13:12:32 -0500
Branch: REL_17_STABLE [765f76d8c] 2024-12-07 13:12:32 -0500
Branch: REL_16_STABLE [26c233b8b] 2024-12-07 13:12:32 -0500
Branch: REL_15_STABLE [d2f59497a] 2024-12-07 13:12:32 -0500
Branch: REL_14_STABLE [5882a4ba0] 2024-12-07 13:12:32 -0500
Branch: REL_13_STABLE [f2eba400b] 2024-12-07 13:12:32 -0500
-->
     <para>
      Fix mis-processing of <function>to_timestamp</function>'s
      <literal>FF<replaceable>n</replaceable></literal> format codes
      (Tom Lane)
      <ulink url="&commit_baseurl;d2f59497a">&sect;</ulink>
     </para>

     <para>
      An integer format code immediately
      preceding <literal>FF<replaceable>n</replaceable></literal> would
      consume all available digits, leaving none
      for <literal>FF<replaceable>n</replaceable></literal>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [d673eefd4] 2025-01-12 12:54:32 +0000
Branch: REL_17_STABLE [61b12135f] 2025-01-12 12:56:52 +0000
Branch: REL_16_STABLE [77763f3be] 2025-01-12 12:58:14 +0000
Branch: REL_15_STABLE [7c0379516] 2025-01-12 12:59:40 +0000
Branch: REL_14_STABLE [dc8cd9cd0] 2025-01-12 13:01:22 +0000
Branch: REL_13_STABLE [8f137f038] 2025-01-12 13:02:56 +0000
-->
     <para>
      When deparsing an <literal>XMLTABLE()</literal> expression, ensure
      that XML namespace names are double-quoted when necessary (Dean
      Rasheed)
      <ulink url="&commit_baseurl;7c0379516">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Daniel Gustafsson <dgustafsson@postgresql.org>
Branch: master [27a1f8d10] 2025-01-10 22:02:58 +0100
Branch: REL_17_STABLE [8ed9bf0a3] 2025-01-10 22:02:58 +0100
Branch: REL_16_STABLE [c35bbdfbc] 2025-01-10 22:02:58 +0100
Branch: REL_15_STABLE [830215a4c] 2025-01-10 22:02:58 +0100
Branch: REL_14_STABLE [83ffb9f20] 2025-01-10 22:02:58 +0100
Branch: REL_13_STABLE [84b8f6d9f] 2025-01-10 22:02:58 +0100
Branch: master [97698cc51] 2025-01-12 23:44:39 +0100
Branch: REL_17_STABLE [dc24c9ad5] 2025-01-12 23:44:39 +0100
Branch: REL_16_STABLE [116036d81] 2025-01-12 23:44:39 +0100
Branch: REL_15_STABLE [9ad7a32b2] 2025-01-12 23:44:39 +0100
Branch: REL_14_STABLE [9e596a099] 2025-01-12 23:44:39 +0100
Branch: REL_13_STABLE [7b1f50d8c] 2025-01-12 23:44:39 +0100
-->
     <para>
      Include the <literal>ldapscheme</literal> option
      in <function>pg_hba_file_rules()</function> output (Laurenz Albe)
      <ulink url="&commit_baseurl;830215a4c">&sect;</ulink>
      <ulink url="&commit_baseurl;9ad7a32b2">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [a43d7a8c7] 2024-11-19 18:26:19 -0500
Branch: REL_17_STABLE [c1ebef3c1] 2024-11-19 18:26:19 -0500
Branch: REL_16_STABLE [f286f64bc] 2024-11-19 18:26:19 -0500
Branch: REL_15_STABLE [fd3383ff1] 2024-11-19 18:26:19 -0500
Branch: REL_14_STABLE [44a4a521d] 2024-11-19 18:26:19 -0500
Branch: REL_13_STABLE [6b66dba3f] 2024-11-19 18:26:19 -0500
-->
     <para>
      Don't merge <literal>UNION</literal> operations if their column
      collations aren't consistent (Tom Lane)
      <ulink url="&commit_baseurl;fd3383ff1">&sect;</ulink>
     </para>

     <para>
      Previously we ignored collations when deciding if it's safe to
      merge <literal>UNION</literal> steps into a single
      N-way <literal>UNION</literal> operation.  This was arguably valid
      before the introduction of nondeterministic collations, but it's not
      anymore, since the collation in use can affect the definition of
      uniqueness.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [bf826ea06] 2025-01-16 20:40:07 -0500
Branch: REL_17_STABLE [0671a71e0] 2025-01-16 20:40:07 -0500
Branch: REL_16_STABLE [94c02bd33] 2025-01-16 20:40:07 -0500
Branch: REL_15_STABLE [724ebebb1] 2025-01-16 20:40:07 -0500
Branch: REL_14_STABLE [5f725648f] 2025-01-16 20:40:07 -0500
Branch: REL_13_STABLE [45004f527] 2025-01-16 20:40:07 -0500
-->
     <para>
      Fix missed expression processing for partition pruning steps
      (Tom Lane)
      <ulink url="&commit_baseurl;724ebebb1">&sect;</ulink>
     </para>

     <para>
      This oversight could lead to <quote>unrecognized node type</quote>
      errors, and perhaps other problems, in queries accessing partitioned
      tables.
     </para>
    </listitem>

    <listitem>
<!--
Author: Nathan Bossart <nathan@postgresql.org>
Branch: master [84f1b0b03] 2024-12-17 15:24:45 -0600
Branch: REL_17_STABLE [18452b70a] 2024-12-17 15:24:45 -0600
Branch: REL_16_STABLE [2a7402322] 2024-12-17 15:24:45 -0600
Branch: REL_15_STABLE [9f7b7d516] 2024-12-17 15:24:45 -0600
Branch: REL_14_STABLE [84dc1303c] 2024-12-17 15:24:45 -0600
Branch: REL_13_STABLE [853cef097] 2024-12-17 15:24:45 -0600
-->
     <para>
      Allow dshash tables to grow past 1GB (Matthias van de Meent)
      <ulink url="&commit_baseurl;9f7b7d516">&sect;</ulink>
     </para>

     <para>
      This avoids errors like <quote>invalid DSA memory alloc request
      size</quote>.  The case can occur for example in transactions that
      process several million tables.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [720e52984] 2025-01-14 15:12:56 +0900
Branch: REL_17_STABLE [e027ee990] 2025-01-14 15:13:14 +0900
Branch: REL_16_STABLE [bfda7d8dd] 2025-01-14 15:13:15 +0900
Branch: REL_15_STABLE [9e9f30139] 2025-01-14 15:13:17 +0900
Branch: REL_14_STABLE [e35ff6520] 2025-01-14 15:13:19 +0900
Branch: REL_13_STABLE [332023e2d] 2025-01-14 15:13:20 +0900
-->
     <para>
      Avoid possible integer overflow
      in <function>bringetbitmap()</function> (James Hunter, Evgeniy
      Gorbanyov)
      <ulink url="&commit_baseurl;9e9f30139">&sect;</ulink>
     </para>

     <para>
      Since the result is only used for statistical purposes, the effects
      of this error were mostly cosmetic.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [6cf1647d8] 2025-01-20 09:29:42 +0900
Branch: REL_17_STABLE [e6767c0ed] 2025-01-20 09:30:33 +0900
Branch: REL_16_STABLE [2c2e1d4f4] 2025-01-20 09:30:36 +0900
Branch: REL_15_STABLE [26554facc] 2025-01-20 09:30:37 +0900
Branch: REL_14_STABLE [a2d4f806c] 2025-01-20 09:30:39 +0900
Branch: REL_13_STABLE [0f0431e91] 2025-01-20 09:30:40 +0900
-->
     <para>
      Prevent streaming standby servers from looping infinitely when
      reading a WAL record that crosses pages (Kyotaro Horiguchi,
      Alexander Kukushkin)
      <ulink url="&commit_baseurl;26554facc">&sect;</ulink>
     </para>

     <para>
      This would happen when the record's continuation is on a page that
      needs to be read from a different WAL source.
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [8b9cbf492] 2024-12-10 13:51:59 -0800
Branch: REL_17_STABLE [4bd9de3f4] 2024-12-10 13:52:02 -0800
Branch: REL_16_STABLE [ac4a2b403] 2024-12-10 13:52:02 -0800
Branch: REL_15_STABLE [839da50bd] 2024-12-10 13:52:02 -0800
Branch: REL_14_STABLE [315264d70] 2024-12-10 13:52:02 -0800
Branch: REL_13_STABLE [6151769f6] 2024-12-10 13:52:02 -0800
-->
     <para>
      Fix unintended promotion of FATAL errors to PANIC during early
      process startup (Noah Misch)
      <ulink url="&commit_baseurl;839da50bd">&sect;</ulink>
     </para>

     <para>
      This fixes some unlikely cases that would result in <quote>PANIC:
      proc_exit() called in child process</quote>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [3f9b96217] 2024-12-07 15:56:28 -0500
Branch: REL_17_STABLE [ec7b89cc5] 2024-12-07 15:56:28 -0500
Branch: REL_16_STABLE [be5db08ed] 2024-12-07 15:56:28 -0500
Branch: REL_15_STABLE [0e4fa06ba] 2024-12-07 15:56:28 -0500
Branch: REL_14_STABLE [1a34cf0f4] 2024-12-07 15:56:28 -0500
Branch: REL_13_STABLE [725d98102] 2024-12-07 15:56:28 -0500
Branch: master [c82003760] 2024-12-07 14:28:16 -0500
Branch: REL_17_STABLE [5b44a317a] 2024-12-07 14:28:16 -0500
Branch: REL_16_STABLE [faad01835] 2024-12-07 14:28:16 -0500
Branch: REL_15_STABLE [d40191467] 2024-12-07 14:28:16 -0500
Branch: REL_14_STABLE [d9d5e1b48] 2024-12-07 14:28:16 -0500
Branch: REL_13_STABLE [531cbd8b7] 2024-12-07 14:28:16 -0500
-->
     <para>
      Fix cases where an operator family member operator or support
      procedure could become a dangling reference (Tom Lane)
      <ulink url="&commit_baseurl;0e4fa06ba">&sect;</ulink>
      <ulink url="&commit_baseurl;d40191467">&sect;</ulink>
     </para>

     <para>
      In some cases a data type could be dropped while references to its
      OID still remain in <structname>pg_amop</structname>
      or <structname>pg_amproc</structname>.  While that caused no
      immediate issues, an attempt to drop the owning operator family
      would fail, and <application>pg_dump</application> would produce
      bogus output when dumping the operator family.  This fix causes
      creation and modification of operator families/classes to add
      needed dependency entries so that dropping a data type will also
      drop any dependent operator family elements.  That does not help
      vulnerable pre-existing operator families, though, so a band-aid has
      also been added to <command>DROP OPERATOR FAMILY</command> to
      prevent failure when dropping a family that has dangling members.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [c9b3d4909] 2024-12-30 13:33:09 +0900
Branch: REL_17_STABLE [836435424] 2024-12-30 13:33:58 +0900
Branch: REL_16_STABLE [e3a27fd06] 2024-12-30 13:33:59 +0900
Branch: REL_15_STABLE [da8bd5d42] 2024-12-30 13:34:01 +0900
Branch: REL_14_STABLE [c53d90bb4] 2025-01-08 08:47:19 +0900
Branch: REL_13_STABLE [a786cf04d] 2025-01-08 08:47:24 +0900
Author: Michael Paquier <michael@paquier.xyz>
Branch: REL_17_STABLE [bbe68c13a] 2024-12-23 12:48:06 +0900
Branch: REL_16_STABLE [4d45e7490] 2024-12-23 12:48:08 +0900
Branch: REL_15_STABLE [6c9b39754] 2024-12-23 12:48:09 +0900
Branch: REL_14_STABLE [cfd6cbcf9] 2024-12-23 12:48:10 +0900
Branch: REL_13_STABLE [ba230ce40] 2024-12-23 12:48:12 +0900
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [ea792bfd9] 2024-11-21 15:14:02 +0900
Branch: REL_17_STABLE [afe9b0d9f] 2024-11-21 15:14:11 +0900
Branch: REL_16_STABLE [e749eaf46] 2024-11-21 15:14:13 +0900
Branch: REL_15_STABLE [6fc30c24c] 2024-11-21 15:14:15 +0900
-->
     <para>
      Fix multiple memory leaks in logical decoding output (Vignesh C,
      Masahiko Sawada, Boyu Yang)
      <ulink url="&commit_baseurl;da8bd5d42">&sect;</ulink>
      <ulink url="&commit_baseurl;6c9b39754">&sect;</ulink>
      <ulink url="&commit_baseurl;6fc30c24c">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: REL_15_STABLE [4398507df] 2024-12-05 12:54:41 -0500
Branch: REL_14_STABLE [d24eb0e91] 2024-12-05 12:54:41 -0500
Branch: REL_13_STABLE [cd1c8b992] 2024-12-05 12:54:41 -0500
-->
     <para>
      Avoid low-probability crash on out-of-memory, due to missing check
      for failure return from <function>malloc()</function>
      (Karina Litskevich)
      <ulink url="&commit_baseurl;4398507df">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [b9aa4166f] 2025-01-30 15:36:44 -0500
Branch: REL_17_STABLE [1e25cdb21] 2025-01-30 15:36:07 -0500
Branch: REL_16_STABLE [f7a08b6e9] 2025-01-30 15:36:07 -0500
Branch: REL_15_STABLE [b296e55b4] 2025-01-30 15:36:07 -0500
Branch: REL_14_STABLE [6a33bb35c] 2025-01-30 15:36:07 -0500
Branch: REL_13_STABLE [49a38238e] 2025-01-30 15:36:07 -0500
-->
     <para>
      Avoid integer overflow while
      testing <varname>wal_skip_threshold</varname> condition (Tom Lane)
      <ulink url="&commit_baseurl;b296e55b4">&sect;</ulink>
     </para>

     <para>
      A transaction that created a very large relation could mistakenly
      decide to ensure durability by copying the relation into WAL instead
      of fsync'ing it, thereby negating the point
      of <varname>wal_skip_threshold</varname>.  (This only matters
      when <varname>wal_level</varname> is set
      to <literal>minimal</literal>, else a WAL copy is required anyway.)
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [4ba84de45] 2024-11-25 14:42:35 -0800
Branch: REL_17_STABLE [718af10da] 2024-11-25 14:42:38 -0800
Branch: REL_16_STABLE [c1285bbeb] 2024-11-25 14:42:39 -0800
Branch: REL_15_STABLE [941e0c0df] 2024-11-25 14:42:39 -0800
Branch: REL_14_STABLE [2690a4f5d] 2024-11-25 14:42:40 -0800
Branch: REL_13_STABLE [01745fb04] 2024-11-25 14:42:40 -0800
-->
     <para>
      Fix unsafe order of operations during cache lookups (Noah Misch)
      <ulink url="&commit_baseurl;941e0c0df">&sect;</ulink>
     </para>

     <para>
      The only known consequence was a usually-harmless <quote>you don't
      own a lock of type ExclusiveLock</quote> warning
      during <command>GRANT TABLESPACE</command>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [78c09bd9f] 2024-11-22 15:29:47 +1300
Branch: REL_17_STABLE [8a9a51518] 2024-11-22 15:29:28 +1300
Branch: REL_16_STABLE [6de14dbb3] 2024-11-22 15:29:18 +1300
Branch: REL_15_STABLE [15ab513fe] 2024-11-22 15:29:00 +1300
Branch: REL_14_STABLE [7ca388fd0] 2024-11-22 15:30:37 +1300
Branch: REL_13_STABLE [8aefd8b6f] 2024-11-22 15:32:02 +1300
-->
     <para>
      Fix possible <quote>failed to resolve name</quote> failures when
      using JIT on older ARM platforms (Thomas Munro)
      <ulink url="&commit_baseurl;15ab513fe">&sect;</ulink>
     </para>

     <para>
      This could occur as a consequence of inconsistency about the default
      setting of <option>-moutline-atomics</option> between gcc and clang.
      At least Debian and Ubuntu are known to ship gcc and clang compilers
      that target armv8-a but differ on the use of outline atomics by
      default.
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: REL_15_STABLE [9b136b0f2] 2025-01-18 09:31:39 -0500
Branch: REL_14_STABLE [f4fd5325c] 2025-01-18 09:33:30 -0500
Branch: REL_13_STABLE [2c4a532c9] 2025-01-18 09:33:49 -0500
Branch: REL_15_STABLE [e708f3188] 2025-01-18 09:30:10 -0500
Branch: REL_14_STABLE [9f1c67488] 2025-01-18 09:33:16 -0500
Branch: REL_13_STABLE [fbf8efbda] 2025-01-18 09:33:43 -0500
-->
     <para>
      Fix handling of Windows junction points that are not
      of <productname>PostgreSQL</productname> origin (Thomas Munro)
      <ulink url="&commit_baseurl;9b136b0f2">&sect;</ulink>
      <ulink url="&commit_baseurl;e708f3188">&sect;</ulink>
     </para>

     <para>
      Previously, <application>initdb</application> would fail if the path
      to the data directory included junction points whose expansion isn't
      in <quote>drive absolute</quote> format, or whose expansion points
      to another junction point.
     </para>
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master [8f4ee9626] 2024-12-19 13:11:39 +1300
Branch: REL_17_STABLE [7b8d45d27] 2024-12-19 13:12:18 +1300
Branch: REL_16_STABLE [093fc156b] 2024-12-19 13:12:41 +1300
Branch: REL_15_STABLE [ef178d38b] 2024-12-19 13:13:01 +1300
Branch: REL_14_STABLE [bdb07d241] 2024-12-19 13:13:31 +1300
Branch: REL_13_STABLE [2c7887c9d] 2024-12-19 13:13:51 +1300
-->
     <para>
      Fix assertion failure in <literal>WITH RECURSIVE ... UNION</literal>
      queries (David Rowley)
      <ulink url="&commit_baseurl;ef178d38b">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [94131cd53] 2024-11-20 12:03:47 -0500
Branch: REL_17_STABLE [fea81aee8] 2024-11-20 12:03:47 -0500
Branch: REL_16_STABLE [fe084039e] 2024-11-20 12:03:47 -0500
Branch: REL_15_STABLE [9b9689e26] 2024-11-20 12:03:47 -0500
Branch: REL_14_STABLE [3eb26524c] 2024-11-20 12:03:47 -0500
Branch: REL_13_STABLE [630520c22] 2024-11-20 12:03:47 -0500
-->
     <para>
      Avoid assertion failure in rule deparsing if a set operation leaf
      query contains set operations (Man Zeng, Tom Lane)
      <ulink url="&commit_baseurl;9b9689e26">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [3eea7a0c9] 2024-12-09 14:38:19 -0500
Branch: REL_17_STABLE [556f7b7bc] 2024-12-09 14:38:19 -0500
Branch: REL_16_STABLE [bb649b553] 2024-12-09 14:38:19 -0500
Branch: REL_15_STABLE [4089b9bd6] 2024-12-09 14:38:19 -0500
Branch: REL_14_STABLE [8a95ad3b2] 2024-12-09 14:38:19 -0500
Branch: REL_13_STABLE [4d20bad5e] 2024-12-09 14:38:19 -0500
-->
     <para>
      Avoid edge-case assertion failure in parallel query startup (Tom Lane)
      <ulink url="&commit_baseurl;4089b9bd6">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [da99fedf8] 2024-12-09 10:45:28 +0900
Branch: REL_17_STABLE [dc5f90541] 2024-12-09 10:46:03 +0900
Branch: REL_16_STABLE [ae77bcc3a] 2024-12-09 10:46:09 +0900
Branch: REL_15_STABLE [1df1e1e78] 2024-12-09 10:46:10 +0900
-->
     <para>
      Fix assertion failure at shutdown when writing out the statistics
      file (Michael Paquier)
      <ulink url="&commit_baseurl;1df1e1e78">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [5b8728cd7] 2024-11-25 18:09:09 -0500
Branch: REL_17_STABLE [97be02ad0] 2024-11-25 18:09:10 -0500
Branch: REL_16_STABLE [4aba56adc] 2024-11-25 18:09:10 -0500
Branch: REL_15_STABLE [80cd33bad] 2024-11-25 18:09:10 -0500
Branch: REL_14_STABLE [a1168855e] 2024-11-25 18:09:10 -0500
Branch: REL_13_STABLE [48a6cd1ae] 2024-11-25 18:09:11 -0500
-->
     <para>
      In <function>NULLIF()</function>, avoid passing a read-write
      expanded object pointer to the data type's equality function
      (Tom Lane)
      <ulink url="&commit_baseurl;80cd33bad">&sect;</ulink>
     </para>

     <para>
      The equality function could modify or delete the object if it's
      given a read-write pointer, which would be bad if we decide to
      return it as the <function>NULLIF()</function> result.  There is
      probably no problem with any built-in equality function, but it's
      easy to demonstrate a failure with one coded in PL/pgSQL.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [0da39aa76] 2025-01-29 15:31:55 -0500
Branch: REL_17_STABLE [6e41e9e5e] 2025-01-29 15:31:55 -0500
Branch: REL_16_STABLE [6655d931c] 2025-01-29 15:31:55 -0500
Branch: REL_15_STABLE [bb85d0935] 2025-01-29 15:31:55 -0500
Branch: REL_14_STABLE [c05268e6e] 2025-01-29 15:31:55 -0500
-->
     <para>
      Ensure that expression preprocessing is applied to a default null
      value in <command>INSERT</command> (Tom Lane)
      <ulink url="&commit_baseurl;bb85d0935">&sect;</ulink>
     </para>

     <para>
      If the target column is of a domain type, the planner must insert a
      coerce-to-domain step not just a null constant, and this expression
      missed going through some required processing steps.  There is no
      known consequence with domains based on core data types, but in
      theory an error could occur with domains based on extension types.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [29dfffae0] 2025-01-11 11:45:56 -0500
Branch: REL_17_STABLE [e98df02df] 2025-01-11 11:45:56 -0500
Branch: REL_16_STABLE [33a4e656d] 2025-01-11 11:45:56 -0500
Branch: REL_15_STABLE [71bb9c4b2] 2025-01-11 11:45:56 -0500
Branch: REL_14_STABLE [bcb4db0d3] 2025-01-11 11:45:56 -0500
Branch: REL_13_STABLE [02a38bc84] 2025-01-11 11:45:56 -0500
-->
     <para>
      Repair memory leaks in PL/Python (Mat Arye, Tom Lane)
      <ulink url="&commit_baseurl;71bb9c4b2">&sect;</ulink>
     </para>

     <para>
      Repeated use of <function>PLyPlan.execute</function>
      or <function>plpy.cursor</function> resulted in memory leakage for
      the duration of the calling PL/Python function.
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
Branch: master [32a2aa77e] 2024-11-25 11:44:29 +0100
Branch: REL_17_STABLE [f979197eb] 2024-11-25 12:27:10 +0100
Branch: REL_16_STABLE [07c77803c] 2024-11-25 12:27:19 +0100
Branch: REL_15_STABLE [a5f9cbde9] 2024-11-25 12:27:26 +0100
Branch: REL_14_STABLE [17d081a6f] 2024-11-25 13:11:18 +0100
Branch: REL_13_STABLE [f230e27a2] 2024-11-25 13:11:49 +0100
-->
     <para>
      Fix PL/Tcl to compile with Tcl 9 (Peter Eisentraut)
      <ulink url="&commit_baseurl;a5f9cbde9">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [2f696453d] 2024-12-01 14:15:37 -0500
Branch: REL_17_STABLE [a963abd54] 2024-12-01 14:15:37 -0500
Branch: REL_16_STABLE [cca34f68c] 2024-12-01 14:15:37 -0500
Branch: REL_15_STABLE [60b47525c] 2024-12-01 14:15:37 -0500
Branch: REL_14_STABLE [52c7a44e9] 2024-12-01 14:15:37 -0500
Branch: REL_13_STABLE [e359cbb84] 2024-12-01 14:15:37 -0500
-->
     <para>
      In the <application>ecpg</application> preprocessor, fix possible
      misprocessing of cursors that reference out-of-scope variables
      (Tom Lane)
      <ulink url="&commit_baseurl;60b47525c">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Fujii Masao <fujii@postgresql.org>
Branch: master [94b914f60] 2025-01-15 01:23:02 +0900
Branch: REL_17_STABLE [ba2dbedd5] 2025-01-15 01:24:24 +0900
Branch: REL_16_STABLE [5c7c34db2] 2025-01-15 01:25:05 +0900
Branch: REL_15_STABLE [71ef47cf0] 2025-01-15 01:25:19 +0900
Branch: REL_14_STABLE [d06ab3c0c] 2025-01-15 01:25:31 +0900
Branch: REL_13_STABLE [226c9048d] 2025-01-15 01:25:52 +0900
-->
     <para>
      In <application>ecpg</application>, fix compile-time warnings about
      unsupported use of <literal>COPY ... FROM STDIN</literal> (Ryo
      Kanbayashi)
      <ulink url="&commit_baseurl;71ef47cf0">&sect;</ulink>
     </para>

     <para>
      Previously, the intended warning was not issued due to a typo.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [6cddecdfb] 2025-01-29 14:24:36 -0500
Branch: REL_17_STABLE [0b713b94b] 2025-01-29 14:24:36 -0500
Branch: REL_16_STABLE [998c4fc7c] 2025-01-29 14:24:36 -0500
Branch: REL_15_STABLE [b17e3970c] 2025-01-29 14:24:36 -0500
Branch: REL_14_STABLE [54f9afea7] 2025-01-29 14:24:36 -0500
Branch: REL_13_STABLE [98df8bace] 2025-01-29 14:24:36 -0500
-->
     <para>
      Fix <application>psql</application> to safely handle file path names
      that are encoded in SJIS (Tom Lane)
      <ulink url="&commit_baseurl;b17e3970c">&sect;</ulink>
     </para>

     <para>
      Some two-byte characters in SJIS have a second byte that is equal to
      ASCII backslash (<literal>\</literal>).  These characters were
      corrupted by path name normalization, preventing access to files
      whose names include such characters.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [9a45a89c3] 2025-01-14 18:50:24 -0500
Branch: REL_17_STABLE [a0dfeae0d] 2025-01-14 18:50:24 -0500
Branch: REL_16_STABLE [b935691b8] 2025-01-14 18:50:24 -0500
Branch: REL_15_STABLE [a3b709cf7] 2025-01-14 18:50:24 -0500
Branch: REL_14_STABLE [02e69313a] 2025-01-14 18:50:24 -0500
Branch: REL_13_STABLE [cfd7aadeb] 2025-01-14 18:50:24 -0500
-->
     <para>
      Fix use of wrong version of <function>pqsignal()</function>
      in <application>pgbench</application>
      and <application>psql</application> (Fujii Masao, Tom Lane)
      <ulink url="&commit_baseurl;a3b709cf7">&sect;</ulink>
     </para>

     <para>
      This error could lead to misbehavior when using
      the <option>-T</option> option in <application>pgbench</application>
      or the <command>\watch</command> command
      in <application>psql</application>, due to interrupted system calls
      not being resumed as expected.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [530f89e64] 2024-12-15 14:14:14 -0500
Branch: REL_17_STABLE [ff9dc96f3] 2024-12-15 14:14:15 -0500
Branch: REL_16_STABLE [076b09123] 2024-12-15 14:14:15 -0500
Branch: REL_15_STABLE [ff88db910] 2024-12-15 14:14:15 -0500
Branch: REL_14_STABLE [2a23dbcf3] 2024-12-15 14:14:15 -0500
Branch: REL_13_STABLE [ec0dc2c59] 2024-12-15 14:14:15 -0500
-->
     <para>
      Fix misexecution of some nested <command>\if</command> constructs
      in <application>pgbench</application> (Michail Nikolaev)
      <ulink url="&commit_baseurl;ff88db910">&sect;</ulink>
     </para>

     <para>
      An <command>\if</command> command appearing within a false
      (not-being-executed) <command>\if</command> branch was incorrectly
      treated the same as <command>\elif</command>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Fujii Masao <fujii@postgresql.org>
Branch: master [af35fe501] 2024-11-27 23:01:53 +0900
Branch: REL_17_STABLE [adb103fca] 2024-11-27 23:03:04 +0900
Branch: REL_16_STABLE [1cf646957] 2024-11-27 23:03:44 +0900
Branch: REL_15_STABLE [1e46f7351] 2024-11-27 23:04:29 +0900
Branch: REL_14_STABLE [0f13e1a78] 2024-11-27 23:04:55 +0900
Branch: REL_13_STABLE [f1cb5e51f] 2024-11-27 23:05:24 +0900
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [fb056564e] 2025-02-07 13:41:42 -0500
Branch: REL_17_STABLE [e35d396ec] 2025-02-07 13:41:42 -0500
Branch: REL_16_STABLE [21b815f92] 2025-02-07 13:41:42 -0500
Branch: REL_15_STABLE [499d1cf55] 2025-02-07 13:41:43 -0500
Branch: REL_14_STABLE [5addea71c] 2025-02-07 13:41:43 -0500
Branch: REL_13_STABLE [b6decfc1d] 2025-02-07 13:41:43 -0500
-->
     <para>
      In <application>pgbench</application>, fix possible misdisplay of
      progress messages during table initialization (Yushi Ogiwara, Tatsuo
      Ishii, Fujii Masao)
      <ulink url="&commit_baseurl;1e46f7351">&sect;</ulink>
      <ulink url="&commit_baseurl;499d1cf55">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Alexander Korotkov <akorotkov@postgresql.org>
Branch: master [ff1975ddd] 2025-02-05 00:45:49 +0200
Branch: REL_17_STABLE [1b8a9533f] 2025-02-05 00:45:43 +0200
Branch: REL_16_STABLE [d54d5668b] 2025-02-05 00:45:37 +0200
Branch: REL_15_STABLE [f1e0b078b] 2025-02-05 00:45:29 +0200
Branch: REL_14_STABLE [f2205448b] 2025-02-05 00:45:16 +0200
Branch: REL_13_STABLE [c24311c1f] 2025-02-05 00:46:06 +0200
-->
     <para>
      Make <application>pg_controldata</application> more robust against
      corrupted <filename>pg_control</filename> files (Ilyasov Ian, Anton
      Voloshin)
      <ulink url="&commit_baseurl;f1e0b078b">&sect;</ulink>
     </para>

     <para>
      Since <application>pg_controldata</application> will attempt to
      print the contents of <filename>pg_control</filename> even if the
      CRC check fails, it must take care not to misbehave for invalid
      field values.  This patch fixes some issues triggered by invalid
      timestamps and apparently-negative WAL segment sizes.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [7b8cb9cd6] 2024-12-13 14:21:36 -0500
Branch: REL_17_STABLE [ad950ea98] 2024-12-13 14:21:36 -0500
Branch: REL_16_STABLE [782cc1aa3] 2024-12-13 14:21:36 -0500
Branch: REL_15_STABLE [6978129b4] 2024-12-13 14:21:36 -0500
Branch: REL_14_STABLE [c7f3c414f] 2024-12-13 14:21:36 -0500
Branch: REL_13_STABLE [b6df2d6e5] 2024-12-13 14:21:36 -0500
-->
     <para>
      Fix possible crash in <application>pg_dump</application> with
      identity sequences attached to tables that are extension members
      (Tom Lane)
      <ulink url="&commit_baseurl;6978129b4">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [970b97eeb] 2025-01-09 16:04:23 +1300
Branch: REL_17_STABLE [faee3185a] 2025-01-09 16:05:01 +1300
Branch: REL_16_STABLE [be7489662] 2025-01-09 16:05:08 +1300
Branch: REL_15_STABLE [6b6901a26] 2025-01-09 16:05:16 +1300
Branch: REL_14_STABLE [8f40d4612] 2025-01-09 16:05:25 +1300
Branch: REL_13_STABLE [bd0564f61] 2025-01-09 16:05:36 +1300
Branch: master [026762dae] 2025-01-09 15:00:58 +1300
Branch: REL_17_STABLE [af109e339] 2025-01-09 15:00:23 +1300
Branch: REL_16_STABLE [0bff6f1da] 2025-01-09 14:59:47 +1300
Branch: REL_15_STABLE [70a7a3761] 2025-01-09 14:58:18 +1300
Branch: REL_14_STABLE [1636c5e56] 2025-01-09 14:57:52 +1300
Branch: REL_13_STABLE [d02486cc8] 2025-01-09 14:57:02 +1300
-->
     <para>
      Fix <application>pg_basebackup</application> to correctly
      handle <filename>pg_wal.tar</filename> files exceeding 2GB on
      Windows (Davinder Singh, Thomas Munro)
      <ulink url="&commit_baseurl;6b6901a26">&sect;</ulink>
      <ulink url="&commit_baseurl;70a7a3761">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [5980f1884] 2024-11-25 12:50:17 -0500
Branch: REL_17_STABLE [e266a0ed6] 2024-11-25 12:50:17 -0500
Branch: REL_16_STABLE [1f4aadec4] 2024-11-25 12:50:17 -0500
Branch: REL_15_STABLE [851c6ff18] 2024-11-25 12:50:17 -0500
Branch: REL_14_STABLE [2fc0199a5] 2024-11-25 12:50:17 -0500
Branch: REL_13_STABLE [32057a0f7] 2024-11-25 12:50:17 -0500
-->
     <para>
      Update configuration probes that determine the compiler switches
      needed to access ARM CRC instructions (Tom Lane)
      <ulink url="&commit_baseurl;851c6ff18">&sect;</ulink>
     </para>

     <para>
      On ARM platforms where the baseline CPU target lacks CRC
      instructions, we need to supply a <option>-march</option> switch to
      persuade the compiler to compile such instructions.  Recent versions
      of gcc reject the value we were trying, leading to silently falling
      back to software CRC.
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: REL_15_STABLE [f00c401c6] 2024-11-27 15:43:18 +1300
Branch: REL_14_STABLE [1fd57e5bb] 2024-11-27 15:48:13 +1300
Branch: REL_13_STABLE [59ea17c43] 2024-11-27 15:52:15 +1300
Branch: REL_12_STABLE [3f302f0ed] 2024-11-27 15:57:32 +1300
Branch: REL_11_STABLE [170e41603] 2024-11-27 16:04:22 +1300
Branch: REL_10_STABLE [f4e8f137b] 2024-11-27 16:47:29 +1300
Branch: REL9_6_STABLE [70cf253d1] 2024-11-27 16:13:59 +1300
Branch: REL9_5_STABLE [5b40ce749] 2024-11-27 16:17:20 +1300
Branch: REL9_4_STABLE [b1b8b8e6f] 2024-11-27 16:19:42 +1300
Branch: REL9_3_STABLE [102be6634] 2024-11-27 16:28:34 +1300
Branch: REL9_2_STABLE [0c7171b32] 2024-11-27 16:31:41 +1300
-->
     <para>
      During <application>configure</application>, if a C23 compiler is
      detected, try asking for C17 (Thomas Munro)
      <ulink url="&commit_baseurl;f00c401c6">&sect;</ulink>
     </para>

     <para>
      <productname>PostgreSQL</productname> versions before v16 will not
      compile under C23 rules.  If the chosen compiler defaults to C23 or
      later, try adding a <literal>-std=gnu17</literal> switch to change
      that.  (If this won't work for your compiler, manually
      specify <varname>CFLAGS</varname> with a suitable switch.)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [60c513f8f] 2025-01-20 16:49:15 -0500
Branch: REL_17_STABLE [e292ba333] 2025-01-20 16:49:15 -0500
Branch: REL_16_STABLE [d62403c51] 2025-01-20 16:49:15 -0500
Branch: REL_15_STABLE [48bc95d0d] 2025-01-20 16:49:15 -0500
Branch: REL_14_STABLE [20b4819d0] 2025-01-20 16:49:15 -0500
Branch: REL_13_STABLE [6397819c8] 2025-01-20 16:49:15 -0500
-->
     <para>
      Update time zone data files to <application>tzdata</application>
      release 2025a for DST law changes in Paraguay, plus historical
      corrections for the Philippines (Tom Lane)
      <ulink url="&commit_baseurl;48bc95d0d">&sect;</ulink>
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-15-10">
  <title>Release 15.10</title>

  <formalpara>
  <title>Release date:</title>
  <para>2024-11-21</para>
  </formalpara>

  <para>
   This release contains a few fixes from 15.9.
   For information about new features in major release 15, see
   <xref linkend="release-15"/>.
  </para>

  <sect2>
   <title>Migration to Version 15.10</title>

   <para>
    A dump/restore is not required for those running 15.X.
   </para>

   <para>
    However, if you are upgrading from a version earlier than 15.9,
    see <xref linkend="release-15-9"/>.
   </para>
  </sect2>

  <sect2>
   <title>Changes</title>

   <itemizedlist>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: REL_17_STABLE [6bfacd368] 2024-11-16 12:58:26 -0500
Branch: REL_16_STABLE [ee33d5847] 2024-11-16 12:58:26 -0500
Branch: REL_15_STABLE [17db248f3] 2024-11-16 12:58:26 -0500
Branch: REL_14_STABLE [099e711b7] 2024-11-16 12:58:26 -0500
-->
     <para>
      Repair ABI break for extensions that work with
      struct <structname>ResultRelInfo</structname> (Tom Lane)
      <ulink url="&commit_baseurl;17db248f3">&sect;</ulink>
     </para>

     <para>
      Last week's minor releases unintentionally broke binary
      compatibility with <application>timescaledb</application> and
      several other extensions.  Restore the affected structure to its
      previous size, so that such extensions need not be rebuilt.
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [7b88529f4] 2024-11-15 20:39:56 -0800
Branch: REL_17_STABLE [1c05004a8] 2024-11-15 20:39:59 -0800
Branch: REL_16_STABLE [b0918c128] 2024-11-15 20:39:59 -0800
Branch: REL_15_STABLE [edf80895f] 2024-11-15 20:39:59 -0800
Branch: REL_14_STABLE [be062bfa5] 2024-11-15 20:40:00 -0800
Branch: REL_13_STABLE [07c6e0f61] 2024-11-15 20:40:00 -0800
Branch: REL_12_STABLE [c46333865] 2024-11-15 20:40:00 -0800
-->
     <para>
      Restore functionality of <command>ALTER {ROLE|DATABASE} SET
      role</command> (Tom Lane, Noah Misch)
      <ulink url="&commit_baseurl;edf80895f">&sect;</ulink>
     </para>

     <para>
      The fix for CVE-2024-10978 accidentally caused settings
      for <varname>role</varname> to not be applied if they come from
      non-interactive sources, including previous <command>ALTER
      {ROLE|DATABASE}</command> commands and
      the <varname>PGOPTIONS</varname> environment variable.
     </para>
    </listitem>

    <listitem>
<!--
Author: Masahiko Sawada <msawada@postgresql.org>
Branch: master [e5ed873b1] 2024-11-15 17:06:11 -0800
Branch: REL_17_STABLE [568e78a65] 2024-11-15 17:06:08 -0800
Branch: REL_16_STABLE [f35391133] 2024-11-15 17:06:05 -0800
Branch: REL_15_STABLE [91771b3fb] 2024-11-15 17:06:02 -0800
Branch: REL_14_STABLE [26c4e8968] 2024-11-15 17:06:00 -0800
Branch: REL_13_STABLE [15dc1abb1] 2024-11-15 17:05:57 -0800
-->
     <para>
      Fix cases where a logical replication
      slot's <structfield>restart_lsn</structfield> could go backwards
      (Masahiko Sawada)
      <ulink url="&commit_baseurl;91771b3fb">&sect;</ulink>
     </para>

     <para>
      Previously, restarting logical replication could sometimes cause the
      slot's restart point to be recomputed as an older value than had
      previously been advertised
      in <structname>pg_replication_slots</structname>.  This is bad,
      since for example WAL files might have been removed on the basis of
      the later <structfield>restart_lsn</structfield> value, in which
      case replication would fail to restart.
     </para>
    </listitem>

    <listitem>
<!--
Author: Álvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [90bcc7c2d] 2024-11-15 12:53:12 +0100
Branch: REL_17_STABLE [cb844d66b] 2024-11-15 12:53:12 +0100
Branch: REL_16_STABLE [ea1649c35] 2024-11-15 12:53:12 +0100
Branch: REL_15_STABLE [e28cf2fbc] 2024-11-15 12:53:12 +0100
Branch: REL_14_STABLE [ba2535841] 2024-11-15 12:53:12 +0100
-->
     <para>
      Avoid deleting still-needed WAL files
      during <application>pg_rewind</application>
      (Polina Bungina, Alexander Kukushkin)
      <ulink url="&commit_baseurl;e28cf2fbc">&sect;</ulink>
     </para>

     <para>
      Previously, in unlucky cases, it was possible
      for <application>pg_rewind</application> to remove important WAL
      files from the rewound demoted primary.  In particular this happens
      if those files have been marked for archival (i.e.,
      their <filename>.ready</filename> files were created) but not yet
      archived.  Then the newly promoted node no longer has such files
      because of them having been recycled, but likely they are needed
      for recovery in the demoted node.
      If <application>pg_rewind</application> removes them, recovery is
      not possible anymore.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [818119afc] 2024-11-15 11:31:58 +0900
Branch: REL_17_STABLE [1d6a03ea4] 2024-11-15 11:32:13 +0900
Branch: REL_16_STABLE [afa20845d] 2024-11-15 11:32:16 +0900
Branch: REL_15_STABLE [154c5b42a] 2024-11-15 11:32:18 +0900
-->
     <para>
      Fix race conditions associated with dropping shared statistics
      entries (Kyotaro Horiguchi, Michael Paquier)
      <ulink url="&commit_baseurl;154c5b42a">&sect;</ulink>
     </para>

     <para>
      These bugs could lead to loss of statistics data, assertion
      failures, or <quote>can only drop stats once</quote> errors.
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Geoghegan <pg@bowt.ie>
Branch: master [93063e2e4] 2024-11-12 20:57:45 -0500
Branch: REL_17_STABLE [7af6d1306] 2024-11-12 20:57:43 -0500
Branch: REL_16_STABLE [05aac2e83] 2024-11-12 20:57:41 -0500
Branch: REL_15_STABLE [16a2bb079] 2024-11-12 20:57:39 -0500
Branch: REL_14_STABLE [2a30b6836] 2024-11-12 20:57:37 -0500
Branch: REL_13_STABLE [e493ea866] 2024-11-12 20:57:35 -0500
-->
     <para>
      Count index scans in <filename>contrib/bloom</filename> indexes in
      the statistics views, such as the
      <structname>pg_stat_user_indexes</structname>.<structfield>idx_scan</structfield>
      counter (Masahiro Ikeda)
      <ulink url="&commit_baseurl;16a2bb079">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Alexander Korotkov <akorotkov@postgresql.org>
Branch: master [db22b9002] 2024-11-12 01:44:20 +0200
Branch: REL_17_STABLE [a6fa869cf] 2024-11-12 01:51:20 +0200
Branch: REL_16_STABLE [b242aba02] 2024-11-12 01:53:40 +0200
Branch: REL_15_STABLE [713b8546a] 2024-11-12 01:54:30 +0200
Branch: REL_14_STABLE [247e7647f] 2024-11-12 01:54:35 +0200
Branch: REL_13_STABLE [5411e8213] 2024-11-12 01:54:38 +0200
-->
     <para>
      Fix crash when checking to see if an index's opclass options have
      changed (Alexander Korotkov)
      <ulink url="&commit_baseurl;713b8546a">&sect;</ulink>
     </para>

     <para>
      Some forms of <command>ALTER TABLE</command> would fail if the
      table has an index with non-default operator class options.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [b69bdcee9] 2024-11-15 18:23:38 -0500
Branch: REL_17_STABLE [5f28e6ba7] 2024-11-15 18:23:38 -0500
Branch: REL_16_STABLE [b6312becc] 2024-11-15 18:23:38 -0500
Branch: REL_15_STABLE [2496c3f6f] 2024-11-15 18:23:38 -0500
Branch: REL_14_STABLE [2bdd3b248] 2024-11-15 18:23:38 -0500
-->
     <para>
      Avoid assertion failure caused by disconnected NFA sub-graphs in
      regular expression parsing (Tom Lane)
      <ulink url="&commit_baseurl;2496c3f6f">&sect;</ulink>
     </para>

     <para>
      This bug does not appear to have any visible consequences in
      non-assert builds.
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-15-9">
  <title>Release 15.9</title>

  <formalpara>
  <title>Release date:</title>
  <para>2024-11-14</para>
  </formalpara>

  <para>
   This release contains a variety of fixes from 15.8.
   For information about new features in major release 15, see
   <xref linkend="release-15"/>.
  </para>

  <sect2>
   <title>Migration to Version 15.9</title>

   <para>
    A dump/restore is not required for those running 15.X.
   </para>

   <para>
    However, if you have ever detached a partition from a partitioned
    table that has a foreign-key reference to another partitioned table,
    and not dropped the former partition, then you may have catalog and/or
    data corruption to repair, as detailed in the fifth changelog entry
    below.
   </para>

   <para>
    Also, if you are upgrading from a version earlier than 15.7,
    see <xref linkend="release-15-7"/>.
   </para>
  </sect2>

  <sect2>
   <title>Changes</title>

   <itemizedlist>

    <listitem>
<!--
Author: Nathan Bossart <nathan@postgresql.org>
Branch: master [cd7ab5753] 2024-11-11 09:00:00 -0600
Branch: REL_17_STABLE [edcda9bb4] 2024-11-11 09:00:00 -0600
Branch: REL_16_STABLE [562289460] 2024-11-11 09:00:00 -0600
Branch: REL_15_STABLE [6db5ea8de] 2024-11-11 09:00:00 -0600
Branch: REL_14_STABLE [4e51030af] 2024-11-11 09:00:00 -0600
Branch: REL_13_STABLE [952ff31e2] 2024-11-11 09:00:00 -0600
Branch: REL_12_STABLE [448525e8a] 2024-11-11 09:00:00 -0600
-->
     <para>
      Ensure cached plans are marked as dependent on the calling role when
      RLS applies to a non-top-level table reference (Nathan Bossart)
      <ulink url="&commit_baseurl;6db5ea8de">&sect;</ulink>
     </para>

     <para>
      If a CTE, subquery, sublink, security invoker view, or coercion
      projection in a query references a table with row-level security
      policies, we neglected to mark the resulting plan as potentially
      dependent on which role is executing it.  This could lead to later
      query executions in the same session using the wrong plan, and then
      returning or hiding rows that should have been hidden or returned
      instead.
     </para>

     <para>
      The <productname>PostgreSQL</productname> Project thanks
      Wolfgang Walther for reporting this problem.
      (CVE-2024-10976)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [bf8835ea9] 2024-11-11 10:19:52 +0900
Branch: REL_17_STABLE [a5cc4c667] 2024-11-11 10:19:56 +0900
Branch: REL_16_STABLE [67d28bd02] 2024-11-11 10:19:58 +0900
Branch: REL_15_STABLE [d2c3e31c1] 2024-11-11 10:19:59 +0900
Branch: REL_14_STABLE [e6c945476] 2024-11-11 10:20:01 +0900
Branch: REL_13_STABLE [7b49707b7] 2024-11-11 10:20:02 +0900
Branch: REL_12_STABLE [2a951ef0a] 2024-11-11 10:20:03 +0900
-->
     <para>
      Make <application>libpq</application> discard error messages
      received during SSL or GSS protocol negotiation (Jacob Champion)
      <ulink url="&commit_baseurl;d2c3e31c1">&sect;</ulink>
     </para>

     <para>
      An error message received before encryption negotiation is completed
      might have been injected by a man-in-the-middle, rather than being
      real server output.  Reporting it opens the door to various security
      hazards; for example, the message might spoof a query result that a
      careless user could mistake for correct output.  The best answer
      seems to be to discard such data and rely only
      on <application>libpq</application>'s own report of the connection
      failure.
     </para>

     <para>
      The <productname>PostgreSQL</productname> Project thanks
      Jacob Champion for reporting this problem.
      (CVE-2024-10977)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [5a2fed911] 2024-11-11 10:29:54 -0500
Branch: REL_17_STABLE [cd82afdda] 2024-11-11 10:29:54 -0500
Branch: REL_16_STABLE [ae340d031] 2024-11-11 10:29:54 -0500
Branch: REL_15_STABLE [a5d2e6205] 2024-11-11 10:29:54 -0500
Branch: REL_14_STABLE [2a68808e2] 2024-11-11 10:29:54 -0500
Branch: REL_13_STABLE [76123ded6] 2024-11-11 10:29:54 -0500
Branch: REL_12_STABLE [4c9d96f74] 2024-11-11 10:29:54 -0500
Branch: master [73c9f91a1] 2024-11-11 17:05:53 -0500
Branch: REL_17_STABLE [f4f5d27d8] 2024-11-11 17:05:53 -0500
Branch: REL_16_STABLE [95f5a5237] 2024-11-11 17:05:53 -0500
Branch: REL_15_STABLE [109a32380] 2024-11-11 17:05:53 -0500
Branch: REL_14_STABLE [00b94e8e2] 2024-11-11 17:05:53 -0500
Branch: REL_13_STABLE [dc7378793] 2024-11-11 17:05:53 -0500
Branch: REL_12_STABLE [0edad8654] 2024-11-11 17:05:53 -0500
-->
     <para>
      Fix unintended interactions between <command>SET SESSION
      AUTHORIZATION</command> and <command>SET ROLE</command> (Tom Lane)
      <ulink url="&commit_baseurl;a5d2e6205">&sect;</ulink>
      <ulink url="&commit_baseurl;109a32380">&sect;</ulink>
     </para>

     <para>
      The SQL standard mandates that <command>SET SESSION
      AUTHORIZATION</command> have a side-effect of doing <command>SET
      ROLE NONE</command>.  Our implementation of that was flawed,
      creating more interaction between the two settings than intended.
      Notably, rolling back a transaction that had done <command>SET
      SESSION AUTHORIZATION</command> would revert <literal>ROLE</literal>
      to <literal>NONE</literal> even if that had not been the previous
      state, so that the effective user ID might now be different from
      what it had been before the transaction.  Transiently
      setting <varname>session_authorization</varname> in a
      function <literal>SET</literal> clause had a similar effect.
      A related bug was that if a parallel worker
      inspected <literal>current_setting('role')</literal>, it
      saw <literal>none</literal> even when it should see something else.
     </para>

     <para>
      The <productname>PostgreSQL</productname> Project thanks
      Tom Lane for reporting this problem.
      (CVE-2024-10978)
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [b7e3a52a8] 2024-11-11 06:23:43 -0800
Branch: REL_17_STABLE [3ebcfa54d] 2024-11-11 06:23:46 -0800
Branch: REL_16_STABLE [8fe3e697a] 2024-11-11 06:23:47 -0800
Branch: REL_15_STABLE [e530835c6] 2024-11-11 06:23:47 -0800
Branch: REL_14_STABLE [d15ec27c9] 2024-11-11 06:23:47 -0800
Branch: REL_13_STABLE [e428cd058] 2024-11-11 06:23:48 -0800
Branch: REL_12_STABLE [2ab12d860] 2024-11-11 06:23:48 -0800
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: REL_14_STABLE [f89bd92c9] 2024-11-11 10:42:32 -0500
Branch: REL_13_STABLE [6bccd7b03] 2024-11-11 10:42:32 -0500
Branch: REL_12_STABLE [b1e58defb] 2024-11-11 10:42:32 -0500
Branch: master [a34c33fd2] 2024-11-11 12:20:08 -0500
Branch: REL_17_STABLE [4cd4f3b97] 2024-11-11 12:20:08 -0500
Branch: REL_16_STABLE [88269df4d] 2024-11-11 12:20:08 -0500
Branch: REL_16_STABLE [168579e23] 2024-11-11 12:27:06 -0500
Author: Noah Misch <noah@leadboat.com>
Branch: REL_16_STABLE [c335264c9] 2024-11-11 10:55:18 -0800
Branch: REL_15_STABLE [16ed4f4d0] 2024-11-11 10:56:05 -0800
Branch: REL_14_STABLE [c1fff7b1b] 2024-11-11 10:56:09 -0800
Branch: REL_13_STABLE [9f97c31c2] 2024-11-11 10:56:12 -0800
Branch: REL_12_STABLE [1e457468f] 2024-11-11 10:56:14 -0800
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [c4252c9ef] 2024-11-11 13:57:21 -0500
Branch: REL_17_STABLE [8d19f3fea] 2024-11-11 13:57:21 -0500
Branch: REL_16_STABLE [64df88700] 2024-11-11 13:57:40 -0500
Branch: REL_15_STABLE [c834b375a] 2024-11-11 13:57:41 -0500
Branch: REL_14_STABLE [256e34653] 2024-11-11 13:57:41 -0500
Branch: REL_13_STABLE [0bd9560d9] 2024-11-11 13:57:41 -0500
Branch: REL_12_STABLE [9fc1c3a02] 2024-11-11 13:57:41 -0500
-->
     <para>
      Prevent trusted PL/Perl code from changing environment variables
      (Andrew Dunstan, Noah Misch)
      <ulink url="&commit_baseurl;e530835c6">&sect;</ulink>
      <ulink url="&commit_baseurl;16ed4f4d0">&sect;</ulink>
      <ulink url="&commit_baseurl;c834b375a">&sect;</ulink>
     </para>

     <para>
      The ability to manipulate process environment variables such
      as <literal>PATH</literal> gives an attacker opportunities to
      execute arbitrary code.  Therefore, <quote>trusted</quote> PLs must
      not offer the ability to do that.  To fix <literal>plperl</literal>,
      replace <varname>%ENV</varname> with a tied hash that rejects any
      modification attempt with a warning.
      Untrusted <literal>plperlu</literal> retains the ability to change
      the environment.
     </para>

     <para>
      The <productname>PostgreSQL</productname> Project thanks
      Coby Abrams for reporting this problem.
      (CVE-2024-10979)
     </para>
    </listitem>

    <listitem>
<!--
Author: Álvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [53af9491a] 2024-10-22 16:01:18 +0200
Branch: REL_17_STABLE [5914a22f6] 2024-10-22 16:01:18 +0200
Branch: REL_16_STABLE [2aaf2a28b] 2024-10-22 16:01:18 +0200
Branch: REL_15_STABLE [5d83bad6b] 2024-10-22 16:01:18 +0200
Branch: REL_14_STABLE [46a8c27a7] 2024-10-22 16:01:18 +0200
Branch: REL_13_STABLE [d20194cea] 2024-10-22 16:01:18 +0200
Branch: master [2d5fe5140] 2024-10-30 10:54:03 +0100
Branch: REL_17_STABLE [936ab6de9] 2024-10-30 10:54:03 +0100
Branch: REL_16_STABLE [f7d510a38] 2024-10-30 10:54:03 +0100
Branch: REL_15_STABLE [1b216fcef] 2024-10-30 10:54:03 +0100
-->
     <para>
      Fix updates of catalog state for foreign-key constraints when
      attaching or detaching table partitions (Jehan-Guillaume de
      Rorthais, Tender Wang, Álvaro Herrera)
      <ulink url="&commit_baseurl;5d83bad6b">&sect;</ulink>
      <ulink url="&commit_baseurl;1b216fcef">&sect;</ulink>
     </para>

     <para>
      If the referenced table is partitioned, then different catalog
      entries are needed for a referencing table that is stand-alone
      versus one that is a partition.  <literal>ATTACH/DETACH
      PARTITION</literal> commands failed to perform this conversion
      correctly.  In particular, after <literal>DETACH</literal> the now
      stand-alone table would be missing foreign-key enforcement triggers,
      which could result in the table later containing rows that fail the
      foreign-key constraint.  A subsequent re-<literal>ATTACH</literal>
      could fail with surprising errors, too.
     </para>

     <para>
      The way to fix this is to do <command>ALTER TABLE DROP
      CONSTRAINT</command> on the now stand-alone table for each faulty
      constraint, and then re-add the constraint.  If re-adding the
      constraint fails, then some erroneous data has crept in.  You will
      need to manually re-establish consistency between the referencing
      and referenced tables, then re-add the constraint.
     </para>

     <para>
      This query can be used to identify broken constraints and construct
      the commands needed to recreate them:
<programlisting>
SELECT conrelid::pg_catalog.regclass AS "constrained table",
       conname AS constraint,
       confrelid::pg_catalog.regclass AS "references",
       pg_catalog.format('ALTER TABLE %s DROP CONSTRAINT %I;',
                         conrelid::pg_catalog.regclass, conname) AS "drop",
       pg_catalog.format('ALTER TABLE %s ADD CONSTRAINT %I %s;',
                         conrelid::pg_catalog.regclass, conname,
                         pg_catalog.pg_get_constraintdef(oid)) AS "add"
FROM pg_catalog.pg_constraint c
WHERE contype = 'f' AND conparentid = 0 AND
   (SELECT count(*) FROM pg_catalog.pg_constraint c2
    WHERE c2.conparentid = c.oid) &lt;&gt;
   (SELECT count(*) FROM pg_catalog.pg_inherits i
    WHERE (i.inhparent = c.conrelid OR i.inhparent = c.confrelid) AND
      EXISTS (SELECT 1 FROM pg_catalog.pg_partitioned_table
              WHERE partrelid = i.inhparent));
</programlisting>
      Since it is possible that one or more of the <literal>ADD
      CONSTRAINT</literal> steps will fail, you should save the query's
      output in a file and then attempt to perform each step.
     </para>
    </listitem>

    <listitem>
<!--
Author: Álvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [52f3de874] 2024-08-19 16:09:10 -0400
Branch: REL_17_STABLE Release: REL_17_0 [11f1218ce] 2024-08-19 16:09:10 -0400
Branch: REL_16_STABLE [a6ff329e7] 2024-08-19 16:09:10 -0400
Branch: REL_15_STABLE [be73e7008] 2024-08-19 16:09:10 -0400
Branch: REL_14_STABLE [3ad4c8615] 2024-08-19 16:09:10 -0400
Branch: master [c899c6839] 2024-08-12 18:17:56 -0400
Branch: REL_17_STABLE Release: REL_17_0 [0820f8062] 2024-08-12 18:17:56 -0400
Branch: REL_16_STABLE [1b9dd6b05] 2024-08-12 18:17:56 -0400
Branch: REL_15_STABLE [305db9543] 2024-08-12 18:17:56 -0400
Branch: REL_14_STABLE [1b4bdf915] 2024-08-12 18:17:56 -0400
-->
     <para>
      Avoid possible crashes and <quote>could not open relation</quote>
      errors in queries on a partitioned table occurring concurrently with
      a <command>DETACH CONCURRENTLY</command> and immediate drop of a
      partition (Álvaro Herrera, Kuntal Gosh)
      <ulink url="&commit_baseurl;be73e7008">&sect;</ulink>
      <ulink url="&commit_baseurl;305db9543">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Álvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [a90bdd7a4] 2024-08-08 19:35:13 -0400
Branch: REL_17_STABLE Release: REL_17_0 [344f9f5e2] 2024-08-08 19:35:13 -0400
Branch: REL_16_STABLE [ada34d714] 2024-08-08 19:35:13 -0400
Branch: REL_15_STABLE [8c0944ac8] 2024-08-08 19:35:13 -0400
Branch: REL_14_STABLE [e97121d90] 2024-08-08 19:35:13 -0400
Branch: REL_13_STABLE [2ee02c98d] 2024-08-08 19:35:13 -0400
Branch: REL_12_STABLE [17ed92e1f] 2024-08-08 19:35:13 -0400
Author: Peter Eisentraut <peter@eisentraut.org>
Branch: REL_16_STABLE [57c8b8726] 2024-11-08 07:17:55 +0100
Branch: REL_15_STABLE [38f506470] 2024-11-08 07:31:48 +0100
Branch: REL_14_STABLE [a54a5c426] 2024-11-08 07:32:07 +0100
Branch: REL_13_STABLE [ebbfa2ae3] 2024-11-08 07:32:14 +0100
Branch: REL_12_STABLE [cae459d11] 2024-11-08 07:32:21 +0100
-->
     <para>
      Disallow <command>ALTER TABLE ATTACH PARTITION</command> if the
      table to be attached has a foreign key referencing the partitioned
      table (Álvaro Herrera)
      <ulink url="&commit_baseurl;8c0944ac8">&sect;</ulink>
      <ulink url="&commit_baseurl;38f506470">&sect;</ulink>
     </para>

     <para>
      This arrangement is not supported, and other ways of creating it
      already fail.
     </para>
    </listitem>

    <listitem>
<!--
Author: Amit Langote <amitlan@postgresql.org>
Branch: master [075acdd93] 2024-11-08 17:25:24 +0900
Branch: REL_17_STABLE [a0cdfc889] 2024-11-08 17:19:35 +0900
Branch: REL_16_STABLE [f734b6b4d] 2024-11-08 17:19:13 +0900
Branch: REL_15_STABLE [33040b171] 2024-11-08 17:18:55 +0900
Branch: REL_14_STABLE [62df5484f] 2024-11-08 17:18:38 +0900
Branch: REL_13_STABLE [054701a2b] 2024-11-08 17:18:21 +0900
Branch: REL_12_STABLE [9c4757491] 2024-11-08 17:18:04 +0900
Branch: master [90fe6251c] 2024-11-08 16:07:22 +0900
Branch: REL_17_STABLE [b6484ca95] 2024-11-08 16:07:13 +0900
Branch: REL_16_STABLE [dd2f8ebee] 2024-11-08 16:07:05 +0900
Branch: REL_15_STABLE [0a620659c] 2024-11-08 16:06:58 +0900
Branch: REL_14_STABLE [96f9b29a3] 2024-11-08 16:06:46 +0900
Branch: REL_13_STABLE [ff65f695c] 2024-11-08 16:06:12 +0900
Branch: REL_12_STABLE [46d9be5ef] 2024-11-08 16:05:33 +0900
-->
     <para>
      Don't use partitionwise joins or grouping if the query's collation
      for the key column doesn't match the partition key's collation (Jian
      He, Webbo Han)
      <ulink url="&commit_baseurl;33040b171">&sect;</ulink>
      <ulink url="&commit_baseurl;0a620659c">&sect;</ulink>
     </para>

     <para>
      Such plans could produce incorrect results.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [9f954177b] 2024-10-12 14:56:08 -0400
Branch: REL_17_STABLE [54889ea64] 2024-10-12 14:56:08 -0400
Branch: REL_16_STABLE [64635c8af] 2024-10-12 14:56:08 -0400
Branch: REL_15_STABLE [4f3bccbaa] 2024-10-12 14:56:08 -0400
Branch: REL_14_STABLE [4ca708eb3] 2024-10-12 14:56:08 -0400
Branch: REL_13_STABLE [76de4b182] 2024-10-12 14:56:08 -0400
-->
     <para>
      Fix possible <quote>could not find pathkey item to sort</quote>
      error when the output of a <literal>UNION ALL</literal> member query
      needs to be sorted, and the sort column is an expression (Andrei
      Lepikhov, Tom Lane)
      <ulink url="&commit_baseurl;4f3bccbaa">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [fae55f0bb] 2024-09-13 16:17:04 -0400
Branch: REL_17_STABLE Release: REL_17_0 [418c6a2c7] 2024-09-13 16:17:04 -0400
Branch: REL_16_STABLE [d23109f4b] 2024-09-13 16:16:47 -0400
Branch: REL_15_STABLE [e0857898b] 2024-09-13 16:16:47 -0400
Branch: REL_14_STABLE [b49013f2e] 2024-09-13 16:16:47 -0400
Branch: REL_13_STABLE [b27215dbb] 2024-09-13 16:16:47 -0400
Branch: REL_12_STABLE [813ade548] 2024-09-13 16:16:47 -0400
-->
     <para>
      Allow cancellation of the second stage of index build for large hash
      indexes (Pavel Borisov)
      <ulink url="&commit_baseurl;e0857898b">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [68ad9816c] 2024-10-21 15:08:22 -0400
Branch: REL_17_STABLE [3685ad618] 2024-10-21 15:08:22 -0400
Branch: REL_16_STABLE [6c3b2d204] 2024-10-21 15:08:22 -0400
Branch: REL_15_STABLE [c80a1e048] 2024-10-21 15:08:22 -0400
Branch: REL_14_STABLE [5e94f616c] 2024-10-21 15:08:22 -0400
Branch: REL_13_STABLE [beab395a4] 2024-10-21 15:08:22 -0400
Branch: REL_12_STABLE [6a57a457c] 2024-10-21 15:08:22 -0400
-->
     <para>
      Fix assertion failure or confusing error message for <literal>COPY
      (<replaceable>query</replaceable>) TO ...</literal>, when
      the <replaceable>query</replaceable> is rewritten by a <literal>DO
      INSTEAD NOTIFY</literal> rule (Tender Wang, Tom Lane)
      <ulink url="&commit_baseurl;c80a1e048">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [98c7c7152] 2024-10-17 22:11:59 +1300
Branch: REL_17_STABLE [4ac5d33a8] 2024-10-17 22:10:29 +1300
Branch: REL_16_STABLE [53edc9485] 2024-10-17 22:08:13 +1300
Branch: REL_15_STABLE [1831545ca] 2024-10-17 22:04:05 +1300
Branch: REL_14_STABLE [20d948994] 2024-10-17 22:01:54 +1300
Branch: REL_13_STABLE [45329466f] 2024-10-17 22:00:38 +1300
Branch: REL_12_STABLE [4fa80a6d7] 2024-10-17 22:00:16 +1300
-->
     <para>
      Fix detection of skewed data during parallel hash join (Thomas
      Munro)
      <ulink url="&commit_baseurl;1831545ca">&sect;</ulink>
     </para>

     <para>
      After repartitioning the inner side of a hash join because one
      partition has accumulated too many tuples, we check to see if all
      the partition's tuples went into the same child partition, which
      suggests that they all have the same hash value and further
      repartitioning cannot improve matters.  This check malfunctioned in
      some cases, allowing repeated futile repartitioning which would
      eventually end in a resource-exhaustion error.
     </para>
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master [1a43de5e0] 2024-10-21 09:49:21 +0300
Branch: REL_17_STABLE [234f6d09e] 2024-10-21 09:49:29 +0300
Branch: REL_16_STABLE [22665f210] 2024-10-21 09:49:32 +0300
Branch: REL_15_STABLE [d97419b85] 2024-10-21 09:49:35 +0300
Branch: REL_14_STABLE [520ec2474] 2024-10-21 09:49:38 +0300
Branch: REL_13_STABLE [8e607a5a4] 2024-10-21 09:49:41 +0300
Branch: REL_12_STABLE [e2ec3afeb] 2024-10-21 09:49:50 +0300
-->
     <para>
      Fix race condition in committing a serializable transaction (Heikki
      Linnakangas)
      <ulink url="&commit_baseurl;d97419b85">&sect;</ulink>
     </para>

     <para>
      Mis-processing of a recently committed transaction could lead to an
      assertion failure or a <quote>could not access status of
      transaction</quote> error.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [cf4401fe6] 2024-10-01 15:44:03 +0900
Branch: REL_17_STABLE [f250cb29d] 2024-10-01 15:44:07 +0900
Branch: REL_16_STABLE [7de9b64a5] 2024-10-01 15:44:09 +0900
Branch: REL_15_STABLE [41ab45680] 2024-10-01 15:44:11 +0900
Branch: REL_14_STABLE [5f1510787] 2024-10-01 15:44:12 +0900
Branch: REL_13_STABLE [7bfaa4671] 2024-10-01 15:44:14 +0900
Branch: REL_12_STABLE [34d751ba7] 2024-10-01 15:44:15 +0900
-->
     <para>
      Fix race condition in <command>COMMIT PREPARED</command>
      that resulted in orphaned 2PC files (wuchengwen)
      <ulink url="&commit_baseurl;41ab45680">&sect;</ulink>
     </para>

     <para>
      A concurrent <command>PREPARE TRANSACTION</command> could
      cause <command>COMMIT PREPARED</command> to not remove the on-disk
      two-phase state file for the completed transaction.  There was no
      immediate ill effect, but a subsequent crash-and-recovery could fail
      with <quote>could not access status of transaction</quote>,
      requiring manual removal of the orphaned file to restore service.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [09620ea09] 2024-09-27 09:40:09 +0900
Branch: REL_17_STABLE [1532599a8] 2024-09-27 09:40:14 +0900
Branch: REL_16_STABLE [afbd3dc7d] 2024-09-27 09:40:16 +0900
Branch: REL_15_STABLE [a613edc5c] 2024-09-27 09:40:18 +0900
Branch: REL_14_STABLE [6530b869c] 2024-09-27 09:40:19 +0900
Branch: REL_13_STABLE [911eda9f3] 2024-09-27 09:40:21 +0900
Branch: REL_12_STABLE [2f33e68a5] 2024-09-27 09:40:22 +0900
-->
     <para>
      Avoid invalid memory accesses after skipping an invalid toast index
      during <command>VACUUM FULL</command> (Tender Wang)
      <ulink url="&commit_baseurl;a613edc5c">&sect;</ulink>
     </para>

     <para>
      A list tracking yet-to-be-rebuilt indexes was not properly updated
      in this code path, risking assertion failures or crashes later on.
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [a07e03fd8] 2024-09-24 15:25:18 -0700
Branch: REL_17_STABLE [fd27b878c] 2024-09-24 15:25:21 -0700
Branch: REL_16_STABLE [63f019805] 2024-09-24 15:25:22 -0700
Branch: REL_15_STABLE [8590c942c] 2024-09-24 15:25:23 -0700
Branch: REL_14_STABLE [82c2d9e02] 2024-09-24 15:25:23 -0700
Branch: REL_13_STABLE [a8ad1929d] 2024-09-24 15:25:24 -0700
Branch: REL_12_STABLE [7354b680a] 2024-09-24 15:25:25 -0700
Branch: master [aac2c9b4f] 2024-09-24 15:25:18 -0700
Branch: REL_17_STABLE [3b7a689e1] 2024-09-24 15:25:22 -0700
Branch: REL_16_STABLE [51ff46de2] 2024-09-24 15:25:22 -0700
Branch: REL_15_STABLE [5c837f8fa] 2024-09-24 15:25:23 -0700
Branch: REL_14_STABLE [f51b34b3e] 2024-09-24 15:25:23 -0700
Branch: REL_13_STABLE [14c57cb63] 2024-09-24 15:25:24 -0700
Branch: REL_12_STABLE [cafcc3ad0] 2024-09-24 15:25:25 -0700
Branch: master [0d5a3d757] 2024-09-29 15:54:25 -0700
Branch: REL_17_STABLE [da99df15c] 2024-09-29 15:54:28 -0700
Branch: REL_16_STABLE [4c922821e] 2024-09-29 15:54:28 -0700
Branch: REL_15_STABLE [159bf0f31] 2024-09-29 15:54:29 -0700
Branch: REL_14_STABLE [b9ee1339b] 2024-09-29 15:54:29 -0700
Branch: REL_13_STABLE [db1992455] 2024-09-29 15:54:29 -0700
Branch: REL_12_STABLE [5a33a39a8] 2024-09-29 15:54:30 -0700
Branch: master [e947224cb] 2024-10-24 09:16:14 -0700
Branch: REL_17_STABLE [e11907682] 2024-10-24 09:16:17 -0700
Branch: REL_16_STABLE [2d63c964f] 2024-10-24 09:16:18 -0700
Branch: REL_15_STABLE [d34ffbaa1] 2024-10-24 09:16:18 -0700
Branch: REL_14_STABLE [ad24b7565] 2024-10-24 09:16:19 -0700
Branch: REL_13_STABLE [3e5ea478d] 2024-10-24 09:16:19 -0700
Branch: REL_12_STABLE [a0c0078b1] 2024-10-24 09:16:20 -0700
Branch: master [30d47ec8c] 2024-10-29 09:39:55 -0700
Branch: REL_17_STABLE [9aef6f19a] 2024-10-29 09:39:58 -0700
Branch: REL_16_STABLE [370bc7740] 2024-10-29 09:39:58 -0700
Branch: REL_15_STABLE [0fe002d0c] 2024-10-29 09:39:59 -0700
Branch: REL_14_STABLE [11e3f288f] 2024-10-29 09:39:59 -0700
Branch: REL_13_STABLE [2a912bc1a] 2024-10-29 09:40:00 -0700
Branch: REL_12_STABLE [c2139db11] 2024-10-29 09:40:00 -0700
Branch: master [b412f402d] 2024-11-02 09:04:55 -0700
Branch: REL_17_STABLE [0bcb9d079] 2024-11-02 09:05:00 -0700
Branch: REL_16_STABLE [6c837c237] 2024-11-02 09:05:02 -0700
Branch: REL_15_STABLE [6d5b4031b] 2024-11-02 09:05:04 -0700
Branch: REL_14_STABLE [bb3054297] 2024-11-02 09:05:05 -0700
Branch: REL_13_STABLE [6b01cac0b] 2024-11-02 09:05:07 -0700
Branch: REL_12_STABLE [d729f1ea5] 2024-11-02 09:05:08 -0700
Branch: master [825c72c07] 2024-11-02 19:42:52 -0700
Branch: REL_17_STABLE [54bc22fbf] 2024-11-02 19:42:55 -0700
Branch: REL_16_STABLE [f8f9110b4] 2024-11-02 19:42:56 -0700
Branch: REL_15_STABLE [d14e94ac4] 2024-11-02 19:42:56 -0700
Branch: REL_14_STABLE [803655e66] 2024-11-02 19:42:57 -0700
Branch: REL_13_STABLE [4dc0c933f] 2024-11-02 19:42:57 -0700
Branch: REL_12_STABLE [766809db3] 2024-11-02 19:42:58 -0700
-->
     <para>
      Fix ways in which an <quote>in place</quote> catalog update could be
      lost (Noah Misch)
      <ulink url="&commit_baseurl;8590c942c">&sect;</ulink>
      <ulink url="&commit_baseurl;5c837f8fa">&sect;</ulink>
      <ulink url="&commit_baseurl;159bf0f31">&sect;</ulink>
      <ulink url="&commit_baseurl;d34ffbaa1">&sect;</ulink>
      <ulink url="&commit_baseurl;0fe002d0c">&sect;</ulink>
      <ulink url="&commit_baseurl;6d5b4031b">&sect;</ulink>
      <ulink url="&commit_baseurl;d14e94ac4">&sect;</ulink>
     </para>

     <para>
      Normal row updates write a new version of the row to preserve
      rollback-ability of the transaction.  However, certain system
      catalog updates are intentionally non-transactional and are done
      with an in-place update of the row.  These patches fix race
      conditions that could cause the effects of an in-place update to be
      lost.  As an example, it was possible to forget having set
      <structname>pg_class</structname>.<structfield>relhasindex</structfield>
      to true, preventing updates of the new index and thus causing index
      corruption.
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: REL_17_STABLE [a4668c99f] 2024-10-25 06:51:06 -0700
Branch: REL_16_STABLE [d36b4d8ec] 2024-10-25 06:51:06 -0700
Branch: REL_15_STABLE [3baf804b7] 2024-10-25 06:51:07 -0700
Branch: REL_14_STABLE [dca68242a] 2024-10-25 06:51:07 -0700
Branch: REL_13_STABLE [67f30c79a] 2024-10-25 06:51:08 -0700
Branch: REL_12_STABLE [da9950456] 2024-10-25 06:51:08 -0700
-->
     <para>
      Reset catalog caches at end of recovery (Noah Misch)
      <ulink url="&commit_baseurl;3baf804b7">&sect;</ulink>
     </para>

     <para>
      This prevents scenarios wherein an in-place catalog update could be
      lost due to using stale data from a catalog cache.
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [ac04aa84a] 2024-09-17 19:53:11 -0700
Branch: REL_17_STABLE Release: REL_17_0 [2370582ab] 2024-09-17 19:54:25 -0700
Branch: REL_16_STABLE [6f6521de9] 2024-09-17 19:54:25 -0700
Branch: REL_15_STABLE [884860bfc] 2024-09-17 19:54:26 -0700
Branch: REL_14_STABLE [5c698e898] 2024-09-17 19:54:26 -0700
Branch: REL_13_STABLE [916b8ae47] 2024-09-17 19:54:26 -0700
Branch: REL_12_STABLE [507b72bd9] 2024-09-17 19:54:26 -0700
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [b8df69049] 2024-11-08 13:42:10 -0500
Branch: REL_17_STABLE [943b65358] 2024-11-08 13:42:01 -0500
Branch: REL_16_STABLE [06424e9a2] 2024-11-08 13:42:01 -0500
Branch: REL_15_STABLE [bcbdb176e] 2024-11-08 13:42:01 -0500
Branch: REL_14_STABLE [989ccd26c] 2024-11-08 13:42:01 -0500
Branch: REL_13_STABLE [62685876f] 2024-11-08 13:42:01 -0500
Branch: REL_12_STABLE [6e39ca6e7] 2024-11-08 13:42:01 -0500
-->
     <para>
      Avoid using parallel query while holding off interrupts
      (Francesco Degrassi, Noah Misch, Tom Lane)
      <ulink url="&commit_baseurl;884860bfc">&sect;</ulink>
      <ulink url="&commit_baseurl;bcbdb176e">&sect;</ulink>
     </para>

     <para>
      This situation cannot arise normally, but it can be reached with
      test scenarios such as using a SQL-language function as B-tree
      support (which would be far too slow for production usage).  If it
      did occur it would result in an indefinite wait.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [933848d16] 2024-09-18 09:59:09 +0900
Branch: REL_17_STABLE Release: REL_17_0 [7db9bfc1f] 2024-09-18 09:59:14 +0900
Branch: REL_16_STABLE [21aad4bea] 2024-09-18 09:59:19 +0900
Branch: REL_15_STABLE [cbcd4bb41] 2024-09-18 09:59:23 +0900
Branch: REL_14_STABLE [b36ee879c] 2024-09-18 09:59:26 +0900
-->
     <para>
      Report the active query ID for statistics purposes at the start of
      processing of Bind and Execute protocol messages (Sami Imseih)
      <ulink url="&commit_baseurl;cbcd4bb41">&sect;</ulink>
     </para>

     <para>
      This allows more of the work done in extended query protocol to be
      attributed to the correct query.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [d5622acb3] 2024-09-15 13:33:09 -0400
Branch: REL_17_STABLE Release: REL_17_0 [b9645dca1] 2024-09-15 13:33:09 -0400
Branch: REL_16_STABLE [4c9bf947a] 2024-09-15 13:33:09 -0400
Branch: REL_15_STABLE [634804885] 2024-09-15 13:33:09 -0400
Branch: REL_14_STABLE [7721fff06] 2024-09-15 13:33:09 -0400
Branch: REL_13_STABLE [4310dfa25] 2024-09-15 13:33:09 -0400
Branch: REL_12_STABLE [0206795d2] 2024-09-15 13:33:09 -0400
-->
     <para>
      Guard against stack overflow in <application>libxml2</application>
      with too-deeply-nested XML input (Tom Lane, with hat tip to Nick
      Wellnhofer)
      <ulink url="&commit_baseurl;634804885">&sect;</ulink>
     </para>

     <para>
      Use <function>xmlXPathCtxtCompile()</function> rather
      than <function>xmlXPathCompile()</function>, because the latter
      fails to protect itself against recursion-to-stack-overflow
      in <application>libxml2</application> releases before 2.13.4.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [5bbdfa8a1] 2024-09-09 13:49:36 +0900
Branch: REL_17_STABLE Release: REL_17_0 [cd6b2ae3e] 2024-09-09 13:49:59 +0900
Branch: REL_16_STABLE [edb0f6e41] 2024-09-09 13:50:02 +0900
Branch: REL_15_STABLE [239837a70] 2024-09-09 13:50:12 +0900
Branch: REL_14_STABLE [902151548] 2024-09-09 13:50:16 +0900
-->
     <para>
      Do not ignore a concurrent <command>REINDEX CONCURRENTLY</command>
      that is working on an index with predicates or expressions (Michail
      Nikolaev)
      <ulink url="&commit_baseurl;239837a70">&sect;</ulink>
     </para>

     <para>
      Normally, <command>REINDEX CONCURRENTLY</command> does not need to
      wait for other <command>REINDEX CONCURRENTLY</command> operations on
      other tables.  However, this optimization is not applied if the
      other <command>REINDEX CONCURRENTLY</command> is processing an index
      with predicates or expressions, on the chance that such expressions
      contain user-defined code that accesses other tables.  Careless
      coding created a race condition such that that rule was not applied
      uniformly, possibly allowing inconsistent behavior.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [b2be5cb2a] 2024-08-11 12:24:56 -0400
Branch: REL_17_STABLE Release: REL_17_0 [aed881386] 2024-08-11 12:24:56 -0400
Branch: REL_16_STABLE [9db6650a5] 2024-08-11 12:24:56 -0400
Branch: REL_15_STABLE [16e67bc5f] 2024-08-11 12:24:56 -0400
Branch: REL_14_STABLE [bc5446a21] 2024-08-11 12:24:56 -0400
Branch: REL_13_STABLE [016f44364] 2024-08-11 12:24:56 -0400
Branch: master [b919a97a6] 2024-08-09 11:21:39 -0400
Branch: REL_17_STABLE Release: REL_17_0 [81a12a447] 2024-08-09 11:21:39 -0400
Branch: REL_16_STABLE [03f679475] 2024-08-09 11:21:39 -0400
Branch: REL_15_STABLE [12010f414] 2024-08-09 11:21:39 -0400
Branch: REL_14_STABLE [120dd0337] 2024-08-09 11:21:39 -0400
Branch: REL_13_STABLE [3ad35d502] 2024-08-09 11:21:39 -0400
Branch: REL_12_STABLE [7408772de] 2024-08-09 11:21:39 -0400
-->
     <para>
      Fix <quote>failed to find plan for subquery/CTE</quote> errors
      in <command>EXPLAIN</command> (Richard Guo, Tom Lane)
      <ulink url="&commit_baseurl;16e67bc5f">&sect;</ulink>
      <ulink url="&commit_baseurl;12010f414">&sect;</ulink>
     </para>

     <para>
      This case arose while trying to print references to fields of a
      RECORD-type output of a subquery when the subquery has been
      optimized out of the plan altogether (which is possible at least in
      the case that it has a constant-false <literal>WHERE</literal>
      condition).  Nothing remains in the plan to identify the original
      field names, so fall back to
      printing <literal>f<replaceable>N</replaceable></literal> for
      the <replaceable>N</replaceable>'th record column.  (That's actually
      the right thing anyway, if the record output arose from
      a <literal>ROW()</literal> constructor.)
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
Branch: master [4d68a0432] 2024-08-29 09:06:15 +0200
Branch: REL_17_STABLE Release: REL_17_0 [fdbf7e46a] 2024-08-29 08:59:30 +0200
Branch: REL_16_STABLE [5867ee005] 2024-08-29 09:00:06 +0200
Branch: REL_15_STABLE [cf49a606c] 2024-08-29 09:01:02 +0200
Branch: REL_14_STABLE [ecd19a3cc] 2024-08-29 09:01:33 +0200
Branch: REL_13_STABLE [7589d5c5b] 2024-08-29 09:02:06 +0200
Branch: REL_12_STABLE [1c57ae795] 2024-08-29 09:03:06 +0200
-->
     <para>
      Disallow a <literal>USING</literal> clause when altering the type of
      a generated column (Peter Eisentraut)
      <ulink url="&commit_baseurl;cf49a606c">&sect;</ulink>
     </para>

     <para>
      A generated column already has an expression specifying the column
      contents, so including <literal>USING</literal> doesn't make sense.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [f8d9a9f21] 2024-10-06 16:03:48 -0400
Branch: REL_17_STABLE [3daeb539a] 2024-10-06 16:03:48 -0400
Branch: REL_16_STABLE [5de77b609] 2024-10-06 16:03:48 -0400
Branch: REL_15_STABLE [aef75219c] 2024-10-06 16:03:48 -0400
Branch: REL_14_STABLE [3922c9e9f] 2024-10-06 16:03:48 -0400
Branch: REL_13_STABLE [4a17acd0d] 2024-10-06 16:03:48 -0400
Branch: REL_12_STABLE [5c17f5a63] 2024-10-06 16:03:48 -0400
-->
     <para>
      Ignore not-yet-defined Portals in
      the <structname>pg_cursors</structname> view (Tom Lane)
      <ulink url="&commit_baseurl;aef75219c">&sect;</ulink>
     </para>

     <para>
      It is possible for user-defined code that inspects this view to be
      called while a new cursor is being set up, and if that happens a
      null pointer dereference would ensue.  Avoid the problem by defining
      the view to exclude incompletely-set-up cursors.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [fadff3fc9] 2024-09-05 12:42:33 -0400
Branch: REL_17_STABLE Release: REL_17_0 [7dcbf0afa] 2024-09-05 12:42:33 -0400
Branch: REL_16_STABLE [4fd4d7653] 2024-09-05 12:42:33 -0400
Branch: REL_15_STABLE [f37ac613a] 2024-09-05 12:42:33 -0400
-->
     <para>
      Prevent mis-encoding of <quote>trailing junk after numeric
      literal</quote> error messages (Karina Litskevich)
      <ulink url="&commit_baseurl;f37ac613a">&sect;</ulink>
     </para>

     <para>
      We do not allow identifiers to appear immediately following numeric
      literals (there must be some whitespace between).  If a multibyte
      character immediately followed a numeric literal, the syntax error
      message about it included only the first byte of that character,
      causing bad-encoding problems both in the report to the client and
      in the postmaster log file.
     </para>
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master [022564f60] 2024-10-07 15:38:45 +0530
Branch: REL_17_STABLE [918107759] 2024-10-07 15:15:05 +0530
Branch: REL_16_STABLE [0f0e253db] 2024-10-07 15:04:05 +0530
Branch: REL_15_STABLE [8175a7d11] 2024-10-07 14:53:18 +0530
Branch: REL_14_STABLE [efe706e27] 2024-10-07 14:45:39 +0530
Branch: master [d759c1a0b] 2024-10-08 12:25:52 +0530
Branch: REL_17_STABLE [c4b8a916f] 2024-10-08 12:13:28 +0530
Branch: REL_16_STABLE [0c40d9019] 2024-10-08 12:01:35 +0530
Branch: REL_15_STABLE [5ce0dcc99] 2024-10-08 11:45:58 +0530
Branch: REL_14_STABLE [581092c90] 2024-10-08 11:30:26 +0530
-->
     <para>
      Avoid <quote>unexpected table_index_fetch_tuple call during logical
      decoding</quote> error while decoding a transaction involving
      insertion of a column default value (Takeshi Ideriha, Hou Zhijie)
      <ulink url="&commit_baseurl;8175a7d11">&sect;</ulink>
      <ulink url="&commit_baseurl;5ce0dcc99">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Masahiko Sawada <msawada@postgresql.org>
Branch: master [1b9b6cc34] 2024-10-16 12:08:05 -0700
Branch: REL_17_STABLE [eef9cc4dc] 2024-10-16 12:08:02 -0700
Branch: REL_16_STABLE [05e982cdc] 2024-10-16 12:08:00 -0700
Branch: REL_15_STABLE [4a675f318] 2024-10-16 12:07:58 -0700
Branch: REL_14_STABLE [5c1ed0a51] 2024-10-16 12:07:55 -0700
Branch: REL_13_STABLE [cb988b04d] 2024-10-16 12:07:52 -0700
Branch: REL_12_STABLE [53fa68b3b] 2024-10-16 12:07:50 -0700
-->
     <para>
      Reduce memory consumption of logical decoding (Masahiko Sawada)
      <ulink url="&commit_baseurl;4a675f318">&sect;</ulink>
     </para>

     <para>
      Use a smaller default block size to store tuple data received during
      logical replication.  This reduces memory wastage, which has been
      reported to be severe while processing long-running transactions,
      even leading to out-of-memory failures.
     </para>
    </listitem>

    <listitem>
<!--
Author: Daniel Gustafsson <dgustafsson@postgresql.org>
Branch: master [4fdb6558c] 2024-08-19 12:55:11 +0200
Branch: REL_17_STABLE Release: REL_17_0 [19021d28c] 2024-08-19 12:55:11 +0200
Branch: REL_16_STABLE [9333174af] 2024-08-19 12:55:11 +0200
Branch: REL_15_STABLE [23c200940] 2024-08-19 12:55:11 +0200
Branch: REL_14_STABLE [8cea8c023] 2024-08-19 12:55:11 +0200
Branch: REL_13_STABLE [f925b7f65] 2024-08-19 12:55:11 +0200
Branch: REL_12_STABLE [cd98a142c] 2024-08-19 12:55:11 +0200
-->
     <para>
      Re-disable sending of stateless (TLSv1.2) session tickets
      (Daniel Gustafsson)
      <ulink url="&commit_baseurl;23c200940">&sect;</ulink>
     </para>

     <para>
      A previous change to prevent sending of stateful (TLSv1.3) session
      tickets accidentally re-enabled sending of stateless ones.  Thus,
      while we intended to prevent clients from thinking that TLS session
      resumption is supported, some still did.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [0f92b230f] 2024-08-19 00:04:48 +0200
Branch: REL_17_STABLE Release: REL_17_0 [d1da80115] 2024-08-19 00:05:23 +0200
Branch: REL_16_STABLE [545794515] 2024-08-19 00:05:42 +0200
Branch: REL_15_STABLE [df9c5fb58] 2024-08-19 00:06:03 +0200
Branch: REL_14_STABLE [b3bb1e24b] 2024-08-19 00:06:23 +0200
Branch: REL_13_STABLE [33c615f76] 2024-08-19 00:07:04 +0200
Branch: REL_12_STABLE [f18d3e47f] 2024-08-19 00:07:20 +0200
Branch: master [5cb902e9d] 2024-08-19 13:31:51 +0200
Branch: REL_17_STABLE Release: REL_17_0 [de8770b47] 2024-08-19 13:43:27 +0200
Branch: REL_16_STABLE [f6991cafa] 2024-08-19 13:43:43 +0200
Branch: REL_15_STABLE [e498d22e2] 2024-08-19 14:00:50 +0200
Branch: REL_14_STABLE [3acbe198e] 2024-08-19 13:47:07 +0200
Branch: REL_13_STABLE [4e7531fda] 2024-08-19 13:49:23 +0200
Branch: REL_12_STABLE [9d42627bc] 2024-08-19 13:49:36 +0200
-->
     <para>
      Avoid <quote>wrong tuple length</quote> failure when dropping a
      database with many ACL (permission) entries (Ayush Tiwari)
      <ulink url="&commit_baseurl;df9c5fb58">&sect;</ulink>
      <ulink url="&commit_baseurl;e498d22e2">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [364de74cf] 2024-08-10 15:51:30 -0400
Branch: REL_17_STABLE Release: REL_17_0 [2b8d33f66] 2024-08-10 15:51:28 -0400
Branch: REL_16_STABLE [f3ab5d3a2] 2024-08-10 15:51:28 -0400
Branch: REL_15_STABLE [2f4e895be] 2024-08-10 15:51:28 -0400
Branch: REL_14_STABLE [546a26b3d] 2024-08-10 15:51:28 -0400
Branch: REL_13_STABLE [adf9808fa] 2024-08-10 15:51:28 -0400
Branch: REL_12_STABLE [adc28d01e] 2024-08-10 15:51:28 -0400
-->
     <para>
      Allow adjusting the <varname>session_authorization</varname>
      and <varname>role</varname> settings in parallel workers (Tom Lane)
      <ulink url="&commit_baseurl;2f4e895be">&sect;</ulink>
     </para>

     <para>
      Our code intends to allow modifiable server settings to be set by
      function <literal>SET</literal> clauses, but not otherwise within a
      parallel worker.  <literal>SET</literal> clauses failed for these
      two settings, though.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [c96de42c4] 2024-10-16 17:36:40 -0400
Branch: REL_17_STABLE [b5eef7539] 2024-10-16 17:36:29 -0400
Branch: REL_16_STABLE [25d639eea] 2024-10-16 17:36:29 -0400
Branch: REL_15_STABLE [b35231989] 2024-10-16 17:36:29 -0400
Branch: REL_14_STABLE [ab13c46ff] 2024-10-16 17:36:30 -0400
Branch: REL_13_STABLE [0d83ced3c] 2024-10-16 17:36:30 -0400
Branch: REL_12_STABLE [cf1443d67] 2024-10-16 17:36:30 -0400
-->
     <para>
      Fix behavior of stable functions called from
      a <command>CALL</command> statement's argument list, when
      the <command>CALL</command> is within a
      PL/pgSQL <literal>EXCEPTION</literal> block (Tom Lane)
      <ulink url="&commit_baseurl;b35231989">&sect;</ulink>
     </para>

     <para>
      As with a similar fix in our previous quarterly releases, this case
      allowed such functions to be passed the wrong snapshot, causing them
      to see stale values of rows modified since the start of the outer
      transaction.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [8d148bb8b] 2024-08-07 12:54:39 -0400
Branch: REL_17_STABLE Release: REL_17_0 [0dd33a6fc] 2024-08-07 12:54:39 -0400
Branch: REL_16_STABLE [a073835c1] 2024-08-07 12:54:39 -0400
Branch: REL_15_STABLE [de3520701] 2024-08-07 12:54:39 -0400
Branch: REL_14_STABLE [7f875fb5b] 2024-08-07 12:54:39 -0400
-->
     <para>
      Fix <quote>cache lookup failed for function</quote> errors in edge
      cases in PL/pgSQL's <command>CALL</command> (Tom Lane)
      <ulink url="&commit_baseurl;de3520701">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master [2676040df] 2024-08-07 10:43:52 +0300
Branch: REL_17_STABLE Release: REL_17_0 [ffac8ac48] 2024-08-07 10:44:00 +0300
Branch: REL_16_STABLE [0583863e9] 2024-08-07 10:44:05 +0300
Branch: REL_15_STABLE [a38f5f880] 2024-08-07 10:44:10 +0300
Branch: REL_14_STABLE [7696b2ea5] 2024-08-07 10:44:16 +0300
-->
     <para>
      Fix thread safety of our fallback (non-OpenSSL) MD5 implementation
      on big-endian hardware (Heikki Linnakangas)
      <ulink url="&commit_baseurl;a38f5f880">&sect;</ulink>
     </para>

     <para>
      Thread safety is not currently a concern in the server, but it is
      for libpq.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [920d51979] 2024-10-02 17:30:36 -0400
Branch: REL_17_STABLE [c7a201053] 2024-10-02 17:30:36 -0400
Branch: REL_16_STABLE [65f431aff] 2024-10-02 17:30:36 -0400
Branch: REL_15_STABLE [bb8c89dbc] 2024-10-02 17:30:36 -0400
Branch: REL_14_STABLE [e7af9b52f] 2024-10-02 17:30:36 -0400
Branch: REL_13_STABLE [2120eda94] 2024-10-02 17:30:36 -0400
Branch: REL_12_STABLE [47d8a15de] 2024-10-02 17:30:36 -0400
-->
     <para>
      Parse <application>libpq</application>'s <literal>keepalives</literal>
      connection option in the same way as other integer-valued options
      (Yuto Sasaki)
      <ulink url="&commit_baseurl;bb8c89dbc">&sect;</ulink>
     </para>

     <para>
      The coding used here rejected trailing whitespace in the option
      value, unlike other cases.  This turns out to be problematic
      in <application>ecpg</application>'s usage, for example.
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
Branch: master [5388216f6] 2024-08-07 09:21:07 +0200
Branch: REL_17_STABLE Release: REL_17_0 [e9e05c655] 2024-08-08 07:41:02 +0200
Branch: REL_16_STABLE [ee2997c67] 2024-08-08 07:42:21 +0200
Branch: REL_15_STABLE [2de129b35] 2024-08-08 07:42:31 +0200
Branch: REL_14_STABLE [355718553] 2024-08-08 07:42:44 +0200
Branch: REL_13_STABLE [f0096ef13] 2024-08-08 07:42:46 +0200
-->
     <para>
      Avoid use of <function>pnstrdup()</function>
      in <application>ecpglib</application> (Jacob Champion)
      <ulink url="&commit_baseurl;2de129b35">&sect;</ulink>
     </para>

     <para>
      That function will call <function>exit()</function> on
      out-of-memory, which is undesirable in a library.  The calling code
      already handles allocation failures properly.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [a0bff38d1] 2024-10-23 08:33:54 +0900
Branch: REL_17_STABLE [2c37cb26f] 2024-10-23 08:35:00 +0900
Branch: REL_16_STABLE [a1e613b81] 2024-10-23 08:35:02 +0900
Branch: REL_15_STABLE [335501fb2] 2024-10-23 08:35:04 +0900
Branch: REL_14_STABLE [9a51d4af1] 2024-10-23 08:35:05 +0900
Branch: REL_13_STABLE [fcafbaadf] 2024-10-23 08:35:07 +0900
Branch: REL_12_STABLE [9ecfd8a48] 2024-10-23 08:35:08 +0900
-->
     <para>
      In <application>ecpglib</application>, fix out-of-bounds read when
      parsing incorrect datetime input (Bruce Momjian, Pavel Nekrasov)
      <ulink url="&commit_baseurl;335501fb2">&sect;</ulink>
     </para>

     <para>
      It was possible to try to read the location just before the start of
      a constant array.  Real-world consequences seem minimal, though.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [918e21d25] 2024-09-17 15:53:35 -0400
Branch: REL_17_STABLE Release: REL_17_0 [f7567f9e5] 2024-09-17 15:53:36 -0400
Branch: REL_16_STABLE [b8b175a4c] 2024-09-17 15:53:26 -0400
Branch: REL_15_STABLE [fc2d1ac1a] 2024-09-17 15:53:26 -0400
-->
     <para>
      Fix <application>pg_dump</application>'s handling of identity
      sequences that have persistence different from their owning table's
      persistence (Tom Lane)
      <ulink url="&commit_baseurl;fc2d1ac1a">&sect;</ulink>
     </para>

     <para>
      Since v15, it's been possible to set an identity sequence to be
      LOGGED when its owning table is UNLOGGED or vice versa.
      However, <application>pg_dump</application>'s method for recreating
      that situation failed in binary-upgrade mode,
      causing <application>pg_upgrade</application> to fail when such
      sequences are present.  Fix by introducing a new option
      for <literal>ADD/ALTER COLUMN GENERATED AS IDENTITY</literal> to
      allow the sequence's persistence to be set correctly at creation.
      Note that this means a dump from a database containing such a
      sequence will only load into a server of this minor version or
      newer.
     </para>
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master [49dc191bd] 2024-08-08 10:20:25 +0300
Branch: REL_17_STABLE Release: REL_17_0 [a7bf3e668] 2024-08-08 10:21:12 +0300
Branch: REL_16_STABLE [e8240dbd8] 2024-08-08 10:22:49 +0300
Branch: REL_15_STABLE [b5a5027c9] 2024-08-08 10:22:45 +0300
Branch: REL_14_STABLE [bb5592cac] 2024-08-08 10:22:39 +0300
Branch: REL_13_STABLE [c943e2aae] 2024-08-08 10:22:30 +0300
Branch: REL_12_STABLE [8b86e289f] 2024-08-08 10:22:04 +0300
-->
     <para>
      Include the source timeline history
      in <application>pg_rewind</application>'s debug output
      (Heikki Linnakangas)
      <ulink url="&commit_baseurl;b5a5027c9">&sect;</ulink>
     </para>

     <para>
      This was the intention to begin with, but a coding error caused the
      source history to always print as empty.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andrew Dunstan <andrew@dunslane.net>
Branch: REL_15_STABLE [b9d4a927d] 2024-11-08 09:30:09 +1030
Branch: REL_14_STABLE [02a4ec478] 2024-11-08 09:36:10 +1030
Branch: REL_13_STABLE [fa56aa23f] 2024-11-08 09:45:40 +1030
Branch: REL_15_STABLE [f95ad555d] 2024-11-08 09:29:40 +1030
Branch: REL_14_STABLE [ca9921936] 2024-11-08 09:36:53 +1030
Branch: REL_15_STABLE [f2a4a137b] 2024-11-08 09:29:15 +1030
Branch: REL_14_STABLE [8a5e4982f] 2024-11-08 09:36:40 +1030
Branch: REL_13_STABLE [bb509a464] 2024-11-08 09:46:39 +1030
Branch: REL_15_STABLE [b73c1496d] 2024-11-08 09:27:25 +1030
Branch: REL_14_STABLE [895f23d9e] 2024-11-08 09:36:27 +1030
Branch: REL_13_STABLE [ee219102d] 2024-11-08 09:45:58 +1030
Branch: REL_14_STABLE [ce14dbbca] 2024-11-08 09:35:45 +1030
Branch: REL_13_STABLE [5c0b7581b] 2024-11-08 09:45:22 +1030
Branch: REL_14_STABLE [1bf47d897] 2024-11-08 09:34:00 +1030
Branch: REL_13_STABLE [56b39cce7] 2024-11-08 09:44:46 +1030
Branch: REL_13_STABLE [b4363fc66] 2024-11-08 09:44:01 +1030
Branch: REL_13_STABLE [a5abacecb] 2024-11-08 09:42:21 +1030
Branch: REL_13_STABLE [f1cf64167] 2024-11-08 09:41:47 +1030
Branch: REL_13_STABLE [a9beed676] 2024-11-08 09:40:48 +1030
-->
     <para>
      Fix misbehavior with junction points on Windows, particularly
      in <application>pg_rewind</application> (Alexandra Wang)
      <ulink url="&commit_baseurl;b9d4a927d">&sect;</ulink>
      <ulink url="&commit_baseurl;f95ad555d">&sect;</ulink>
      <ulink url="&commit_baseurl;f2a4a137b">&sect;</ulink>
      <ulink url="&commit_baseurl;b73c1496d">&sect;</ulink>
     </para>

     <para>
      This entailed back-patching previous fixes by Thomas Munro, Peter
      Eisentraut, Alexander Lakhin, and Juan José Santamaría Flecha.
      Those changes were originally not back-patched out of caution, but
      they have been in use in later branches for long enough to deem
      them safe.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [1ab67c9df] 2024-09-25 14:43:16 +0900
Branch: REL_17_STABLE [85cb21df6] 2024-09-25 14:44:50 +0900
Branch: REL_16_STABLE [1ea4d9c00] 2024-09-25 14:44:53 +0900
Branch: REL_15_STABLE [74eaa0544] 2024-09-25 14:44:56 +0900
Branch: REL_14_STABLE [60c618216] 2024-09-25 14:44:57 +0900
Branch: REL_13_STABLE [9db4598c9] 2024-09-25 14:44:59 +0900
Branch: REL_12_STABLE [ef57a7135] 2024-09-25 14:45:01 +0900
Author: Fujii Masao <fujii@postgresql.org>
Branch: master [20cfec896] 2024-09-30 11:13:55 +0900
Branch: REL_17_STABLE [77f154681] 2024-09-30 11:15:56 +0900
Branch: REL_16_STABLE [653ce5b8b] 2024-09-30 11:16:15 +0900
Branch: REL_15_STABLE [92cc21d15] 2024-09-30 11:16:21 +0900
Branch: REL_14_STABLE [88e1153cb] 2024-09-30 11:16:27 +0900
Branch: REL_13_STABLE [9410f7cbf] 2024-09-30 11:17:23 +0900
Author: Nathan Bossart <nathan@postgresql.org>
Branch: master [8318f2b17] 2024-10-07 16:49:20 -0500
Branch: REL_17_STABLE [5bd26e652] 2024-10-07 16:49:20 -0500
Branch: REL_16_STABLE [eba8cc1af] 2024-10-07 16:49:20 -0500
Branch: REL_15_STABLE [6d047c6a9] 2024-10-07 16:49:20 -0500
Branch: REL_14_STABLE [ce6f27857] 2024-10-07 16:49:20 -0500
Branch: REL_13_STABLE [d4ade0baf] 2024-10-07 16:49:20 -0500
Branch: REL_12_STABLE [5e0431c32] 2024-10-07 16:49:20 -0500
-->
     <para>
      Avoid trying to reindex temporary tables and indexes
      in <application>vacuumdb</application> and in
      parallel <application>reindexdb</application> (VaibhaveS, Michael
      Paquier, Fujii Masao, Nathan Bossart)
      <ulink url="&commit_baseurl;74eaa0544">&sect;</ulink>
      <ulink url="&commit_baseurl;92cc21d15">&sect;</ulink>
      <ulink url="&commit_baseurl;6d047c6a9">&sect;</ulink>
     </para>

     <para>
      Reindexing other sessions' temporary tables cannot work, but the
      check to skip them was missing in some code paths, leading to
      unwanted failures.
     </para>
    </listitem>

    <listitem>
<!--
Author: Nathan Bossart <nathan@postgresql.org>
Branch: master [05036a315] 2024-09-12 16:31:29 -0500
Branch: REL_17_STABLE Release: REL_17_0 [6ea7f04b7] 2024-09-12 16:31:29 -0500
Branch: REL_16_STABLE [2bd4c06bb] 2024-09-12 16:31:29 -0500
Branch: REL_15_STABLE [e03042a70] 2024-09-12 16:31:29 -0500
Branch: REL_14_STABLE [8a94af8a2] 2024-09-12 16:31:29 -0500
Branch: REL_13_STABLE [ca902529c] 2024-09-12 16:31:29 -0500
Branch: REL_12_STABLE [dd5670fa5] 2024-09-12 16:31:29 -0500
Branch: master [70d1c664f] 2024-09-13 10:16:40 -0500
Branch: REL_17_STABLE Release: REL_17_0 [9b3c3c0fc] 2024-09-13 10:16:40 -0500
Branch: REL_16_STABLE [0938a4ecd] 2024-09-13 10:16:40 -0500
Branch: REL_15_STABLE [a63aef5e4] 2024-09-13 10:16:40 -0500
Branch: REL_14_STABLE [0970889e3] 2024-09-13 10:16:40 -0500
Branch: REL_13_STABLE [ef46a73f6] 2024-09-13 10:16:40 -0500
Branch: REL_12_STABLE [e0277d90a] 2024-09-13 10:16:40 -0500
-->
     <para>
      Allow inspection of sequence relations in relevant functions
      of <filename>contrib/pageinspect</filename>
      and <filename>contrib/pgstattuple</filename> (Nathan Bossart, Ayush
      Vatsa)
      <ulink url="&commit_baseurl;e03042a70">&sect;</ulink>
      <ulink url="&commit_baseurl;a63aef5e4">&sect;</ulink>
     </para>

     <para>
      This had been allowed in the past, but it got broken during the
      introduction of non-default access methods for tables.
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [9044fc1d4] 2024-11-06 23:17:18 +1300
Branch: REL_17_STABLE [b7467ab71] 2024-11-06 23:07:34 +1300
Branch: REL_16_STABLE [ee67b73f5] 2024-11-06 23:09:03 +1300
Branch: REL_15_STABLE [19bf81c06] 2024-11-06 23:09:28 +1300
Branch: REL_14_STABLE [0b022ddf3] 2024-11-06 23:09:50 +1300
Branch: REL_13_STABLE [e88d824a4] 2024-11-06 23:10:05 +1300
Branch: REL_12_STABLE [50c1453a3] 2024-11-06 23:10:20 +1300
-->
     <para>
      Fix incorrect LLVM-generated code on ARM64 platforms (Thomas
      Munro, Anthonin Bonnefoy)
      <ulink url="&commit_baseurl;19bf81c06">&sect;</ulink>
     </para>

     <para>
      When using JIT compilation on ARM platforms, the generated code
      could not support relocation distances exceeding 32 bits, allowing
      unlucky placement of generated code to cause server crashes on
      large-memory systems.
     </para>
    </listitem>

    <listitem>
<!--
Author: Nathan Bossart <nathan@postgresql.org>
Branch: master [5d6187d2a] 2024-10-07 13:51:03 -0500
Branch: REL_17_STABLE [a356d23fd] 2024-10-07 13:51:03 -0500
Branch: REL_16_STABLE [8aaf88b63] 2024-10-07 13:51:03 -0500
Branch: REL_15_STABLE [01731eeea] 2024-10-07 13:51:03 -0500
Branch: REL_14_STABLE [5cea7168d] 2024-10-07 13:51:03 -0500
Branch: REL_13_STABLE [b255493ae] 2024-10-07 13:51:03 -0500
Branch: REL_12_STABLE [c91d0af0a] 2024-10-07 13:51:03 -0500
-->
     <para>
      Fix a few places that assumed that process start time (represented
      as a <type>time_t</type>) will fit into a <type>long</type> value
      (Max Johnson, Nathan Bossart)
      <ulink url="&commit_baseurl;01731eeea">&sect;</ulink>
     </para>

     <para>
      On platforms where <type>long</type> is 32 bits (notably Windows),
      this coding would fail after Y2038.  Most of the failures appear
      only cosmetic, but notably <literal>pg_ctl start</literal> would
      hang.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andrew Dunstan <andrew@dunslane.net>
Branch: master [bc46104fc] 2024-09-14 08:47:06 -0400
Branch: REL_17_STABLE Release: REL_17_0 [648397b1d] 2024-09-14 08:48:04 -0400
Branch: REL_16_STABLE [0a0db4631] 2024-09-14 08:50:44 -0400
Branch: REL_15_STABLE [17c35ab23] 2024-09-14 09:17:51 -0400
Branch: REL_14_STABLE [9f7749464] 2024-09-14 09:19:04 -0400
Branch: REL_13_STABLE [f40d9e9f1] 2024-09-14 09:19:53 -0400
Branch: REL_12_STABLE [d94e3b33e] 2024-09-14 09:20:12 -0400
-->
     <para>
      Fix building with Strawberry Perl on Windows (Andrew Dunstan)
      <ulink url="&commit_baseurl;17c35ab23">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Andrew Dunstan <andrew@dunslane.net>
Branch: REL_15_STABLE [d700e8d75] 2024-09-30 11:32:32 -0400
-->
     <para>
      Prevent <quote>missing declaration for inet_pton</quote> compiler
      warning or error when building with MinGW (Thomas Munro, Andrew
      Dunstan)
      <ulink url="&commit_baseurl;d700e8d75">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [502e7bf7f] 2024-10-29 11:49:38 -0400
Branch: REL_17_STABLE [cad65907e] 2024-10-29 11:49:50 -0400
Branch: REL_16_STABLE [a0c8d600b] 2024-10-29 11:49:56 -0400
Branch: REL_15_STABLE [74f70cb86] 2024-10-29 11:50:00 -0400
Branch: REL_14_STABLE [dedced73e] 2024-10-29 11:50:05 -0400
Branch: REL_13_STABLE [8a8486175] 2024-10-29 11:50:10 -0400
Branch: REL_12_STABLE [8f1759c9b] 2024-10-29 11:50:14 -0400
Branch: master [b8ea0f675] 2024-09-14 17:55:02 -0400
Branch: REL_17_STABLE Release: REL_17_0 [6283ff201] 2024-09-14 17:55:02 -0400
Branch: REL_16_STABLE [2abc88958] 2024-09-14 17:55:03 -0400
Branch: REL_15_STABLE [2b94ee58b] 2024-09-14 17:55:03 -0400
Branch: REL_14_STABLE [b27622c90] 2024-09-14 17:55:03 -0400
Branch: REL_13_STABLE [b28b9b19b] 2024-09-14 17:55:03 -0400
Branch: REL_12_STABLE [205813da4] 2024-09-14 17:55:03 -0400
-->
     <para>
      Update time zone data files to <application>tzdata</application>
      release 2024b (Tom Lane)
      <ulink url="&commit_baseurl;74f70cb86">&sect;</ulink>
      <ulink url="&commit_baseurl;2b94ee58b">&sect;</ulink>
     </para>

     <para>
      This <application>tzdata</application> release changes the old
      System-V-compatibility zone names to duplicate the corresponding
      geographic zones; for example <literal>PST8PDT</literal> is now an
      alias for <literal>America/Los_Angeles</literal>.  The main visible
      consequence is that for timestamps before the introduction of
      standardized time zones, the zone is considered to represent local
      mean solar time for the named location.  For example,
      in <literal>PST8PDT</literal>, <type>timestamptz</type> input such
      as <literal>1801-01-01 00:00</literal> would previously have been
      rendered as <literal>1801-01-01 00:00:00-08</literal>, but now it is
      rendered as <literal>1801-01-01 00:00:00-07:52:58</literal>.
     </para>

     <para>
      Also, historical corrections for Mexico, Mongolia, and Portugal.
      Notably, <literal>Asia/Choibalsan</literal> is now an alias
      for <literal>Asia/Ulaanbaatar</literal> rather than being a separate
      zone, mainly because the differences between those zones were found to
      be based on untrustworthy data.
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-15-8">
  <title>Release 15.8</title>

  <formalpara>
  <title>Release date:</title>
  <para>2024-08-08</para>
  </formalpara>

  <para>
   This release contains a variety of fixes from 15.7.
   For information about new features in major release 15, see
   <xref linkend="release-15"/>.
  </para>

  <sect2>
   <title>Migration to Version 15.8</title>

   <para>
    A dump/restore is not required for those running 15.X.
   </para>

   <para>
    However, if you are upgrading from a version earlier than 15.7,
    see <xref linkend="release-15-7"/>.
   </para>
  </sect2>

  <sect2>
   <title>Changes</title>

   <itemizedlist>

    <listitem>
<!--
Author: Masahiko Sawada <msawada@postgresql.org>
Branch: master [66e94448a] 2024-08-05 06:05:33 -0700
Branch: REL_17_STABLE [fdf218f1d] 2024-08-05 06:05:30 -0700
Branch: REL_16_STABLE [6aba85a4b] 2024-08-05 06:05:28 -0700
Branch: REL_15_STABLE [e81e53a0c] 2024-08-05 06:05:25 -0700
Branch: REL_14_STABLE [72ef1675e] 2024-08-05 06:05:23 -0700
Branch: REL_13_STABLE [bbc94abf6] 2024-08-05 06:05:20 -0700
Branch: REL_12_STABLE [79c7a7e29] 2024-08-05 06:05:17 -0700
-->
     <para>
      Prevent unauthorized code execution
      during <application>pg_dump</application> (Masahiko Sawada)
      <ulink url="&commit_baseurl;e81e53a0c">&sect;</ulink>
     </para>

     <para>
      An attacker able to create and drop non-temporary objects could
      inject SQL code that would be executed by a
      concurrent <application>pg_dump</application> session with the
      privileges of the role running <application>pg_dump</application>
      (which is often a superuser).  The attack involves replacing a
      sequence or similar object with a view or foreign table that will
      execute malicious code.  To prevent this, introduce a new server
      parameter <varname>restrict_nonsystem_relation_kind</varname> that
      can disable expansion of non-builtin views as well as access to
      foreign tables, and teach <application>pg_dump</application> to set
      it when available.  Note that the attack is prevented only if
      both <application>pg_dump</application> and the server it is dumping
      from are new enough to have this fix.
     </para>

     <para>
      The <productname>PostgreSQL</productname> Project thanks
      Noah Misch for reporting this problem.
      (CVE-2024-7348)
     </para>
    </listitem>

    <listitem>
<!--
Author: Melanie Plageman <melanieplageman@gmail.com>
Branch: master [83c39a1f7] 2024-07-19 12:04:00 -0400
Branch: REL_17_STABLE [fd4f12df5] 2024-07-19 12:12:03 -0400
Branch: REL_16_STABLE [06bf404cd] 2024-07-19 12:11:41 -0400
Branch: REL_15_STABLE [dc6354c67] 2024-07-19 12:05:51 -0400
Branch: REL_14_STABLE [45ce054c0] 2024-07-19 12:07:53 -0400
-->
     <para>
      Prevent infinite loop in <command>VACUUM</command>
      (Melanie Plageman)
      <ulink url="&commit_baseurl;dc6354c67">&sect;</ulink>
     </para>

     <para>
      After a disconnected standby server with an old running transaction
      reconnected to the primary, it was possible
      for <command>VACUUM</command> on the primary to get confused about
      which tuples are removable, resulting in an infinite loop.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [3dd637f3d] 2024-07-24 12:38:18 +0200
Branch: REL_17_STABLE [2b22543a4] 2024-07-24 12:38:18 +0200
Branch: REL_16_STABLE [084814d88] 2024-07-24 12:38:18 +0200
Branch: REL_15_STABLE [f74fac06c] 2024-07-24 12:38:18 +0200
Branch: REL_14_STABLE [fe1d16f66] 2024-07-24 12:38:18 +0200
Branch: REL_13_STABLE [ed7430975] 2024-07-24 12:38:18 +0200
Branch: REL_12_STABLE [08b6a9ecf] 2024-07-24 12:38:18 +0200
-->
     <para>
      Fix failure after attaching a table as a partition, if the
      table had previously had inheritance children
      (&Aacute;lvaro Herrera)
      <ulink url="&commit_baseurl;f74fac06c">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [839177913] 2024-07-12 12:54:01 +0200
Branch: REL_17_STABLE [30ca4e1ab] 2024-07-12 12:54:01 +0200
Branch: REL_16_STABLE [00a40e33c] 2024-07-12 12:54:01 +0200
Branch: REL_15_STABLE [4ae09c59d] 2024-07-12 12:54:01 +0200
Branch: REL_14_STABLE [66aaa7a71] 2024-07-12 12:54:01 +0200
Branch: REL_13_STABLE [057482569] 2024-07-12 12:54:01 +0200
Branch: REL_12_STABLE [d0054432d] 2024-07-12 12:54:01 +0200
Branch: master [74e12db19] 2024-07-12 13:44:19 +0200
Branch: REL_17_STABLE [0340eefd9] 2024-07-12 13:44:19 +0200
Branch: REL_16_STABLE [34eb37f79] 2024-07-12 13:44:19 +0200
Branch: REL_15_STABLE [9f0f72d89] 2024-07-12 13:44:19 +0200
Branch: REL_14_STABLE [2f5007459] 2024-07-12 13:44:19 +0200
Branch: REL_13_STABLE [7898a494f] 2024-07-12 13:44:19 +0200
Branch: REL_12_STABLE [067cb6c5d] 2024-07-12 13:44:19 +0200
-->
     <para>
      Fix <command>ALTER TABLE DETACH PARTITION</command> for cases
      involving inconsistent index-based constraints
      (&Aacute;lvaro Herrera, Tender Wang)
      <ulink url="&commit_baseurl;4ae09c59d">&sect;</ulink>
      <ulink url="&commit_baseurl;9f0f72d89">&sect;</ulink>
     </para>

     <para>
      When a partitioned table has an index that is not associated with a
      constraint, but a partition has an equivalent index that is, then
      detaching the partition would misbehave, leaving the ex-partition's
      constraint with an incorrect <structfield>coninhcount</structfield>
      value.  This would cause trouble during any further manipulations of
      that constraint.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master Release: REL_17_BR [27162a64b] 2024-06-24 15:56:32 +0200
Branch: REL_16_STABLE [96105ebfe] 2024-06-24 15:56:32 +0200
Branch: REL_15_STABLE [fb0fb0740] 2024-06-24 15:56:32 +0200
Branch: REL_14_STABLE [66e569f50] 2024-06-24 15:56:32 +0200
Branch: master Release: REL_17_BR [c2fab7024] 2024-06-11 11:38:45 +0200
Branch: REL_16_STABLE [bf78abebf] 2024-06-11 11:38:45 +0200
Branch: REL_15_STABLE [03c8cdbb7] 2024-06-11 11:38:45 +0200
Branch: REL_14_STABLE [5dcaefc6a] 2024-06-11 11:38:45 +0200
-->
     <para>
      Fix partition pruning setup during <literal>ALTER TABLE DETACH
      PARTITION CONCURRENTLY</literal> (&Aacute;lvaro Herrera)
      <ulink url="&commit_baseurl;fb0fb0740">&sect;</ulink>
      <ulink url="&commit_baseurl;03c8cdbb7">&sect;</ulink>
     </para>

     <para>
      The executor assumed that no partition could be detached between
      planning and execution of a query on a partitioned table.  This is
      no longer true since the introduction of <literal>DETACH
      PARTITION</literal>'s <literal>CONCURRENTLY</literal> option, making
      it possible for query execution to fail transiently when that is
      used.
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [710207032] 2024-07-13 08:09:33 -0700
Branch: REL_17_STABLE [f5bb46fb2] 2024-07-13 08:09:36 -0700
Branch: REL_16_STABLE [e81deeefc] 2024-07-13 08:09:37 -0700
Branch: REL_15_STABLE [2b4a2a79e] 2024-07-13 08:09:37 -0700
Branch: REL_14_STABLE [2b415e95a] 2024-07-13 08:09:37 -0700
-->
     <para>
      Correctly update a partitioned table's
      <structname>pg_class</structname>.<structfield>reltuples</structfield>
      field to zero after its last child partition is dropped (Noah Misch)
      <ulink url="&commit_baseurl;2b4a2a79e">&sect;</ulink>
     </para>

     <para>
      The first <command>ANALYZE</command> on such a partitioned table
      must update <structfield>relhassubclass</structfield> as well, and
      that caused the <structfield>reltuples</structfield> update to be
      lost.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_17_BR [f535f350c] 2024-05-14 20:19:20 -0400
Branch: REL_16_STABLE [8e0e99972] 2024-05-14 20:19:20 -0400
Branch: REL_15_STABLE [c40e78d23] 2024-05-14 20:19:20 -0400
Branch: REL_14_STABLE [525bd1620] 2024-05-14 20:19:20 -0400
Branch: REL_13_STABLE [e85f641b2] 2024-05-14 20:19:20 -0400
Branch: REL_12_STABLE [70ffb27b2] 2024-05-14 20:19:20 -0400
Branch: master Release: REL_17_BR [751598263] 2024-06-06 15:16:56 -0400
Branch: REL_16_STABLE [bb331af4a] 2024-06-06 15:16:56 -0400
Branch: REL_15_STABLE [5fe43d41d] 2024-06-06 15:16:56 -0400
Branch: REL_14_STABLE [d88dcdf0f] 2024-06-06 15:16:56 -0400
Branch: REL_13_STABLE [9de0ff91a] 2024-06-06 15:16:56 -0400
Branch: REL_12_STABLE [4208f44c9] 2024-06-06 15:16:56 -0400
-->
     <para>
      Fix handling of polymorphic output arguments for procedures
      (Tom Lane)
      <ulink url="&commit_baseurl;c40e78d23">&sect;</ulink>
      <ulink url="&commit_baseurl;5fe43d41d">&sect;</ulink>
     </para>

     <para>
      The SQL <command>CALL</command> statement did not resolve the
      correct data types for such arguments, leading to errors such
      as <quote>cannot display a value of type anyelement</quote>, or even
      outright crashes.  (But <command>CALL</command>
      in <application>PL/pgSQL</application> worked correctly.)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_17_BR [2dc1deaea] 2024-06-07 13:27:26 -0400
Branch: REL_16_STABLE [0d18b8eb4] 2024-06-07 13:27:26 -0400
Branch: REL_15_STABLE [a160e9277] 2024-06-07 13:27:26 -0400
Branch: REL_14_STABLE [0f7d1338c] 2024-06-07 13:27:26 -0400
Branch: REL_13_STABLE [1d4ea1376] 2024-06-07 13:27:26 -0400
Branch: REL_12_STABLE [0be81dd71] 2024-06-07 13:27:26 -0400
-->
     <para>
      Fix behavior of stable functions called from
      a <command>CALL</command> statement's argument list (Tom Lane)
      <ulink url="&commit_baseurl;a160e9277">&sect;</ulink>
     </para>

     <para>
      If the <command>CALL</command> is within an atomic context
      (e.g. there's an outer transaction block), such functions were
      passed the wrong snapshot, causing them to see stale values of rows
      modified since the start of the outer transaction.
     </para>
    </listitem>

    <listitem>
<!--
Author: Nathan Bossart <nathan@postgresql.org>
Branch: master [22b0ccd65] 2024-07-19 11:52:32 -0500
Branch: REL_17_STABLE [3764ee47f] 2024-07-19 11:52:32 -0500
Branch: REL_16_STABLE [34e9dce69] 2024-07-19 11:52:32 -0500
Branch: REL_15_STABLE [b82791c8f] 2024-07-19 11:52:32 -0500
Branch: REL_14_STABLE [e8dfe0430] 2024-07-19 11:52:32 -0500
Branch: REL_13_STABLE [c5321e965] 2024-07-19 11:52:32 -0500
Branch: REL_12_STABLE [4f9628158] 2024-07-19 11:52:32 -0500
-->
     <para>
      Detect integer overflow in <type>money</type> calculations
      (Joseph Koshakow)
      <ulink url="&commit_baseurl;b82791c8f">&sect;</ulink>
     </para>

     <para>
      None of the arithmetic functions for the <type>money</type> type
      checked for overflow before, so they would silently give wrong
      answers for overflowing cases.
     </para>
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [1ff39f4ff] 2024-07-08 17:48:45 +0100
Branch: REL_17_STABLE [7a8977d25] 2024-07-08 17:51:23 +0100
Branch: REL_16_STABLE [f7aec8c1d] 2024-07-08 17:52:52 +0100
Branch: REL_15_STABLE [47ca912de] 2024-07-08 17:54:22 +0100
Branch: REL_14_STABLE [a3c0124f6] 2024-07-08 17:55:31 +0100
Branch: REL_13_STABLE [ece296926] 2024-07-08 17:56:51 +0100
Branch: REL_12_STABLE [8badee787] 2024-07-08 17:58:42 +0100
-->
     <para>
      Fix over-aggressive clamping of the scale argument
      in <function>round(numeric)</function>
      and <function>trunc(numeric)</function> (Dean Rasheed)
      <ulink url="&commit_baseurl;47ca912de">&sect;</ulink>
     </para>

     <para>
      These functions clamped their scale argument to +/-2000, but there
      are valid use-cases for it to be larger; the functions returned
      incorrect results in such cases.  Instead clamp to the actual
      allowed range of type <type>numeric</type>.
     </para>
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master [b181062aa] 2024-07-28 22:22:52 +1200
Branch: REL_17_STABLE [1e020258e] 2024-07-28 22:23:32 +1200
Branch: REL_16_STABLE [6f6b0f193] 2024-07-28 22:23:54 +1200
Branch: REL_15_STABLE [0a80e88d9] 2024-07-28 22:24:15 +1200
-->
     <para>
      Fix result for <function>pg_size_pretty()</function> when applied to
      the smallest possible <type>bigint</type> value (Joseph Koshakow)
      <ulink url="&commit_baseurl;0a80e88d9">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Nathan Bossart <nathan@postgresql.org>
Branch: master Release: REL_17_BR [3cb2f13ac] 2024-05-13 15:53:50 -0500
Branch: REL_16_STABLE [c1664c8ee] 2024-05-13 15:54:04 -0500
Branch: REL_15_STABLE [857d280c6] 2024-05-13 15:54:10 -0500
Branch: REL_14_STABLE [c8714230a] 2024-05-13 15:54:14 -0500
Branch: REL_13_STABLE [09ec5d455] 2024-05-13 15:54:18 -0500
Branch: REL_12_STABLE [2812059d3] 2024-05-13 15:54:23 -0500
-->
     <para>
      Prevent <function>pg_sequence_last_value()</function> from failing
      on unlogged sequences on standby servers and on temporary sequences
      of other sessions (Nathan Bossart)
      <ulink url="&commit_baseurl;857d280c6">&sect;</ulink>
     </para>

     <para>
      Make it return NULL in these cases instead of throwing an error.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_17_BR [56a829621] 2024-06-13 20:35:02 -0400
Branch: REL_16_STABLE [086ecd12b] 2024-06-13 20:35:02 -0400
Branch: REL_15_STABLE [df95c1ec0] 2024-06-13 20:35:03 -0400
Branch: REL_14_STABLE [5912bf77c] 2024-06-13 20:34:43 -0400
Branch: REL_13_STABLE [c7de5a654] 2024-06-13 20:34:43 -0400
Branch: REL_12_STABLE [5e63a6f43] 2024-06-13 20:34:43 -0400
-->
     <para>
      Fix parsing of ignored operators
      in <function>websearch_to_tsquery()</function> (Tom Lane)
      <ulink url="&commit_baseurl;df95c1ec0">&sect;</ulink>
     </para>

     <para>
      Per the manual, punctuation in the input
      of <function>websearch_to_tsquery()</function> is ignored except for
      the special cases of dashes and quotes.  However, parentheses and a
      few other characters appearing immediately before
      an <literal>or</literal> could cause <literal>or</literal> to be
      treated as a data word, rather than as an <literal>OR</literal>
      operator as expected.
     </para>
    </listitem>

    <listitem>
<!--
Author: Nathan Bossart <nathan@postgresql.org>
Branch: master [991f8cf8a] 2024-07-23 21:59:02 -0500
Branch: REL_17_STABLE [657e54a05] 2024-07-23 21:59:02 -0500
Branch: REL_16_STABLE [a57d16865] 2024-07-23 21:59:02 -0500
Branch: REL_15_STABLE [547dd2cbd] 2024-07-23 21:59:02 -0500
Branch: REL_14_STABLE [670fb9f18] 2024-07-23 21:59:02 -0500
Branch: REL_13_STABLE [6c1b71bc6] 2024-07-23 21:59:02 -0500
Branch: REL_12_STABLE [878e8c6be] 2024-07-23 21:59:02 -0500
-->
     <para>
      Detect another integer overflow case while computing new array
      dimensions (Joseph Koshakow)
      <ulink url="&commit_baseurl;547dd2cbd">&sect;</ulink>
     </para>

     <para>
      Reject applying array
      dimensions <literal>[-2147483648:2147483647]</literal> to an empty
      array.  This is closely related to CVE-2023-5869, but appears
      harmless since the array still ends up empty.
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master Release: REL_17_BR [f9f47f0d9] 2024-06-27 19:21:06 -0700
Branch: REL_16_STABLE [e4afd7153] 2024-06-27 19:21:10 -0700
Branch: REL_15_STABLE [b08a4b616] 2024-06-27 19:21:11 -0700
Branch: REL_14_STABLE [af73e37fa] 2024-06-27 19:21:12 -0700
Branch: REL_13_STABLE [7a21306ae] 2024-06-27 19:21:13 -0700
Branch: REL_12_STABLE [11f3815d6] 2024-06-27 19:21:13 -0700
-->
     <para>
      Detect another case of a new catalog cache entry becoming stale
      while detoasting its fields (Noah Misch)
      <ulink url="&commit_baseurl;b08a4b616">&sect;</ulink>
     </para>

     <para>
      An in-place update occurring while we expand out-of-line fields in a
      catalog tuple could be missed, leading to a catalog cache entry that
      lacks the in-place change but is not known to be stale.  This is
      only possible in the <structname>pg_database</structname> catalog,
      so the effects are narrow, but misbehavior is possible.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [220003b9b] 2024-07-20 13:40:15 -0400
Branch: REL_17_STABLE [041a00c48] 2024-07-20 13:40:15 -0400
Branch: REL_16_STABLE [fd958bbbd] 2024-07-20 13:40:15 -0400
Branch: REL_15_STABLE [96953052a] 2024-07-20 13:40:15 -0400
Branch: REL_14_STABLE [0d712ec12] 2024-07-20 13:40:15 -0400
Branch: REL_13_STABLE [461f47948] 2024-07-20 13:40:15 -0400
Branch: REL_12_STABLE [feca6c688] 2024-07-20 13:40:15 -0400
-->
     <para>
      Correctly check updatability of view columns targeted
      by <literal>INSERT</literal> ... <literal>DEFAULT</literal>
      (Tom Lane)
      <ulink url="&commit_baseurl;96953052a">&sect;</ulink>
     </para>

     <para>
      If such a column is non-updatable, we should give an error reporting
      that.  But the check was missed and then later code would report an
      unhelpful error such as <quote>attribute
      number <replaceable>N</replaceable> not found in view
      targetlist</quote>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [f96c2c727] 2024-07-14 13:49:46 -0400
Branch: REL_17_STABLE [cf588e10f] 2024-07-14 13:49:46 -0400
Branch: REL_16_STABLE [8fc487614] 2024-07-14 13:49:46 -0400
Branch: REL_15_STABLE [e7f9f44e3] 2024-07-14 13:49:46 -0400
Branch: REL_14_STABLE [02b4f5e1f] 2024-07-14 13:49:46 -0400
Branch: REL_13_STABLE [b020a866a] 2024-07-14 13:49:46 -0400
Branch: REL_12_STABLE [236b225ed] 2024-07-14 13:49:46 -0400
-->
     <para>
      Avoid reporting an unhelpful internal error for incorrect recursive
      queries (Tom Lane)
      <ulink url="&commit_baseurl;e7f9f44e3">&sect;</ulink>
     </para>

     <para>
      Rearrange the order of error checks so that we throw an on-point
      error when a <command>WITH RECURSIVE</command> query does not have a
      self-reference within the second arm of
      the <literal>UNION</literal>, but does have one self-reference in
      some other place such as <literal>ORDER BY</literal>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master Release: REL_17_BR [f88cdb36c] 2024-06-27 19:21:05 -0700
Branch: REL_16_STABLE [112d05570] 2024-06-27 19:21:09 -0700
Branch: REL_15_STABLE [24561b498] 2024-06-27 19:21:10 -0700
-->
     <para>
      Lock owned sequences during <literal>ALTER TABLE SET
      LOGGED|UNLOGGED</literal> (Noah Misch)
      <ulink url="&commit_baseurl;24561b498">&sect;</ulink>
     </para>

     <para>
      These commands change the persistence of a table's owned sequences
      along with the table, but they failed to acquire lock on the
      sequences while doing so.  This could result in losing the effects
      of concurrent <function>nextval()</function> calls.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_17_BR [e6d0d16ad] 2024-06-20 14:21:36 -0400
Branch: REL_16_STABLE [4f1966676] 2024-06-20 14:21:36 -0400
Branch: REL_15_STABLE [1424c7abc] 2024-06-20 14:21:36 -0400
Branch: REL_14_STABLE [88f3baa06] 2024-06-20 14:21:36 -0400
Branch: REL_13_STABLE [9ce8ee9d3] 2024-06-20 14:21:36 -0400
Branch: REL_12_STABLE [b0037bbef] 2024-06-20 14:21:36 -0400
-->
     <para>
      Don't throw an error if a queued <literal>AFTER</literal> trigger no
      longer exists (Tom Lane)
      <ulink url="&commit_baseurl;1424c7abc">&sect;</ulink>
     </para>

     <para>
      It's possible for a transaction to execute an operation that queues
      a deferred <literal>AFTER</literal> trigger for later execution, and
      then to drop the trigger before that happens.  Formerly this led to
      weird errors such as <quote>could not find
      trigger <replaceable>NNNN</replaceable></quote>.  It seems better to
      silently do nothing if the trigger no longer exists at the time when
      it would have been executed.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_17_BR [76618097a] 2024-06-14 16:20:35 -0400
Branch: REL_16_STABLE [9cf4beb9e] 2024-06-14 16:20:35 -0400
Branch: REL_15_STABLE [1f1eedd3f] 2024-06-14 16:20:35 -0400
Branch: REL_14_STABLE [f3f6a14ce] 2024-06-14 16:20:35 -0400
Branch: REL_13_STABLE [198de7961] 2024-06-14 16:20:35 -0400
Branch: REL_12_STABLE [0a39343ae] 2024-06-14 16:20:35 -0400
-->
     <para>
      Fix failure to remove <structname>pg_init_privs</structname> entries
      for column-level privileges when their table is dropped (Tom Lane)
      <ulink url="&commit_baseurl;1f1eedd3f">&sect;</ulink>
     </para>

     <para>
      If an extension grants some column-level privileges on a table it
      creates, relevant catalog entries would remain behind after the
      extension is dropped.  This was harmless until/unless the table's
      OID was re-used for another relation, when it could interfere with
      what <application>pg_dump</application> dumps for that relation.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_17_BR [915de706d] 2024-06-11 17:57:46 -0400
Branch: REL_16_STABLE [b188e1bf7] 2024-06-11 17:57:46 -0400
Branch: REL_15_STABLE [1d0399b54] 2024-06-11 17:57:46 -0400
Branch: REL_14_STABLE [096f2132c] 2024-06-11 17:57:46 -0400
Branch: REL_13_STABLE [5e8aa32a9] 2024-06-11 17:57:46 -0400
Branch: REL_12_STABLE [9256bf6eb] 2024-06-11 17:57:46 -0400
-->
     <para>
      Fix selection of an arbiter index for <literal>ON CONFLICT</literal>
      when the desired index has expressions or predicates (Tom Lane)
      <ulink url="&commit_baseurl;1d0399b54">&sect;</ulink>
     </para>

     <para>
      If a query using <literal>ON CONFLICT</literal> accesses the target
      table through an updatable view, it could fail with <quote>there is
      no unique or exclusion constraint matching the ON CONFLICT
      specification</quote>, even though a matching index does exist.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_17_BR [7ed8ce8a4] 2024-06-07 14:50:09 -0400
Branch: REL_16_STABLE [8397f161e] 2024-06-07 14:50:09 -0400
Branch: REL_15_STABLE [3c71cb497] 2024-06-07 14:50:09 -0400
Branch: REL_14_STABLE [2dad0f433] 2024-06-07 14:50:09 -0400
Branch: REL_13_STABLE [7c4ac652e] 2024-06-07 14:50:09 -0400
Branch: REL_12_STABLE [b8efd756d] 2024-06-07 14:50:09 -0400
-->
     <para>
      Refuse to modify a temporary table of another session
      with <literal>ALTER TABLE</literal> (Tom Lane)
      <ulink url="&commit_baseurl;3c71cb497">&sect;</ulink>
     </para>

     <para>
      Permissions checks normally would prevent this case from arising,
      but it is possible to reach it by altering a parent table whose
      child is another session's temporary table.  Throw an error if we
      discover that such a child table belongs to another session.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_17_BR [5278668d7] 2024-05-22 17:54:17 -0400
Branch: REL_16_STABLE [2aa90c02d] 2024-05-22 17:54:17 -0400
Branch: REL_15_STABLE [2f3cfcf76] 2024-05-22 17:54:17 -0400
Branch: REL_14_STABLE [1015162c3] 2024-05-22 17:54:17 -0400
-->
     <para>
      Fix handling of extended statistics on expressions
      in <literal>CREATE TABLE LIKE STATISTICS</literal> (Tom Lane)
      <ulink url="&commit_baseurl;2f3cfcf76">&sect;</ulink>
     </para>

     <para>
      The <literal>CREATE</literal> command failed to adjust column
      references in statistics expressions to the possibly-different
      column numbering of the new table.  This resulted in invalid
      statistics objects that would cause problems later.  A typical
      scenario where renumbering columns is needed is when the source
      table contains some dropped columns.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_17_BR [d0d44049d] 2023-07-14 11:41:20 -0400
Branch: master Release: REL_17_BR [779ac2c74] 2024-05-18 14:26:13 -0400
Branch: REL_16_STABLE [ce0d16544] 2024-05-18 14:31:35 -0400
Branch: REL_15_STABLE [4ac385adc] 2024-05-18 14:31:35 -0400
Branch: REL_14_STABLE [5ac340602] 2024-05-18 14:31:35 -0400
Branch: REL_13_STABLE [7f90a5dc3] 2024-05-18 14:31:35 -0400
Branch: REL_12_STABLE [686c995fc] 2024-05-18 14:31:35 -0400
-->
     <para>
      Fix failure to recalculate sub-queries generated
      from <function>MIN()</function> or <function>MAX()</function>
      aggregates (Tom Lane)
      <ulink url="&commit_baseurl;4ac385adc">&sect;</ulink>
     </para>

     <para>
      In some cases the aggregate result computed at one row of the outer
      query could be re-used for later rows when it should not be.  This
      has only been seen to happen when the outer query uses
      <literal>DISTINCT</literal> that is implemented with hash
      aggregation, but other cases may exist.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_17_BR [5d6c64d29] 2024-06-27 14:44:02 -0400
Branch: REL_16_STABLE [07d66d3cc] 2024-06-27 14:44:02 -0400
Branch: REL_15_STABLE [5401e70e4] 2024-06-27 14:44:03 -0400
Branch: REL_14_STABLE [13abc1f66] 2024-06-27 14:44:03 -0400
Branch: REL_13_STABLE [86fac88ee] 2024-06-27 14:44:03 -0400
Branch: REL_12_STABLE [dccda847b] 2024-06-27 14:44:04 -0400
-->
     <para>
      Avoid crashing when a JIT-inlined backend function throws an error
      (Tom Lane)
      <ulink url="&commit_baseurl;5401e70e4">&sect;</ulink>
     </para>

     <para>
      The error state can include pointers into the dynamically loaded
      module holding the JIT-compiled code (for error location strings).
      In some code paths the module could get unloaded before the error
      report is processed, leading to SIGSEGV when the location strings
      are accessed.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [066e8ac6e] 2024-07-06 15:16:13 -0400
Branch: master [6082b3d5d] 2024-07-08 14:04:00 -0400
Branch: master [e7192486d] 2024-07-09 15:01:13 -0400
Branch: master [896cd266f] 2024-07-09 16:31:24 -0400
Branch: REL_17_STABLE [a9747be27] 2024-07-10 20:15:52 -0400
Branch: REL_16_STABLE [f85c91a18] 2024-07-10 20:15:52 -0400
Branch: REL_15_STABLE [f68d6aabb] 2024-07-10 20:15:52 -0400
Branch: REL_14_STABLE [475e1807c] 2024-07-10 20:15:52 -0400
Branch: REL_13_STABLE [48132587d] 2024-07-10 20:15:52 -0400
Branch: REL_12_STABLE [a134baea7] 2024-07-10 20:15:52 -0400
-->
     <para>
      Cope with behavioral changes in <application>libxml2</application>
      version 2.13.x (Erik Wienhold, Tom Lane)
      <ulink url="&commit_baseurl;f68d6aabb">&sect;</ulink>
     </para>

     <para>
      Notably, we now suppress <quote>chunk is not well balanced</quote>
      errors from <application>libxml2</application>, unless that is the
      only reported error.  This is to make error reports consistent
      between 2.13.x and earlier <application>libxml2</application>
      versions.  In earlier versions, that message was almost always
      redundant or outright incorrect, so 2.13.x substantially reduced the
      number of cases in which it's reported.
     </para>
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master Release: REL_17_BR [cbfbda784] 2024-06-27 21:09:58 +0300
Branch: REL_16_STABLE [b5b418b68] 2024-06-27 21:10:27 +0300
Branch: REL_15_STABLE [0e2f3d78b] 2024-06-27 21:10:31 +0300
Branch: REL_14_STABLE [9dbf8ab48] 2024-06-27 21:10:34 +0300
Branch: REL_13_STABLE [e9c8747ee] 2024-06-27 21:08:55 +0300
Branch: REL_12_STABLE [5dea6628b] 2024-06-27 21:09:15 +0300
-->
     <para>
      Fix handling of subtransactions of prepared transactions
      when starting a hot standby server (Heikki Linnakangas)
      <ulink url="&commit_baseurl;0e2f3d78b">&sect;</ulink>
     </para>

     <para>
      When starting a standby's replay at a shutdown checkpoint WAL
      record, transactions that had been prepared but not yet committed on
      the primary are correctly understood as being still in progress.
      But subtransactions of a prepared transaction (created by savepoints
      or <application>PL/pgSQL</application> exception blocks) were not
      accounted for and would be treated as aborted.  That led to
      inconsistency if the prepared transaction was later committed.
     </para>
    </listitem>

    <listitem>
<!--
Author: Masahiko Sawada <msawada@postgresql.org>
Branch: master [bb19b7008] 2024-07-11 22:48:23 +0900
Branch: REL_17_STABLE [068674f4a] 2024-07-11 22:48:21 +0900
Branch: REL_16_STABLE [2f3304ce1] 2024-07-11 22:48:18 +0900
Branch: REL_15_STABLE [aee8c2b95] 2024-07-11 22:48:16 +0900
Branch: REL_14_STABLE [f7d3caf9d] 2024-07-11 22:48:13 +0900
Branch: REL_13_STABLE [cf2c69ec5] 2024-07-11 22:48:10 +0900
Branch: REL_12_STABLE [1b3707587] 2024-07-11 22:48:08 +0900
-->
     <para>
      Prevent incorrect initialization of logical replication slots
      (Masahiko Sawada)
      <ulink url="&commit_baseurl;aee8c2b95">&sect;</ulink>
     </para>

     <para>
      In some cases a replication slot's start point within the WAL stream
      could be set to a point within a transaction, leading to assertion
      failures or incorrect decoding results.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master Release: REL_17_BR [cd312adc5] 2024-06-06 08:47:40 +0900
Branch: REL_16_STABLE [f2c922ff2] 2024-06-06 08:48:17 +0900
Branch: REL_15_STABLE [bfc44da24] 2024-06-06 08:48:21 +0900
-->
     <para>
      Avoid <quote>can only drop stats once</quote> error during
      replication slot creation and drop (Floris Van Nee)
      <ulink url="&commit_baseurl;bfc44da24">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master Release: REL_17_BR [3e53492aa] 2024-06-27 11:35:00 +0530
Branch: REL_16_STABLE [b8f953d8d] 2024-06-27 11:19:57 +0530
Branch: REL_15_STABLE [76fda6140] 2024-06-27 10:43:52 +0530
-->
     <para>
      Fix resource leakage in logical replication WAL sender (Hou Zhijie)
      <ulink url="&commit_baseurl;76fda6140">&sect;</ulink>
     </para>

     <para>
      The walsender process leaked memory when publishing changes to a
      partitioned table whose partitions have row types physically
      different from the partitioned table's.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: REL_17_STABLE [31f8d620b] 2024-07-01 12:21:07 -0400
Branch: REL_16_STABLE [54a7b21b3] 2024-07-01 12:21:07 -0400
Branch: REL_15_STABLE [4df767cf9] 2024-07-01 12:21:07 -0400
Branch: REL_14_STABLE [1608902fc] 2024-07-01 12:21:07 -0400
Branch: REL_13_STABLE [5f86cd70d] 2024-07-01 12:21:07 -0400
Branch: REL_12_STABLE [8565fb6fb] 2024-07-01 12:21:07 -0400
-->
     <para>
      Avoid memory leakage after servicing a notify or sinval interrupt
      (Tom Lane)
      <ulink url="&commit_baseurl;4df767cf9">&sect;</ulink>
     </para>

     <para>
      The processing functions for these events could switch the current
      memory context to TopMemoryContext, resulting in session-lifespan
      leakage of any data allocated before the incorrect setting gets
      replaced.  There were observable leaks associated with (at least)
      encoding conversion of incoming queries and parameters attached to
      Bind messages.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master Release: REL_17_BR [7467939ea] 2024-06-27 09:44:47 +0900
Branch: REL_16_STABLE [6f61d0e7e] 2024-06-27 09:44:51 +0900
Branch: REL_15_STABLE [eb144dfca] 2024-06-27 09:44:55 +0900
-->
     <para>
      Prevent leakage of reference counts for the shared memory block used
      for statistics (Anthonin Bonnefoy)
      <ulink url="&commit_baseurl;eb144dfca">&sect;</ulink>
     </para>

     <para>
      A new backend process attaching to the statistics shared memory
      incremented its reference count, but failed to decrement the count
      when exiting.  After 2<superscript>32</superscript> sessions had
      been created, the reference count would overflow to zero, causing
      failures in all subsequent backend process starts.
     </para>
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master Release: REL_17_BR [b1ffe3ff0] 2024-06-26 23:02:06 +0300
Branch: REL_16_STABLE [e7cbe5a85] 2024-06-26 23:04:36 +0300
Branch: REL_15_STABLE [c809a2b2d] 2024-06-26 23:05:58 +0300
Branch: REL_14_STABLE [4c8e00ae9] 2024-06-26 23:06:12 +0300
-->
     <para>
      Prevent deadlocks and assertion failures during truncation of the
      multixact SLRU log (Heikki Linnakangas)
      <ulink url="&commit_baseurl;c809a2b2d">&sect;</ulink>
     </para>

     <para>
      A process trying to delete SLRU segments could deadlock with the
      checkpointer process.
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [a8458f508] 2024-07-13 14:59:46 +1200
Branch: REL_17_STABLE [3c1c82d40] 2024-07-13 15:02:33 +1200
Branch: REL_16_STABLE [a622095bc] 2024-07-13 15:27:35 +1200
Branch: REL_15_STABLE [5546a834c] 2024-07-13 15:28:38 +1200
Branch: REL_14_STABLE [894b497ac] 2024-07-13 15:43:43 +1200
Branch: REL_13_STABLE [3554d841d] 2024-07-13 15:44:11 +1200
Branch: REL_12_STABLE [ba9fcac72] 2024-07-13 15:45:28 +1200
-->
     <para>
      Avoid possibly missing end-of-input events on Windows sockets
      (Thomas Munro)
      <ulink url="&commit_baseurl;5546a834c">&sect;</ulink>
     </para>

     <para>
      Windows reports an FD_CLOSE event only once after the remote end of
      the connection disconnects.  With unlucky timing, we could miss that
      report and wait indefinitely, or at least until a timeout elapsed,
      expecting more input.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master Release: REL_17_BR [855517307] 2024-05-09 12:45:37 +0900
Branch: REL_16_STABLE [5396a2987] 2024-05-09 12:45:43 +0900
Branch: REL_15_STABLE [8c3f30e67] 2024-05-09 12:45:45 +0900
Branch: REL_14_STABLE [41adf9d96] 2024-05-09 12:45:48 +0900
Branch: REL_13_STABLE [377c25d32] 2024-05-09 12:45:51 +0900
-->
     <para>
      Fix buffer overread in JSON parse error reports for incomplete byte
      sequences (Jacob Champion)
      <ulink url="&commit_baseurl;8c3f30e67">&sect;</ulink>
     </para>

     <para>
      It was possible to walk off the end of the input buffer by a few
      bytes when the last bytes comprise an incomplete multi-byte
      character.  While usually harmless, in principle this could cause a
      crash.
     </para>
    </listitem>

    <listitem>
<!--
Author: Daniel Gustafsson <dgustafsson@postgresql.org>
Branch: master [274bbced8] 2024-07-26 11:09:45 +0200
Branch: REL_17_STABLE [3df7f44a8] 2024-07-26 11:09:45 +0200
Branch: REL_16_STABLE [cc606afce] 2024-07-26 11:09:45 +0200
Branch: REL_15_STABLE [118ec331b] 2024-07-26 11:09:45 +0200
Branch: REL_14_STABLE [ecbb1cd9b] 2024-07-26 11:09:45 +0200
Branch: REL_13_STABLE [1f476bc75] 2024-07-26 11:09:45 +0200
Branch: REL_12_STABLE [32121c077] 2024-07-26 11:09:45 +0200
Branch: master [161c73462] 2024-07-26 16:25:28 +0200
Branch: REL_17_STABLE [1272cfb72] 2024-07-26 16:25:56 +0200
Branch: REL_16_STABLE [83b4a6358] 2024-07-26 16:29:47 +0200
Branch: REL_15_STABLE [970cd5c62] 2024-07-26 14:16:40 +0200
Branch: REL_14_STABLE [51c1b4fd1] 2024-07-26 14:16:40 +0200
Branch: REL_13_STABLE [40e8ea949] 2024-07-26 14:16:40 +0200
Branch: REL_12_STABLE [ac77add23] 2024-07-26 14:16:40 +0200
Branch: REL_16_STABLE [441eba34d] 2024-07-26 16:29:52 +0200
Branch: REL_15_STABLE [ce3045e9b] 2024-07-26 19:09:27 +0200
Branch: REL_14_STABLE [ddd66a629] 2024-07-26 19:09:54 +0200
Branch: REL_13_STABLE [634710dfb] 2024-07-26 19:10:12 +0200
Branch: REL_12_STABLE [e6dd0b863] 2024-07-26 19:10:37 +0200
-->
     <para>
      Disable creation of stateful TLS session tickets by OpenSSL
      (Daniel Gustafsson)
      <ulink url="&commit_baseurl;118ec331b">&sect;</ulink>
      <ulink url="&commit_baseurl;970cd5c62">&sect;</ulink>
      <ulink url="&commit_baseurl;ce3045e9b">&sect;</ulink>
     </para>

     <para>
      This avoids possible failures with clients that think receipt of
      a session ticket means that TLS session resumption is supported.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_17_BR [6dfac2440] 2024-06-13 13:37:49 -0400
Branch: REL_16_STABLE [82a931d3d] 2024-06-13 13:37:49 -0400
Branch: REL_15_STABLE [bf552b1b2] 2024-06-13 13:37:50 -0400
Branch: REL_14_STABLE [1450db793] 2024-06-13 13:37:50 -0400
Branch: REL_13_STABLE [1fa46dba5] 2024-06-13 13:37:50 -0400
Branch: REL_12_STABLE [ec210914c] 2024-06-13 13:37:51 -0400
-->
     <para>
      When replanning a <application>PL/pgSQL</application> <quote>simple
      expression</quote>, check it's still simple (Tom Lane)
      <ulink url="&commit_baseurl;bf552b1b2">&sect;</ulink>
     </para>

     <para>
      Certain fairly-artificial cases, such as dropping a referenced
      function and recreating it as an aggregate, could lead to surprising
      failures such as <quote>unexpected plan node type</quote>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andrew Dunstan <andrew@dunslane.net>
Branch: REL_15_STABLE [f853e23bf] 2024-06-26 07:01:47 -0400
Branch: REL_14_STABLE [20f22e6a6] 2024-06-26 07:24:35 -0400
Branch: REL_13_STABLE [b7374f15b] 2024-06-26 07:25:00 -0400
Branch: REL_12_STABLE [ab46e132f] 2024-06-26 07:25:10 -0400
Branch: REL_11_STABLE [e1541d518] 2024-06-26 07:25:26 -0400
Branch: REL_10_STABLE [320534f8f] 2024-06-26 07:25:35 -0400
Branch: REL9_6_STABLE [12c8faaa7] 2024-06-26 07:29:31 -0400
Branch: REL9_5_STABLE [0536f8e2c] 2024-06-26 07:30:01 -0400
Branch: REL9_4_STABLE [8851d5c3a] 2024-06-26 07:30:06 -0400
Branch: REL9_3_STABLE [8f3be9661] 2024-06-26 07:30:11 -0400
Branch: REL9_2_STABLE [1c4173116] 2024-06-26 07:32:15 -0400
-->
     <para>
      Fix incompatibility between <application>PL/Perl</application> and
      Perl 5.40 (Andrew Dunstan)
      <ulink url="&commit_baseurl;f853e23bf">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_17_BR [d727c5431] 2024-05-09 13:16:34 -0400
Branch: REL_16_STABLE [52ea653aa] 2024-05-09 13:16:21 -0400
Branch: REL_15_STABLE [6e29963ed] 2024-05-09 13:16:21 -0400
Branch: REL_14_STABLE [d39337021] 2024-05-09 13:16:21 -0400
Branch: REL_13_STABLE [272867792] 2024-05-09 13:16:21 -0400
Branch: REL_12_STABLE [157b1e6b4] 2024-05-09 13:16:21 -0400
-->
     <para>
      Fix recursive <type>RECORD</type>-returning
      <application>PL/Python</application> functions (Tom Lane)
      <ulink url="&commit_baseurl;6e29963ed">&sect;</ulink>
     </para>

     <para>
      If we recurse to a new call of the same function that passes a
      different column definition list (<literal>AS</literal> clause), it
      would fail because the inner call would overwrite the outer call's
      idea of what rowtype to return.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_17_BR [c5bec5426] 2024-05-07 18:15:00 -0400
Branch: REL_16_STABLE [be18a12b6] 2024-05-07 18:15:00 -0400
Branch: REL_15_STABLE [363e8c2f9] 2024-05-07 18:15:00 -0400
Branch: REL_14_STABLE [90d39929a] 2024-05-07 18:15:00 -0400
Branch: REL_13_STABLE [abe60b6a0] 2024-05-07 18:15:00 -0400
Branch: REL_12_STABLE [4488142a4] 2024-05-07 18:15:00 -0400
-->
     <para>
      Don't corrupt <application>PL/Python</application>'s
      <literal>TD</literal> dictionary during a recursive trigger call
      (Tom Lane)
      <ulink url="&commit_baseurl;363e8c2f9">&sect;</ulink>
     </para>

     <para>
      If a <application>PL/Python</application>-language trigger caused
      another one to be invoked, the <literal>TD</literal> dictionary
      created for the inner one would overwrite the outer
      one's <literal>TD</literal> dictionary.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_17_BR [b631d0149] 2024-06-04 18:02:13 -0400
Branch: REL_16_STABLE [c236ecc82] 2024-06-04 18:02:13 -0400
Branch: REL_15_STABLE [89ef2aeda] 2024-06-04 18:02:13 -0400
Branch: REL_14_STABLE [1488dee08] 2024-06-04 18:02:13 -0400
Branch: REL_13_STABLE [dda633a03] 2024-06-04 18:02:13 -0400
Branch: REL_12_STABLE [30487423c] 2024-06-04 18:02:13 -0400
-->
     <para>
      Fix <application>PL/Tcl</application>'s reporting of invalid list
      syntax in the result of a function returning tuple (Erik Wienhold,
      Tom Lane)
      <ulink url="&commit_baseurl;89ef2aeda">&sect;</ulink>
     </para>

     <para>
      Such a case could result in a crash, or in emission of misleading
      context information that actually refers to the previous Tcl error.
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
Branch: master [1e666fd7c] 2024-07-28 09:23:24 +0200
Branch: REL_17_STABLE [821fbd63e] 2024-07-28 10:19:57 +0200
Branch: REL_16_STABLE [c53016860] 2024-07-28 09:25:03 +0200
Branch: REL_15_STABLE [6ddc8556c] 2024-07-28 09:25:52 +0200
Branch: REL_14_STABLE [95e805e9c] 2024-07-28 09:26:21 +0200
Branch: REL_13_STABLE [da5d7a771] 2024-07-28 09:26:39 +0200
Branch: REL_12_STABLE [407048999] 2024-07-28 09:26:48 +0200
-->
     <para>
      Avoid non-thread-safe usage of <function>strerror()</function>
      in <application>libpq</application> (Peter Eisentraut)
      <ulink url="&commit_baseurl;6ddc8556c">&sect;</ulink>
     </para>

     <para>
      Certain error messages returned by OpenSSL could become garbled in
      multi-threaded applications.
     </para>
    </listitem>

    <listitem>
<!--
Author: Daniel Gustafsson <dgustafsson@postgresql.org>
Branch: master Release: REL_17_BR [a8f87d5d2] 2024-05-15 22:48:51 +0200
Branch: REL_16_STABLE [0ae05c18e] 2024-05-15 22:48:51 +0200
Branch: REL_15_STABLE [e6fc3b70d] 2024-05-15 22:48:51 +0200
-->
     <para>
      Avoid memory leak within <application>pg_dump</application> during a
      binary upgrade (Daniel Gustafsson)
      <ulink url="&commit_baseurl;e6fc3b70d">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_17_BR [c1aea206e] 2024-05-07 18:22:52 -0400
Branch: REL_16_STABLE [5dce8ce0a] 2024-05-07 18:23:01 -0400
Branch: REL_15_STABLE [6a458d93b] 2024-05-07 18:23:07 -0400
Branch: REL_14_STABLE [52b23b4e1] 2024-05-07 18:23:11 -0400
Branch: REL_13_STABLE [b99dc6694] 2024-05-07 18:23:15 -0400
Branch: REL_12_STABLE [a3c00ab15] 2024-05-07 18:23:20 -0400
-->
     <para>
      Ensure that <literal>pg_restore</literal> <option>-l</option>
      reports dependent TOC entries correctly (Tom Lane)
      <ulink url="&commit_baseurl;6a458d93b">&sect;</ulink>
     </para>

     <para>
      If <option>-l</option> was specified together with selective-restore
      options such as <option>-n</option> or <option>-N</option>,
      dependent TOC entries such as comments would be omitted from the
      listing, even when an actual restore would have selected them.
     </para>
    </listitem>

    <listitem>
<!--
Author: Etsuro Fujita <efujita@postgresql.org>
Branch: master [5c571a34d] 2024-07-19 13:15:00 +0900
Branch: REL_17_STABLE [935fe79ea] 2024-07-19 13:15:01 +0900
Branch: REL_16_STABLE [d97f2ee50] 2024-07-19 13:15:03 +0900
Branch: REL_15_STABLE [f39f3e0fb] 2024-07-19 13:15:05 +0900
-->
     <para>
      Avoid <quote>cursor can only scan forward</quote> error
      in <filename>contrib/postgres_fdw</filename> (Etsuro Fujita)
      <ulink url="&commit_baseurl;f39f3e0fb">&sect;</ulink>
     </para>

     <para>
      This error could occur if the remote server is v15 or later
      and a foreign table is mapped to a non-trivial remote view.
     </para>
    </listitem>

    <listitem>
<!--
Author: Etsuro Fujita <efujita@postgresql.org>
Branch: master Release: REL_17_BR [8cfbac149] 2024-06-07 17:45:00 +0900
Branch: REL_16_STABLE [8405d5a37] 2024-06-07 17:45:02 +0900
Branch: REL_15_STABLE [b33c141cc] 2024-06-07 17:45:04 +0900
Branch: REL_14_STABLE [269e2c391] 2024-06-07 17:45:06 +0900
Branch: REL_13_STABLE [2b461efc5] 2024-06-07 17:45:08 +0900
-->
     <para>
      In <filename>contrib/postgres_fdw</filename>, do not
      send <literal>FETCH FIRST WITH TIES</literal> clauses to the remote
      server (Japin Li)
      <ulink url="&commit_baseurl;b33c141cc">&sect;</ulink>
     </para>

     <para>
      The remote server might not implement this clause, or might
      interpret it differently than we would locally, so don't risk
      attempting remote execution.
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [2a5ef0983] 2024-07-06 10:27:16 +1200
Branch: REL_17_STABLE [9c273679b] 2024-07-06 11:23:40 +1200
Branch: REL_16_STABLE [31423bc44] 2024-07-06 11:18:29 +1200
Branch: REL_15_STABLE [467d77bb1] 2024-07-06 10:53:13 +1200
Branch: REL_14_STABLE [c2342a925] 2024-07-06 10:44:41 +1200
Branch: REL_13_STABLE [440aedc0f] 2024-07-06 10:39:10 +1200
Branch: REL_12_STABLE [274a8195d] 2024-07-06 10:30:03 +1200
-->
     <para>
      Avoid clashing with
      system-provided <filename>&lt;regex.h&gt;</filename> headers
      (Thomas Munro)
      <ulink url="&commit_baseurl;467d77bb1">&sect;</ulink>
     </para>

     <para>
      This fixes a compilation failure on macOS version 15 and up.
     </para>
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master Release: REL_17_BR [aa901a37c] 2024-06-19 10:20:24 +1200
Branch: REL_16_STABLE [6143c9c03] 2024-06-19 10:21:00 +1200
Branch: REL_15_STABLE [27c6242a0] 2024-06-19 10:21:26 +1200
Branch: REL_14_STABLE [dae9f16aa] 2024-06-19 10:21:52 +1200
-->
     <para>
      Fix otherwise-harmless assertion failure in Memoize cost estimation
      (David Rowley)
      <ulink url="&commit_baseurl;27c6242a0">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_17_BR [92c49d106] 2024-06-17 14:30:59 -0400
Branch: REL_16_STABLE [06f81fed3] 2024-06-17 14:30:59 -0400
Branch: REL_15_STABLE [f55083319] 2024-06-17 14:30:59 -0400
Branch: REL_14_STABLE [e4a55378f] 2024-06-17 14:30:59 -0400
Branch: REL_13_STABLE [507a900ad] 2024-06-17 14:30:59 -0400
Branch: REL_12_STABLE [3e3e2ebea] 2024-06-17 14:30:59 -0400
-->
     <para>
      Fix otherwise-harmless assertion failures in <literal>REINDEX
      CONCURRENTLY</literal> applied to an SP-GiST index (Tom Lane)
      <ulink url="&commit_baseurl;f55083319">&sect;</ulink>
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-15-7">
  <title>Release 15.7</title>

  <formalpara>
  <title>Release date:</title>
  <para>2024-05-09</para>
  </formalpara>

  <para>
   This release contains a variety of fixes from 15.6.
   For information about new features in major release 15, see
   <xref linkend="release-15"/>.
  </para>

  <sect2>
   <title>Migration to Version 15.7</title>

   <para>
    A dump/restore is not required for those running 15.X.
   </para>

   <para>
    However, a security vulnerability was found in the system
    views <structname>pg_stats_ext</structname>
    and <structname>pg_stats_ext_exprs</structname>, potentially allowing
    authenticated database users to see data they shouldn't.  If this is
    of concern in your installation, follow the steps in the first
    changelog entry below to rectify it.
   </para>

   <para>
    Also, if you are upgrading from a version earlier than 15.6,
    see <xref linkend="release-15-6"/>.
   </para>
  </sect2>

  <sect2>
   <title>Changes</title>

   <itemizedlist>

    <listitem>
<!--
Author: Nathan Bossart <nathan@postgresql.org>
Branch: master [521a7156a] 2024-05-06 09:00:00 -0500
Branch: REL_16_STABLE [2485a85e9] 2024-05-06 09:00:07 -0500
Branch: REL_15_STABLE [9cc2b6289] 2024-05-06 09:00:13 -0500
Branch: REL_14_STABLE [c3425383b] 2024-05-06 09:00:19 -0500
-->
     <para>
      Restrict visibility of <structname>pg_stats_ext</structname> and
      <structname>pg_stats_ext_exprs</structname> entries to the table
      owner (Nathan Bossart)
      <ulink url="&commit_baseurl;9cc2b6289">&sect;</ulink>
     </para>

     <para>
      These views failed to hide statistics for expressions that involve
      columns the accessing user does not have permission to read.  View
      columns such as <structfield>most_common_vals</structfield> might
      expose security-relevant data.  The potential interactions here are
      not fully clear, so in the interest of erring on the side of safety,
      make rows in these views visible only to the owner of the associated
      table.
     </para>

     <para>
      The <productname>PostgreSQL</productname> Project thanks
      Lukas Fittl for reporting this problem.
      (CVE-2024-4317)
     </para>

     <para>
      By itself, this fix will only fix the behavior in newly initdb'd
      database clusters.  If you wish to apply this change in an existing
      cluster, you will need to do the following:
     </para>

     <procedure>
      <step>
       <para>
        Find the SQL script <filename>fix-CVE-2024-4317.sql</filename> in
        the <replaceable>share</replaceable> directory of
        the <productname>PostgreSQL</productname> installation (typically
        located someplace like <filename>/usr/share/postgresql/</filename>).
        Be sure to use the script appropriate to
        your <productname>PostgreSQL</productname> major version.
        If you do not see this file, either your version is not vulnerable
        (only v14&ndash;v16 are affected) or your minor version is too
        old to have the fix.
       </para>
      </step>

      <step>
       <para>
        In <emphasis>each</emphasis> database of the cluster, run
        the <filename>fix-CVE-2024-4317.sql</filename> script as superuser.
        In <application>psql</application> this would look like
<programlisting>
\i /usr/share/postgresql/fix-CVE-2024-4317.sql
</programlisting>
        (adjust the file path as appropriate).  Any error probably indicates
        that you've used the wrong script version.  It will not hurt to run
        the script more than once.
       </para>
      </step>

      <step>
       <para>
        Do not forget to include the <literal>template0</literal>
        and <literal>template1</literal> databases, or the vulnerability
        will still exist in databases you create later.  To
        fix <literal>template0</literal>, you'll need to temporarily make
        it accept connections.  Do that with
<programlisting>
ALTER DATABASE template0 WITH ALLOW_CONNECTIONS true;
</programlisting>
        and then after fixing <literal>template0</literal>, undo it with
<programlisting>
ALTER DATABASE template0 WITH ALLOW_CONNECTIONS false;
</programlisting>
       </para>
      </step>
     </procedure>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [b4a71cf65] 2024-03-14 14:57:16 -0400
Branch: REL_16_STABLE [52898c63e] 2024-03-14 14:57:16 -0400
Branch: REL_15_STABLE [7c61d2342] 2024-03-14 14:57:16 -0400
Branch: REL_14_STABLE [3621ffd9f] 2024-03-14 14:57:16 -0400
Branch: REL_13_STABLE [0200398dd] 2024-03-14 14:57:16 -0400
Branch: REL_12_STABLE [82c87af7a] 2024-03-14 14:57:16 -0400
-->
     <para>
      Fix <command>INSERT</command> from
      multiple <command>VALUES</command> rows into a target column that is
      a domain over an array or composite type (Tom Lane)
      <ulink url="&commit_baseurl;7c61d2342">&sect;</ulink>
     </para>

     <para>
      Such cases would either fail with surprising complaints about
      mismatched datatypes, or insert unexpected coercions that could lead
      to odd results.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [4989ce726] 2024-02-21 17:18:52 +0100
Branch: REL_16_STABLE [a3f5d2056] 2024-02-21 17:18:52 +0100
Branch: REL_15_STABLE [90ad85db6] 2024-02-21 17:18:52 +0100
-->
     <para>
      Require <literal>SELECT</literal> privilege on the target table
      for <command>MERGE</command> with a <literal>DO NOTHING</literal>
      clause (&Aacute;lvaro Herrera)
      <ulink url="&commit_baseurl;90ad85db6">&sect;</ulink>
     </para>

     <para>
      <literal>SELECT</literal> privilege would be required in all
      practical cases anyway, but require it even if the query reads no
      columns of the target table.  This avoids an edge case in
      which <command>MERGE</command> would require no privileges whatever,
      which seems undesirable even when it's a do-nothing command.
     </para>
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [29ef1dd19] 2024-03-07 09:57:02 +0000
Branch: REL_16_STABLE [dd73d10ad] 2024-03-07 09:55:39 +0000
Branch: REL_15_STABLE [b5c645d2a] 2024-03-07 09:53:31 +0000
-->
     <para>
      Fix handling of self-modified tuples in <command>MERGE</command>
      (Dean Rasheed)
      <ulink url="&commit_baseurl;b5c645d2a">&sect;</ulink>
     </para>

     <para>
      Throw an error if a target row joins to more than one source row, as
      required by the SQL standard.  (The previous coding could silently
      ignore this condition if a concurrent update was involved.)  Also,
      throw a non-misleading error if a target row is already updated by a
      later command in the current transaction, thanks to
      a <literal>BEFORE</literal> trigger or a volatile function used in
      the query.
     </para>
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master [4c2369ac5] 2024-02-20 12:49:37 +1300
Branch: REL_16_STABLE [fb95cc72b] 2024-02-20 12:50:09 +1300
Branch: REL_15_STABLE [1b3495e29] 2024-02-20 12:50:34 +1300
Branch: REL_14_STABLE [f9c8f7ccd] 2024-02-20 12:50:57 +1300
Branch: REL_13_STABLE [3850fcca6] 2024-02-20 12:51:17 +1300
Branch: REL_12_STABLE [3ffcd24c2] 2024-02-20 12:51:38 +1300
-->
     <para>
      Fix incorrect pruning of NULL partition when a table is partitioned
      on a boolean column and the query has a boolean <literal>IS
      NOT</literal> clause (David Rowley)
      <ulink url="&commit_baseurl;1b3495e29">&sect;</ulink>
     </para>

     <para>
      A NULL value satisfies a clause such
      as <literal><replaceable>boolcol</replaceable> IS NOT
      FALSE</literal>, so pruning away a partition containing NULLs
      yielded incorrect answers.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [fad3b5b5a] 2024-03-26 15:28:31 -0400
Branch: REL_16_STABLE [7445f0928] 2024-03-26 15:28:16 -0400
Branch: REL_15_STABLE [b48eda4e5] 2024-03-26 15:28:16 -0400
Branch: REL_14_STABLE [66bbad581] 2024-03-26 15:28:16 -0400
Branch: REL_13_STABLE [97de2a159] 2024-03-26 15:28:16 -0400
Branch: REL_12_STABLE [a8b740868] 2024-03-26 15:28:16 -0400
-->
     <para>
      Make <command>ALTER FOREIGN TABLE SET SCHEMA</command> move any
      owned sequences into the new schema (Tom Lane)
      <ulink url="&commit_baseurl;b48eda4e5">&sect;</ulink>
     </para>

     <para>
      Moving a regular table to a new schema causes any sequences owned by
      the table to be moved to that schema too (along with indexes and
      constraints).  This was overlooked for foreign tables, however.
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
Branch: master [6743c5ae6] 2024-02-09 08:09:22 +0100
Branch: REL_16_STABLE [86d2b434c] 2024-02-09 08:09:59 +0100
Branch: REL_15_STABLE [d17a3a4c6] 2024-02-09 08:15:27 +0100
-->
     <para>
      Make <command>ALTER TABLE ... ADD COLUMN</command> create
      identity/serial sequences with the same persistence as their owning
      tables (Peter Eisentraut)
      <ulink url="&commit_baseurl;d17a3a4c6">&sect;</ulink>
     </para>

     <para>
      <command>CREATE UNLOGGED TABLE</command> will make any owned
      sequences be unlogged too.  <command>ALTER TABLE</command> missed
      that consideration, so that an added identity column would have a
      logged sequence, which seems pointless.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [91e7115b1] 2024-05-02 17:36:31 -0400
Branch: REL_16_STABLE [11d40a44b] 2024-05-02 17:36:31 -0400
Branch: REL_15_STABLE [5f4a1a0a7] 2024-05-02 17:36:31 -0400
Branch: master [42b041243] 2024-04-28 14:34:21 -0400
Branch: REL_16_STABLE [b19255ca6] 2024-04-28 14:34:21 -0400
Branch: REL_15_STABLE [9b41d1d63] 2024-04-28 14:34:21 -0400
Branch: REL_14_STABLE [617a23927] 2024-04-28 14:34:21 -0400
-->
     <para>
      Improve <command>ALTER TABLE ... ALTER COLUMN TYPE</command>'s error
      message when there is a dependent function or publication (Tom Lane)
      <ulink url="&commit_baseurl;5f4a1a0a7">&sect;</ulink>
      <ulink url="&commit_baseurl;9b41d1d63">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [8c239ee15] 2024-04-21 21:21:26 +0200
Branch: REL_16_STABLE [9e6faeb32] 2024-04-21 21:21:55 +0200
Branch: REL_15_STABLE [276b7888f] 2024-04-21 21:22:11 +0200
-->
     <para>
      In <command>CREATE DATABASE</command>, recognize strategy keywords
      case-insensitively for consistency with other options (Tomas Vondra)
      <ulink url="&commit_baseurl;276b7888f">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master [0960ae196] 2024-03-18 14:03:58 +0200
Branch: REL_16_STABLE [1f4eb7342] 2024-03-18 14:04:13 +0200
Branch: REL_15_STABLE [d3d95f583] 2024-03-18 14:04:17 +0200
Branch: REL_14_STABLE [262757b73] 2024-03-18 14:04:19 +0200
Branch: REL_13_STABLE [992189a3e] 2024-03-18 14:04:24 +0200
Branch: REL_12_STABLE [f3e4581ac] 2024-03-18 14:04:28 +0200
-->
     <para>
      Fix <command>EXPLAIN</command>'s counting of heap pages accessed by
      a bitmap heap scan (Melanie Plageman)
      <ulink url="&commit_baseurl;d3d95f583">&sect;</ulink>
     </para>

     <para>
      Previously, heap pages that contain no visible tuples were not
      counted; but it seems more consistent to count all pages returned by
      the bitmap index scan.
     </para>
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [33e729c51] 2024-03-17 10:17:11 +0000
Branch: REL_16_STABLE [34c854b93] 2024-03-17 10:19:31 +0000
Branch: REL_15_STABLE [89ee14a2f] 2024-03-17 10:20:20 +0000
-->
     <para>
      Fix <command>EXPLAIN</command>'s output for subplans
      in <command>MERGE</command> (Dean Rasheed)
      <ulink url="&commit_baseurl;89ee14a2f">&sect;</ulink>
     </para>

     <para>
      <command>EXPLAIN</command> would sometimes fail to properly display
      subplan Params referencing variables in other parts of the plan tree.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [6faca9ae2] 2024-04-02 14:59:32 -0400
Branch: REL_16_STABLE [cbfbb14bd] 2024-04-02 14:59:04 -0400
Branch: REL_15_STABLE [4fb56a734] 2024-04-02 14:59:04 -0400
Branch: REL_14_STABLE [ca392df8d] 2024-04-02 14:59:04 -0400
Branch: REL_13_STABLE [4afc2c219] 2024-04-02 14:59:04 -0400
Branch: REL_12_STABLE [f5d9212e5] 2024-04-02 14:59:04 -0400
-->
     <para>
      Avoid deadlock during removal of orphaned temporary tables
      (Mikhail Zhilin)
      <ulink url="&commit_baseurl;4fb56a734">&sect;</ulink>
     </para>

     <para>
      If the session that creates a temporary table crashes without
      removing the table, autovacuum will eventually try to remove the
      orphaned table.  However, an incoming session that's been assigned
      the same temporary namespace will do that too.  If a temporary table
      has a dependency (such as an owned sequence) then a deadlock could
      result between these two cleanup attempts.
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [f65ab862e] 2024-04-29 10:24:56 -0700
Branch: REL_16_STABLE [92685c389] 2024-04-29 10:24:59 -0700
Branch: REL_15_STABLE [7c5915c4b] 2024-04-29 10:24:59 -0700
Branch: REL_14_STABLE [2ca19aa81] 2024-04-29 10:25:00 -0700
Branch: REL_13_STABLE [70cadfba0] 2024-04-29 10:25:00 -0700
Branch: REL_12_STABLE [f222349c4] 2024-04-29 10:25:00 -0700
-->
     <para>
      Avoid race condition while examining per-relation frozen-XID values
      (Noah Misch)
      <ulink url="&commit_baseurl;7c5915c4b">&sect;</ulink>
     </para>

     <para>
      <command>VACUUM</command>'s computation of per-database frozen-XID
      values from per-relation values could get confused by a concurrent
      update of those values by another <command>VACUUM</command>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Masahiko Sawada <msawada@postgresql.org>
Branch: master [5cd72cc0c] 2024-05-01 12:34:06 +0900
Branch: REL_16_STABLE [f199436c1] 2024-05-01 12:34:04 +0900
Branch: REL_15_STABLE [faba2f8f3] 2024-05-01 12:34:01 +0900
-->
     <para>
      Fix buffer usage reporting for parallel vacuuming (Anthonin Bonnefoy)
      <ulink url="&commit_baseurl;faba2f8f3">&sect;</ulink>
     </para>

     <para>
      Buffer accesses performed by parallel workers were not getting
      counted in the statistics reported in <literal>VERBOSE</literal>
      mode.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: REL_15_STABLE [bf379b555] 2024-04-30 15:22:55 -0400
Branch: REL_14_STABLE [51189f98a] 2024-04-30 15:22:55 -0400
Branch: REL_13_STABLE [1ee22d1e8] 2024-04-30 15:22:55 -0400
Branch: REL_12_STABLE [56d30fb10] 2024-04-30 15:22:56 -0400
-->
     <para>
      Disallow converting a table to a view within an outer SQL command
      that is using that table (Tom Lane)
      <ulink url="&commit_baseurl;bf379b555">&sect;</ulink>
     </para>

     <para>
      This avoids possible crashes.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [03107b4ed] 2024-04-16 11:22:51 -0400
Branch: REL_16_STABLE [91800af13] 2024-04-16 11:03:43 -0400
Branch: REL_15_STABLE [5aacfa64e] 2024-04-16 11:22:39 -0400
Branch: REL_14_STABLE [ab2402268] 2024-04-16 11:22:39 -0400
Branch: REL_13_STABLE [d9e4ee74f] 2024-04-16 11:22:39 -0400
Branch: REL_12_STABLE [f502849d4] 2024-04-16 11:22:39 -0400
-->
     <para>
      Ensure that join conditions generated from equivalence classes are
      applied at the correct plan level (Tom Lane)
      <ulink url="&commit_baseurl;5aacfa64e">&sect;</ulink>
     </para>

     <para>
      In versions before <productname>PostgreSQL</productname> 16, it was
      possible for generated conditions to be evaluated below outer joins
      when they should be evaluated above (after) the outer join, leading
      to incorrect query results.  All versions have a similar hazard when
      considering joins to <command>UNION ALL</command> trees that have
      constant outputs for the join column in
      some <command>SELECT </command> arms.
     </para>
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: REL_16_STABLE [9d36b883b] 2024-05-01 16:35:05 +1200
Branch: REL_15_STABLE [7e5d20bbd] 2024-05-01 16:35:37 +1200
-->
     <para>
      Prevent potentially-incorrect optimization of some window functions
      (David Rowley)
      <ulink url="&commit_baseurl;7e5d20bbd">&sect;</ulink>
     </para>

     <para>
      Disable <quote>run condition</quote> optimization
      of <function>ntile()</function> and <function>count()</function>
      with non-constant arguments.  This avoids possible misbehavior with
      sub-selects, typically leading to errors like <quote>WindowFunc not
      found in subplan target lists</quote>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [a767cdc84] 2024-03-27 13:39:03 -0400
Branch: REL_16_STABLE [a94f51a7b] 2024-03-27 13:39:03 -0400
Branch: REL_15_STABLE [03561a6c7] 2024-03-27 13:39:03 -0400
Branch: REL_14_STABLE [0d30e48c2] 2024-03-27 13:39:03 -0400
Branch: REL_13_STABLE [de3c5b187] 2024-03-27 13:39:03 -0400
Branch: REL_12_STABLE [25675c474] 2024-03-27 13:39:03 -0400
-->
     <para>
      Avoid unnecessary use of moving-aggregate mode with a non-moving
      window frame (Vallimaharajan G)
      <ulink url="&commit_baseurl;03561a6c7">&sect;</ulink>
     </para>

     <para>
      When a plain aggregate is used as a window function, and the window
      frame start is specified as <literal>UNBOUNDED PRECEDING</literal>,
      the frame's head cannot move so we do not need to use the special
      (and more expensive) moving-aggregate mode.  This optimization was
      intended all along, but due to a coding error it never triggered.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [a6b2a51e1] 2024-02-23 15:21:53 -0500
Branch: REL_16_STABLE [ef0333e67] 2024-02-23 15:21:53 -0500
Branch: REL_15_STABLE [37bbe3d3a] 2024-02-23 15:21:53 -0500
Branch: REL_14_STABLE [cbeb45527] 2024-02-23 15:21:53 -0500
Branch: REL_13_STABLE [9061fd23c] 2024-02-23 15:21:53 -0500
Branch: REL_12_STABLE [cf807eba5] 2024-02-23 15:21:53 -0500
-->
     <para>
      Avoid use of already-freed data while planning partition-wise joins
      under GEQO (Tom Lane)
      <ulink url="&commit_baseurl;37bbe3d3a">&sect;</ulink>
     </para>

     <para>
      This would typically end in a crash or unexpected error message.
     </para>
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master [e62984647] 2024-03-11 18:19:56 +1300
Branch: REL_16_STABLE [348233cb1] 2024-03-11 18:20:39 +1300
Branch: REL_15_STABLE [74530804f] 2024-03-11 18:21:23 +1300
Branch: REL_14_STABLE [72b8507db] 2024-03-11 18:21:48 +1300
-->
     <para>
      Avoid freeing still-in-use data in Memoize (Tender Wang, Andrei
      Lepikhov)
      <ulink url="&commit_baseurl;74530804f">&sect;</ulink>
     </para>

     <para>
      In production builds this error frequently didn't cause any
      problems, as the freed data would most likely not get overwritten
      before it was used.
     </para>
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master [a37a3e2b3] 2024-03-05 16:17:02 +1300
Branch: REL_16_STABLE [ac7e6a01c] 2024-03-05 16:17:53 +1300
Branch: REL_15_STABLE [164fe7a6e] 2024-03-05 16:18:19 +1300
Branch: REL_14_STABLE [0c2dda109] 2024-03-05 16:18:42 +1300
Branch: REL_13_STABLE [421dfb41a] 2024-03-05 16:19:05 +1300
Branch: REL_12_STABLE [94246405d] 2024-03-05 16:19:26 +1300
-->
     <para>
      Fix incorrectly-reported statistics kind codes in <quote>requested
      statistics kind <replaceable>X</replaceable> is not yet
      built</quote> error messages (David Rowley)
      <ulink url="&commit_baseurl;164fe7a6e">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [e0df80828] 2024-04-15 12:56:56 -0400
Branch: REL_16_STABLE [cc1eb6a3c] 2024-04-15 12:56:56 -0400
Branch: REL_15_STABLE [09989ba84] 2024-04-15 12:56:56 -0400
Branch: REL_14_STABLE [78e81e14d] 2024-04-15 12:56:56 -0400
Branch: REL_13_STABLE [b6e21cef7] 2024-04-15 12:56:56 -0400
Branch: REL_12_STABLE [e0970862e] 2024-04-15 12:56:56 -0400
Branch: master [2ed8f9a01] 2024-03-06 14:41:13 -0500
Branch: REL_16_STABLE [1b3029be5] 2024-03-06 14:41:13 -0500
Branch: REL_15_STABLE [3b671dcf5] 2024-03-06 14:41:13 -0500
Branch: REL_14_STABLE [a595c3075] 2024-03-06 14:41:13 -0500
Branch: REL_13_STABLE [d769f9d97] 2024-03-06 14:41:13 -0500
Branch: REL_12_STABLE [466376c9f] 2024-03-06 14:41:13 -0500
-->
     <para>
      Be more careful with <type>RECORD</type>-returning functions
      in <literal>FROM</literal> (Tom Lane)
      <ulink url="&commit_baseurl;09989ba84">&sect;</ulink>
      <ulink url="&commit_baseurl;3b671dcf5">&sect;</ulink>
     </para>

     <para>
      The output columns of such a function call must be defined by
      an <literal>AS</literal> clause that specifies the column names and
      data types.  If the actual function output value doesn't match that,
      an error is supposed to be thrown at runtime.  However, some code
      paths would examine the actual value prematurely, and potentially
      issue strange errors or suffer assertion failures if it doesn't
      match expectations.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [6ee3261e9] 2024-03-12 18:16:25 -0400
Branch: REL_16_STABLE [40d1bdeb7] 2024-03-12 18:16:10 -0400
Branch: REL_15_STABLE [6f66fadad] 2024-03-12 18:16:10 -0400
Branch: REL_14_STABLE [649bbba11] 2024-03-12 18:16:10 -0400
Branch: REL_13_STABLE [28184f039] 2024-03-12 18:16:10 -0400
Branch: REL_12_STABLE [dc1503d5b] 2024-03-12 18:16:10 -0400
-->
     <para>
      Fix confusion about the return rowtype of SQL-language procedures
      (Tom Lane)
      <ulink url="&commit_baseurl;6f66fadad">&sect;</ulink>
     </para>

     <para>
      A procedure implemented in SQL language that returns a single
      composite-type column would cause an assertion failure or core dump.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alexander Korotkov <akorotkov@postgresql.org>
Branch: master [d57b7cc33] 2024-02-16 16:02:00 +0200
Branch: master [75bcba6cb] 2024-02-21 02:51:41 +0200
Branch: REL_16_STABLE [760767182] 2024-03-11 03:06:55 +0200
Branch: REL_15_STABLE [84788ee5b] 2024-03-11 03:06:45 +0200
Branch: REL_14_STABLE [84cc1a552] 2024-03-11 03:06:15 +0200
Branch: REL_13_STABLE [445c7e38f] 2024-03-11 03:06:10 +0200
Branch: REL_12_STABLE [98bfb7558] 2024-03-11 02:53:07 +0200
-->
     <para>
      Add protective stack depth checks to some recursive functions
      (Egor Chindyaskin)
      <ulink url="&commit_baseurl;84788ee5b">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [d163fdbfe] 2024-02-28 14:00:30 -0500
Branch: REL_16_STABLE [17db5436e] 2024-02-28 14:00:30 -0500
Branch: REL_15_STABLE [db8855b66] 2024-02-28 14:00:30 -0500
Branch: REL_14_STABLE [fe3b1b575] 2024-02-28 14:00:30 -0500
-->
     <para>
      Fix mis-rounding and overflow hazards
      in <function>date_bin()</function> (Moaaz Assali)
      <ulink url="&commit_baseurl;db8855b66">&sect;</ulink>
     </para>

     <para>
      In the case where the source timestamp is before the origin
      timestamp and their difference is already an exact multiple of the
      stride, the code incorrectly subtracted the stride anyway.  Also,
      detect some integer-overflow cases that would have produced
      incorrect results.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [4019285c0] 2024-04-28 13:42:13 -0400
Branch: REL_16_STABLE [3752e3d21] 2024-04-28 13:42:13 -0400
Branch: REL_15_STABLE [e6e3ee5b7] 2024-04-28 13:42:13 -0400
Branch: REL_14_STABLE [1748379b6] 2024-04-28 13:42:13 -0400
Branch: REL_13_STABLE [440b6251b] 2024-04-28 13:42:13 -0400
Branch: REL_12_STABLE [cb0ccefa0] 2024-04-28 13:42:13 -0400
-->
     <para>
      Detect integer overflow when adding or subtracting
      an <type>interval</type> to/from a <type>timestamp</type>
      (Joseph Koshakow)
      <ulink url="&commit_baseurl;e6e3ee5b7">&sect;</ulink>
     </para>

     <para>
      Some cases that should cause an out-of-range error produced an
      incorrect result instead.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [ce571434a] 2024-02-09 12:29:41 -0500
Branch: REL_16_STABLE [4eb261165] 2024-02-09 12:29:41 -0500
Branch: REL_15_STABLE [26c89d105] 2024-02-09 12:29:41 -0500
Branch: REL_14_STABLE [d21690edb] 2024-02-09 12:29:41 -0500
Branch: REL_13_STABLE [ceb224b62] 2024-02-09 12:29:41 -0500
Branch: REL_12_STABLE [f38903d1e] 2024-02-09 12:29:41 -0500
-->
     <para>
      Avoid race condition in <function>pg_get_expr()</function>
      (Tom Lane)
      <ulink url="&commit_baseurl;26c89d105">&sect;</ulink>
     </para>

     <para>
      If the relation referenced by the argument is dropped concurrently,
      the function's intention is to return NULL, but sometimes it failed
      instead.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alexander Korotkov <akorotkov@postgresql.org>
Branch: master [165d921c9] 2024-02-08 12:45:26 +0200
Branch: REL_16_STABLE [e3e05adde] 2024-02-09 12:37:21 +0200
Branch: REL_15_STABLE [503299b7f] 2024-02-09 12:38:32 +0200
Branch: REL_14_STABLE [18388291a] 2024-02-09 12:39:42 +0200
Branch: REL_13_STABLE [4efaf4b09] 2024-02-09 12:39:54 +0200
Branch: REL_12_STABLE [d44060cfc] 2024-02-09 12:55:43 +0200
-->
     <para>
      Fix detection of old transaction IDs in XID status functions
      (Karina Litskevich)
      <ulink url="&commit_baseurl;503299b7f">&sect;</ulink>
     </para>

     <para>
      Transaction IDs more than 2<superscript>31</superscript>
      transactions in the past could be misidentified as recent,
      leading to misbehavior of <function>pg_xact_status()</function>
      or <function>txid_status()</function>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [935829743] 2024-04-13 08:34:20 -0700
Branch: REL_16_STABLE [4e62ba21a] 2024-04-13 08:35:06 -0700
Branch: REL_15_STABLE [7c490a18b] 2024-04-13 08:35:20 -0700
Branch: REL_14_STABLE [08059fc04] 2024-04-13 08:35:32 -0700
-->
     <para>
      Ensure that a table's freespace map won't return a page that's past
      the end of the table (Ronan Dunklau)
      <ulink url="&commit_baseurl;7c490a18b">&sect;</ulink>
     </para>

     <para>
      Because the freespace map isn't WAL-logged, this was possible in
      edge cases involving an OS crash, a replica promote, or a PITR
      restore.  The result would be a <quote>could not read block</quote>
      error.
     </para>
    </listitem>

    <listitem>
<!--
Author: Etsuro Fujita <efujita@postgresql.org>
Branch: REL_16_STABLE [e79ceafe9] 2024-04-11 19:05:00 +0900
Branch: REL_15_STABLE [b82dca2a5] 2024-04-11 19:05:02 +0900
Branch: REL_14_STABLE [b714bc40c] 2024-04-11 19:05:04 +0900
Branch: REL_13_STABLE [01b01a77f] 2024-04-11 19:05:05 +0900
Branch: REL_12_STABLE [0341d4b10] 2024-04-11 19:05:07 +0900
-->
     <para>
      Fix file descriptor leakage when an error is thrown while waiting
      in <function>WaitEventSetWait</function> (Etsuro Fujita)
      <ulink url="&commit_baseurl;b82dca2a5">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Etsuro Fujita <efujita@postgresql.org>
Branch: REL_16_STABLE [f6f61a4bd] 2024-04-04 17:25:00 +0900
Branch: REL_15_STABLE [3f96d113f] 2024-04-04 17:25:02 +0900
Branch: REL_14_STABLE [e10ca95ff] 2024-04-04 17:25:04 +0900
-->
     <para>
      Avoid corrupting exception stack if an FDW implements async append
      but doesn't configure any wait conditions for the Append plan node
      to wait for (Alexander Pyhalov)
      <ulink url="&commit_baseurl;3f96d113f">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [f5a465f1a] 2024-02-25 16:15:07 -0500
Branch: REL_16_STABLE [8c785d354] 2024-02-25 16:15:07 -0500
Branch: REL_15_STABLE [940489b46] 2024-02-25 16:15:07 -0500
Branch: REL_14_STABLE [09f09884c] 2024-02-25 16:15:07 -0500
Branch: REL_13_STABLE [43cca9de9] 2024-02-25 16:15:07 -0500
Branch: REL_12_STABLE [c0b4dad38] 2024-02-25 16:15:07 -0500
-->
     <para>
      Throw an error if an index is accessed while it is being reindexed
      (Tom Lane)
      <ulink url="&commit_baseurl;940489b46">&sect;</ulink>
     </para>

     <para>
      Previously this was just an assertion check, but promote it into a
      regular runtime error.  This will provide a more on-point error
      message when reindexing a user-defined index expression that
      attempts to access its own table.
     </para>
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master [a63224be4] 2024-05-01 13:21:21 +1200
Branch: REL_16_STABLE [68d358545] 2024-05-01 13:21:50 +1200
Branch: REL_15_STABLE [52f21f928] 2024-05-01 13:22:16 +1200
Branch: REL_14_STABLE [e6b0efc65] 2024-05-01 13:22:41 +1200
Branch: REL_13_STABLE [0a34bcd0c] 2024-05-01 13:23:05 +1200
Branch: REL_12_STABLE [e3f9dcabd] 2024-05-01 13:23:25 +1200
-->
     <para>
      Ensure that index-only scans on <type>name</type> columns return a
      fully-padded value (David Rowley)
      <ulink url="&commit_baseurl;52f21f928">&sect;</ulink>
     </para>

     <para>
      The value physically stored in the index is truncated, and
      previously a pointer to that value was returned to callers.  This
      provoked complaints when testing under valgrind.  In theory it could
      result in crashes, though none have been reported.
     </para>
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master [aa79bde72] 2024-04-25 10:40:52 +0530
Branch: REL_16_STABLE [a9155efc7] 2024-04-25 10:52:34 +0530
Branch: REL_15_STABLE [28a8cc457] 2024-04-25 10:33:04 +0530
-->
     <para>
      Fix race condition in deciding whether a table sync operation is
      needed in logical replication (Vignesh C)
      <ulink url="&commit_baseurl;28a8cc457">&sect;</ulink>
     </para>

     <para>
      An invalidation event arriving while a subscriber identifies which
      tables need to be synced would be forgotten about, so that any
      tables newly in need of syncing might not get processed in a timely
      fashion.
     </para>
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master [fbf9a7ac4] 2024-02-13 21:23:41 +0200
Branch: REL_16_STABLE [f2f09b825] 2024-02-13 21:24:45 +0200
Branch: REL_15_STABLE [d46c26961] 2024-02-13 21:25:27 +0200
Branch: REL_14_STABLE [9b8550fbd] 2024-02-13 21:25:39 +0200
Branch: REL_13_STABLE [e92375692] 2024-02-13 21:25:48 +0200
Branch: REL_12_STABLE [95cc48ca0] 2024-02-13 21:25:59 +0200
-->
     <para>
      Fix crash with DSM allocations larger than 4GB (Heikki Linnakangas)
      <ulink url="&commit_baseurl;d46c26961">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master [f8c5317d0] 2024-03-12 10:18:32 +0200
Branch: REL_16_STABLE [539e328b1] 2024-03-12 10:18:44 +0200
Branch: REL_15_STABLE [4fce5f970] 2024-03-12 10:18:50 +0200
Branch: REL_14_STABLE [bf1f593e8] 2024-03-12 10:18:51 +0200
Branch: REL_13_STABLE [ad5cd55e6] 2024-03-12 10:18:53 +0200
Branch: REL_12_STABLE [df27d76d3] 2024-03-12 10:18:54 +0200
-->
     <para>
      Disconnect if a new server session's client socket cannot be put
      into non-blocking mode (Heikki Linnakangas)
      <ulink url="&commit_baseurl;4fce5f970">&sect;</ulink>
     </para>

     <para>
      It was once theoretically possible for us to operate with a socket
      that's in blocking mode; but that hasn't worked fully in a long
      time, so fail at connection start rather than misbehave later.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [453c46873] 2024-03-07 19:38:17 -0500
Branch: REL_16_STABLE [6a2c80e95] 2024-03-07 19:37:51 -0500
Branch: REL_15_STABLE [0fe82e45c] 2024-03-07 19:37:51 -0500
Branch: REL_14_STABLE [473babd42] 2024-03-07 19:37:51 -0500
Branch: REL_13_STABLE [9fbe07275] 2024-03-07 19:37:51 -0500
Branch: REL_12_STABLE [c42e5fdcf] 2024-03-07 19:37:51 -0500
-->
     <para>
      Fix inadequate error reporting
      with <application>OpenSSL</application> 3.0.0 and later (Heikki
      Linnakangas, Tom Lane)
      <ulink url="&commit_baseurl;0fe82e45c">&sect;</ulink>
     </para>

     <para>
      System-reported errors passed through by OpenSSL were reported with
      a numeric error code rather than anything readable.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [a584d03ce] 2024-02-09 11:21:08 -0500
Branch: REL_16_STABLE [52afe5632] 2024-02-09 11:21:08 -0500
Branch: REL_15_STABLE [806f98951] 2024-02-09 11:21:08 -0500
Branch: REL_14_STABLE [8ead39e38] 2024-02-09 11:21:08 -0500
Branch: REL_13_STABLE [8c5da20db] 2024-02-09 11:21:08 -0500
Branch: REL_12_STABLE [9fb1396a9] 2024-02-09 11:21:08 -0500
Branch: master [0028b55bc] 2024-02-09 11:11:39 -0500
Branch: REL_16_STABLE [9440d23a0] 2024-02-09 11:11:39 -0500
Branch: REL_15_STABLE [9f041b041] 2024-02-09 11:11:39 -0500
Branch: REL_14_STABLE [7d7cc7fd6] 2024-02-09 11:11:39 -0500
Branch: REL_13_STABLE [67f8cf0f0] 2024-02-09 11:11:39 -0500
Branch: REL_12_STABLE [95e960e81] 2024-02-09 11:11:39 -0500
-->
     <para>
      Avoid concurrent calls to <function>bindtextdomain()</function>
      in <application>libpq</application>
      and <application>ecpglib</application> (Tom Lane)
      <ulink url="&commit_baseurl;806f98951">&sect;</ulink>
      <ulink url="&commit_baseurl;9f041b041">&sect;</ulink>
     </para>

     <para>
      Although GNU <application>gettext</application>'s implementation
      seems to be fine with concurrent calls, the version available on
      Windows is not.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [6f0cef935] 2024-04-16 12:31:42 -0400
Branch: REL_16_STABLE [392e6e9e6] 2024-04-16 12:31:32 -0400
Branch: REL_15_STABLE [25f937217] 2024-04-16 12:31:32 -0400
Branch: REL_14_STABLE [463164639] 2024-04-16 12:31:32 -0400
Branch: REL_13_STABLE [02531e8ca] 2024-04-16 12:31:32 -0400
Branch: REL_12_STABLE [2b6a74afe] 2024-04-16 12:31:32 -0400
Branch: REL_16_STABLE [0018f0af5] 2024-04-18 20:47:37 -0400
Branch: REL_15_STABLE [1e7b1b026] 2024-04-18 20:47:37 -0400
Branch: REL_14_STABLE [df66319f7] 2024-04-18 20:47:37 -0400
Branch: REL_13_STABLE [481597fc6] 2024-04-18 20:47:37 -0400
Branch: REL_12_STABLE [61dd815e0] 2024-04-18 20:47:37 -0400
Branch: REL_16_STABLE [dd3fddc85] 2024-04-19 01:07:16 -0400
Branch: REL_15_STABLE [f7e891748] 2024-04-19 01:07:32 -0400
Branch: REL_14_STABLE [de84608e2] 2024-04-19 01:07:41 -0400
Branch: REL_13_STABLE [c6bfeab42] 2024-04-19 01:07:47 -0400
Branch: REL_12_STABLE [cd26f08e4] 2024-04-19 01:07:52 -0400
-->
     <para>
      Fix crash in <application>ecpg</application>'s preprocessor if
      the program tries to redefine a macro that was defined on the
      preprocessor command line (Tom Lane)
      <ulink url="&commit_baseurl;25f937217">&sect;</ulink>
      <ulink url="&commit_baseurl;1e7b1b026">&sect;</ulink>
      <ulink url="&commit_baseurl;f7e891748">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [096a761d6] 2024-04-04 15:31:53 -0400
Branch: REL_16_STABLE [118558e6d] 2024-04-04 15:31:53 -0400
Branch: REL_15_STABLE [f159f1814] 2024-04-04 15:31:53 -0400
Branch: REL_14_STABLE [d3167ed3f] 2024-04-04 15:31:53 -0400
Branch: REL_13_STABLE [5ba29e945] 2024-04-04 15:31:53 -0400
Branch: REL_12_STABLE [360d007e3] 2024-04-04 15:31:53 -0400
-->
     <para>
      In <application>ecpg</application>, avoid issuing
      false <quote>unsupported feature will be passed to server</quote>
      warnings (Tom Lane)
      <ulink url="&commit_baseurl;f159f1814">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [e77a1c58e] 2024-02-19 11:38:18 +0900
Branch: REL_16_STABLE [88e03d055] 2024-02-19 11:38:44 +0900
Branch: REL_15_STABLE [b5cb6022b] 2024-02-19 11:38:47 +0900
Branch: REL_14_STABLE [a05bb9add] 2024-02-19 11:38:49 +0900
Branch: REL_13_STABLE [c031ce97b] 2024-02-19 11:38:52 +0900
Branch: REL_12_STABLE [771240f97] 2024-02-19 11:38:54 +0900
-->
     <para>
      Ensure that the string result
      of <application>ecpg</application>'s <function>intoasc()</function>
      function is correctly zero-terminated (Oleg Tselebrovskiy)
      <ulink url="&commit_baseurl;b5cb6022b">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [f463de59d] 2024-04-08 17:00:07 -0400
Branch: REL_16_STABLE [a85e3ba1c] 2024-04-08 17:00:07 -0400
Branch: REL_15_STABLE [4f1d33d70] 2024-04-08 17:00:07 -0400
-->
     <para>
      In <application>psql</application>, avoid leaking a query result
      after the query is cancelled (Tom Lane)
      <ulink url="&commit_baseurl;4f1d33d70">&sect;</ulink>
     </para>

     <para>
      This happened only when cancelling a non-last query in a query
      string made with <literal>\;</literal> separators.
     </para>
    </listitem>

    <listitem>
<!--
Author: Daniel Gustafsson <dgustafsson@postgresql.org>
Branch: master [7e65ad197] 2024-03-21 23:31:57 +0100
Branch: REL_16_STABLE [5863bacb8] 2024-03-21 23:31:57 +0100
Branch: REL_15_STABLE [12128be62] 2024-03-21 23:31:57 +0100
Branch: REL_14_STABLE [be01c8c34] 2024-03-21 23:31:57 +0100
Branch: REL_13_STABLE [affc46b76] 2024-03-21 23:31:57 +0100
Branch: REL_12_STABLE [d82cb467b] 2024-03-21 23:31:57 +0100
Branch: REL_14_STABLE [6ebd43725] 2024-03-22 01:01:30 +0100
Branch: REL_13_STABLE [d5c6affb8] 2024-03-22 01:01:30 +0100
Branch: REL_12_STABLE [82c2192d9] 2024-03-22 01:01:30 +0100
-->
     <para>
      Fix <application>pg_dumpall</application> so that role comments, if
      present, will be dumped regardless of the setting
      of <option>--no-role-passwords</option> (Daniel Gustafsson,
      &Aacute;lvaro Herrera)
      <ulink url="&commit_baseurl;12128be62">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Daniel Gustafsson <dgustafsson@postgresql.org>
Branch: master [c1fc502f5] 2024-02-13 13:47:12 +0100
Branch: REL_16_STABLE [103235888] 2024-02-13 13:47:12 +0100
Branch: REL_15_STABLE [29f005238] 2024-02-13 13:47:12 +0100
-->
     <para>
      Skip files named <filename>.DS_Store</filename>
      in <application>pg_basebackup</application>,
      <application>pg_checksums</application>,
      and <application>pg_rewind</application> (Daniel Gustafsson)
      <ulink url="&commit_baseurl;29f005238">&sect;</ulink>
     </para>

     <para>
      This avoids problems on macOS, where the Finder may create such
      files.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [5392dd3d2] 2024-04-10 15:45:58 -0400
Branch: REL_16_STABLE [48f216dc6] 2024-04-10 15:45:58 -0400
Branch: REL_15_STABLE [d85db0a8e] 2024-04-10 15:45:59 -0400
Branch: REL_14_STABLE [dc5824a06] 2024-04-10 15:45:59 -0400
Branch: REL_13_STABLE [f5cee411a] 2024-04-10 15:45:59 -0400
Branch: REL_12_STABLE [5e9d8bed0] 2024-04-10 15:45:59 -0400
-->
     <para>
      Fix <application>PL/pgSQL</application>'s parsing of single-line
      comments (<literal>--</literal>-style comments) following
      expressions (Erik Wienhold, Tom Lane)
      <ulink url="&commit_baseurl;d85db0a8e">&sect;</ulink>
     </para>

     <para>
      This mistake caused parse errors if such a comment followed
      a <literal>WHEN</literal> expression in
      a <application>PL/pgSQL</application> <command>CASE</command>
      statement.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alexander Korotkov <akorotkov@postgresql.org>
Branch: master [b1fe8efdf] 2024-03-24 00:09:24 +0200
Branch: REL_16_STABLE [3676b846b] 2024-03-23 23:02:30 +0200
Branch: REL_15_STABLE [0d466bce9] 2024-03-23 23:02:43 +0200
Branch: REL_14_STABLE [4e8529da4] 2024-03-23 23:03:10 +0200
Branch: REL_13_STABLE [5cc1f2626] 2024-03-23 23:03:12 +0200
Branch: REL_12_STABLE [d603e6744] 2024-03-24 00:08:13 +0200
Branch: master [ab65dfb0f] 2024-03-24 00:09:24 +0200
Branch: REL_16_STABLE [a6ddb8ad0] 2024-03-23 23:02:30 +0200
Branch: REL_15_STABLE [54e6184db] 2024-03-23 23:02:43 +0200
Branch: REL_14_STABLE [5df5d9cd7] 2024-03-23 23:03:10 +0200
Branch: REL_13_STABLE [e2c241416] 2024-03-23 23:03:12 +0200
Branch: REL_12_STABLE [50f8611d0] 2024-03-23 23:03:14 +0200
-->
     <para>
      In <filename>contrib/amcheck</filename>, don't report false match
      failures due to short- versus long-header values (Andrey Borodin,
      Michael Zhilin)
      <ulink url="&commit_baseurl;0d466bce9">&sect;</ulink>
      <ulink url="&commit_baseurl;54e6184db">&sect;</ulink>
     </para>

     <para>
      A variable-length datum in a heap tuple or index tuple could have
      either a short or a long header, depending on compression parameters
      that applied when it was made.  Treat these cases as equivalent
      rather than complaining if there's a difference.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [bb616ed3e] 2024-04-14 18:19:58 +0200
Branch: REL_16_STABLE [8cea358b1] 2024-04-14 18:24:38 +0200
Branch: master [2f20ced1e] 2024-04-14 18:07:15 +0200
Branch: REL_16_STABLE [ccd8f0fa1] 2024-04-14 18:17:09 +0200
Branch: REL_15_STABLE [3cd413511] 2024-04-14 18:17:29 +0200
Branch: REL_14_STABLE [ad23af83d] 2024-04-14 18:18:07 +0200
-->
     <para>
      Fix bugs in BRIN output functions (Tomas Vondra)
      <ulink url="&commit_baseurl;3cd413511">&sect;</ulink>
     </para>

     <para>
      These output functions are only used for displaying index entries
      in <filename>contrib/pageinspect</filename>, so the errors are of
      limited practical concern.
     </para>
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master [c399248b3] 2024-03-11 12:27:11 +1300
Branch: REL_16_STABLE [6a9e2cb2b] 2024-03-11 12:27:46 +1300
Branch: REL_15_STABLE [ab64b275a] 2024-03-11 12:28:11 +1300
Branch: REL_14_STABLE [628c3f2e1] 2024-03-11 12:28:40 +1300
Branch: REL_13_STABLE [20b85b3da] 2024-03-11 12:29:03 +1300
Branch: REL_12_STABLE [9301e0f41] 2024-03-11 12:29:24 +1300
-->
     <para>
      In <filename>contrib/postgres_fdw</filename>, avoid emitting
      requests to sort by a constant (David Rowley)
      <ulink url="&commit_baseurl;ab64b275a">&sect;</ulink>
     </para>

     <para>
      This could occur in cases involving <literal>UNION ALL</literal>
      with constant-emitting subqueries.  Sorting by a constant is useless
      of course, but it also risks being misinterpreted by the remote
      server, leading to <quote>ORDER BY
      position <replaceable>N</replaceable> is not in select list</quote>
      errors.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [a3021aafc] 2024-04-21 13:46:20 -0400
Branch: REL_16_STABLE [75929b6cf] 2024-04-21 13:46:20 -0400
Branch: REL_15_STABLE [6c85e3359] 2024-04-21 13:46:20 -0400
Branch: REL_14_STABLE [3ed6e1698] 2024-04-21 13:46:20 -0400
Branch: REL_13_STABLE [0e56b2b94] 2024-04-21 13:46:20 -0400
Branch: REL_12_STABLE [ce1c30ece] 2024-04-21 13:46:20 -0400
-->
     <para>
      Make <filename>contrib/postgres_fdw</filename> set the remote
      session's time zone to <literal>GMT</literal>
      not <literal>UTC</literal> (Tom Lane)
      <ulink url="&commit_baseurl;6c85e3359">&sect;</ulink>
     </para>

     <para>
      This should have the same results for practical purposes.
      However, <literal>GMT</literal> is recognized by hard-wired code in
      the server, while <literal>UTC</literal> is looked up in the
      timezone database.  So the old code could fail in the unlikely event
      that the remote server's timezone database is missing entries.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: REL_16_STABLE [7c93f31de] 2024-04-16 12:25:48 +0900
Branch: REL_15_STABLE [689ba4f1c] 2024-04-16 12:26:10 +0900
Branch: REL_14_STABLE [6fa5e67e8] 2024-04-16 12:26:15 +0900
Branch: REL_13_STABLE [bb418aeee] 2024-04-16 12:26:17 +0900
Branch: REL_12_STABLE [4b0e5d601] 2024-04-16 12:26:21 +0900
-->
     <para>
      In <filename>contrib/xml2</filename>, avoid use of library functions
      that have been deprecated in recent versions
      of <application>libxml2</application> (Dmitry Koval)
      <ulink url="&commit_baseurl;689ba4f1c">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [53c8d6c9f] 2024-04-10 12:13:46 +1200
Branch: REL_16_STABLE [bf1cfe77e] 2024-04-10 10:46:15 +1200
Branch: REL_15_STABLE [74992929a] 2024-04-10 12:14:04 +1200
Branch: REL_14_STABLE [7fe32eaa4] 2024-04-10 12:15:07 +1200
Branch: REL_13_STABLE [4f90750b5] 2024-04-10 12:15:41 +1200
Branch: REL_12_STABLE [01b55203a] 2024-04-10 12:15:59 +1200
-->
     <para>
      Fix incompatibility with LLVM 18 (Thomas Munro, Dmitry Dolgov)
      <ulink url="&commit_baseurl;74992929a">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [8a92b70c1] 2024-03-26 11:44:49 -0400
Branch: REL_16_STABLE [7651fd387] 2024-03-26 11:44:49 -0400
Branch: REL_15_STABLE [3c3f4fd74] 2024-03-26 11:44:49 -0400
Branch: REL_14_STABLE [d82605bcd] 2024-03-26 11:44:49 -0400
Branch: REL_13_STABLE [243e99532] 2024-03-26 11:44:49 -0400
Branch: REL_12_STABLE [7124e7d52] 2024-03-26 11:44:49 -0400
-->
     <para>
      Allow <literal>make check</literal> to work with
      the <application>musl</application> C library (Thomas Munro, Bruce
      Momjian, Tom Lane)
      <ulink url="&commit_baseurl;3c3f4fd74">&sect;</ulink>
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-15-6">
  <title>Release 15.6</title>

  <formalpara>
  <title>Release date:</title>
  <para>2024-02-08</para>
  </formalpara>

  <para>
   This release contains a variety of fixes from 15.5.
   For information about new features in major release 15, see
   <xref linkend="release-15"/>.
  </para>

  <sect2>
   <title>Migration to Version 15.6</title>

   <para>
    A dump/restore is not required for those running 15.X.
   </para>

   <para>
    However, one bug was fixed that could have resulted in corruption of
    GIN indexes during concurrent updates.  If you suspect such
    corruption, reindex affected indexes after installing this update.
   </para>

   <para>
    Also, if you are upgrading from a version earlier than 15.5,
    see <xref linkend="release-15-5"/>.
   </para>
  </sect2>

  <sect2>
   <title>Changes</title>

   <itemizedlist>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master [5a9167c39] 2024-02-05 11:01:23 +0200
Branch: REL_16_STABLE [d6a61cb3b] 2024-02-05 11:02:56 +0200
Branch: REL_15_STABLE [f2fdea198] 2024-02-05 11:03:26 +0200
Branch: REL_14_STABLE [f4f288352] 2024-02-05 11:03:43 +0200
Branch: REL_13_STABLE [d541ce3b6] 2024-02-05 11:04:08 +0200
Branch: REL_12_STABLE [2699fc035] 2024-02-05 11:04:22 +0200
Branch: master [b96115acb] 2024-02-05 11:01:30 +0200
Branch: REL_16_STABLE [fb3836855] 2024-02-05 11:03:03 +0200
Branch: REL_15_STABLE [06f36bc01] 2024-02-05 11:03:28 +0200
Branch: REL_14_STABLE [a45c950ae] 2024-02-05 11:03:43 +0200
Branch: REL_13_STABLE [b73d21648] 2024-02-05 11:04:10 +0200
Branch: REL_12_STABLE [add8bc9b8] 2024-02-05 11:04:23 +0200
-->
     <para>
      Tighten security restrictions within <command>REFRESH MATERIALIZED
      VIEW CONCURRENTLY</command> (Heikki Linnakangas)
      <ulink url="&commit_baseurl;f2fdea198">&sect;</ulink>
      <ulink url="&commit_baseurl;06f36bc01">&sect;</ulink>
     </para>

     <para>
      One step of a concurrent refresh command was run under weak security
      restrictions.  If a materialized view's owner could persuade a
      superuser or other high-privileged user to perform a concurrent
      refresh on that view, the view's owner could control code executed
      with the privileges of the user running <command>REFRESH</command>.
      Fix things so that all user-determined code is run as the view's
      owner, as expected.
     </para>

     <para>
      The only known exploit for this error does not work
      in <productname>PostgreSQL</productname> 16.0 and later, so it may
      be that v16 is not vulnerable in practice.
     </para>

     <para>
      The <productname>PostgreSQL</productname> Project thanks Pedro
      Gallegos for reporting this problem.
      (CVE-2024-0985) <!-- not CVE-2023-5869 as claimed in commit msg -->
     </para>
    </listitem>

    <listitem>
<!--
Author: Daniel Gustafsson <dgustafsson@postgresql.org>
Branch: master [9dce22033] 2023-09-27 13:02:21 +0200
Branch: REL_16_STABLE [2cf50585e] 2023-11-17 10:18:38 +0100
Branch: REL_15_STABLE [aef521849] 2023-11-17 10:21:34 +0100
Branch: REL_14_STABLE [75a20a4b4] 2023-11-17 10:27:45 +0100
Branch: REL_13_STABLE [10912f7d4] 2023-11-17 11:46:31 +0100
Branch: REL_12_STABLE [3b991f81c] 2023-11-17 11:47:17 +0100
Branch: REL_12_STABLE [c922b2410] 2023-12-11 12:02:01 +0100
-->
     <para>
      Fix memory leak when performing JIT inlining (Andres Freund,
      Daniel Gustafsson)
      <ulink url="&commit_baseurl;aef521849">&sect;</ulink>
     </para>

     <para>
      There have been multiple reports of backend processes suffering
      out-of-memory conditions after sufficiently many JIT compilations.
      This fix should resolve that.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: REL_15_STABLE [f374fb4aa] 2024-01-18 11:12:31 +0900
Branch: REL_14_STABLE [5f6ec27a6] 2024-01-18 11:12:38 +0900
Branch: REL_13_STABLE [dc9d424cf] 2024-01-18 11:12:43 +0900
Branch: REL_12_STABLE [810382285] 2024-01-18 11:12:48 +0900
-->
     <para>
      When dequeueing from an LWLock, avoid needing to search the list of
      waiting processes (Andres Freund)
      <ulink url="&commit_baseurl;f374fb4aa">&sect;</ulink>
     </para>

     <para>
      This fixes O(N^2) behavior when the list of waiters is long.  In
      some use-cases this results in substantial throughput improvements.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: REL_16_STABLE [62f120203] 2024-02-01 12:34:21 -0500
Branch: REL_15_STABLE [12ec16d11] 2024-02-01 12:34:21 -0500
Branch: REL_14_STABLE [e031995d5] 2024-02-01 12:34:21 -0500
Branch: REL_13_STABLE [7af96a66f] 2024-02-01 12:34:21 -0500
Branch: REL_12_STABLE [2e822a1d6] 2024-02-01 12:34:21 -0500
-->
     <para>
      Avoid generating incorrect partitioned-join plans (Richard Guo)
      <ulink url="&commit_baseurl;12ec16d11">&sect;</ulink>
     </para>

     <para>
      Some uncommon situations involving lateral references could create
      incorrect plans.  Affected queries could produce wrong answers, or
      odd failures such as <quote>variable not found in subplan target
      list</quote>, or executor crashes.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [29f114b6f] 2024-01-11 15:28:22 -0500
Branch: REL_16_STABLE [80bece312] 2024-01-11 15:28:13 -0500
Branch: REL_15_STABLE [a0b4fda44] 2024-01-11 15:28:13 -0500
Branch: REL_14_STABLE [ea1d54288] 2024-01-11 15:28:13 -0500
Branch: REL_13_STABLE [bfd28bb07] 2024-01-11 15:28:13 -0500
Branch: REL_12_STABLE [69c12c417] 2024-01-11 15:28:13 -0500
-->
     <para>
      Fix incorrect wrapping of subquery output expressions in
      PlaceHolderVars (Tom Lane)
      <ulink url="&commit_baseurl;a0b4fda44">&sect;</ulink>
     </para>

     <para>
      This fixes incorrect results when a subquery is underneath an outer
      join and has an output column that laterally references something
      outside the outer join's scope.  The output column might not appear
      as NULL when it should do so due to the action of the outer join.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [d641b827a] 2024-01-10 13:36:33 -0500
Branch: REL_16_STABLE [ee9553218] 2024-01-10 13:36:34 -0500
Branch: REL_15_STABLE [c3f52fd5d] 2024-01-10 13:36:34 -0500
-->
     <para>
      Fix misprocessing of window function run conditions (Richard Guo)
      <ulink url="&commit_baseurl;c3f52fd5d">&sect;</ulink>
     </para>

     <para>
      This oversight could lead to <quote>WindowFunc not found in subplan
      target lists</quote> errors.
     </para>
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [a4f7d33a9] 2023-11-09 11:23:42 +0000
Branch: REL_16_STABLE [06a546382] 2023-11-09 11:27:04 +0000
Branch: REL_15_STABLE [c0bfdaf2b] 2023-11-09 11:28:25 +0000
-->
     <para>
      Skip inappropriate actions when <command>MERGE</command> causes a
      cross-partition update (Dean Rasheed)
      <ulink url="&commit_baseurl;c0bfdaf2b">&sect;</ulink>
     </para>

     <para>
      When executing a <literal>MERGE UPDATE</literal> action on a
      partitioned table, if the <literal>UPDATE</literal> is turned into
      a <literal>DELETE</literal> and <literal>INSERT</literal> due to
      changing a partition key column, skip firing <literal>AFTER
      UPDATE ROW</literal> triggers, as well as other post-update actions
      such as RLS checks.  These actions would typically fail, which is
      why a regular <literal>UPDATE</literal> doesn't do them in such
      cases; <literal>MERGE</literal> shouldn't either.
     </para>
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [a0ff37173] 2023-12-21 12:55:22 +0000
Branch: REL_16_STABLE [7f07384dc] 2023-12-21 12:53:48 +0000
Branch: REL_15_STABLE [7e8c6d7af] 2023-12-21 12:51:55 +0000
-->
     <para>
      Cope with <literal>BEFORE ROW DELETE</literal> triggers in
      cross-partition <command>MERGE</command> updates (Dean Rasheed)
      <ulink url="&commit_baseurl;7e8c6d7af">&sect;</ulink>
     </para>

     <para>
      If such a trigger attempted to prevent the update by returning
      NULL, <command>MERGE</command> would suffer an error or assertion
      failure.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [6545ba96c] 2024-01-14 12:38:41 -0500
Branch: REL_16_STABLE [23e0ba59c] 2024-01-14 12:38:41 -0500
Branch: REL_15_STABLE [1a4e54617] 2024-01-14 12:38:41 -0500
Branch: REL_14_STABLE [c7edaeec5] 2024-01-14 12:38:41 -0500
-->
     <para>
      Prevent access to a no-longer-pinned buffer in <literal>BEFORE ROW
      UPDATE</literal> triggers (Alexander Lakhin, Tom Lane)
      <ulink url="&commit_baseurl;1a4e54617">&sect;</ulink>
     </para>

     <para>
      If the tuple being updated had just been updated and moved to
      another page by another session, there was a narrow window where
      we would attempt to fetch data from the new tuple version without
      any pin on its buffer.  In principle this could result in garbage
      data appearing in non-updated columns of the proposed new tuple.
      The odds of problems in practice seem rather low, however.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alexander Korotkov <akorotkov@postgresql.org>
Branch: master [2a67b5a60] 2024-01-07 09:10:19 +0200
Branch: REL_16_STABLE [714a987bc] 2024-01-07 09:32:58 +0200
Branch: REL_15_STABLE [1a7c03e6f] 2024-01-07 09:10:40 +0200
Branch: REL_14_STABLE [3bdaa8fc6] 2024-01-07 09:10:49 +0200
Branch: REL_13_STABLE [60de25c6e] 2024-01-07 09:11:00 +0200
Branch: REL_12_STABLE [72d5b2776] 2024-01-07 09:18:43 +0200
Branch: master [6d94cc6ca] 2024-01-08 20:00:20 +0200
Branch: REL_16_STABLE [20a566cd4] 2024-01-08 19:57:09 +0200
Branch: REL_15_STABLE [6eecc3a62] 2024-01-08 19:57:03 +0200
Branch: REL_14_STABLE [97e64911d] 2024-01-08 19:57:58 +0200
Branch: REL_13_STABLE [17b6f39f1] 2024-01-08 19:58:38 +0200
Branch: REL_12_STABLE [a5e2853c3] 2024-01-08 19:58:51 +0200
-->
     <para>
      Avoid requesting an oversize shared-memory area in parallel hash
      join (Thomas Munro, Andrei Lepikhov, Alexander Korotkov)
      <ulink url="&commit_baseurl;1a7c03e6f">&sect;</ulink>
      <ulink url="&commit_baseurl;6eecc3a62">&sect;</ulink>
     </para>

     <para>
      The limiting value was too large, allowing <quote>invalid DSA memory
      alloc request size</quote> errors to occur with sufficiently large
      expected hash table sizes.
     </para>
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master [60f227316] 2023-11-28 12:00:14 +0200
Branch: REL_16_STABLE [9fee3232a] 2023-11-28 11:59:45 +0200
Branch: REL_15_STABLE [2873fbfe0] 2023-11-28 11:59:50 +0200
Branch: REL_14_STABLE [59c62a21f] 2023-11-28 11:59:51 +0200
Branch: REL_13_STABLE [e434d3620] 2023-11-28 11:59:52 +0200
Branch: REL_12_STABLE [b8a606e21] 2023-11-28 11:59:53 +0200
-->
     <para>
      Avoid assertion failures in <function>heap_update()</function>
      and <function>heap_delete()</function> when a tuple to be updated by
      a foreign-key enforcement trigger fails the extra visibility
      crosscheck (Alexander Lakhin)
      <ulink url="&commit_baseurl;2873fbfe0">&sect;</ulink>
     </para>

     <para>
      This error had no impact in non-assert builds.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [1b2c6b756] 2023-11-08 14:06:26 +0900
Branch: REL_16_STABLE [4dccf9575] 2023-11-08 14:06:36 +0900
Branch: REL_15_STABLE [7e18c0bd6] 2023-11-08 14:06:39 +0900
Branch: REL_14_STABLE [59fc39c0d] 2023-11-08 14:06:42 +0900
-->
     <para>
      Fix overly tight assertion
      about <varname>false_positive_rate</varname> parameter of
      BRIN bloom operator classes (Alexander Lakhin)
      <ulink url="&commit_baseurl;7e18c0bd6">&sect;</ulink>
     </para>

     <para>
      This error had no impact in non-assert builds, either.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [bb812ab09] 2024-01-24 14:20:01 +0900
Branch: REL_16_STABLE [51193e7a7] 2024-01-24 14:20:08 +0900
Branch: REL_15_STABLE [ad6fbbeeb] 2024-01-24 14:20:10 +0900
Branch: REL_14_STABLE [5a7833f49] 2024-01-24 14:20:11 +0900
Branch: REL_13_STABLE [bfec14d06] 2024-01-24 14:20:13 +0900
Branch: REL_12_STABLE [2f7242837] 2024-01-24 14:20:14 +0900
-->
     <para>
      Fix possible failure during <command>ALTER TABLE ADD
      COLUMN</command> on a complex inheritance tree (Tender Wang)
      <ulink url="&commit_baseurl;ad6fbbeeb">&sect;</ulink>
     </para>

     <para>
      If a grandchild table would inherit the new column via multiple
      intermediate parents, the command failed with <quote>tuple already
      updated by self</quote>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [3e91dba8b] 2024-01-31 13:15:21 +0900
Branch: REL_16_STABLE [f33e83285] 2024-01-31 13:16:43 +0900
Branch: REL_15_STABLE [41fa4b31c] 2024-01-31 13:16:46 +0900
Branch: REL_14_STABLE [dde5b01c3] 2024-01-31 13:16:47 +0900
Branch: REL_13_STABLE [4d0e8a008] 2024-01-31 13:16:49 +0900
Branch: REL_12_STABLE [056109782] 2024-01-31 13:16:50 +0900
-->
     <para>
      Fix problems with duplicate token names in <command>ALTER TEXT
      SEARCH CONFIGURATION ... MAPPING</command> commands (Tender Wang,
      Michael Paquier)
      <ulink url="&commit_baseurl;41fa4b31c">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [28f84f72f] 2023-11-19 21:03:38 +0100
Branch: REL_16_STABLE [ee32b824d] 2023-11-19 21:03:50 +0100
Branch: REL_15_STABLE [0177fc773] 2023-11-19 21:04:16 +0100
Branch: REL_14_STABLE [9dd50e92e] 2023-11-19 21:04:28 +0100
Branch: REL_13_STABLE [1e468ea4e] 2023-11-19 21:04:39 +0100
Branch: REL_12_STABLE [4f8d3c5b5] 2023-11-19 21:04:47 +0100
-->
     <para>
      Properly lock the associated table during <command>DROP
      STATISTICS</command> (Tomas Vondra)
      <ulink url="&commit_baseurl;0177fc773">&sect;</ulink>
     </para>

     <para>
      Failure to acquire the lock could result in <quote>tuple
      concurrently deleted</quote> errors if the <command>DROP</command>
      executes concurrently with <command>ANALYZE</command>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [743ddafc7] 2023-11-16 10:05:14 -0500
Branch: REL_16_STABLE [f07a3039c] 2023-11-16 10:05:14 -0500
Branch: REL_15_STABLE [9057ddbef] 2023-11-16 10:05:14 -0500
Branch: REL_14_STABLE [9bd0f74ea] 2023-11-16 10:05:14 -0500
Branch: REL_13_STABLE [5c11104c7] 2023-11-16 10:05:14 -0500
Branch: REL_12_STABLE [abd1b1325] 2023-11-16 10:05:14 -0500
-->
     <para>
      Fix function volatility checking for <literal>GENERATED</literal>
      and <literal>DEFAULT</literal> expressions (Tom Lane)
      <ulink url="&commit_baseurl;9057ddbef">&sect;</ulink>
     </para>

     <para>
      These places could fail to detect insertion of a volatile function
      default-argument expression, or decide that a polymorphic function
      is volatile although it is actually immutable on the datatype of
      interest.  This could lead to improperly rejecting or accepting
      a <literal>GENERATED</literal> clause, or to mistakenly applying the
      constant-default-value optimization in <command>ALTER TABLE ADD
      COLUMN</command>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [ad98fb142] 2024-01-13 13:46:27 -0500
Branch: REL_16_STABLE [7e2561e1a] 2024-01-13 13:46:27 -0500
Branch: REL_15_STABLE [2a46a0df4] 2024-01-13 13:46:27 -0500
Branch: REL_14_STABLE [db122d426] 2024-01-13 13:46:27 -0500
Branch: REL_13_STABLE [98e03f957] 2024-01-13 13:46:27 -0500
Branch: REL_12_STABLE [3b4d85cf1] 2024-01-13 13:46:27 -0500
Branch: master [96c019ffa] 2024-01-13 13:54:11 -0500
Branch: REL_16_STABLE [56dcd71de] 2024-01-13 13:54:11 -0500
Branch: REL_15_STABLE [d41358f4b] 2024-01-13 13:54:11 -0500
Branch: REL_14_STABLE [7ceeb57ba] 2024-01-13 13:54:11 -0500
Branch: REL_13_STABLE [475b3ea3c] 2024-01-13 13:54:11 -0500
Branch: REL_12_STABLE [d29a4fbac] 2024-01-13 13:54:11 -0500
-->
     <para>
      Detect that a new catalog cache entry became stale while detoasting
      its fields (Tom Lane)
      <ulink url="&commit_baseurl;2a46a0df4">&sect;</ulink>
      <ulink url="&commit_baseurl;d41358f4b">&sect;</ulink>
     </para>

     <para>
      We expand any out-of-line fields in a catalog tuple before inserting
      it into the catalog caches.  That involves database access which
      might cause invalidation of catalog cache entries &mdash; but the
      new entry isn't in the cache yet, so we would miss noticing that it
      should get invalidated.  The result is a race condition in which an
      already-stale cache entry could get made, and then persist
      indefinitely.  This would lead to hard-to-predict misbehavior.
      Fix by rechecking the tuple's visibility after detoasting.
     </para>
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [0e3e8fbd3] 2023-11-09 09:50:23 +0000
Branch: REL_16_STABLE [c396aca2b] 2023-11-09 09:53:05 +0000
Branch: REL_15_STABLE [308a69a98] 2023-11-09 09:54:22 +0000
Branch: REL_14_STABLE [dea12b40d] 2023-11-09 09:55:39 +0000
Branch: REL_13_STABLE [4f4a0010a] 2023-11-09 09:56:31 +0000
Branch: REL_12_STABLE [b17a02be2] 2023-11-09 09:57:52 +0000
-->
     <para>
      Fix edge-case integer overflow detection bug on some platforms (Dean
      Rasheed)
      <ulink url="&commit_baseurl;308a69a98">&sect;</ulink>
     </para>

     <para>
      Computing <literal>0 - INT64_MIN</literal> should result in an
      overflow error, and did on most platforms.  However, platforms with
      neither integer overflow builtins nor 128-bit integers would fail to
      spot the overflow, instead returning <literal>INT64_MIN</literal>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [25cd2d640] 2024-01-26 13:39:45 -0500
Branch: REL_16_STABLE [7204aea83] 2024-01-26 13:39:37 -0500
Branch: REL_15_STABLE [86b6243a8] 2024-01-26 13:39:37 -0500
Branch: REL_14_STABLE [3eb8a87f6] 2024-01-26 13:39:37 -0500
Branch: REL_13_STABLE [425127bed] 2024-01-26 13:39:37 -0500
Branch: REL_12_STABLE [c3bdb25fb] 2024-01-26 13:39:37 -0500
-->
     <para>
      Detect Julian-date overflow when adding or subtracting
      an <type>interval</type> to/from a <type>timestamp</type> (Tom Lane)
      <ulink url="&commit_baseurl;86b6243a8">&sect;</ulink>
     </para>

     <para>
      Some cases that should cause an out-of-range error produced an
      incorrect result instead.
     </para>
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [b218fbb7a] 2023-11-18 14:41:20 +0000
Branch: REL_16_STABLE [72d0c135b] 2023-11-18 14:46:02 +0000
Branch: REL_15_STABLE [2851aa7d1] 2023-11-18 14:47:04 +0000
Branch: REL_14_STABLE [2ffcebdba] 2023-11-18 14:48:10 +0000
Branch: REL_13_STABLE [428770aad] 2023-11-18 14:49:18 +0000
Branch: REL_12_STABLE [f499d2b20] 2023-11-18 14:50:00 +0000
-->
     <para>
      Add more checks for overflow in <function>interval_mul()</function>
      and <function>interval_div()</function> (Dean Rasheed)
      <ulink url="&commit_baseurl;2851aa7d1">&sect;</ulink>
     </para>

     <para>
      Some cases that should cause an out-of-range error produced an
      incorrect result instead.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [235c09efb] 2024-02-01 17:12:50 +0900
Branch: REL_16_STABLE [781bc121d] 2024-02-01 17:13:09 +0900
Branch: REL_15_STABLE [171d21f50] 2024-02-01 17:13:11 +0900
-->
     <para>
      Ensure cached statistics are discarded after a change
      to <varname>stats_fetch_consistency</varname> (Shinya Kato)
      <ulink url="&commit_baseurl;171d21f50">&sect;</ulink>
     </para>

     <para>
      In some code paths, it was possible for stale statistics to be
      returned.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [059de3ca4] 2023-12-26 17:57:48 -0500
Branch: REL_16_STABLE [e87252ceb] 2023-12-26 17:57:48 -0500
Branch: REL_15_STABLE [76dd3d94a] 2023-12-26 17:57:48 -0500
Branch: REL_14_STABLE [bf4f30a0f] 2023-12-26 17:57:48 -0500
Branch: REL_13_STABLE [cb88f44ec] 2023-12-26 17:57:48 -0500
Branch: REL_12_STABLE [ea61b1cf6] 2023-12-26 17:57:48 -0500
-->
     <para>
      Make the <structname>pg_file_settings</structname> view check
      validity of unapplied values for settings
      with <literal>backend</literal>
      or <literal>superuser-backend</literal> context (Tom Lane)
      <ulink url="&commit_baseurl;76dd3d94a">&sect;</ulink>
     </para>

     <para>
      Invalid values were not noted in the view as intended.  This escaped
      detection because there are very few settings in these groups.
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
Branch: master [a11c9c42e] 2023-12-01 16:05:41 +0100
Branch: REL_16_STABLE [267f33f68] 2023-12-01 16:09:54 +0100
Branch: REL_15_STABLE [15d485921] 2023-12-01 16:14:22 +0100
Branch: REL_14_STABLE [e846fc491] 2023-12-01 16:17:38 +0100
Branch: REL_13_STABLE [3c49fa2af] 2023-12-01 16:23:18 +0100
Branch: REL_12_STABLE [5d40b3c4f] 2023-12-01 16:27:18 +0100
-->
     <para>
      Match collation too when matching an existing index to a new
      partitioned index (Peter Eisentraut)
      <ulink url="&commit_baseurl;15d485921">&sect;</ulink>
     </para>

     <para>
      Previously we could accept an index that has a different collation
      from the corresponding element of the partition key, possibly
      leading to misbehavior.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [0ae3b4662] 2024-01-18 16:30:11 +0900
Branch: REL_16_STABLE [c030e263e] 2024-01-18 16:31:38 +0900
Branch: REL_15_STABLE [a0c19de11] 2024-01-18 16:31:46 +0900
Branch: REL_14_STABLE [b6f2e019d] 2024-01-18 16:31:50 +0900
Branch: master [8013850c8] 2024-01-18 15:04:24 +0900
Branch: REL_16_STABLE [7ce65c6f7] 2024-01-18 15:04:31 +0900
Branch: REL_15_STABLE [1cf2dba84] 2024-01-18 15:04:35 +0900
Branch: REL_14_STABLE [b685b41cf] 2024-01-18 15:04:39 +0900
-->
     <para>
      Avoid failure if a child index is dropped concurrently
      with <command>REINDEX INDEX</command> on a partitioned index
      (Fei Changhong)
      <ulink url="&commit_baseurl;a0c19de11">&sect;</ulink>
      <ulink url="&commit_baseurl;1cf2dba84">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master [6a1ea02c4] 2024-01-29 13:46:22 +0200
Branch: REL_16_STABLE [b899e00e7] 2024-01-29 13:46:30 +0200
Branch: REL_15_STABLE [e43425f48] 2024-01-29 13:46:42 +0200
Branch: REL_14_STABLE [f120c0872] 2024-01-29 13:46:43 +0200
Branch: REL_13_STABLE [e74c91665] 2024-01-29 13:46:45 +0200
Branch: REL_12_STABLE [e6511fe64] 2024-01-29 13:46:48 +0200
-->
     <para>
      Fix insufficient locking when cleaning up an incomplete split of
      a GIN index's internal page (Fei Changhong, Heikki Linnakangas)
      <ulink url="&commit_baseurl;e43425f48">&sect;</ulink>
     </para>

     <para>
      The code tried to do this with shared rather than exclusive lock on
      the buffer.  This could lead to index corruption if two processes
      attempted the cleanup concurrently.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [5c62ecf6e] 2023-11-13 11:44:35 -0500
Branch: REL_16_STABLE [f76b975d5] 2023-11-13 11:44:48 -0500
Branch: REL_15_STABLE [4c73ec604] 2023-11-13 11:44:57 -0500
Branch: REL_14_STABLE [d900e74e0] 2023-11-13 11:45:04 -0500
Branch: REL_13_STABLE [c859d688b] 2023-11-13 11:45:09 -0500
Branch: REL_12_STABLE [5a6937ec9] 2023-11-13 11:45:13 -0500
-->
     <para>
      Avoid premature release of buffer pin in GIN index insertion
      (Tom Lane)
      <ulink url="&commit_baseurl;4c73ec604">&sect;</ulink>
     </para>

     <para>
      If an index root page split occurs concurrently with our own
      insertion, the code could fail with <quote>buffer NNNN is not owned
      by resource owner</quote>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [903737c5b] 2023-12-21 12:43:36 -0500
Branch: REL_16_STABLE [0977bd64e] 2023-12-21 12:43:36 -0500
Branch: REL_15_STABLE [ab04c1901] 2023-12-21 12:43:36 -0500
Branch: REL_14_STABLE [375f441bd] 2023-12-21 12:43:36 -0500
Branch: REL_13_STABLE [cc3865150] 2023-12-21 12:43:36 -0500
Branch: REL_12_STABLE [1771ec9a8] 2023-12-21 12:43:36 -0500
-->
     <para>
      Avoid failure with partitioned SP-GiST indexes (Tom Lane)
      <ulink url="&commit_baseurl;ab04c1901">&sect;</ulink>
     </para>

     <para>
      Trying to use an index of this kind could lead to <quote>No such
      file or directory</quote> errors.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [59bd34c2f] 2023-12-15 13:55:05 -0500
Branch: REL_16_STABLE [152bfc0af] 2023-12-15 13:55:05 -0500
Branch: REL_15_STABLE [7a99fb6e1] 2023-12-15 13:55:05 -0500
Branch: REL_14_STABLE [f552f2be2] 2023-12-15 13:55:05 -0500
Branch: REL_13_STABLE [55b5c67da] 2023-12-15 13:55:05 -0500
Branch: REL_12_STABLE [ba66f2533] 2023-12-15 13:55:05 -0500
-->
     <para>
      Fix ownership change reporting for large objects (Tom Lane)
      <ulink url="&commit_baseurl;7a99fb6e1">&sect;</ulink>
     </para>

     <para>
      A no-op <command>ALTER LARGE OBJECT OWNER</command> command (that
      is, one selecting the existing owner) passed the wrong class ID to
      the <varname>PostAlterHook</varname>, probably confusing any
      extension using that hook.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: REL_16_STABLE [db69101a1] 2023-12-14 09:59:47 +0100
Branch: REL_15_STABLE [8dd70828b] 2023-12-14 09:59:52 +0100
-->
     <para>
      Fix reporting of I/O timing data in <literal>EXPLAIN
      (BUFFERS)</literal> (Michael Paquier)
      <ulink url="&commit_baseurl;8dd70828b">&sect;</ulink>
     </para>

     <para>
      The numbers labeled as <quote>shared/local</quote> actually refer
      only to shared buffers, so change that label
      to <quote>shared</quote>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [df220714e] 2024-02-01 13:44:19 -0800
Branch: REL_16_STABLE [6d423e9ff] 2024-02-01 13:44:22 -0800
Branch: REL_15_STABLE [d493bed28] 2024-02-01 13:44:22 -0800
Branch: master [0b6517a3b] 2024-02-01 13:44:19 -0800
Branch: REL_16_STABLE [48a6bf5c4] 2024-02-01 13:44:22 -0800
Branch: REL_15_STABLE [8fa4a1ac6] 2024-02-01 13:44:23 -0800
-->
     <para>
      Ensure durability of <command>CREATE DATABASE</command> (Noah Misch)
      <ulink url="&commit_baseurl;d493bed28">&sect;</ulink>
      <ulink url="&commit_baseurl;8fa4a1ac6">&sect;</ulink>
     </para>

     <para>
      If an operating system crash occurred during or shortly
      after <command>CREATE DATABASE</command>, recovery could fail, or
      subsequent connections to the new database could fail.  If a base
      backup was taken in that window, similar problems could be observed
      when trying to use the backup.  The symptom would be that the
      database directory, <filename>PG_VERSION</filename> file, or
      <filename>pg_filenode.map</filename> file was missing or empty.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [1d35f705e] 2024-01-25 17:07:56 +0900
Branch: REL_16_STABLE [edbd1b41a] 2024-01-29 09:04:51 +0900
Branch: REL_15_STABLE [8b34cff33] 2024-01-29 09:04:55 +0900
-->
     <para>
      Add more <literal>LOG</literal> messages when starting and ending
      recovery from a backup (Andres Freund)
      <ulink url="&commit_baseurl;8b34cff33">&sect;</ulink>
     </para>

     <para>
      This change provides additional information in the postmaster log
      that may be useful for diagnosing recovery problems.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [8a7cbfce1] 2023-12-12 17:05:18 +0100
Branch: REL_16_STABLE [0e2c05af9] 2023-12-12 17:05:27 +0100
Branch: REL_15_STABLE [f5d8f59ca] 2023-12-12 17:05:29 +0100
Branch: REL_14_STABLE [0cfd3ddfe] 2023-12-12 17:05:33 +0100
Branch: REL_13_STABLE [d99294e77] 2023-12-12 17:05:34 +0100
Branch: REL_12_STABLE [4d45ecc92] 2023-12-12 17:05:36 +0100
-->
     <para>
      Prevent standby servers from incorrectly processing dead index
      tuples during subtransactions (Fei Changhong)
      <ulink url="&commit_baseurl;f5d8f59ca">&sect;</ulink>
     </para>

     <para>
      The <structfield>startedInRecovery</structfield> flag was not
      correctly set for a subtransaction.  This affects only processing of
      dead index tuples.  It could allow a query in a subtransaction to
      ignore index entries that it should return (if they are already dead
      on the primary server, but not dead to the standby transaction), or
      to prematurely mark index entries as dead that are not yet dead on
      the primary.  It is not clear that the latter case has any serious
      consequences, but it's not the intended behavior.
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [cd7f19da3] 2023-12-08 16:09:03 +1300
Branch: REL_16_STABLE [8ca56620c] 2023-12-08 16:10:23 +1300
Branch: REL_15_STABLE [b9f687f5a] 2023-12-08 16:11:12 +1300
-->
     <para>
      Fix integer overflow hazard in checking whether a record will fit
      into the WAL decoding buffer (Thomas Munro)
      <ulink url="&commit_baseurl;b9f687f5a">&sect;</ulink>
     </para>

     <para>
      This bug appears to be only latent except when running a
      32-bit <productname>PostgreSQL</productname> build on a 64-bit
      platform.
     </para>
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master [8d7d2197f] 2023-12-11 08:50:43 +0530
Branch: REL_16_STABLE [01cc92fa6] 2023-12-11 08:36:17 +0530
Branch: REL_15_STABLE [332b43063] 2023-12-11 08:23:33 +0530
Branch: REL_14_STABLE [3f86867d5] 2023-12-11 08:10:46 +0530
Branch: REL_13_STABLE [b47ea4f3d] 2023-12-11 07:57:50 +0530
Branch: REL_12_STABLE [e81e617f3] 2023-12-11 07:45:45 +0530
-->
     <para>
      Fix deadlock between a logical replication apply worker, its
      tablesync worker, and a session process trying to alter the
      subscription (Shlok Kyal)
      <ulink url="&commit_baseurl;332b43063">&sect;</ulink>
     </para>

     <para>
      One edge of the deadlock loop did not involve a lock wait, so the
      deadlock went undetected and would persist until manual
      intervention.
     </para>
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master [360392fa2] 2023-11-27 08:49:55 +0530
Branch: REL_16_STABLE [d7ca9209c] 2023-11-27 08:59:12 +0530
Branch: REL_15_STABLE [a77fb8c68] 2023-11-27 09:14:17 +0530
-->
     <para>
      Ensure that column default values are correctly transmitted by
      the <application>pgoutput</application> logical replication plugin
      (Nikhil Benesch)
      <ulink url="&commit_baseurl;a77fb8c68">&sect;</ulink>
     </para>

     <para>
      <command>ALTER TABLE ADD COLUMN</command> with a constant default
      value for the new column avoids rewriting existing tuples, instead
      expecting that reading code will insert the correct default into a
      tuple that lacks that column.  If replication was subsequently
      initiated on the table, <application>pgoutput</application> would
      transmit NULL instead of the correct default for such a column,
      causing incorrect replication on the subscriber.
     </para>
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master [eeb0ebad7] 2023-11-22 11:44:14 +0530
Branch: REL_16_STABLE [1b6da28e0] 2023-11-22 11:27:38 +0530
Branch: REL_15_STABLE [57aae65ae] 2023-11-22 11:14:35 +0530
-->
     <para>
      Fix failure of logical replication's initial sync for a table with
      no columns (Vignesh C)
      <ulink url="&commit_baseurl;57aae65ae">&sect;</ulink>
     </para>

     <para>
      This case generated an improperly-formatted <command>COPY</command>
      command.
     </para>
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: REL_15_STABLE [b793a416b] 2024-01-29 10:42:41 +0530
Branch: REL_14_STABLE [6b77048e5] 2024-01-29 10:34:03 +0530
-->
     <para>
      Prevent examining system catalogs with the wrong snapshot during
      logical decoding (Fei Changhong)
      <ulink url="&commit_baseurl;b793a416b">&sect;</ulink>
     </para>

     <para>
      If decoding begins partway through a transaction that modifies
      system catalogs, the decoder may not recognize that, causing it to
      fail to treat that transaction as in-progress for catalog lookups.
      This fix deals with the case that a top-level transaction is already
      marked as containing catalog changes, but its subtransaction(s) are
      not.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [aaf09c592] 2024-01-03 17:40:41 -0500
Branch: REL_16_STABLE [fb464a1ae] 2024-01-03 17:40:38 -0500
Branch: REL_15_STABLE [a0d016393] 2024-01-03 17:40:38 -0500
Branch: REL_14_STABLE [9b042e27e] 2024-01-03 17:40:38 -0500
Branch: REL_13_STABLE [5810888c5] 2024-01-03 17:40:38 -0500
Branch: REL_12_STABLE [c20f2aab6] 2024-01-03 17:40:38 -0500
-->
     <para>
      Return the correct status code when a new client disconnects without
      responding to the server's password challenge (Liu Lang, Tom Lane)
      <ulink url="&commit_baseurl;a0d016393">&sect;</ulink>
     </para>

     <para>
      In some cases we'd treat this as a loggable error, which was not the
      intention and tends to create log spam, since common clients
      like <application>psql</application> frequently do this.  It may
      also confuse extensions that
      use <varname>ClientAuthentication_hook</varname>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [c82207a54] 2023-11-28 12:34:03 -0500
Branch: REL_16_STABLE [efa8f6064] 2023-11-28 12:34:03 -0500
Branch: REL_15_STABLE [5dd30bb54] 2023-11-28 12:34:03 -0500
Branch: REL_14_STABLE [b2b1f1288] 2023-11-28 12:34:03 -0500
Branch: REL_13_STABLE [efb804682] 2023-11-28 12:34:03 -0500
Branch: REL_12_STABLE [0bd682246] 2023-11-28 12:34:03 -0500
-->
     <para>
      Fix incompatibility with <application>OpenSSL</application> 3.2
      (Tristan Partin, Bo Andreson)
      <ulink url="&commit_baseurl;5dd30bb54">&sect;</ulink>
     </para>

     <para>
      Use the BIO <quote>app_data</quote> field for our private storage,
      instead of assuming it's okay to use the <quote>data</quote> field.
      This mistake didn't cause problems before, but with 3.2 it leads
      to crashes and complaints about double frees.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [0a5c46a7a] 2023-12-11 11:51:56 -0500
Branch: REL_16_STABLE [ebbd499d4] 2023-12-11 11:51:56 -0500
Branch: REL_15_STABLE [551d4b28e] 2023-12-11 11:51:56 -0500
Branch: REL_14_STABLE [07ce24326] 2023-12-11 11:51:56 -0500
Branch: REL_13_STABLE [87b46ad90] 2023-12-11 11:51:56 -0500
Branch: REL_12_STABLE [271d24f31] 2023-12-11 11:51:56 -0500
-->
     <para>
      Be more wary about <application>OpenSSL</application> not
      setting <varname>errno</varname> on error (Tom Lane)
      <ulink url="&commit_baseurl;551d4b28e">&sect;</ulink>
     </para>

     <para>
      If <varname>errno</varname> isn't set, assume the cause of the
      reported failure is read EOF.  This fixes rare cases of strange
      error reports like <quote>could not accept SSL connection:
      Success</quote>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: REL_16_STABLE [501cfd07d] 2023-11-23 13:30:13 +0200
Branch: REL_15_STABLE [481d7d1c0] 2023-11-23 13:31:51 +0200
Branch: REL_14_STABLE [555276f85] 2023-11-23 13:31:57 +0200
-->
     <para>
      Fix file descriptor leakage when a foreign data
      wrapper's <function>ForeignAsyncRequest</function> function fails
      (Heikki Linnakangas)
      <ulink url="&commit_baseurl;481d7d1c0">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [e4e63cd98] 2024-02-02 15:34:29 -0500
Branch: REL_16_STABLE [a15378100] 2024-02-02 15:34:29 -0500
Branch: REL_15_STABLE [3766b8b64] 2024-02-02 15:34:29 -0500
Branch: REL_14_STABLE [329b96882] 2024-02-02 15:34:29 -0500
Branch: REL_13_STABLE [29df29dad] 2024-02-02 15:34:29 -0500
Branch: REL_12_STABLE [4493bfb70] 2024-02-02 15:34:29 -0500
-->
     <para>
      Report <systemitem>ENOMEM</systemitem> errors from file-related system
      calls as <literal>ERRCODE_OUT_OF_MEMORY</literal>,
      not <literal>ERRCODE_INTERNAL_ERROR</literal> (Alexander Kuzmenkov)
      <ulink url="&commit_baseurl;3766b8b64">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [57b440ec1] 2024-01-18 16:11:16 -0500
Branch: REL_16_STABLE [00f941356] 2024-01-18 16:10:57 -0500
Branch: REL_15_STABLE [de2d393a8] 2024-01-18 16:10:57 -0500
Branch: REL_14_STABLE [b7e8f27d1] 2024-01-18 16:10:57 -0500
-->
     <para>
      In <application>PL/pgSQL</application>, support SQL commands that
      are <command>CREATE FUNCTION</command>/<command>CREATE
      PROCEDURE</command> with SQL-standard bodies (Tom Lane)
      <ulink url="&commit_baseurl;de2d393a8">&sect;</ulink>
     </para>

     <para>
      Previously, such cases failed with parsing errors due to the
      semicolon(s) appearing in the function body.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [b8ba7344e] 2023-12-05 12:43:24 +0100
Branch: REL_16_STABLE [878aa41f8] 2023-12-05 12:43:24 +0100
Branch: REL_15_STABLE [1171c6e74] 2023-12-05 12:43:24 +0100
Branch: REL_14_STABLE [f89681816] 2023-12-05 12:43:24 +0100
Branch: master [c6605c1bd] 2024-01-16 12:27:52 +0100
Branch: REL_16_STABLE [39aab1108] 2024-01-16 12:27:52 +0100
Branch: REL_15_STABLE [2b656cbd2] 2024-01-16 12:27:52 +0100
Branch: REL_14_STABLE [7a7c8c98a] 2024-01-16 12:27:52 +0100
-->
     <para>
      Fix <application>libpq</application>'s
      handling of errors in pipelines (&Aacute;lvaro Herrera)
      <ulink url="&commit_baseurl;1171c6e74">&sect;</ulink>
      <ulink url="&commit_baseurl;2b656cbd2">&sect;</ulink>
     </para>

     <para>
      The pipeline state could get out of sync if an error is returned
      for reasons other than a query problem (for example, if the
      connection is lost).  Potentially this would lead to a busy-loop in
      the calling application.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [1a5594b95] 2023-11-08 16:44:08 +0100
Branch: REL_16_STABLE [42f832685] 2023-11-08 16:44:08 +0100
Branch: REL_15_STABLE [0e28091d5] 2023-11-08 16:44:08 +0100
Branch: REL_14_STABLE [99fa98766] 2023-11-08 16:44:08 +0100
-->
     <para>
      Make <application>libpq</application>'s
      <function>PQsendFlushRequest()</function> function flush the client
      output buffer under the same rules as
      other <literal>PQsend</literal> functions (Jelte Fennema-Nio)
      <ulink url="&commit_baseurl;0e28091d5">&sect;</ulink>
     </para>

     <para>
      In pipeline mode, it may still be necessary to
      call <function>PQflush()</function> as well; but this change removes
      some inconsistency.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [01eca6a91] 2023-11-27 09:40:44 +0900
Branch: REL_16_STABLE [8984480b5] 2023-11-27 09:40:49 +0900
Branch: REL_15_STABLE [b97226815] 2023-11-27 09:40:50 +0900
Branch: REL_14_STABLE [c3b79223f] 2023-11-27 09:40:52 +0900
Branch: REL_13_STABLE [09f680d11] 2023-11-27 09:40:55 +0900
Branch: REL_12_STABLE [0217a7444] 2023-11-27 09:40:57 +0900
-->
     <para>
      Avoid race condition when <application>libpq</application>
      initializes OpenSSL support concurrently in two different threads
      (Willi Mann, Michael Paquier)
      <ulink url="&commit_baseurl;b97226815">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [d053a879b] 2023-11-23 13:30:18 -0500
Branch: REL_16_STABLE [85eb77185] 2023-11-23 13:30:18 -0500
Branch: REL_15_STABLE [a50053777] 2023-11-23 13:30:18 -0500
Branch: REL_14_STABLE [8f23e6a45] 2023-11-23 13:30:18 -0500
Branch: REL_13_STABLE [5abdfd88f] 2023-11-23 13:30:18 -0500
Branch: REL_12_STABLE [18fad508b] 2023-11-23 13:30:19 -0500
-->
     <para>
      Fix timing-dependent failure in GSSAPI data transmission (Tom Lane)
      <ulink url="&commit_baseurl;a50053777">&sect;</ulink>
     </para>

     <para>
      When using GSSAPI encryption in non-blocking
      mode, <application>libpq</application> sometimes failed
      with <quote>GSSAPI caller failed to retransmit all data needing to
      be retried</quote>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [a70f2a57f] 2023-11-13 17:04:26 -0500
Branch: REL_16_STABLE [64d2467fc] 2023-11-13 17:04:26 -0500
Branch: REL_15_STABLE [f15147df6] 2023-11-13 17:04:10 -0500
Branch: REL_14_STABLE [15439205d] 2023-11-13 17:04:10 -0500
Branch: REL_13_STABLE [9e08789d4] 2023-11-13 17:04:10 -0500
Branch: REL_12_STABLE [891afa84c] 2023-11-13 17:04:10 -0500
Branch: master [1e3f461e8] 2023-11-14 00:31:39 -0500
Branch: REL_16_STABLE [f1674ac6b] 2023-11-14 00:31:39 -0500
Branch: REL_15_STABLE [63c1b4d88] 2023-11-14 00:31:39 -0500
Branch: REL_14_STABLE [c532be99d] 2023-11-14 00:31:39 -0500
Branch: REL_13_STABLE [7836f6838] 2023-11-14 00:31:39 -0500
Branch: REL_12_STABLE [e43790342] 2023-11-14 00:31:39 -0500
-->
     <para>
      In <application>pg_dump</application>, don't dump RLS policies or
      security labels for extension member objects (Tom Lane, Jacob
      Champion)
      <ulink url="&commit_baseurl;f15147df6">&sect;</ulink>
      <ulink url="&commit_baseurl;63c1b4d88">&sect;</ulink>
     </para>

     <para>
      Previously, commands would be included in the dump to set these
      properties, which is really incorrect since they should be
      considered as internal affairs of the extension.  Moreover, the
      restoring user might not have adequate privilege to set them, and
      indeed the dumping user might not have enough privilege to dump them
      (since dumping RLS policies requires acquiring lock on their table).
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [7418767f1] 2023-12-29 10:57:11 -0500
Branch: REL_16_STABLE [b2c9936a7] 2023-12-29 10:57:11 -0500
Branch: REL_15_STABLE [1e0841426] 2023-12-29 10:57:11 -0500
Branch: REL_14_STABLE [aa2e323ee] 2023-12-29 10:57:11 -0500
Branch: REL_13_STABLE [8d4e8b746] 2023-12-29 10:57:11 -0500
Branch: REL_12_STABLE [69d7edb06] 2023-12-29 10:57:11 -0500
-->
     <para>
      In <application>pg_dump</application>, don't dump an extended
      statistics object if its underlying table isn't being dumped
      (Rian McGuire, Tom Lane)
      <ulink url="&commit_baseurl;1e0841426">&sect;</ulink>
     </para>

     <para>
      This conforms to the behavior for other dependent objects such as
      indexes.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [49f7c6c44] 2024-01-22 17:48:30 +0100
Branch: REL_16_STABLE [07b53de70] 2024-01-22 17:48:30 +0100
Branch: REL_15_STABLE [3fd36be52] 2024-01-22 17:48:30 +0100
Branch: REL_14_STABLE [85ecff891] 2024-01-22 17:48:30 +0100
-->
     <para>
      Make it an error for a <application>pgbench</application> script to
      end with an open pipeline (Anthonin Bonnefoy)
      <ulink url="&commit_baseurl;3fd36be52">&sect;</ulink>
     </para>

     <para>
      Previously, <application>pgbench</application> would behave oddly if
      a <command>\startpipeline</command> command lacked a
      matching <command>\endpipeline</command>.  This seems like a
      scripting mistake rather than a case
      that <application>pgbench</application> needs to handle nicely, so
      throw an error.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [9034a2d51] 2024-01-07 15:19:50 -0500
Branch: REL_16_STABLE [cf6f802bf] 2024-01-07 15:19:50 -0500
Branch: REL_15_STABLE [940ab02b5] 2024-01-07 15:19:50 -0500
Branch: REL_14_STABLE [90e8b86fc] 2024-01-07 15:19:50 -0500
Branch: REL_13_STABLE [9e7432faf] 2024-01-07 15:19:50 -0500
Branch: REL_12_STABLE [1c7443521] 2024-01-07 15:19:50 -0500
-->
     <para>
      Fix crash in <filename>contrib/intarray</filename> if an array with
      an element equal to <literal>INT_MAX</literal> is inserted into
      a <literal>gist__int_ops</literal> index
      (Alexander Lakhin, Tom Lane)
      <ulink url="&commit_baseurl;940ab02b5">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [208470136] 2023-12-19 18:19:05 +0900
Branch: REL_16_STABLE [7f68b1462] 2023-12-19 18:19:15 +0900
Branch: REL_15_STABLE [2e08440d6] 2023-12-19 18:19:16 +0900
Branch: REL_14_STABLE [bfbe4a146] 2023-12-19 18:19:18 +0900
Branch: REL_13_STABLE [586c6a091] 2023-12-19 18:19:19 +0900
Branch: REL_12_STABLE [f610d4f11] 2023-12-19 18:19:21 +0900
-->
     <para>
      Report a better error
      when <filename>contrib/pageinspect</filename>'s
      <function>hash_bitmap_info()</function> function is applied to a
      partitioned hash index (Alexander Lakhin, Michael Paquier)
      <ulink url="&commit_baseurl;2e08440d6">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [a8dd62ef4] 2023-12-19 15:20:39 +0900
Branch: REL_16_STABLE [b4948ed66] 2023-12-19 15:20:48 +0900
Branch: REL_15_STABLE [b745f1680] 2023-12-19 15:20:50 +0900
Branch: REL_14_STABLE [f729fdab4] 2023-12-19 15:20:52 +0900
Branch: REL_13_STABLE [b4c1d255c] 2023-12-19 15:20:53 +0900
Branch: REL_12_STABLE [bd2d3c928] 2023-12-19 15:20:55 +0900
-->
     <para>
      Report a better error
      when <filename>contrib/pgstattuple</filename>'s
      <function>pgstathashindex()</function> function is applied to a
      partitioned hash index (Alexander Lakhin)
      <ulink url="&commit_baseurl;b745f1680">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [9886744a3] 2024-01-10 10:41:57 +0900
Branch: REL_16_STABLE [714bfb781] 2024-01-12 13:53:07 +0900
Branch: REL_15_STABLE [33d1be06a] 2024-01-12 13:53:10 +0900
Branch: REL_14_STABLE [4c6944223] 2024-01-12 13:53:12 +0900
Branch: REL_13_STABLE [c8aab699e] 2024-01-12 13:53:13 +0900
Branch: REL_12_STABLE [9e70e6564] 2024-01-12 13:53:14 +0900
Branch: master [b83747a8a] 2024-01-11 10:39:58 +0900
Branch: REL_16_STABLE [506c77f9b] 2024-01-12 13:59:51 +0900
Branch: REL_15_STABLE [7e7d827f5] 2024-01-12 13:59:58 +0900
Branch: REL_14_STABLE [4a7475e9a] 2024-01-12 14:00:00 +0900
Branch: REL_13_STABLE [2a0eb80ae] 2024-01-12 14:00:01 +0900
Branch: REL_12_STABLE [e50a52b2b] 2024-01-12 14:00:02 +0900
-->
     <para>
      On Windows, suppress autorun options when launching subprocesses
      in <application>pg_ctl</application>
      and <application>pg_regress</application> (Kyotaro Horiguchi)
      <ulink url="&commit_baseurl;33d1be06a">&sect;</ulink>
      <ulink url="&commit_baseurl;7e7d827f5">&sect;</ulink>
     </para>

     <para>
      When launching a child process via <filename>cmd.exe</filename>,
      pass the <option>/D</option> flag to prevent executing any autorun
      commands specified in the registry.  This avoids possibly-surprising
      side effects.
     </para>
    </listitem>

    <listitem>
<!--
Author: Nathan Bossart <nathan@postgresql.org>
Branch: master [97287bdfa] 2024-01-29 12:08:57 -0600
Branch: REL_16_STABLE [1b924a86e] 2024-01-29 12:09:03 -0600
Branch: REL_15_STABLE [3726c1cb0] 2024-01-29 12:09:08 -0600
-->
     <para>
      Move <function>is_valid_ascii()</function>
      from <filename>mb/pg_wchar.h</filename>
      to <filename>utils/ascii.h</filename> (Jubilee Young)
      <ulink url="&commit_baseurl;3726c1cb0">&sect;</ulink>
     </para>

     <para>
      This change avoids the need to
      include <filename>&lt;simd.h&gt;</filename>
      in <filename>pg_wchar.h</filename>, which was causing problems for
      some third-party code.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [400928b83] 2024-01-29 12:06:13 -0500
Branch: REL_16_STABLE [e02fea093] 2024-01-29 12:06:07 -0500
Branch: REL_15_STABLE [3f8ac13b1] 2024-01-29 12:06:07 -0500
Branch: REL_14_STABLE [29e25a6b1] 2024-01-29 12:06:08 -0500
Branch: REL_13_STABLE [7c53b1977] 2024-01-29 12:06:08 -0500
Branch: REL_12_STABLE [b2fd1dab9] 2024-01-29 12:06:08 -0500
-->
     <para>
      Fix compilation failures with <application>libxml2</application>
      version 2.12.0 and later (Tom Lane)
      <ulink url="&commit_baseurl;3f8ac13b1">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [7636725b9] 2023-12-06 14:10:39 +0900
Branch: REL_16_STABLE [6248a2bb9] 2023-12-06 14:11:41 +0900
Branch: REL_15_STABLE [87ed81a87] 2023-12-06 14:11:44 +0900
Branch: REL_14_STABLE [c49b6cab1] 2023-12-06 14:11:46 +0900
Branch: REL_13_STABLE [7d5a74033] 2023-12-06 14:11:47 +0900
-->
     <para>
      Fix compilation failure of <literal>WAL_DEBUG</literal> code on
      Windows (Bharath Rupireddy)
      <ulink url="&commit_baseurl;87ed81a87">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [58c3151bb] 2023-12-26 16:16:37 -0500
Branch: REL_16_STABLE [b0115e7e2] 2023-12-26 16:16:29 -0500
Branch: REL_15_STABLE [5f8d6d709] 2023-12-26 16:16:29 -0500
Branch: REL_14_STABLE [7978eee02] 2023-12-26 16:16:29 -0500
Branch: REL_13_STABLE [48e797164] 2023-12-26 16:16:29 -0500
Branch: REL_12_STABLE [1613e2fae] 2023-12-26 16:16:29 -0500
Branch: master [a46972e30] 2023-12-26 17:03:02 -0500
Branch: REL_16_STABLE [c72049dbc] 2023-12-26 17:03:24 -0500
-->
     <para>
      Suppress compiler warnings from Python's header files
      (Peter Eisentraut, Tom Lane)
      <ulink url="&commit_baseurl;5f8d6d709">&sect;</ulink>
     </para>

     <para>
      Our preferred compiler options provoke warnings about constructs
      appearing in recent versions of Python's header files.  When using
      <application>gcc</application>, we can suppress these warnings with
      a pragma.
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [d282e88e5] 2024-01-25 13:44:54 +1300
Branch: REL_16_STABLE [60ba7cae7] 2024-01-25 13:45:22 +1300
Branch: REL_15_STABLE [67f7aaa38] 2024-01-25 13:46:07 +1300
Branch: REL_14_STABLE [364283c92] 2024-01-25 13:46:38 +1300
Branch: REL_13_STABLE [70a82f40a] 2024-01-25 13:47:20 +1300
Branch: REL_12_STABLE [d060cb658] 2024-01-25 13:47:35 +1300
-->
     <para>
      Avoid deprecation warning when compiling with LLVM 18 (Thomas Munro)
      <ulink url="&commit_baseurl;67f7aaa38">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [272a7c303] 2024-02-01 15:57:53 -0500
Branch: REL_16_STABLE [b4fb76fb5] 2024-02-01 15:57:53 -0500
Branch: REL_15_STABLE [970b1aeeb] 2024-02-01 15:57:53 -0500
Branch: REL_14_STABLE [35b8b2c4a] 2024-02-01 15:57:53 -0500
Branch: REL_13_STABLE [ac3afc3f7] 2024-02-01 15:57:53 -0500
Branch: REL_12_STABLE [b59ae79b7] 2024-02-01 15:57:53 -0500
-->
     <para>
      Update time zone data files to <application>tzdata</application>
      release 2024a for DST law changes in Greenland, Kazakhstan, and
      Palestine, plus corrections for the Antarctic stations Casey and
      Vostok.  Also historical corrections for Vietnam, Toronto, and
      Miquelon. (Tom Lane)
      <ulink url="&commit_baseurl;970b1aeeb">&sect;</ulink>
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-15-5">
  <title>Release 15.5</title>

  <formalpara>
  <title>Release date:</title>
  <para>2023-11-09</para>
  </formalpara>

  <para>
   This release contains a variety of fixes from 15.4.
   For information about new features in major release 15, see
   <xref linkend="release-15"/>.
  </para>

  <sect2>
   <title>Migration to Version 15.5</title>

   <para>
    A dump/restore is not required for those running 15.X.
   </para>

   <para>
    However, several mistakes have been discovered that could lead to
    certain types of indexes yielding wrong search results or being
    unnecessarily inefficient.  It is advisable
    to <command>REINDEX</command> potentially-affected indexes after
    installing this update.  See the fourth through seventh changelog
    entries below.
   </para>

   <para>
    Also, if you are upgrading from a version earlier than 15.4,
    see <xref linkend="release-15-4"/>.
   </para>
  </sect2>

  <sect2>
   <title>Changes</title>

   <itemizedlist>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [3b0776fde] 2023-11-06 10:38:00 -0500
Branch: REL_16_STABLE [d3d1e2509] 2023-11-06 10:38:00 -0500
Branch: REL_15_STABLE [4f4a422fb] 2023-11-06 10:38:00 -0500
Branch: REL_14_STABLE [9146d0d65] 2023-11-06 10:38:00 -0500
Branch: REL_13_STABLE [d3de70fdb] 2023-11-06 10:38:00 -0500
Branch: REL_12_STABLE [e911afd09] 2023-11-06 10:38:00 -0500
Branch: REL_11_STABLE [8c6633f4d] 2023-11-06 10:38:00 -0500
-->
     <para>
      Fix handling of unknown-type arguments
      in <literal>DISTINCT</literal> <type>"any"</type> aggregate
      functions (Tom Lane)
      <ulink url="&commit_baseurl;4f4a422fb">&sect;</ulink>
     </para>

     <para>
      This error led to a <type>text</type>-type value being interpreted
      as an <type>unknown</type>-type value (that is, a zero-terminated
      string) at runtime.  This could result in disclosure of server
      memory following the <type>text</type> value.
     </para>

     <para>
      The <productname>PostgreSQL</productname> Project thanks Jingzhou Fu
      for reporting this problem.
      (CVE-2023-5868)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [18b585155] 2023-11-06 10:56:43 -0500
Branch: REL_16_STABLE [e24daa94b] 2023-11-06 10:56:43 -0500
Branch: REL_15_STABLE [3bc6bc3ee] 2023-11-06 10:56:43 -0500
Branch: REL_14_STABLE [edc0a8d82] 2023-11-06 10:56:43 -0500
Branch: REL_13_STABLE [26c599beb] 2023-11-06 10:56:43 -0500
Branch: REL_12_STABLE [d267cea24] 2023-11-06 10:56:43 -0500
Branch: REL_11_STABLE [c48008f59] 2023-11-06 10:56:43 -0500
-->
     <para>
      Detect integer overflow while computing new array dimensions
      (Tom Lane)
      <ulink url="&commit_baseurl;3bc6bc3ee">&sect;</ulink>
     </para>

     <para>
      When assigning new elements to array subscripts that are outside the
      current array bounds, an undetected integer overflow could occur in
      edge cases.  Memory stomps that are potentially exploitable for
      arbitrary code execution are possible, and so is disclosure of
      server memory.
     </para>

     <para>
      The <productname>PostgreSQL</productname> Project thanks Pedro
      Gallegos for reporting this problem.
      (CVE-2023-5869)
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [3a9b18b30] 2023-11-06 06:14:13 -0800
Branch: REL_16_STABLE [785412731] 2023-11-06 06:14:16 -0800
Branch: REL_15_STABLE [595c988c9] 2023-11-06 06:14:16 -0800
Branch: REL_14_STABLE [508acb901] 2023-11-06 06:14:17 -0800
Branch: REL_13_STABLE [28b609550] 2023-11-06 06:14:17 -0800
Branch: REL_12_STABLE [2893f2f40] 2023-11-06 06:14:17 -0800
Branch: REL_11_STABLE [e082734c8] 2023-11-06 06:14:18 -0800
Author: Noah Misch <noah@leadboat.com>
Branch: master [b72de09a1] 2023-11-06 06:14:13 -0800
Branch: REL_16_STABLE [2c3c5ec49] 2023-11-06 06:14:16 -0800
Branch: REL_15_STABLE [fbc371909] 2023-11-06 06:14:16 -0800
Branch: REL_14_STABLE [ecd5d240c] 2023-11-06 06:14:17 -0800
Branch: REL_13_STABLE [2c7a2a00a] 2023-11-06 06:14:17 -0800
Branch: REL_12_STABLE [7bbf4d037] 2023-11-06 06:14:17 -0800
Branch: REL_11_STABLE [a27be40c1] 2023-11-06 06:14:18 -0800
-->
     <para>
      Prevent the <literal>pg_signal_backend</literal> role from
      signalling background workers and autovacuum processes
      (Noah Misch, Jelte Fennema-Nio)
      <ulink url="&commit_baseurl;595c988c9">&sect;</ulink>
      <ulink url="&commit_baseurl;fbc371909">&sect;</ulink>
     </para>

     <para>
      The documentation says that <literal>pg_signal_backend</literal>
      cannot issue signals to superuser-owned processes.  It was able to
      signal these background processes, though, because they advertise a
      role OID of zero.  Treat that as indicating superuser ownership.
      The security implications of cancelling one of these process types
      are fairly small so far as the core code goes (we'll just start
      another one), but extensions might add background workers that are
      more vulnerable.
     </para>

     <para>
      Also ensure that the <varname>is_superuser</varname> parameter is
      set correctly in such processes.  No specific security consequences
      are known for that oversight, but it might be significant for some
      extensions.
     </para>

     <para>
      The <productname>PostgreSQL</productname> Project thanks
      Hemanth Sandrana and Mahendrakar Srinivasarao
      for reporting this problem.
      (CVE-2023-5870)
     </para>
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master [28d3c2ddc] 2023-09-26 14:14:49 +0300
Branch: REL_16_STABLE [d7f521325] 2023-09-26 14:15:01 +0300
Branch: REL_15_STABLE [c3c284b37] 2023-09-26 14:15:19 +0300
Branch: REL_14_STABLE [747cef5a5] 2023-09-26 14:15:28 +0300
Branch: REL_13_STABLE [db7394d4d] 2023-09-26 14:15:35 +0300
Branch: REL_12_STABLE [26917ebea] 2023-09-26 15:41:44 +0300
-->
     <para>
      Fix misbehavior during recursive page split in GiST index build
      (Heikki Linnakangas)
      <ulink url="&commit_baseurl;c3c284b37">&sect;</ulink>
     </para>

     <para>
      Fix a case where the location of a page downlink was incorrectly
      tracked, and introduce some logic to allow recovering from such
      situations rather than silently doing the wrong thing.  This error
      could result in incorrect answers from subsequent index searches.
      It may be advisable to reindex all GiST indexes after installing
      this update.
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [5f27b5f84] 2023-10-14 16:33:51 -0700
Branch: REL_16_STABLE [bf1c21c4f] 2023-10-14 16:33:54 -0700
Branch: REL_15_STABLE [782be0f71] 2023-10-14 16:33:54 -0700
Branch: REL_14_STABLE [0834df909] 2023-10-14 16:33:54 -0700
Branch: REL_13_STABLE [6fd1dbdb2] 2023-10-14 16:33:54 -0700
-->
     <para>
      Prevent de-duplication of btree index entries
      for <type>interval</type> columns (Noah Misch)
      <ulink url="&commit_baseurl;782be0f71">&sect;</ulink>
     </para>

     <para>
      There are <type>interval</type> values that are distinguishable but
      compare equal, for example <literal>24:00:00</literal>
      and <literal>1 day</literal>.  This breaks assumptions made by btree
      de-duplication, so <type>interval</type> columns need to be excluded
      from de-duplication.  This oversight can cause incorrect results
      from index-only scans.  Moreover, after
      updating <application>amcheck</application> will report an error for
      almost all such indexes.  Users should reindex any btree indexes
      on <type>interval</type> columns.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [394d51731] 2023-10-27 18:15:37 +0200
Branch: REL_16_STABLE [e7965226d] 2023-10-27 18:28:19 +0200
Branch: REL_15_STABLE [088233f8d] 2023-10-27 18:37:59 +0200
Branch: REL_14_STABLE [d1740e169] 2023-10-27 18:46:49 +0200
-->
     <para>
      Process <type>date</type> values more sanely in
      BRIN <literal>datetime_minmax_multi_ops</literal> indexes
      (Tomas Vondra)
      <ulink url="&commit_baseurl;088233f8d">&sect;</ulink>
     </para>

     <para>
      The distance calculation for dates was backward, causing poor
      decisions about which entries to merge.  The index still produces
      correct results, but is much less efficient than it should be.
      Reindexing BRIN <literal>minmax_multi</literal> indexes
      on <type>date</type> columns is advisable.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [8da86d62a] 2023-10-27 18:15:37 +0200
Branch: REL_16_STABLE [497fc9208] 2023-10-27 18:28:28 +0200
Branch: REL_15_STABLE [d04a9283b] 2023-10-27 18:38:02 +0200
Branch: REL_14_STABLE [52c934cc1] 2023-10-27 18:46:53 +0200
Branch: master [b5489b75c] 2023-10-27 18:15:37 +0200
Branch: REL_16_STABLE [0635fe02b] 2023-10-27 18:28:04 +0200
Branch: REL_15_STABLE [daa7b0d7c] 2023-10-27 18:37:56 +0200
Branch: REL_14_STABLE [90c4da6d4] 2023-10-27 18:46:46 +0200
-->
     <para>
      Process large <type>timestamp</type> and <type>timestamptz</type>
      values more sanely in
      BRIN <literal>datetime_minmax_multi_ops</literal> indexes
      (Tomas Vondra)
      <ulink url="&commit_baseurl;d04a9283b">&sect;</ulink>
      <ulink url="&commit_baseurl;daa7b0d7c">&sect;</ulink>
     </para>

     <para>
      Infinities were mistakenly treated as having distance zero rather
      than a large distance from other values, causing poor decisions
      about which entries to merge.  Also, finite-but-very-large values
      (near the endpoints of the representable timestamp range) could
      result in internal overflows, again causing poor decisions.  The
      index still produces correct results, but is much less efficient
      than it should be.  Reindexing BRIN <literal>minmax_multi</literal>
      indexes on <type>timestamp</type> and <type>timestamptz</type>
      columns is advisable if the column contains, or has contained,
      infinities or large finite values.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [c6cf6d353] 2023-10-27 18:15:37 +0200
Branch: REL_16_STABLE [924e0e2ee] 2023-10-27 18:28:37 +0200
Branch: REL_15_STABLE [2fbb2fcb0] 2023-10-27 18:38:05 +0200
Branch: REL_14_STABLE [0fa73c5cd] 2023-10-27 18:46:56 +0200
-->
     <para>
      Avoid calculation overflows in
      BRIN <literal>interval_minmax_multi_ops</literal> indexes with
      extreme interval values (Tomas Vondra)
      <ulink url="&commit_baseurl;2fbb2fcb0">&sect;</ulink>
     </para>

     <para>
      This bug might have caused unexpected failures while trying to
      insert large interval values into such an index.
     </para>
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master [d9e46dfb7] 2023-10-13 01:12:31 +1300
Branch: REL_16_STABLE [595db9e9c] 2023-10-13 01:13:07 +1300
Branch: REL_15_STABLE [1e81d3e6e] 2023-10-13 01:13:36 +1300
Branch: REL_14_STABLE [d26f33c32] 2023-10-13 01:13:59 +1300
Branch: REL_13_STABLE [890a73ba3] 2023-10-13 01:14:22 +1300
Branch: REL_12_STABLE [3cc0c2517] 2023-10-13 01:14:46 +1300
Branch: REL_11_STABLE [2759924f3] 2023-10-13 01:15:12 +1300
Author: David Rowley <drowley@postgresql.org>
Branch: master [f0c409d9c] 2023-10-12 19:50:38 +1300
Branch: REL_16_STABLE [6352f1627] 2023-10-12 19:51:26 +1300
Branch: REL_15_STABLE [916adc7c5] 2023-10-12 19:52:05 +1300
Branch: REL_14_STABLE [cd15bff48] 2023-10-12 19:52:31 +1300
Branch: REL_13_STABLE [45c4b2a3a] 2023-10-12 19:52:58 +1300
Branch: REL_12_STABLE [cd259de50] 2023-10-12 19:53:23 +1300
Branch: REL_11_STABLE [07f261b31] 2023-10-12 19:53:50 +1300
-->
     <para>
      Fix partition step generation and runtime partition pruning for
      hash-partitioned tables with multiple partition keys (David Rowley)
      <ulink url="&commit_baseurl;1e81d3e6e">&sect;</ulink>
      <ulink url="&commit_baseurl;916adc7c5">&sect;</ulink>
     </para>

     <para>
      Some cases involving an <literal>IS NULL</literal> condition on one
      of the partition keys could result in a crash.
     </para>
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [1d5caec22] 2023-09-30 10:52:21 +0100
Branch: REL_16_STABLE [6d2de076c] 2023-09-30 10:54:29 +0100
Branch: REL_15_STABLE [3c1a1af91] 2023-09-30 10:55:24 +0100
-->
     <para>
      Fix inconsistent rechecking of concurrently-updated rows
      during <command>MERGE</command> (Dean Rasheed)
      <ulink url="&commit_baseurl;3c1a1af91">&sect;</ulink>
     </para>

     <para>
      In <literal>READ COMMITTED</literal> mode, an update that finds that
      its target row was just updated by a concurrent transaction will
      recheck the query's <literal>WHERE</literal> conditions on the
      updated row.  <command>MERGE</command> failed to ensure that the
      proper rows of other joined tables were used during this recheck,
      possibly resulting in incorrect decisions about whether the
      newly-updated row should be updated again
      by <command>MERGE</command>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [387f9ed0a] 2023-10-24 14:48:33 -0400
Branch: REL_16_STABLE [b1444a09d] 2023-10-24 14:48:34 -0400
Branch: REL_15_STABLE [1268e7378] 2023-10-24 14:48:34 -0400
Branch: REL_14_STABLE [8f4a6b9e4] 2023-10-24 14:48:34 -0400
Author: Amit Langote <amitlan@postgresql.org>
Branch: master [01575ad78] 2023-10-26 11:53:56 +0900
Branch: REL_16_STABLE [178ee1d85] 2023-10-26 11:53:41 +0900
Author: Amit Langote <amitlan@postgresql.org>
Branch: master [1f06b7fc6] 2023-10-26 17:32:38 +0900
Branch: REL_16_STABLE [2bf99b48d] 2023-10-26 17:29:32 +0900
-->
     <para>
      Correctly identify the target table in an
      inherited <command>UPDATE</command>/<command>DELETE</command>/<command>MERGE</command>
      even when the parent table is excluded by constraints (Amit Langote,
      Tom Lane)
      <ulink url="&commit_baseurl;1268e7378">&sect;</ulink>
     </para>

     <para>
      If the initially-named table is excluded by constraints, but not all
      its inheritance descendants are, the first non-excluded descendant
      was identified as the primary target table.  This would lead to
      firing statement-level triggers associated with that table, rather
      than the initially-named table as should happen.  In v16, the same
      oversight could also lead to <quote>invalid perminfoindex 0 in RTE
      with relid NNNN</quote> errors.
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Geoghegan <pg@bowt.ie>
Branch: master [714780dcd] 2023-09-28 16:29:37 -0700
Branch: REL_16_STABLE [3fa81b62e] 2023-09-28 16:29:35 -0700
Branch: REL_15_STABLE [cac37c1a1] 2023-09-28 16:29:32 -0700
Branch: REL_14_STABLE [41486c4aa] 2023-09-28 16:29:29 -0700
Branch: REL_13_STABLE [d4724e94a] 2023-09-28 16:29:27 -0700
Branch: REL_12_STABLE [b36d72cbc] 2023-09-28 16:29:24 -0700
Branch: REL_11_STABLE [7c07305e6] 2023-09-28 16:29:22 -0700
-->
     <para>
      Fix edge case in btree mark/restore processing of ScalarArrayOpExpr
      clauses (Peter Geoghegan)
      <ulink url="&commit_baseurl;cac37c1a1">&sect;</ulink>
     </para>

     <para>
      When restoring an indexscan to a previously marked position, the
      code could miss required setup steps if the scan had advanced
      exactly to the end of the matches for a ScalarArrayOpExpr (that is,
      an <literal>indexcol = ANY(ARRAY[])</literal>) clause.  This could
      result in missing some rows that should have been fetched.
     </para>
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master [0b053e78b] 2023-10-05 20:30:47 +1300
Branch: REL_16_STABLE [31b2b2d72] 2023-10-05 20:31:25 +1300
Branch: REL_15_STABLE [689af6db6] 2023-10-05 20:31:51 +1300
Branch: REL_14_STABLE [e4b95b9b0] 2023-10-05 20:32:14 +1300
-->
     <para>
      Fix intra-query memory leak in Memoize execution
      (Orlov Aleksej, David Rowley)
      <ulink url="&commit_baseurl;689af6db6">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [237f8765d] 2023-10-28 14:05:01 -0400
Branch: REL_16_STABLE [07494a0df] 2023-10-28 14:04:43 -0400
Branch: REL_15_STABLE [592cb11fb] 2023-10-28 14:04:43 -0400
Branch: REL_14_STABLE [5d7515d7d] 2023-10-28 14:04:43 -0400
Branch: REL_13_STABLE [b7684473d] 2023-10-28 14:04:43 -0400
Branch: REL_12_STABLE [d8d7f282f] 2023-10-28 14:04:43 -0400
Branch: REL_11_STABLE [7ab6971c6] 2023-10-28 14:04:43 -0400
-->
     <para>
      Fix intra-query memory leak when a set-returning function repeatedly
      returns zero rows (Tom Lane)
      <ulink url="&commit_baseurl;592cb11fb">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [f73fa5a47] 2023-09-18 14:28:17 -0400
Branch: REL_16_STABLE [ec693a3f3] 2023-09-18 14:27:47 -0400
Branch: REL_15_STABLE [95f54f0d0] 2023-09-18 14:27:47 -0400
Branch: REL_14_STABLE [9baabfa38] 2023-09-18 14:27:47 -0400
Branch: REL_13_STABLE [e6e50ada0] 2023-09-18 14:27:47 -0400
Branch: REL_12_STABLE [123337079] 2023-09-18 14:27:47 -0400
Branch: REL_11_STABLE [db00be6d7] 2023-09-18 14:27:47 -0400
-->
     <para>
      Don't crash if <function>cursor_to_xmlschema()</function> is applied
      to a non-data-returning Portal (Boyu Yang)
      <ulink url="&commit_baseurl;95f54f0d0">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master [73635b6d6] 2023-10-31 16:42:08 +1300
Branch: REL_16_STABLE [a98f01c93] 2023-10-31 16:42:35 +1300
Branch: REL_15_STABLE [136068353] 2023-10-31 16:43:01 +1300
Branch: REL_14_STABLE [c5988e69f] 2023-10-31 16:43:28 +1300
Branch: REL_13_STABLE [b3c8d1d0e] 2023-10-31 16:44:00 +1300
Branch: REL_12_STABLE [efcb601d2] 2023-10-31 16:44:27 +1300
-->
     <para>
      Throw the intended error if <function>pgrowlocks()</function> is
      applied to a partitioned table (David Rowley)
      <ulink url="&commit_baseurl;136068353">&sect;</ulink>
     </para>

     <para>
      Previously, a not-on-point complaint <quote>only heap AM is
      supported</quote> would be raised.
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [13503eb59] 2023-10-30 14:46:05 -0700
Branch: REL_16_STABLE [1a368dd3e] 2023-10-30 14:46:08 -0700
Branch: REL_15_STABLE [e633e9b13] 2023-10-30 14:46:08 -0700
Branch: REL_14_STABLE [0a7b183fd] 2023-10-30 14:46:09 -0700
Branch: REL_13_STABLE [123b0d111] 2023-10-30 14:46:09 -0700
Branch: REL_12_STABLE [975ae0553] 2023-10-30 14:46:09 -0700
Branch: REL_11_STABLE [bae063db4] 2023-10-30 14:46:09 -0700
-->
     <para>
      Handle invalid indexes more cleanly in assorted SQL functions
      (Noah Misch)
      <ulink url="&commit_baseurl;e633e9b13">&sect;</ulink>
     </para>

     <para>
      Report an error if <function>pgstatindex()</function>,
      <function>pgstatginindex()</function>,
      <function>pgstathashindex()</function>,
      or <function>pgstattuple()</function> is applied to an invalid
      index.  If <function>brin_desummarize_range()</function>,
      <function>brin_summarize_new_values()</function>,
      <function>brin_summarize_range()</function>,
      or <function>gin_clean_pending_list()</function> is applied to an
      invalid index, do nothing except to report a debug-level message.
      Formerly these functions attempted to process the index, and might
      fail in strange ways depending on what the failed <command>CREATE
      INDEX</command> had left behind.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [6fde2d9a0] 2023-08-21 13:32:14 +0900
Branch: REL_16_STABLE Release: REL_16_0 [d6af45052] 2023-08-21 13:33:04 +0900
Branch: REL_15_STABLE [ad8753a3a] 2023-08-21 13:33:08 +0900
-->
     <para>
      Fix <function>pg_stat_reset_single_table_counters()</function> to do
      the right thing for a shared catalog (Masahiro Ikeda)
      <ulink url="&commit_baseurl;ad8753a3a">&sect;</ulink>
     </para>

     <para>
      Previously the reset would be ineffective.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [cf1c65070] 2023-09-25 11:50:28 -0400
Branch: REL_16_STABLE [8465efc1a] 2023-09-25 11:50:28 -0400
Branch: REL_15_STABLE [71bb73f60] 2023-09-25 11:50:28 -0400
Branch: REL_14_STABLE [a2799f53d] 2023-09-25 11:50:28 -0400
Branch: REL_13_STABLE [52a676ef4] 2023-09-25 11:50:28 -0400
Branch: REL_12_STABLE [4a81ed29d] 2023-09-25 11:50:28 -0400
Branch: REL_11_STABLE [0fb91ed2b] 2023-09-25 11:50:28 -0400
-->
     <para>
      Avoid premature memory allocation failure with long inputs
      to <function>to_tsvector()</function> (Tom Lane)
      <ulink url="&commit_baseurl;71bb73f60">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [5b7b38246] 2023-10-01 13:16:47 -0400
Branch: REL_16_STABLE [5c34a7374] 2023-10-01 13:16:59 -0400
Branch: REL_15_STABLE [55e188a15] 2023-10-01 13:17:06 -0400
Branch: REL_14_STABLE [cf12c4fd2] 2023-10-01 13:17:11 -0400
Branch: REL_13_STABLE [9da153846] 2023-10-01 13:17:15 -0400
Branch: REL_12_STABLE [2296bc362] 2023-10-01 13:17:20 -0400
Branch: REL_11_STABLE [7a310cae0] 2023-10-01 13:17:25 -0400
-->
     <para>
      Fix over-allocation of the constructed <type>tsvector</type>
      in <function>tsvectorrecv()</function> (Denis Erokhin)
      <ulink url="&commit_baseurl;55e188a15">&sect;</ulink>
     </para>

     <para>
      If the incoming vector includes position data, the binary receive
      function left wasted space (roughly equal to the size of the
      position data) in the finished <type>tsvector</type>.  In extreme
      cases this could lead to <quote>maximum total lexeme length
      exceeded</quote> failures for vectors that were under the length
      limit when emitted.  In any case it could lead to wasted space
      on-disk.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [ae10dbb0c] 2023-09-04 14:55:37 +0900
Branch: REL_16_STABLE Release: REL_16_0 [fac3fa0d5] 2023-09-04 14:55:49 +0900
Branch: REL_15_STABLE [88aa4a049] 2023-09-04 14:55:51 +0900
Branch: REL_14_STABLE [df11421d8] 2023-09-04 14:55:53 +0900
Branch: REL_13_STABLE [82fa8ae5f] 2023-09-04 14:55:55 +0900
Branch: REL_12_STABLE [40ddb8db9] 2023-09-04 14:55:57 +0900
Branch: REL_11_STABLE [358cd2b25] 2023-09-04 14:55:58 +0900
-->
     <para>
      Fix incorrect coding in <function>gtsvector_picksplit()</function>
      (Alexander Lakhin)
      <ulink url="&commit_baseurl;88aa4a049">&sect;</ulink>
     </para>

     <para>
      This could lead to poor page-split decisions in GiST indexes
      on <type>tsvector</type> columns.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [9b103f861] 2023-10-18 20:43:27 -0400
Branch: REL_16_STABLE [cfa4eba02] 2023-10-18 20:43:17 -0400
Branch: REL_15_STABLE [985ac5ce2] 2023-10-18 20:43:17 -0400
Branch: REL_14_STABLE [2c63dc035] 2023-10-18 20:43:17 -0400
Branch: REL_13_STABLE [817669ea2] 2023-10-18 20:43:17 -0400
-->
     <para>
      Improve checks for corrupt PGLZ compressed data (Flavien Guedez)
      <ulink url="&commit_baseurl;985ac5ce2">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [d8a09939a] 2023-10-01 12:09:26 -0400
Branch: REL_16_STABLE [ea0e7cd6b] 2023-10-01 12:09:26 -0400
Branch: REL_15_STABLE [95fd5c89f] 2023-10-01 12:09:26 -0400
Branch: REL_14_STABLE [a715c0212] 2023-10-01 12:09:26 -0400
-->
     <para>
      In <command>COPY FROM</command>, fail cleanly when an unsupported
      encoding conversion is needed (Tom Lane)
      <ulink url="&commit_baseurl;95fd5c89f">&sect;</ulink>
     </para>

     <para>
      Recent refactoring accidentally removed the intended error check for
      this, such that it ended in <quote>cache lookup failed for function
      0</quote> instead of a useful error message.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [7704a1a72] 2023-11-02 11:47:33 -0400
Branch: REL_16_STABLE [82063edd4] 2023-11-02 11:47:33 -0400
Branch: REL_15_STABLE [ae33659d4] 2023-11-02 11:47:33 -0400
Branch: REL_14_STABLE [47c0f00cf] 2023-11-02 11:47:33 -0400
Branch: REL_13_STABLE [137227c6d] 2023-11-02 11:47:33 -0400
Branch: REL_12_STABLE [65810fc6d] 2023-11-02 11:47:33 -0400
Branch: REL_11_STABLE [6e1cca511] 2023-11-02 11:47:33 -0400 !! no live bug
-->
     <para>
      Avoid crash in <command>EXPLAIN</command> if a parameter marked to
      be displayed by <command>EXPLAIN</command> has a NULL boot-time
      value (Xing Guo, Aleksander Alekseev, Tom Lane)
      <ulink url="&commit_baseurl;ae33659d4">&sect;</ulink>
     </para>

     <para>
      No built-in parameter fits this description, but an extension could
      define such a parameter.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [54b208f90] 2023-10-16 14:06:14 -0400
Branch: REL_16_STABLE [57e6e861d] 2023-10-16 14:06:15 -0400
Branch: REL_15_STABLE [0d1a7cd14] 2023-10-16 14:06:15 -0400
Branch: REL_14_STABLE [f6e1ee3cf] 2023-10-16 14:06:11 -0400
Branch: REL_13_STABLE [1e678175c] 2023-10-16 14:06:11 -0400
Branch: REL_12_STABLE [07eb22a77] 2023-10-16 14:06:11 -0400
Branch: REL_11_STABLE [a295684b8] 2023-10-16 14:06:12 -0400
-->
     <para>
      Ensure we have a snapshot while dropping <literal>ON COMMIT
      DROP</literal> temp tables (Tom Lane)
      <ulink url="&commit_baseurl;0d1a7cd14">&sect;</ulink>
     </para>

     <para>
      This prevents possible misbehavior if any catalog entries for the
      temp tables have fields wide enough to require toasting (such as a
      very complex <literal>CHECK</literal> condition).
     </para>
    </listitem>

    <listitem>
<!--
Author: Nathan Bossart <nathan@postgresql.org>
Branch: master [97550c071] 2023-10-17 10:41:48 -0500
Branch: REL_16_STABLE [ee06199fc] 2023-10-17 10:41:58 -0500
Branch: REL_15_STABLE [c9265ae80] 2023-10-17 10:42:06 -0500
Branch: REL_14_STABLE [54fc9dca5] 2023-10-17 10:42:12 -0500
Branch: REL_13_STABLE [ac1dfc303] 2023-10-17 10:42:17 -0500
Branch: REL_12_STABLE [e2e169042] 2023-10-17 10:42:22 -0500
Branch: REL_11_STABLE [d0e7f95b4] 2023-10-17 10:42:28 -0500
Author: Nathan Bossart <nathan@postgresql.org>
Branch: REL_14_STABLE [555bc89c9] 2023-10-17 16:11:03 -0500
Branch: REL_13_STABLE [ebc093fa6] 2023-10-17 16:11:08 -0500
Branch: REL_12_STABLE [0e32652a7] 2023-10-17 16:11:13 -0500
Branch: REL_11_STABLE [bc322c73c] 2023-10-17 16:11:18 -0500
-->
     <para>
      Avoid improper response to shutdown signals in child processes
      just forked by <function>system()</function> (Nathan Bossart)
      <ulink url="&commit_baseurl;c9265ae80">&sect;</ulink>
     </para>

     <para>
      This fix avoids a race condition in which a child process that has
      been forked off by <function>system()</function>, but hasn't yet
      exec'd the intended child program, might receive and act on a signal
      intended for the parent server process.  That would lead to
      duplicate cleanup actions being performed, which will not end well.
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [63a582222] 2023-10-16 17:33:08 +1300
Branch: REL_16_STABLE [5725e4ebe] 2023-10-16 17:21:41 +1300
Branch: REL_15_STABLE [5e39884d3] 2023-10-16 17:23:02 +1300
Branch: REL_14_STABLE [dc75748a9] 2023-10-16 17:23:25 +1300
Branch: REL_13_STABLE [67060be3d] 2023-10-16 17:24:35 +1300
Branch: REL_12_STABLE [43c979086] 2023-10-16 17:25:43 +1300
-->
     <para>
      Cope with torn reads of <filename>pg_control</filename> in frontend
      programs (Thomas Munro)
      <ulink url="&commit_baseurl;5e39884d3">&sect;</ulink>
     </para>

     <para>
      On some file systems, reading <filename>pg_control</filename> may
      not be an atomic action when the server concurrently writes that
      file.  This is detectable via a bad CRC.  Retry a few times to see
      if the file becomes valid before we report error.
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [c558e6fd9] 2023-10-16 10:43:47 +1300
Branch: REL_16_STABLE [2371432cd] 2023-10-16 10:45:05 +1300
Branch: REL_15_STABLE [606be8a35] 2023-10-16 10:45:18 +1300
Branch: REL_14_STABLE [a56fe5cf0] 2023-10-16 10:47:01 +1300
Branch: REL_13_STABLE [ae9da357b] 2023-10-16 10:47:10 +1300
Branch: REL_12_STABLE [637e86ecc] 2023-10-16 10:47:33 +1300
Branch: REL_11_STABLE [f1634c968] 2023-10-16 10:52:40 +1300
-->
     <para>
      Avoid torn reads of <filename>pg_control</filename> in relevant SQL
      functions (Thomas Munro)
      <ulink url="&commit_baseurl;606be8a35">&sect;</ulink>
     </para>

     <para>
      Acquire the appropriate lock before
      reading <filename>pg_control</filename>, to ensure we get a
      consistent view of that file.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [a956bd3fa] 2023-10-03 15:37:00 +0900
Branch: REL_16_STABLE [75f31a3f2] 2023-10-03 15:37:18 +0900
Branch: REL_15_STABLE [95e91da66] 2023-10-03 15:37:19 +0900
Branch: REL_14_STABLE [f91c87b31] 2023-10-03 15:37:21 +0900
Branch: REL_13_STABLE [a0b013625] 2023-10-03 15:37:23 +0900
Branch: REL_12_STABLE [9b3900cdb] 2023-10-03 15:37:24 +0900
-->
     <para>
      Avoid integer overflow when computing size of backend activity
      string array (Jakub Wartak)
      <ulink url="&commit_baseurl;95e91da66">&sect;</ulink>
     </para>

     <para>
      On 64-bit machines we will allow values
      of <varname>track_activity_query_size</varname> large enough to
      cause 32-bit overflow when multiplied by the allowed number of
      connections.  The code actually allocating the per-backend local
      array was careless about this though, and allocated the array
      incorrectly.
     </para>
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master [c181f2e2b] 2023-09-30 17:03:50 +0300
Branch: REL_16_STABLE [992d2ca81] 2023-09-30 17:07:24 +0300
Branch: REL_15_STABLE [5ae245664] 2023-09-30 17:07:32 +0300
Branch: REL_14_STABLE [2d4f99bc6] 2023-09-30 17:07:37 +0300
Branch: REL_13_STABLE [ed9247cd7] 2023-09-30 17:07:41 +0300
-->
     <para>
      Fix briefly showing inconsistent progress statistics
      for <command>ANALYZE</command> on inherited tables
      (Heikki Linnakangas)
      <ulink url="&commit_baseurl;5ae245664">&sect;</ulink>
     </para>

     <para>
      The block-level counters should be reset to zero at the same time we
      update the current-relation field.
     </para>
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master [e64c733bb] 2023-10-02 12:39:35 +0300
Branch: REL_16_STABLE [4a97a43a7] 2023-10-02 12:49:25 +0300
Branch: REL_15_STABLE [0684d1949] 2023-10-02 12:49:29 +0300
Branch: REL_14_STABLE [594001864] 2023-10-02 12:50:32 +0300
-->
     <para>
      Fix the background writer to report any WAL writes it makes to the
      statistics counters (Nazir Bilal Yavuz)
      <ulink url="&commit_baseurl;0684d1949">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [e221c0bef] 2023-09-26 09:29:47 +0900
Branch: REL_16_STABLE [280f70221] 2023-09-26 09:30:36 +0900
Branch: REL_15_STABLE [802fcb9ed] 2023-09-26 09:30:39 +0900
-->
     <para>
      Fix confusion about forced-flush behavior
      in <function>pgstat_report_wal()</function>
      (Ryoga Yoshida, Michael Paquier)
      <ulink url="&commit_baseurl;802fcb9ed">&sect;</ulink>
     </para>

     <para>
      This could result in some statistics about WAL I/O being forgotten
      in a shutdown.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [dc8d72c1c] 2023-09-25 14:42:17 -0400
Branch: REL_16_STABLE [055f786ea] 2023-09-25 14:42:17 -0400
Branch: REL_15_STABLE [0e59266a5] 2023-09-25 14:41:57 -0400
Branch: REL_14_STABLE [5cff431bc] 2023-09-25 14:41:57 -0400
Branch: REL_13_STABLE [8cfc3e80b] 2023-09-25 14:41:57 -0400
Branch: REL_12_STABLE [4435a8d5d] 2023-09-25 14:41:57 -0400
Branch: REL_11_STABLE [fdc7cf73b] 2023-09-25 14:41:57 -0400
-->
     <para>
      Track the dependencies of cached <command>CALL</command> statements,
      and re-plan them when needed (Tom Lane)
      <ulink url="&commit_baseurl;0e59266a5">&sect;</ulink>
     </para>

     <para>
      DDL commands, such as replacement of a function that has been
      inlined into a <command>CALL</command> argument, can create the need
      to re-plan a <command>CALL</command> that has been cached by
      PL/pgSQL.  That was not happening, leading to misbehavior or strange
      errors such as <quote>cache lookup failed</quote>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Daniel Gustafsson <dgustafsson@postgresql.org>
Branch: master [5f3aa309a] 2023-09-22 11:18:25 +0200
Branch: REL_16_STABLE [f720875a4] 2023-09-22 11:18:25 +0200
Branch: REL_15_STABLE [9dc85806d] 2023-09-22 11:18:25 +0200
-->
     <para>
      Avoid a possible pfree-a-NULL-pointer crash after an error in
      OpenSSL connection setup (Sergey Shinderuk)
      <ulink url="&commit_baseurl;9dc85806d">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [e0e492e5a] 2023-09-15 17:01:52 -0400
Branch: REL_16_STABLE [53630f12d] 2023-09-15 17:01:26 -0400
Branch: REL_15_STABLE [2679a107a] 2023-09-15 17:01:26 -0400
Branch: REL_14_STABLE [ae13f8166] 2023-09-15 17:01:26 -0400
Branch: REL_13_STABLE [c5b7f791d] 2023-09-15 17:01:26 -0400
Branch: REL_12_STABLE [d29812c0c] 2023-09-15 17:01:26 -0400
Branch: REL_11_STABLE [a374f6c61] 2023-09-15 17:01:26 -0400
-->
     <para>
      Track nesting depth correctly when
      inspecting <type>RECORD</type>-type Vars from outer query levels
      (Richard Guo)
      <ulink url="&commit_baseurl;2679a107a">&sect;</ulink>
     </para>

     <para>
      This oversight could lead to assertion failures, core dumps,
      or <quote>bogus varno</quote> errors.
     </para>
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master [ee3a551e9] 2023-09-14 11:27:29 +1200
Branch: REL_16_STABLE [1a6900e58] 2023-09-14 11:27:16 +1200
Branch: REL_15_STABLE [17a3f1c34] 2023-09-14 11:27:00 +1200
Branch: REL_14_STABLE [6341cb0b0] 2023-09-14 11:27:43 +1200
-->
     <para>
      Track hash function and negator function dependencies of
      ScalarArrayOpExpr plan nodes (David Rowley)
      <ulink url="&commit_baseurl;17a3f1c34">&sect;</ulink>
     </para>

     <para>
      In most cases this oversight was harmless, since these functions
      would be unlikely to disappear while the node's original operator
      remains present.
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [3acd0599b] 2023-09-13 14:58:22 +1200
Branch: REL_16_STABLE [f899c7f1e] 2023-09-13 15:06:07 +1200
Branch: REL_15_STABLE [a26cc0334] 2023-09-13 14:43:04 +1200
Branch: REL_14_STABLE [e2452c2a6] 2023-09-13 14:46:16 +1200
Branch: REL_13_STABLE [189097db8] 2023-09-13 14:48:00 +1200
Branch: REL_12_STABLE [012b80ad2] 2023-09-13 14:50:14 +1200
Branch: REL_11_STABLE [6ae57f190] 2023-09-13 14:52:34 +1200
-->
     <para>
      Fix error-handling bug in <type>RECORD</type> type cache management
      (Thomas Munro)
      <ulink url="&commit_baseurl;a26cc0334">&sect;</ulink>
     </para>

     <para>
      An out-of-memory error occurring at just the wrong point could leave
      behind inconsistent state that would lead to an infinite loop.
     </para>
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: REL_15_STABLE [c7256e656] 2023-09-12 10:23:17 +0530
Branch: REL_14_STABLE [f7d25117b] 2023-09-12 10:12:51 +0530
Branch: REL_13_STABLE [c570bb4d6] 2023-09-12 09:58:50 +0530
Branch: REL_12_STABLE [7e57208ed] 2023-09-12 09:44:37 +0530
Branch: REL_11_STABLE [feb4e218e] 2023-09-12 09:36:56 +0530
-->
     <para>
      Fix assertion failure when logical decoding is retried in the same
      session after an error (Hou Zhijie)
      <ulink url="&commit_baseurl;c7256e656">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [6b18b3fe2] 2023-10-03 10:21:44 +0900
Branch: REL_16_STABLE [a06efbc3a] 2023-10-03 10:25:12 +0900
Branch: REL_15_STABLE [afc79591d] 2023-10-03 10:25:14 +0900
Branch: REL_14_STABLE [baeb8542c] 2023-10-03 10:25:15 +0900
Branch: REL_13_STABLE [6103d2cca] 2023-10-03 10:25:17 +0900
Branch: REL_12_STABLE [22b2e6e9d] 2023-10-03 10:25:19 +0900
-->
     <para>
      Treat out-of-memory failures as fatal while reading WAL
      (Michael Paquier)
      <ulink url="&commit_baseurl;afc79591d">&sect;</ulink>
     </para>

     <para>
      Previously this would be treated as a bogus-data condition, leading
      to the conclusion that we'd reached the end of WAL, which is
      incorrect and could lead to inconsistent WAL replay.
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [bae868caf] 2023-09-23 10:26:24 +1200
Branch: REL_16_STABLE [ce497f648] 2023-09-23 10:27:02 +1200
Branch: REL_15_STABLE [f4d152edd] 2023-09-23 10:28:12 +1200
Branch: REL_14_STABLE [3ce3b53d7] 2023-09-23 10:28:40 +1200
Branch: REL_13_STABLE [6606c5716] 2023-09-23 10:29:44 +1200
Branch: REL_12_STABLE [e8f3c0687] 2023-09-23 10:29:56 +1200
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [becfbdd6c] 2023-09-26 10:53:38 +1300
Branch: REL_16_STABLE [10d0591ea] 2023-09-26 10:53:52 +1300
Branch: REL_15_STABLE [99d334a18] 2023-09-26 10:54:02 +1300
Branch: REL_14_STABLE [3d413c5a7] 2023-09-26 10:54:24 +1300
Branch: REL_13_STABLE [45d1fe8b5] 2023-09-26 10:54:47 +1300
Branch: REL_12_STABLE [bde2f1847] 2023-09-26 10:59:49 +1300
-->
     <para>
      Fix possible recovery failure due to trying to allocate memory based
      on a bogus WAL record length field (Thomas Munro, Michael Paquier)
      <ulink url="&commit_baseurl;f4d152edd">&sect;</ulink>
      <ulink url="&commit_baseurl;99d334a18">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [2b8e5273e] 2023-09-04 08:04:22 +0900
Branch: REL_16_STABLE Release: REL_16_0 [c397c98ae] 2023-09-04 08:04:40 +0900
Branch: REL_15_STABLE [5a9325fdd] 2023-09-04 08:04:43 +0900
-->
     <para>
      Fix race condition in database dropping that could lead to the
      autovacuum launcher getting stuck (Andres Freund, Will Mortensen,
      Jacob Speidel)
      <ulink url="&commit_baseurl;5a9325fdd">&sect;</ulink>
     </para>

     <para>
      The race could lead to a statistics entry for the removed database
      remaining present, confusing the launcher's selection of which
      database to process.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [52c6c0f19] 2023-08-30 08:03:42 +0900
Branch: REL_16_STABLE Release: REL_16_0 [1d2939b6d] 2023-08-30 08:03:48 +0900
Branch: REL_15_STABLE [5180160c1] 2023-08-30 08:03:51 +0900
Branch: REL_14_STABLE [d2bd4ba30] 2023-08-30 08:03:52 +0900
Branch: REL_13_STABLE [420c8dc7e] 2023-08-30 08:03:54 +0900
-->
     <para>
      Fix datatype size confusion in logical tape management
      (Ranier Vilela)
      <ulink url="&commit_baseurl;5180160c1">&sect;</ulink>
     </para>

     <para>
      Integer overflow was possible on platforms where long is wider than
      int, although it would take a multiple-terabyte temporary file to
      cause a problem.
     </para>
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master [5fec3c870] 2023-08-29 09:09:40 +0300
Branch: REL_16_STABLE Release: REL_16_0 [5f38ff3d0] 2023-08-29 09:10:28 +0300
Branch: REL_15_STABLE [0c1024060] 2023-08-29 09:12:35 +0300
Branch: REL_14_STABLE [3d895f95a] 2023-08-29 09:12:24 +0300
Branch: REL_13_STABLE [a01e479e8] 2023-08-29 09:12:17 +0300
-->
     <para>
      Avoid unintended close of syslogger process's stdin
      (Heikki Linnakangas)
      <ulink url="&commit_baseurl;0c1024060">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [d8b2fcc9d] 2023-08-24 12:02:46 -0400
Branch: REL_16_STABLE Release: REL_16_0 [ba0d737ca] 2023-08-24 12:02:40 -0400
Branch: REL_15_STABLE [870085135] 2023-08-24 12:02:40 -0400
Branch: REL_14_STABLE [9b2a41db1] 2023-08-24 12:02:40 -0400
Branch: REL_13_STABLE [27566bcf3] 2023-08-24 12:02:40 -0400
Branch: REL_12_STABLE [b808dbf90] 2023-08-24 12:02:40 -0400
Branch: REL_11_STABLE [9c59f3862] 2023-08-24 12:02:40 -0400
-->
     <para>
      Avoid doing plan cache revalidation of utility statements
      that do not receive interesting processing during parse analysis
      (Tom Lane)
      <ulink url="&commit_baseurl;870085135">&sect;</ulink>
     </para>

     <para>
      Aside from saving a few cycles, this prevents failure after a cache
      invalidation for statements that must not set a snapshot, such
      as <command>SET TRANSACTION ISOLATION LEVEL</command>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andrew Dunstan <andrew@dunslane.net>
Branch: master [a68458108] 2023-08-22 15:17:05 -0400
Branch: REL_16_STABLE Release: REL_16_0 [f938acd68] 2023-08-22 15:18:19 -0400
Branch: REL_15_STABLE [75f323aa1] 2023-08-22 15:16:01 -0400
Branch: REL_14_STABLE [7f4515a58] 2023-08-22 15:15:45 -0400
Branch: REL_13_STABLE [1bb619d4d] 2023-08-22 15:15:31 -0400
Branch: REL_12_STABLE [01993ac74] 2023-08-22 15:15:18 -0400
Branch: REL_11_STABLE [2d13dab04] 2023-08-23 17:22:16 -0400
Branch: REL_11_STABLE [b915bf495] 2023-08-24 16:14:26 -0400
-->
     <para>
      Keep by-reference <structfield>attmissingval</structfield> values in
      a long-lived context while they are being used (Andrew Dunstan)
      <ulink url="&commit_baseurl;75f323aa1">&sect;</ulink>
     </para>

     <para>
      This avoids possible use of dangling pointers when a tuple slot
      outlives the tuple descriptor with which its value was constructed.
     </para>
    </listitem>

    <listitem>
<!--
Author: Jeff Davis <jdavis@postgresql.org>
Branch: master [fa2e87494] 2023-08-09 13:09:25 -0700
Branch: REL_16_STABLE Release: REL_16_0 [0d56c32c8] 2023-08-09 13:09:01 -0700
Branch: REL_15_STABLE [9f3343e40] 2023-08-07 15:12:49 -0700
Branch: REL_14_STABLE [00953f1e2] 2023-08-07 15:12:33 -0700
Branch: REL_13_STABLE [90cadfd49] 2023-08-07 15:12:09 -0700
Branch: REL_12_STABLE [a86d40227] 2023-08-07 15:11:18 -0700
Branch: REL_11_STABLE [43ba5105a] 2023-08-07 15:09:11 -0700
Branch: master [bee263b08] 2023-08-10 10:20:54 -0700
Branch: REL_16_STABLE Release: REL_16_0 [7bed93a46] 2023-08-10 10:24:58 -0700
Branch: REL_15_STABLE [1bc19dfcf] 2023-08-10 10:25:47 -0700
Branch: REL_14_STABLE [5a32af3f2] 2023-08-10 10:26:12 -0700
Branch: REL_13_STABLE [4caa9e33e] 2023-08-10 10:26:46 -0700
Branch: REL_12_STABLE [01bc42634] 2023-08-10 10:27:00 -0700
Branch: REL_11_STABLE [ae1269295] 2023-08-10 10:27:24 -0700
-->
     <para>
      Recalculate the effective value of <varname>search_path</varname>
      after <command>ALTER ROLE</command> (Jeff Davis)
      <ulink url="&commit_baseurl;9f3343e40">&sect;</ulink>
      <ulink url="&commit_baseurl;1bc19dfcf">&sect;</ulink>
     </para>

     <para>
      This ensures that after renaming a role, the meaning of the special
      string <literal>$user</literal> is re-determined.
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [dab889d60] 2023-10-22 10:04:55 +1300
Branch: REL_16_STABLE [174ccda5e] 2023-10-22 10:05:22 +1300
Branch: REL_15_STABLE [f72790b29] 2023-10-22 10:05:40 +1300
Branch: REL_14_STABLE [fb9a16a1a] 2023-10-22 10:05:59 +1300
-->
     <para>
      Fix <quote>could not duplicate handle</quote> error occurring on
      Windows when <varname>min_dynamic_shared_memory</varname> is set
      above zero (Thomas Munro)
      <ulink url="&commit_baseurl;f72790b29">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Jeff Davis <jdavis@postgresql.org>
Branch: master [ef74c7197] 2023-10-10 11:01:13 -0700
Branch: REL_16_STABLE [b8963e8a2] 2023-10-10 11:01:55 -0700
Branch: REL_15_STABLE [b9bb02620] 2023-10-10 11:02:45 -0700
Branch: REL_14_STABLE [6615bb95a] 2023-10-10 11:02:56 -0700
Branch: REL_13_STABLE [469d367be] 2023-10-10 11:03:03 -0700
Branch: REL_12_STABLE [6dbd01b9f] 2023-10-10 11:03:10 -0700
Branch: REL_11_STABLE [04f0baa85] 2023-10-10 11:03:20 -0700
-->
     <para>
      Fix order of operations in <function>GenericXLogFinish</function>
      (Jeff Davis)
      <ulink url="&commit_baseurl;b9bb02620">&sect;</ulink>
     </para>

     <para>
      This code violated the conditions required for crash safety by
      writing WAL before marking changed buffers dirty.  No core code uses
      this function, but extensions do (<filename>contrib/bloom</filename>
      does, for example).
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [af5b3c3d1] 2023-09-19 08:31:06 +0900
Branch: REL_16_STABLE [f171430f0] 2023-09-19 08:31:22 +0900
Branch: REL_15_STABLE [9e0ce80f3] 2023-09-19 08:31:24 +0900
Branch: REL_14_STABLE [bb65f3c1b] 2023-09-19 08:31:26 +0900
Branch: REL_13_STABLE [35e8ba3e5] 2023-09-19 08:31:27 +0900
Branch: REL_12_STABLE [99d27e55c] 2023-09-19 08:31:29 +0900
Branch: REL_11_STABLE [ddded779a] 2023-09-19 08:31:31 +0900
-->
     <para>
      Remove incorrect assertion in PL/Python exception handling
      (Alexander Lakhin)
      <ulink url="&commit_baseurl;9e0ce80f3">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Jeff Davis <jdavis@postgresql.org>
Branch: master [37188cea0] 2023-08-22 12:50:01 -0700
Branch: REL_16_STABLE Release: REL_16_0 [501704e82] 2023-08-22 12:49:40 -0700
Branch: REL_15_STABLE [1d9976d1b] 2023-08-22 12:49:17 -0700
Author: Peter Eisentraut <peter@eisentraut.org>
Branch: master [f234b8cd1] 2023-09-05 11:39:27 +0200
Branch: REL_16_STABLE Release: REL_16_0 [9ddecd406] 2023-09-05 11:39:17 +0200
Branch: REL_15_STABLE [3a788447d] 2023-09-05 11:36:55 +0200
-->
     <para>
      Fix assertion failure in <application>pg_dump</application> when
      it's asked to dump the <literal>pg_catalog</literal> schema (Peter
      Eisentraut)
      <ulink url="&commit_baseurl;1d9976d1b">&sect;</ulink>
      <ulink url="&commit_baseurl;3a788447d">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [06c0c3688] 2023-10-02 13:27:58 -0400
Branch: REL_16_STABLE [aaaf8fbb6] 2023-10-02 13:27:51 -0400
Branch: REL_15_STABLE [10e705bd2] 2023-10-02 13:27:51 -0400
Branch: REL_14_STABLE [829d91cc6] 2023-10-02 13:27:51 -0400
Branch: REL_13_STABLE [295953f8b] 2023-10-02 13:27:51 -0400
Branch: REL_12_STABLE [c02f29758] 2023-10-02 13:27:51 -0400
Branch: REL_11_STABLE [4f16152d9] 2023-10-02 13:27:51 -0400
-->
     <para>
      Fix <application>pg_restore</application> so that selective restores
      will include both table-level and column-level ACLs for selected
      tables (Euler Taveira, Tom Lane)
      <ulink url="&commit_baseurl;10e705bd2">&sect;</ulink>
     </para>

     <para>
      Formerly, only the table-level ACL would get restored if both types
      were present.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [2e3dc8c14] 2023-09-25 14:27:33 +0200
Branch: REL_16_STABLE [fb9ddd0fa] 2023-09-25 14:34:06 +0200
Branch: REL_15_STABLE [8845d8597] 2023-09-25 14:34:06 +0200
Branch: REL_14_STABLE [26c291a15] 2023-09-25 14:34:06 +0200
Branch: REL_13_STABLE [d3946c4f6] 2023-09-25 14:34:05 +0200
Branch: REL_12_STABLE [af9f6cd1d] 2023-09-25 14:34:05 +0200
Author: Peter Eisentraut <peter@eisentraut.org>
Branch: REL_15_STABLE [04d2d605f] 2023-11-03 12:07:11 -0400
Branch: REL_14_STABLE [f9280e77e] 2023-11-03 12:07:25 -0400
Branch: REL_13_STABLE [2f1f49975] 2023-11-03 12:07:35 -0400
Branch: REL_12_STABLE [d3246a2ad] 2023-11-03 12:07:40 -0400
-->
     <para>
      Add logic to <application>pg_upgrade</application> to check for use
      of <type>abstime</type>, <type>reltime</type>,
      and <type>tinterval</type> data types (&Aacute;lvaro Herrera)
      <ulink url="&commit_baseurl;8845d8597">&sect;</ulink>
      <ulink url="&commit_baseurl;04d2d605f">&sect;</ulink>
     </para>

     <para>
      These obsolete data types were removed
      in <productname>PostgreSQL</productname> version 12, so check to
      make sure they aren't present in an older database before claiming
      it can be upgraded.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [e1c6db630] 2023-09-07 14:12:18 +0900
Branch: REL_16_STABLE Release: REL_16_0 [105795843] 2023-09-07 14:12:25 +0900
Branch: REL_15_STABLE [574bff7bd] 2023-09-07 14:12:29 +0900
Branch: REL_14_STABLE [9de74ca70] 2023-09-07 14:12:31 +0900
Branch: REL_13_STABLE [6cdd7b805] 2023-09-07 14:12:33 +0900
Branch: REL_12_STABLE [2fe968ce9] 2023-09-07 14:12:34 +0900
Branch: REL_11_STABLE [dbd1a06c9] 2023-09-07 14:12:36 +0900
-->
     <para>
      Avoid generating invalid temporary slot names
      in <application>pg_basebackup</application> (Jelte Fennema)
      <ulink url="&commit_baseurl;574bff7bd">&sect;</ulink>
     </para>

     <para>
      This has only been seen to occur when the server connection runs
      through <application>pgbouncer</application>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [90ebcc32d] 2023-10-14 15:54:46 -0700
Branch: REL_16_STABLE [06ff06484] 2023-10-14 15:54:49 -0700
Branch: REL_15_STABLE [1102f4ece] 2023-10-14 15:54:49 -0700
Branch: REL_14_STABLE [0df88a686] 2023-10-14 15:54:49 -0700
Branch: REL_13_STABLE [3895e9153] 2023-10-14 15:54:50 -0700
Branch: REL_12_STABLE [73cda80a3] 2023-10-14 15:54:50 -0700
-->
     <para>
      Avoid false <quote>too many client connections</quote> errors
      in <application>pgbench</application> on Windows (Noah Misch)
      <ulink url="&commit_baseurl;1102f4ece">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [6ec9e9975] 2023-10-30 14:46:05 -0700
Branch: REL_16_STABLE [3c6a05b80] 2023-10-30 14:46:08 -0700
Branch: REL_15_STABLE [6f81386a9] 2023-10-30 14:46:08 -0700
Branch: REL_14_STABLE [42496cba6] 2023-10-30 14:46:09 -0700
Branch: REL_13_STABLE [f31ccb575] 2023-10-30 14:46:09 -0700
Branch: REL_12_STABLE [3a205c916] 2023-10-30 14:46:09 -0700
Branch: REL_11_STABLE [e04509f32] 2023-10-30 14:46:09 -0700
-->
     <para>
      In <filename>contrib/amcheck</filename>, do not report interrupted
      page deletion as corruption (Noah Misch)
      <ulink url="&commit_baseurl;6f81386a9">&sect;</ulink>
     </para>

     <para>
      This fix prevents false-positive reports of <quote>the first child
      of leftmost target page is not leftmost of its
      level</quote>, <quote>block NNNN is not leftmost</quote>
      or <quote>left link/right link pair in index XXXX not in
      agreement</quote>.  They appeared
      if <application>amcheck</application> ran after an unfinished btree
      index page deletion and before <command>VACUUM</command> had cleaned
      things up.
     </para>
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [849172ff4] 2023-10-29 11:14:37 +0000
Branch: REL_16_STABLE [ab73a37e9] 2023-10-29 11:14:36 +0000
Branch: REL_15_STABLE [5f0691839] 2023-10-29 11:14:35 +0000
Branch: REL_14_STABLE [162b38a06] 2023-10-29 11:14:34 +0000
Branch: REL_13_STABLE [35e6a5c20] 2023-10-29 11:14:34 +0000
Branch: REL_12_STABLE [f7cd7b265] 2023-10-29 11:14:33 +0000
Branch: REL_11_STABLE [c804ffb56] 2023-10-29 11:14:32 +0000
-->
     <para>
      Fix failure of <filename>contrib/btree_gin</filename> indexes
      on <type>interval</type> columns,
      when an indexscan using the <literal>&lt;</literal>
      or <literal>&lt;=</literal> operator is performed (Dean Rasheed)
      <ulink url="&commit_baseurl;5f0691839">&sect;</ulink>
     </para>

     <para>
      Such an indexscan failed to return all the entries it should.
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [76200e5ee] 2023-10-19 05:13:23 +1300
Branch: REL_16_STABLE [774185056] 2023-10-19 05:14:07 +1300
Branch: REL_15_STABLE [b60e3ac76] 2023-10-19 05:15:38 +1300
Branch: REL_14_STABLE [0a8b7d5c1] 2023-10-19 05:16:00 +1300
Branch: REL_13_STABLE [53c4dabe1] 2023-10-19 05:16:24 +1300
Branch: REL_12_STABLE [7da915e33] 2023-10-19 05:17:27 +1300
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [37d5babb5] 2023-10-18 22:47:23 +1300
Branch: REL_16_STABLE [74d19ec09] 2023-10-18 22:53:56 +1300
Branch: REL_15_STABLE [eed1feb3f] 2023-10-18 22:59:46 +1300
Branch: REL_14_STABLE [82d9a782a] 2023-10-18 23:04:09 +1300
Branch: REL_13_STABLE [f28956b23] 2023-10-18 23:16:48 +1300
Branch: REL_12_STABLE [15ddc9725] 2023-10-18 23:18:16 +1300
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [f90b4a846] 2023-10-19 03:01:55 +1300
Branch: REL_16_STABLE [60596f148] 2023-10-19 03:07:18 +1300
Branch: REL_15_STABLE [b2e097788] 2023-10-19 03:03:27 +1300
Branch: REL_14_STABLE [ee3e4c41f] 2023-10-19 03:03:46 +1300
Branch: REL_13_STABLE [981292c19] 2023-10-19 03:04:00 +1300
Branch: REL_12_STABLE [d701f0d1f] 2023-10-19 03:04:09 +1300
Author: Thomas Munro <tmunro@postgresql.org>
Branch: REL_13_STABLE [7c070e224] 2023-10-24 11:23:08 +1300
Branch: REL_12_STABLE [9ad986276] 2023-10-24 11:23:21 +1300
-->
     <para>
      Add support for LLVM 16 and 17 (Thomas Munro, Dmitry Dolgov)
      <ulink url="&commit_baseurl;b60e3ac76">&sect;</ulink>
      <ulink url="&commit_baseurl;eed1feb3f">&sect;</ulink>
      <ulink url="&commit_baseurl;b2e097788">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [06843df4a] 2023-09-29 14:07:30 -0400
Branch: REL_16_STABLE [75c562653] 2023-09-29 14:07:30 -0400
Branch: REL_15_STABLE [be3398ea1] 2023-09-29 14:07:30 -0400
Branch: REL_14_STABLE [e9d1560d3] 2023-09-29 14:07:30 -0400
Branch: REL_13_STABLE [1b64e374c] 2023-09-29 14:07:30 -0400
Branch: REL_12_STABLE [d8ceb98e4] 2023-09-29 14:07:30 -0400
Branch: REL_11_STABLE [4d10fda52] 2023-09-29 14:07:30 -0400
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [3aa021b29] 2023-09-26 21:06:21 -0400
Branch: REL_16_STABLE [e73d6a0df] 2023-09-26 21:06:21 -0400
Branch: REL_15_STABLE [78f17fb97] 2023-09-26 21:06:21 -0400
Branch: REL_14_STABLE [5d60e8ed3] 2023-09-26 21:06:21 -0400
Branch: REL_13_STABLE [53cc19bfa] 2023-09-26 21:06:21 -0400
Branch: REL_12_STABLE [abe423712] 2023-09-26 21:06:21 -0400
Branch: REL_11_STABLE [0e0de20c8] 2023-09-26 21:06:21 -0400
-->
     <para>
      Suppress assorted build-time warnings on
      recent <productname>macOS</productname> (Tom Lane)
      <ulink url="&commit_baseurl;be3398ea1">&sect;</ulink>
      <ulink url="&commit_baseurl;78f17fb97">&sect;</ulink>
     </para>

     <para>
      <productname>Xcode 15</productname> (released
      with <productname>macOS Sonoma</productname>) changed the linker's
      behavior in a way that causes many duplicate-library warnings while
      building <productname>PostgreSQL</productname>.  These were
      harmless, but they're annoying so avoid citing the same libraries
      twice.  Also remove use of the <option>-multiply_defined
      suppress</option> linker switch, which apparently has been a no-op
      for a long time, and is now actively complained of.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [6fc3a138b] 2023-09-27 14:40:23 +0900
Branch: REL_16_STABLE [641db601b] 2023-09-27 14:41:15 +0900
Branch: REL_15_STABLE [8a9e4e84e] 2023-09-27 14:41:21 +0900
Branch: REL_14_STABLE [e4d7ad30f] 2023-09-27 14:41:23 +0900
Branch: REL_13_STABLE [a64b8b035] 2023-09-27 14:41:26 +0900
-->
     <para>
      When building <filename>contrib/unaccent</filename>'s rules file,
      fall back to using <literal>python</literal>
      if <literal>--with-python</literal> was not given and make
      variable <literal>PYTHON</literal> was not set (Japin Li)
      <ulink url="&commit_baseurl;8a9e4e84e">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [5fd3e06f6] 2023-10-28 11:54:40 -0400
Branch: REL_16_STABLE [d1537afe3] 2023-10-28 11:54:51 -0400
Branch: REL_15_STABLE [85b98a70b] 2023-10-28 11:54:59 -0400
Branch: REL_14_STABLE [877e7b4b9] 2023-10-28 11:55:06 -0400
Branch: REL_13_STABLE [d94612873] 2023-10-28 11:55:14 -0400
Branch: REL_12_STABLE [7180bb827] 2023-10-28 11:55:22 -0400
Branch: REL_11_STABLE [64fc5e005] 2023-10-28 11:55:30 -0400
-->
     <para>
      Remove <literal>PHOT</literal> (Phoenix Islands Time) from the
      default timezone abbreviations list (Tom Lane)
      <ulink url="&commit_baseurl;85b98a70b">&sect;</ulink>
     </para>

     <para>
      Presence of this abbreviation in the default list can cause failures
      on recent Debian and Ubuntu releases, as they no longer install the
      underlying tzdb entry by default.  Since this is a made-up
      abbreviation for a zone with a total human population of about two
      dozen, it seems unlikely that anyone will miss it.  If someone does,
      they can put it back via a custom abbreviations file.
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-15-4">
  <title>Release 15.4</title>

  <formalpara>
  <title>Release date:</title>
  <para>2023-08-10</para>
  </formalpara>

  <para>
   This release contains a variety of fixes from 15.3.
   For information about new features in major release 15, see
   <xref linkend="release-15"/>.
  </para>

  <sect2>
   <title>Migration to Version 15.4</title>

   <para>
    A dump/restore is not required for those running 15.X.
   </para>

   <para>
    However, if you use BRIN indexes, it may be advisable to reindex them;
    see the third changelog entry below.
   </para>

   <para>
    Also, if you are upgrading from a version earlier than 15.1,
    see <xref linkend="release-15-1"/>.
   </para>
  </sect2>

  <sect2>
   <title>Changes</title>

   <itemizedlist>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [cd5f2a357] 2023-08-07 06:05:56 -0700
Branch: REL_16_STABLE [f53511010] 2023-08-07 06:05:59 -0700
Branch: REL_15_STABLE [de494ec14] 2023-08-07 06:06:00 -0700
Branch: REL_14_STABLE [d4648a74b] 2023-08-07 06:06:00 -0700
Branch: REL_13_STABLE [b1b585e0f] 2023-08-07 06:06:00 -0700
Branch: REL_12_STABLE [eb044d8f0] 2023-08-07 06:06:00 -0700
Branch: REL_11_STABLE [919ebb023] 2023-08-07 06:06:01 -0700
-->
     <para>
      Disallow substituting a schema or owner name into an extension script
      if the name contains a quote, backslash, or dollar sign (Noah Misch)
      <ulink url="&commit_baseurl;de494ec14">&sect;</ulink>
     </para>

     <para>
      This restriction guards against SQL-injection hazards for trusted
      extensions.
     </para>

     <para>
      The <productname>PostgreSQL</productname> Project thanks Micah Gates,
      Valerie Woolard, Tim Carey-Smith, and Christoph Berg for reporting
      this problem.
      (CVE-2023-39417)
     </para>
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [c2e08b04c] 2023-08-07 09:28:47 +0100
Branch: REL_16_STABLE [67a007dc0] 2023-08-07 09:27:09 +0100
Branch: REL_15_STABLE [cb2ae5741] 2023-08-07 09:24:27 +0100
-->
     <para>
      Fix <command>MERGE</command> to enforce row security policies
      properly (Dean Rasheed)
      <ulink url="&commit_baseurl;cb2ae5741">&sect;</ulink>
     </para>

     <para>
      When <command>MERGE</command> performs an <literal>UPDATE</literal>
      action, it should enforce any <literal>UPDATE</literal> or
      <literal>SELECT</literal> RLS policies defined on the target table,
      to be consistent with the way that a plain <command>UPDATE</command>
      with a <literal>WHERE</literal> clause works.  Instead it was
      enforcing <literal>INSERT</literal> RLS policies for both
      <literal>INSERT</literal> and <literal>UPDATE</literal> actions.
     </para>

     <para>
      In addition, when <command>MERGE</command> performs a <literal>DO
      NOTHING</literal> action, it applied the target table's
      <literal>DELETE</literal> RLS policies to existing rows, even though
      those rows are not being deleted.  While it's not a security
      problem, this could result in unwanted errors.
     </para>

     <para>
      The <productname>PostgreSQL</productname> Project thanks
      Dean Rasheed for reporting this problem.
      (CVE-2023-39418)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master Release: REL_16_BR [3581cbdcd] 2023-05-19 01:29:44 +0200
Branch: REL_15_STABLE [e18769323] 2023-05-19 00:15:13 +0200
Branch: REL_14_STABLE [40d465caf] 2023-05-19 00:15:00 +0200
Branch: REL_13_STABLE [6c512fc6e] 2023-05-19 00:14:05 +0200
Branch: REL_12_STABLE [d78a66d92] 2023-05-19 00:16:13 +0200
Branch: REL_11_STABLE [fc7dc728d] 2023-05-19 00:21:05 +0200
Branch: master Release: REL_16_BR [3ec8a3bfb] 2023-05-18 23:33:23 +0200
Branch: REL_15_STABLE [80f64b900] 2023-05-18 23:33:45 +0200
Branch: REL_14_STABLE [3f1356e5d] 2023-05-18 23:34:10 +0200
Branch: REL_13_STABLE [2b1ab28b9] 2023-05-18 23:34:35 +0200
Branch: REL_12_STABLE [d42ffda68] 2023-05-18 23:34:56 +0200
Branch: REL_11_STABLE [b511d7323] 2023-05-18 23:35:16 +0200
-->
     <para>
      Fix confusion between empty (no rows) ranges and all-NULL ranges in
      BRIN indexes, as well as incorrect merging of all-NULL summaries
      (Tomas Vondra)
      <ulink url="&commit_baseurl;e18769323">&sect;</ulink>
      <ulink url="&commit_baseurl;80f64b900">&sect;</ulink>
     </para>

     <para>
      Each of these oversights could result in forgetting that a BRIN
      index range contains any NULL values, potentially allowing
      subsequent queries that should return NULL values to miss doing so.
     </para>

     <para>
      This fix will not in itself correct faulty BRIN entries.
      It's recommended to <command>REINDEX</command> any BRIN indexes that
      may be used to search for nulls.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [c66a7d75e] 2023-07-13 13:03:28 -0700
Branch: REL_16_STABLE [a4b4cc1d6] 2023-07-13 13:03:30 -0700
Branch: REL_15_STABLE [f66403749] 2023-07-13 13:04:45 -0700
Branch: REL_14_STABLE [d11efe830] 2023-07-13 13:03:33 -0700
Branch: REL_13_STABLE [81ce00006] 2023-07-13 13:03:34 -0700
Branch: REL_12_STABLE [034a9fcd2] 2023-07-13 13:03:36 -0700
Branch: REL_11_STABLE [1c38e7ae1] 2023-07-13 13:03:37 -0700
-->
     <para>
      Avoid leaving a corrupted database behind when <command>DROP
      DATABASE</command> is interrupted (Andres Freund)
      <ulink url="&commit_baseurl;f66403749">&sect;</ulink>
     </para>

     <para>
      If <command>DROP DATABASE</command> was interrupted after it had
      already begun taking irreversible steps, the target database
      remained accessible (because the removal of
      its <structname>pg_database</structname> row would roll back),
      but it would have corrupt contents.  Fix by marking the database
      as inaccessible before we begin to perform irreversible operations.
      A failure after that will leave the database still partially
      present, but nothing can be done with it except to issue
      another <command>DROP DATABASE</command>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [cfc43aeb3] 2023-06-30 13:54:48 +0900
Branch: REL_16_STABLE [f4691e2e7] 2023-06-30 13:54:53 +0900
Branch: REL_15_STABLE [cb4ac3e56] 2023-06-30 13:54:55 +0900
Branch: REL_14_STABLE [663b35f2d] 2023-06-30 13:54:56 +0900
Branch: REL_13_STABLE [537b70b82] 2023-06-30 13:54:59 +0900
Branch: REL_12_STABLE [dbe0e5c56] 2023-06-30 13:55:02 +0900
Branch: REL_11_STABLE [c75c33de5] 2023-06-30 13:55:07 +0900
-->
     <para>
      Ensure that partitioned indexes are correctly marked as valid or not
      at creation (Michael Paquier)
      <ulink url="&commit_baseurl;cb4ac3e56">&sect;</ulink>
     </para>

     <para>
      If a new partitioned index matches an existing but invalid index on
      one of the partitions, the partitioned index could end up being
      marked valid prematurely.  This could lead to misbehavior or
      assertion failures in subsequent queries on the partitioned table.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master Release: REL_16_BR [fc55c7ff8] 2023-06-28 15:57:31 +0900
Branch: REL_15_STABLE [7aa17b498] 2023-06-28 15:57:43 +0900
Branch: REL_14_STABLE [6160e221d] 2023-06-28 15:57:48 +0900
Branch: REL_13_STABLE [f42844069] 2023-06-28 15:57:51 +0900
Branch: REL_12_STABLE [63b292e73] 2023-06-28 15:57:53 +0900
Branch: REL_11_STABLE [e90e9275f] 2023-06-28 15:57:55 +0900
-->
     <para>
      Ignore invalid child indexes when matching partitioned indexes to
      child indexes during <command>ALTER TABLE ATTACH PARTITION</command>
      (Michael Paquier)
      <ulink url="&commit_baseurl;7aa17b498">&sect;</ulink>
     </para>

     <para>
      Such an index will now be ignored, and a new child index created
      instead.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [38ea6aa90] 2023-07-14 10:12:48 +0900
Branch: REL_16_STABLE [31f9d41d6] 2023-07-14 10:13:14 +0900
Branch: REL_15_STABLE [c0dc97c7b] 2023-07-14 10:13:15 +0900
Branch: REL_14_STABLE [954cc2139] 2023-07-14 10:13:17 +0900
Branch: REL_13_STABLE [c89d74c18] 2023-07-14 10:13:20 +0900
Branch: REL_12_STABLE [f1d6bcdd8] 2023-07-14 10:13:21 +0900
Branch: REL_11_STABLE [ed2b58c15] 2023-07-14 10:13:22 +0900
-->
     <para>
      Fix possible failure when marking a partitioned index valid after
      all of its partitions have been attached (Michael Paquier)
      <ulink url="&commit_baseurl;c0dc97c7b">&sect;</ulink>
     </para>

     <para>
      The update of the index's <structname>pg_index</structname> entry
      could use stale data for other columns.  One reported symptom is
      an <quote>attempted to update invisible tuple</quote> error.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [bd5ddbe86] 2023-07-10 09:40:07 +0900
Branch: REL_16_STABLE [55c95f24c] 2023-07-10 09:40:12 +0900
Branch: REL_15_STABLE [d1e0f408c] 2023-07-10 09:40:14 +0900
Branch: REL_14_STABLE [235e716bc] 2023-07-10 09:40:15 +0900
Branch: REL_13_STABLE [f5b075adc] 2023-07-10 09:40:17 +0900
Branch: REL_12_STABLE [02021f1b2] 2023-07-10 09:40:22 +0900
Branch: REL_11_STABLE [914e72e6e] 2023-07-10 09:40:24 +0900
-->
     <para>
      Fix <command>ALTER EXTENSION SET SCHEMA</command> to complain if the
      extension contains any objects outside the extension's schema
      (Michael Paquier, Heikki Linnakangas)
      <ulink url="&commit_baseurl;d1e0f408c">&sect;</ulink>
     </para>

     <para>
      Erroring out if the extension contains objects in multiple schemas
      was always intended; but the check was mis-coded so that it would
      fail to detect some cases, leading to surprising behavior.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master Release: REL_16_BR [97d891010] 2023-06-30 07:49:01 +0900
Branch: REL_15_STABLE [93401ec02] 2023-06-30 07:49:07 +0900
-->
     <para>
      Fix tracking of tables' access method dependencies (Michael Paquier)
      <ulink url="&commit_baseurl;93401ec02">&sect;</ulink>
     </para>

     <para>
      <command>ALTER TABLE ... SET ACCESS METHOD</command> failed to
      update relevant <structname>pg_depend</structname> entries when
      changing a table's access method.  When using non-built-in access
      methods, this creates a risk that an access method could be dropped
      even though tables still depend on it.  This fix corrects the logic
      in <command>ALTER TABLE</command>, but it will not adjust any
      already-missing <structname>pg_depend</structname> entries.
     </para>
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master Release: REL_16_BR [7fcd7ef2a] 2023-06-19 13:00:42 +1200
Branch: REL_15_STABLE [8f2ec8cc7] 2023-06-19 13:01:29 +1200
Branch: REL_14_STABLE [73f1c17fc] 2023-06-19 13:01:58 +1200
Branch: REL_13_STABLE [06286f8a2] 2023-06-19 13:02:24 +1200
Branch: REL_12_STABLE [dcef5b052] 2023-06-19 13:02:52 +1200
Branch: REL_11_STABLE [f6345f03f] 2023-06-19 13:03:17 +1200
-->
     <para>
      Don't use partial unique indexes for uniqueness proofs in the
      planner (David Rowley)
      <ulink url="&commit_baseurl;8f2ec8cc7">&sect;</ulink>
     </para>

     <para>
      This could give rise to incorrect plans, since the presumed
      uniqueness of rows read from a table might not hold if the index in
      question isn't used to scan the table.
     </para>
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master [990c3650c] 2023-08-07 22:14:21 +1200
Branch: REL_16_STABLE [ae89129aa] 2023-08-07 22:14:54 +1200
Branch: REL_15_STABLE [71662373b] 2023-08-07 22:15:23 +1200
Branch: REL_14_STABLE [bf315354e] 2023-08-07 22:15:50 +1200
-->
     <para>
      Don't Memoize lateral joins with volatile join conditions
      (Richard Guo)
      <ulink url="&commit_baseurl;71662373b">&sect;</ulink>
     </para>

     <para>
      Applying Memoize to a sub-plan that contains volatile filter
      conditions is likely to lead to wrong answers.  The check to avoid
      doing this missed some cases that can arise when
      using <literal>LATERAL</literal>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Etsuro Fujita <efujita@postgresql.org>
Branch: master [6f80a8d9c] 2023-07-28 15:45:00 +0900
Branch: REL_16_STABLE [695f5deb7] 2023-07-28 15:45:01 +0900
Branch: REL_15_STABLE [d1ef5631e] 2023-07-28 15:45:02 +0900
Branch: REL_14_STABLE [b0e390e6d] 2023-07-28 15:45:04 +0900
Branch: REL_13_STABLE [730f983ef] 2023-07-28 15:45:06 +0900
Branch: REL_12_STABLE [9edf72aa7] 2023-07-28 15:45:08 +0900
Branch: REL_11_STABLE [db01f2696] 2023-07-28 15:45:09 +0900
-->
     <para>
      Avoid producing incorrect plans for foreign joins with
      pseudoconstant join clauses (Etsuro Fujita)
      <ulink url="&commit_baseurl;d1ef5631e">&sect;</ulink>
     </para>

     <para>
      The planner currently lacks support for attaching pseudoconstant
      join clauses to a pushed-down remote join, so disable generation
      of remote joins in such cases.  (A better solution will require
      ABI-breaking changes of planner data structures, so it will have to
      wait for a future major release.)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_16_BR [792213f2e] 2023-06-13 15:58:43 -0400
Branch: REL_15_STABLE [cc6974df1] 2023-06-13 15:58:37 -0400
Branch: REL_14_STABLE [d1423c52e] 2023-06-13 15:58:37 -0400
Branch: REL_13_STABLE [a36d0014f] 2023-06-13 15:58:37 -0400
Branch: REL_12_STABLE [b4110bdbf] 2023-06-13 15:58:37 -0400
Branch: REL_11_STABLE [13192a324] 2023-06-13 15:58:37 -0400
-->
     <para>
      Correctly handle sub-SELECTs in RLS policy expressions and
      security-barrier views when expanding rule actions (Tom Lane)
      <ulink url="&commit_baseurl;cc6974df1">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [126552c85] 2023-07-04 09:07:31 +1200
Branch: REL_16_STABLE [12529028a] 2023-07-04 09:04:35 +1200
Branch: REL_15_STABLE [d34aa0a2f] 2023-07-04 09:10:37 +1200
Branch: REL_14_STABLE [fb663f387] 2023-07-04 09:14:16 +1200
Branch: REL_13_STABLE [fc1547384] 2023-07-04 09:20:55 +1200
Branch: REL_12_STABLE [255a925d3] 2023-07-04 09:21:33 +1200
Branch: REL_11_STABLE [13f127800] 2023-07-04 09:40:30 +1200
Branch: master [bcc93a389] 2023-07-04 09:07:31 +1200
Branch: REL_16_STABLE [d03d9a261] 2023-07-04 09:04:35 +1200
Branch: REL_15_STABLE [ab265e985] 2023-07-04 09:10:37 +1200
Branch: REL_14_STABLE [3f7d3a77e] 2023-07-04 09:14:16 +1200
Branch: REL_13_STABLE [8976ac5c5] 2023-07-04 09:20:55 +1200
Branch: REL_12_STABLE [17b8887c2] 2023-07-04 09:21:33 +1200
Branch: REL_11_STABLE [814f3c8e4] 2023-07-04 09:40:30 +1200
Branch: master [f9b7fc651] 2023-07-04 09:07:31 +1200
Branch: REL_16_STABLE [0cb1fb2c9] 2023-07-04 09:04:35 +1200
Branch: REL_15_STABLE [0f275b0ee] 2023-07-04 09:10:37 +1200
Branch: REL_14_STABLE [ae6d536ed] 2023-07-04 09:14:16 +1200
Branch: REL_13_STABLE [8f705d7b9] 2023-07-04 09:20:55 +1200
Branch: REL_12_STABLE [fe88497b4] 2023-07-04 09:21:33 +1200
Branch: REL_11_STABLE [0048c3b51] 2023-07-04 09:27:00 +1200
-->
     <para>
      Fix race conditions in conflict detection
      for <literal>SERIALIZABLE</literal> isolation mode
      (Thomas Munro)
      <ulink url="&commit_baseurl;d34aa0a2f">&sect;</ulink>
      <ulink url="&commit_baseurl;ab265e985">&sect;</ulink>
      <ulink url="&commit_baseurl;0f275b0ee">&sect;</ulink>
     </para>

     <para>
      Conflicts could be missed when using bitmap heap scans, when using
      GIN indexes, and when examining an initially-empty btree index.
      All these cases could lead to serializability failures due to
      improperly allowing conflicting transactions to commit.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_16_BR [70b42f279] 2023-05-19 14:26:40 -0400
Branch: REL_15_STABLE [4729d1e8a] 2023-05-19 14:26:34 -0400
Branch: REL_14_STABLE [f8320cc72] 2023-05-19 14:26:34 -0400
-->
     <para>
      Fix misbehavior of EvalPlanQual checks with inherited or partitioned
      target tables (Tom Lane)
      <ulink url="&commit_baseurl;4729d1e8a">&sect;</ulink>
     </para>

     <para>
      This oversight could lead to update or delete actions
      in <literal>READ COMMITTED</literal> isolation mode getting
      performed when they should have been skipped because of a
      conflicting concurrent update.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_16_BR [45392626c] 2023-06-20 17:47:53 -0400
Branch: REL_15_STABLE [c2f974fff] 2023-06-20 17:47:53 -0400
Branch: REL_14_STABLE [d911dce14] 2023-06-20 17:47:36 -0400
Branch: REL_13_STABLE [2f97105e9] 2023-06-20 17:47:36 -0400
Branch: REL_12_STABLE [9529b1eb1] 2023-06-20 17:47:36 -0400
-->
     <para>
      Fix hash join with an inner-side hash key that contains Params
      coming from an outer nested loop (Tom Lane)
      <ulink url="&commit_baseurl;c2f974fff">&sect;</ulink>
     </para>

     <para>
      When rescanning the join after the values of such Params have
      changed, we must rebuild the hash table, but neglected to do so.
      This could result in missing join output rows.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_16_BR [43af714de] 2023-06-29 10:19:10 -0400
Branch: REL_15_STABLE [cc8cca3c2] 2023-06-29 10:19:10 -0400
Branch: REL_14_STABLE [0789b82a9] 2023-06-29 10:19:10 -0400
Branch: REL_13_STABLE [d0ab203bc] 2023-06-29 10:19:10 -0400
Branch: REL_12_STABLE [53b93e853] 2023-06-29 10:19:10 -0400
Branch: REL_11_STABLE [7f11b7a9c] 2023-06-29 10:19:10 -0400
-->
     <para>
      Fix intermittent failures when trying to update a field of a
      composite column (Tom Lane)
      <ulink url="&commit_baseurl;cc8cca3c2">&sect;</ulink>
     </para>

     <para>
      If the overall value of the composite column is wide enough to
      require out-of-line toasting, then an unluckily-timed cache flush
      could cause errors or server crashes.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master Release: REL_16_BR [f24523672] 2023-06-07 18:54:34 +0200
Branch: REL_15_STABLE [ee87f8b63] 2023-06-07 18:52:21 +0200
Branch: REL_14_STABLE [7f528e96c] 2023-06-07 18:53:04 +0200
Branch: REL_13_STABLE [c504aa857] 2023-06-07 18:53:16 +0200
Branch: REL_12_STABLE [54e1b8587] 2023-06-07 18:53:30 +0200
Branch: master [ce5aaea8c] 2023-07-02 22:21:02 +0200
Branch: REL_16_STABLE [9cf85093b] 2023-07-02 22:22:31 +0200
Branch: REL_15_STABLE [7ae4e7868] 2023-07-02 22:22:50 +0200
Branch: REL_14_STABLE [260dbf19a] 2023-07-02 22:23:04 +0200
Branch: REL_13_STABLE [984c23f6f] 2023-07-02 22:23:20 +0200
-->
     <para>
      Prevent query-lifespan memory leaks in some <command>UPDATE</command>
      queries with triggers (Tomas Vondra)
      <ulink url="&commit_baseurl;ee87f8b63">&sect;</ulink>
      <ulink url="&commit_baseurl;7ae4e7868">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [98640f960] 2023-07-02 20:03:30 +0200
Branch: REL_16_STABLE [9ae7b5d1f] 2023-07-02 20:04:16 +0200
Branch: REL_15_STABLE [0c5fe4ff6] 2023-07-02 20:04:40 +0200
Branch: REL_14_STABLE [c1affa38c] 2023-07-02 20:05:14 +0200
Branch: REL_13_STABLE [3ce761d5c] 2023-07-02 20:05:35 +0200
-->
     <para>
      Prevent query-lifespan memory leaks when an Incremental Sort plan
      node is rescanned (James Coleman, Laurenz Albe, Tom Lane)
      <ulink url="&commit_baseurl;0c5fe4ff6">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_16_BR [7398e2722] 2023-06-12 10:54:44 -0400
Branch: REL_15_STABLE [bd590d1fe] 2023-06-12 10:54:28 -0400
Branch: REL_14_STABLE [5eaa05f63] 2023-06-12 10:54:28 -0400
Branch: REL_13_STABLE [6f23b5f74] 2023-06-12 10:54:28 -0400
-->
     <para>
      Accept fractional seconds in the input to <type>jsonpath</type>'s
      <function>datetime()</function> method (Tom Lane)
      <ulink url="&commit_baseurl;bd590d1fe">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_16_BR [691594acd] 2023-06-24 17:18:08 -0400
Branch: REL_15_STABLE [a77d90171] 2023-06-24 17:18:08 -0400
Branch: REL_14_STABLE [4c61afa47] 2023-06-24 17:18:08 -0400
Branch: REL_13_STABLE [b6ab18a99] 2023-06-24 17:18:08 -0400
Branch: REL_12_STABLE [3b4580f5c] 2023-06-24 17:18:08 -0400
Branch: REL_11_STABLE [c7f33a197] 2023-06-24 17:18:08 -0400
-->
     <para>
      Prevent stack-overflow crashes with very complex text search
      patterns (Tom Lane)
      <ulink url="&commit_baseurl;a77d90171">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [38df84c65] 2023-07-27 11:56:35 -0400
Branch: REL_16_STABLE [de3f0e3fe] 2023-07-27 11:56:35 -0400
Branch: REL_15_STABLE [313ceda2f] 2023-07-27 12:07:48 -0400
Branch: REL_14_STABLE [341996248] 2023-07-27 12:07:48 -0400
Branch: REL_13_STABLE [288b4288c] 2023-07-27 12:07:48 -0400
Branch: REL_12_STABLE [0660f74e8] 2023-07-27 12:07:48 -0400
Branch: REL_11_STABLE [1d031ad54] 2023-07-27 12:07:48 -0400
-->
     <para>
      Allow tokens up to 10240 bytes long
      in <filename>pg_hba.conf</filename>
      and <filename>pg_ident.conf</filename> (Tom Lane)
      <ulink url="&commit_baseurl;313ceda2f">&sect;</ulink>
     </para>

     <para>
      The previous limit of 256 bytes has been found insufficient for some
      use-cases.
     </para>
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: REL_15_STABLE [a5f312c58] 2023-07-06 13:05:25 +0300
-->
     <para>
      Ensure that all existing placeholders are checked for matches when
      an extension declares its GUC prefix to be reserved (Karina
      Litskevich, Ekaterina Sokolova)
      <ulink url="&commit_baseurl;a5f312c58">&sect;</ulink>
     </para>

     <para>
      Faulty loop logic could cause some entries to be skipped.
     </para>
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master [4f4d73466] 2023-07-05 13:13:13 +0300
Branch: REL_16_STABLE [dc0b58417] 2023-07-05 13:25:59 +0300
Branch: REL_15_STABLE [fa96a74a0] 2023-07-05 13:13:30 +0300
Branch: REL_14_STABLE [bfb493dba] 2023-07-05 13:13:35 +0300
Branch: REL_13_STABLE [59c2a6fe9] 2023-07-05 13:13:39 +0300
Branch: REL_12_STABLE [162aa47c3] 2023-07-05 13:14:24 +0300
Branch: REL_11_STABLE [2316ff1ae] 2023-07-05 13:14:33 +0300
-->
     <para>
      Fix mishandling of C++ out-of-memory conditions (Heikki Linnakangas)
      <ulink url="&commit_baseurl;fa96a74a0">&sect;</ulink>
     </para>

     <para>
      If JIT is in use, running out of memory in a
      C++ <function>new</function> call would lead to
      a <productname>PostgreSQL</productname> FATAL error, instead of the
      expected C++ exception.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [9089287aa] 2023-07-20 14:23:46 -0400
Branch: REL_16_STABLE [c0f531396] 2023-07-20 14:23:46 -0400
Branch: REL_15_STABLE [fbaf65cd6] 2023-07-20 14:23:46 -0400
Branch: REL_14_STABLE [10fd061bb] 2023-07-20 14:23:46 -0400
Branch: REL_13_STABLE [291c02540] 2023-07-20 14:23:46 -0400
-->
     <para>
      Fix rare null-pointer crash in <filename>plancache.c</filename>
      (Tom Lane)
      <ulink url="&commit_baseurl;fbaf65cd6">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Masahiko Sawada <msawada@postgresql.org>
Branch: master [68a59f9e9] 2023-07-05 14:49:46 +0900
Branch: REL_16_STABLE [be8cae7e2] 2023-07-05 14:49:58 +0900
Branch: REL_15_STABLE [66f8a1397] 2023-07-05 14:49:53 +0900
-->
     <para>
      Avoid leaking a stats entry for a subscription when it is dropped
      (Masahiko Sawada)
      <ulink url="&commit_baseurl;66f8a1397">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [03f80daac] 2023-07-04 15:16:47 +1200
Branch: REL_16_STABLE [af8f9ec66] 2023-07-04 15:21:36 +1200
Branch: REL_15_STABLE [9ffb10f18] 2023-07-04 15:24:42 +1200
Branch: REL_14_STABLE [b7ec66731] 2023-07-04 15:26:42 +1200
Branch: REL_13_STABLE [a0003572f] 2023-07-04 15:28:29 +1200
Branch: REL_12_STABLE [74ad9b0d1] 2023-07-04 15:29:41 +1200
Branch: REL_11_STABLE [1605623ec] 2023-07-04 16:13:12 +1200
-->
     <para>
      Avoid losing track of possibly-useful shared memory segments when a
      page free results in coalescing ranges of free space (Dongming Liu)
      <ulink url="&commit_baseurl;9ffb10f18">&sect;</ulink>
     </para>

     <para>
      Ensure that the segment is moved into the
      appropriate <quote>bin</quote> for its new amount of free space, so
      that it will be found by subsequent searches.
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Geoghegan <pg@bowt.ie>
Branch: master Release: REL_16_BR [5f0762f14] 2023-06-21 17:41:58 -0700
Branch: REL_15_STABLE [642bec1f8] 2023-06-21 17:41:56 -0700
Branch: REL_14_STABLE [63fa0deb3] 2023-06-21 17:41:54 -0700
Branch: REL_13_STABLE [b6311824f] 2023-06-21 17:41:52 -0700
Branch: REL_12_STABLE [355917c07] 2023-06-21 17:41:50 -0700
Branch: REL_11_STABLE [7ddba19eb] 2023-06-21 17:41:48 -0700
Branch: master Release: REL_16_BR [5abff197c] 2023-05-25 15:33:00 -0700
Branch: REL_15_STABLE [6983a5112] 2023-05-25 15:32:57 -0700
Branch: REL_14_STABLE [322c9b340] 2023-05-25 15:32:53 -0700
Branch: REL_13_STABLE [8f876d15c] 2023-05-25 15:32:50 -0700
Branch: REL_12_STABLE [188dad680] 2023-05-25 15:32:48 -0700
Branch: REL_11_STABLE [a72b503ca] 2023-05-25 15:32:45 -0700
-->
     <para>
      Allow <command>VACUUM</command> to continue after detecting certain
      types of b-tree index corruption (Peter Geoghegan)
      <ulink url="&commit_baseurl;642bec1f8">&sect;</ulink>
      <ulink url="&commit_baseurl;6983a5112">&sect;</ulink>
     </para>

     <para>
      If an invalid sibling-page link is detected, log the issue and press
      on, rather than throwing an error as before.  Nothing short
      of <command>REINDEX</command> will fix the broken index, but
      preventing <command>VACUUM</command> from completing until that is
      done risks making matters far worse.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [83ecfa9fa] 2023-07-13 13:03:28 -0700
Branch: REL_16_STABLE [03ccc9569] 2023-07-13 13:03:30 -0700
Branch: REL_15_STABLE [82e97b864] 2023-07-13 13:03:31 -0700
Branch: REL_14_STABLE [e246fd423] 2023-07-13 13:03:33 -0700
Branch: REL_13_STABLE [53336e8f6] 2023-07-13 13:03:34 -0700
Branch: REL_12_STABLE [7aec84e4c] 2023-07-13 13:03:36 -0700
Branch: REL_11_STABLE [1386f0987] 2023-07-13 13:03:37 -0700
-->
     <para>
      Ensure that <varname>WrapLimitsVacuumLock</varname> is released
      after <command>VACUUM</command> detects invalid data
      in <structname>pg_database</structname>.<structfield>datfrozenxid</structfield>
      or <structname>pg_database</structname>.<structfield>datminmxid</structfield>
      (Andres Freund)
      <ulink url="&commit_baseurl;82e97b864">&sect;</ulink>
     </para>

     <para>
      Failure to release this lock could lead to a deadlock later,
      although the lock would be cleaned up if the session exits or
      encounters some other error.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [cb0cca188] 2023-07-18 13:43:44 +0900
Branch: REL_16_STABLE [f88bc9f38] 2023-07-18 13:44:27 +0900
Branch: REL_15_STABLE [a878eff6b] 2023-07-18 13:44:29 +0900
Branch: REL_14_STABLE [442749100] 2023-07-18 13:44:31 +0900
Branch: REL_13_STABLE [db59108a2] 2023-07-18 13:44:33 +0900
Branch: REL_12_STABLE [d2ee542a2] 2023-07-18 13:44:34 +0900
Branch: REL_11_STABLE [bc0581f8f] 2023-07-18 13:44:35 +0900
Branch: master [4e465aac3] 2023-07-18 14:04:31 +0900
Branch: REL_16_STABLE [926aa6d11] 2023-07-18 14:04:46 +0900
Branch: REL_15_STABLE [f6ecd2622] 2023-07-18 14:04:48 +0900
Branch: REL_14_STABLE [763d26205] 2023-07-18 14:04:50 +0900
Branch: REL_13_STABLE [b3ca4f0a5] 2023-07-18 14:04:51 +0900
Branch: REL_12_STABLE [410a0d6bd] 2023-07-18 14:04:52 +0900
Branch: REL_11_STABLE [6c7bffc09] 2023-07-18 14:04:54 +0900
-->
     <para>
      Avoid double replay of prepared transactions during crash
      recovery (suyu.cmj, Michael Paquier)
      <ulink url="&commit_baseurl;a878eff6b">&sect;</ulink>
      <ulink url="&commit_baseurl;f6ecd2622">&sect;</ulink>
     </para>

     <para>
      After a crash partway through a checkpoint with some two-phase
      transaction state data already flushed to disk by this checkpoint,
      crash recovery could attempt to replay the prepared transaction(s)
      twice, leading to a fatal error such as <quote>lock is already
      held</quote> in the startup process.
     </para>
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master [4b4798e13] 2023-07-04 17:57:03 +0300
Branch: REL_16_STABLE [d431644b4] 2023-07-04 18:04:27 +0300
Branch: REL_15_STABLE [e24c02e4d] 2023-07-04 18:07:27 +0300
Branch: REL_14_STABLE [d85bf0719] 2023-07-04 18:07:46 +0300
Branch: REL_13_STABLE [acc8cdff4] 2023-07-04 18:08:08 +0300
Branch: REL_12_STABLE [1b4f1c6f8] 2023-07-04 18:08:26 +0300
Branch: REL_11_STABLE [6377f705c] 2023-07-04 18:08:40 +0300
-->
     <para>
      Ensure that a newly created, but still empty table
      is <function>fsync</function>'ed at the next checkpoint (Heikki
      Linnakangas)
      <ulink url="&commit_baseurl;e24c02e4d">&sect;</ulink>
     </para>

     <para>
      Without this, if there is an operating system crash causing the
      empty file to disappear, subsequent operations on the table might
      fail with <quote>could not open file</quote> errors.
     </para>
    </listitem>

    <listitem>
<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
Branch: master [3142a8845] 2023-07-06 17:25:29 +0300
Branch: REL_16_STABLE [bf7b70e6b] 2023-07-06 17:28:50 +0300
Branch: REL_15_STABLE [25624c5d3] 2023-07-06 17:29:12 +0300
Branch: REL_14_STABLE [32f327f68] 2023-07-06 17:29:13 +0300
Branch: REL_13_STABLE [c50b869ed] 2023-07-06 17:29:14 +0300
Branch: REL_12_STABLE [80abec387] 2023-07-06 17:29:15 +0300
Branch: REL_11_STABLE [988719b88] 2023-07-06 17:29:16 +0300
-->
     <para>
      Ensure that creation of the init fork of an unlogged index is
      WAL-logged (Heikki Linnakangas)
      <ulink url="&commit_baseurl;25624c5d3">&sect;</ulink>
     </para>

     <para>
      While an unlogged index's main data fork is not WAL-logged, its init
      fork should be, to ensure that we have a consistent state to restore
      the index to after a crash.  This step was missed if the init fork
      contains no data, which is a case not used by any standard index AM;
      but perhaps some extension behaves that way.
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [4637a6ac0] 2023-07-03 11:16:27 +1200
Branch: REL_16_STABLE [76d5966b3] 2023-07-03 11:21:56 +1200
Branch: REL_15_STABLE [f50200c01] 2023-07-03 11:22:10 +1200
-->
     <para>
      Silence bogus <quote>missing contrecord</quote> errors (Thomas Munro)
      <ulink url="&commit_baseurl;f50200c01">&sect;</ulink>
     </para>

     <para>
      Treat this case as plain end-of-WAL to avoid logging inaccurate
      complaints from <application>pg_waldump</application>
      and <application>walsender</application>.
     </para>
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master [deae1657e] 2023-08-02 01:39:47 +1200
Branch: REL_16_STABLE [b25acc302] 2023-08-02 01:40:27 +1200
Branch: REL_15_STABLE [67f3a697b] 2023-08-02 01:40:56 +1200
Branch: REL_14_STABLE [f457f2ef1] 2023-08-02 01:41:21 +1200
Branch: REL_13_STABLE [74a5bf1b6] 2023-08-02 01:41:55 +1200
Branch: REL_12_STABLE [668990980] 2023-08-02 01:44:31 +1200
-->
     <para>
      Fix overly strict assertion in <type>jsonpath</type> code
      (David Rowley)
      <ulink url="&commit_baseurl;67f3a697b">&sect;</ulink>
     </para>

     <para>
      This assertion failed if a query applied
      the <literal>.type()</literal> operator to
      a <literal>like_regex</literal> result.
      There was no bug in non-assert builds.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_16_BR [555b929bb] 2023-06-21 11:07:24 -0400
Branch: REL_15_STABLE [cb74f7bec] 2023-06-21 11:07:11 -0400
Branch: REL_14_STABLE [120ea65b8] 2023-06-21 11:07:11 -0400
Branch: REL_13_STABLE [d1fc0f382] 2023-06-21 11:07:11 -0400
Branch: REL_12_STABLE [a98a04005] 2023-06-21 11:07:11 -0400
Branch: REL_11_STABLE [a8be2356c] 2023-06-21 11:07:11 -0400
-->
     <para>
      Avoid assertion failure when processing an empty statement via the
      extended query protocol in an already-aborted transaction (Tom Lane)
      <ulink url="&commit_baseurl;cb74f7bec">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master Release: REL_16_BR [605994651] 2023-05-10 11:24:30 +0900
Branch: REL_15_STABLE [ccd21e1cf] 2023-05-10 11:24:40 +0900
-->
     <para>
      Avoid assertion failure when
      the <varname>stats_fetch_consistency</varname> setting is changed
      intra-transaction (Kyotaro Horiguchi)
      <ulink url="&commit_baseurl;ccd21e1cf">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_16_BR [1d369c9e9] 2023-05-16 10:53:42 -0400
Branch: REL_15_STABLE [eaf99e4c4] 2023-05-16 10:53:42 -0400
Branch: REL_14_STABLE [ccd362325] 2023-05-16 10:53:42 -0400
Branch: REL_13_STABLE [0409c7fc7] 2023-05-16 10:53:42 -0400
Branch: REL_12_STABLE [0966291a4] 2023-05-16 10:53:42 -0400
Branch: REL_11_STABLE [8084bf9a4] 2023-05-16 10:53:42 -0400
-->
     <para>
      Fix <filename>contrib/fuzzystrmatch</filename>'s
      Soundex <function>difference()</function> function to handle empty
      input sanely (Alexander Lakhin, Tom Lane)
      <ulink url="&commit_baseurl;eaf99e4c4">&sect;</ulink>
     </para>

     <para>
      An input string containing no alphabetic characters resulted in
      unpredictable output.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master Release: REL_16_BR [d522b05c8] 2023-06-12 09:14:03 +0900
Branch: REL_15_STABLE [3a5222a43] 2023-06-12 09:14:13 +0900
Branch: REL_14_STABLE [e0e682945] 2023-06-12 09:14:14 +0900
Branch: REL_13_STABLE [78bf0a256] 2023-06-12 09:14:17 +0900
Branch: REL_12_STABLE [edf1de65e] 2023-06-12 09:14:19 +0900
Branch: REL_11_STABLE [bbfc26d86] 2023-06-12 09:14:20 +0900
-->
     <para>
      Tighten whitespace checks in <filename>contrib/hstore</filename>
      input (Evan Jones)
      <ulink url="&commit_baseurl;3a5222a43">&sect;</ulink>
     </para>

     <para>
      In some cases, characters would be falsely recognized as whitespace
      and hence discarded.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master Release: REL_16_BR [c00fbe89d] 2023-06-15 13:45:34 +0900
Branch: REL_15_STABLE [4be308ede] 2023-06-15 13:45:38 +0900
Branch: REL_14_STABLE [019a40d61] 2023-06-15 13:45:40 +0900
Branch: REL_13_STABLE [ae9aac64a] 2023-06-15 13:45:41 +0900
Branch: REL_12_STABLE [6ecc1c02a] 2023-06-15 13:45:42 +0900
Branch: REL_11_STABLE [ab40b0395] 2023-06-15 13:45:44 +0900
-->
     <para>
      Disallow oversize input arrays
      with <filename>contrib/intarray</filename>'s
      <literal>gist__int_ops</literal> index opclass (Ankit Kumar Pandey,
      Alexander Lakhin)
      <ulink url="&commit_baseurl;4be308ede">&sect;</ulink>
     </para>

     <para>
      Previously this code would report a <literal>NOTICE</literal> but
      press on anyway, creating an invalid index entry that presents a
      risk of crashes when the index is read.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [8aac9759b] 2023-07-13 13:07:51 -0400
Branch: REL_16_STABLE [e27f3f52c] 2023-07-13 13:08:08 -0400
Branch: REL_15_STABLE [5cb461989] 2023-07-13 13:08:17 -0400
Branch: REL_14_STABLE [a6991f763] 2023-07-13 13:08:23 -0400
Branch: REL_13_STABLE [7fffcc2ee] 2023-07-13 13:08:28 -0400
Branch: REL_12_STABLE [8d8f37149] 2023-07-13 13:08:33 -0400
Branch: REL_11_STABLE [9f70f6d4c] 2023-07-13 13:08:40 -0400
-->
     <para>
      Avoid useless double decompression of GiST index entries
      in <filename>contrib/intarray</filename> (Konstantin Knizhnik,
      Matthias van de Meent, Tom Lane)
      <ulink url="&commit_baseurl;5cb461989">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master Release: REL_16_BR [e7bff46e5] 2023-05-19 12:37:58 +0900
Branch: REL_15_STABLE [2dd778221] 2023-05-19 12:38:15 +0900
Branch: REL_14_STABLE [e72580232] 2023-05-19 12:38:18 +0900
-->
     <para>
      Fix <filename>contrib/pageinspect</filename>'s
      <function>gist_page_items()</function> function to work when there
      are included index columns (Alexander Lakhin, Michael Paquier)
      <ulink url="&commit_baseurl;2dd778221">&sect;</ulink>
     </para>

     <para>
      Previously, if the index has included
      columns, <function>gist_page_items()</function> would fail to
      display those values on index leaf pages, or crash outright on
      non-leaf pages.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_16_BR [51b2c0879] 2023-05-12 16:11:14 -0400
Branch: REL_15_STABLE [bc478a0a8] 2023-05-12 16:11:14 -0400
-->
     <para>
      In <application>psql</application>, ignore
      the <envar>PSQL_WATCH_PAGER</envar> environment variable when
      stdin/stdout are not a terminal (Tom Lane)
      <ulink url="&commit_baseurl;bc478a0a8">&sect;</ulink>
     </para>

     <para>
      This corresponds to the treatment of <envar>PSQL_PAGER</envar> in
      commands besides <command>\watch</command>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_16_BR [016107478] 2023-06-04 13:05:54 -0400
Branch: REL_15_STABLE [ca9e79274] 2023-06-04 13:05:54 -0400
Branch: REL_14_STABLE [d6f549d7a] 2023-06-04 13:05:54 -0400
-->
     <para>
      Fix <application>pg_dump</application> to correctly handle new-style
      SQL-language functions whose bodies require parse-time dependencies
      on unique indexes (Tom Lane)
      <ulink url="&commit_baseurl;ca9e79274">&sect;</ulink>
     </para>

     <para>
      Such cases can arise from <literal>GROUP BY</literal>
      and <literal>ON CONFLICT</literal> clauses, for example.  The
      function must then be postponed until after the unique index in the
      dump output, but <application>pg_dump</application> did not do that
      and instead printed a warning about <quote>could not resolve
      dependency loop</quote>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master Release: REL_16_BR [b3f32a6c3] 2023-06-04 11:22:05 -0400
Branch: REL_15_STABLE [751ba1a7c] 2023-06-04 11:22:05 -0400
-->
     <para>
      Improve <application>pg_dump</application>'s display of details
      about dependency-loop problems (Tom Lane)
      <ulink url="&commit_baseurl;751ba1a7c">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master Release: REL_16_BR [8f5e42d33] 2023-05-25 12:36:18 +0200
Branch: REL_15_STABLE [34f511965] 2023-05-25 12:36:18 +0200
-->
     <para>
      Avoid crash in <application>pgbench</application> with an empty
      pipeline and prepared mode (&Aacute;lvaro Herrera)
      <ulink url="&commit_baseurl;34f511965">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [a5ea825f9] 2023-07-14 11:15:34 +0900
Branch: REL_16_STABLE [27da47122] 2023-07-14 11:16:03 +0900
Branch: REL_15_STABLE [eb3abec4b] 2023-07-14 11:16:06 +0900
Branch: REL_14_STABLE [7af65523a] 2023-07-14 11:16:08 +0900
Branch: REL_13_STABLE [bdaaf1bf1] 2023-07-14 11:16:10 +0900
Branch: REL_12_STABLE [7d27493b7] 2023-07-14 11:16:11 +0900
Branch: REL_11_STABLE [db9813819] 2023-07-14 11:16:13 +0900
-->
     <para>
      Ensure
      that <structname>pg_index</structname>.<structfield>indisreplident</structfield>
      is kept up-to-date in relation cache entries (Shruthi Gowda)
      <ulink url="&commit_baseurl;eb3abec4b">&sect;</ulink>
     </para>

     <para>
      This value could be stale in some cases.  There is no core code that
      relies on the relation cache's copy, so this is only a latent bug as
      far as Postgres itself is concerned; but there may be extensions for
      which it is a live bug.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tatsuo Ishii <ishii@postgresql.org>
Branch: master Release: REL_16_BR [ae66716bf] 2023-06-14 11:02:50 +0900
Branch: REL_15_STABLE [af26f28b9] 2023-06-14 11:11:18 +0900
-->
     <para>
      Fix <application>make_etags</application> script to work with
      non-Exuberant <application>ctags</application> (Masahiko Sawada)
      <ulink url="&commit_baseurl;af26f28b9">&sect;</ulink>
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-15-3">
  <title>Release 15.3</title>

  <formalpara>
  <title>Release date:</title>
  <para>2023-05-11</para>
  </formalpara>

  <para>
   This release contains a variety of fixes from 15.2.
   For information about new features in major release 15, see
   <xref linkend="release-15"/>.
  </para>

  <sect2>
   <title>Migration to Version 15.3</title>

   <para>
    A dump/restore is not required for those running 15.X.
   </para>

   <para>
    However, if you are upgrading from a version earlier than 15.1,
    see <xref linkend="release-15-1"/>.
   </para>
  </sect2>

  <sect2>
   <title>Changes</title>

   <itemizedlist>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [681d9e462] 2023-05-08 06:14:07 -0700
Branch: REL_15_STABLE [dbd5795e7] 2023-05-08 06:14:11 -0700
Branch: REL_14_STABLE [01e8182c7] 2023-05-08 06:14:11 -0700
Branch: REL_13_STABLE [2212f7db8] 2023-05-08 06:14:12 -0700
Branch: REL_12_STABLE [78119a0bf] 2023-05-08 06:14:12 -0700
Branch: REL_11_STABLE [23cb8eaeb] 2023-05-08 06:14:12 -0700
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [8d525d7b9] 2023-05-08 11:24:47 -0400
Branch: REL_15_STABLE [1b761d896] 2023-05-08 11:24:47 -0400
Branch: REL_14_STABLE [1913f63dc] 2023-05-08 11:24:47 -0400
Branch: REL_13_STABLE [feb9e7fbb] 2023-05-08 11:24:47 -0400
Branch: REL_12_STABLE [2cd843cc9] 2023-05-08 11:24:47 -0400
Branch: REL_11_STABLE [766e06140] 2023-05-08 11:24:47 -0400
-->
     <para>
      Prevent <command>CREATE SCHEMA</command> from defeating changes
      in <varname>search_path</varname> (Alexander Lakhin)
      <ulink url="&commit_baseurl;dbd5795e7">&sect;</ulink>
      <ulink url="&commit_baseurl;1b761d896">&sect;</ulink>
     </para>

     <para>
      Within a <command>CREATE SCHEMA</command> command, objects in the
      prevailing <varname>search_path</varname>, as well as those in the
      newly-created schema, would be visible even within a called
      function or script that attempted to set a
      secure <varname>search_path</varname>.  This could allow any user
      having permission to create a schema to hijack the privileges of a
      security definer function or extension script.
     </para>

     <para>
      The <productname>PostgreSQL</productname> Project thanks
      Alexander Lakhin for reporting this problem.
      (CVE-2023-2454)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [ca73753b0] 2023-05-08 10:12:44 -0400
Branch: REL_15_STABLE [04e560604] 2023-05-08 10:12:44 -0400
Branch: REL_14_STABLE [f8d799eda] 2023-05-08 10:12:44 -0400
Branch: REL_13_STABLE [b8e28f04f] 2023-05-08 10:12:44 -0400
Branch: REL_12_STABLE [ee87b482c] 2023-05-08 10:12:45 -0400
Branch: REL_11_STABLE [473626cf0] 2023-05-08 10:12:45 -0400
-->
     <para>
      Enforce row-level security policies correctly after inlining a
      set-returning function (Stephen Frost, Tom Lane)
      <ulink url="&commit_baseurl;04e560604">&sect;</ulink>
     </para>

     <para>
      If a set-returning SQL-language function refers to a table having
      row-level security policies, and it can be inlined into a calling
      query, those RLS policies would not get enforced properly in some
      cases involving re-using a cached plan under a different role.
      This could allow a user to see or modify rows that should have been
      invisible.
     </para>

     <para>
      The <productname>PostgreSQL</productname> Project thanks
      Wolfgang Walther for reporting this problem.
      (CVE-2023-2455)
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [8a8661828] 2023-02-22 10:14:52 +0900
Branch: REL_15_STABLE [fa5dd460c] 2023-02-22 10:14:56 +0900
-->
     <para>
      Fix potential corruption of the template (source) database after
      <command>CREATE DATABASE</command> with the <literal>STRATEGY
      WAL_LOG</literal> option (Nathan Bossart, Ryo Matsumura)
      <ulink url="&commit_baseurl;fa5dd460c">&sect;</ulink>
     </para>

     <para>
      Improper buffer handling created a risk that any later modification
      of the template's <structname>pg_class</structname> catalog would be
      lost.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [5df319f3d] 2023-03-22 09:20:34 -0700
Branch: REL_15_STABLE [560bb56c6] 2023-03-22 09:26:23 -0700
-->
     <para>
      Fix memory leakage and unnecessary disk reads
      during <command>CREATE DATABASE</command> with the <literal>STRATEGY
      WAL_LOG</literal> option (Andres Freund)
      <ulink url="&commit_baseurl;560bb56c6">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [4dadd660f] 2023-04-28 19:29:12 +0900
Branch: REL_15_STABLE [b9ad73ad2] 2023-04-28 19:29:36 +0900
Branch: REL_14_STABLE [d29eba198] 2023-04-28 19:29:38 +0900
Branch: REL_13_STABLE [7e95a33b4] 2023-04-28 19:29:40 +0900
Branch: REL_12_STABLE [63f7e91ec] 2023-04-28 19:29:42 +0900
Branch: REL_11_STABLE [a9212716b] 2023-04-28 19:29:44 +0900
-->
     <para>
      Avoid crash when the new schema name is omitted
      in <command>CREATE SCHEMA</command> (Michael Paquier)
      <ulink url="&commit_baseurl;b9ad73ad2">&sect;</ulink>
     </para>

     <para>
      The SQL standard allows writing <literal>CREATE SCHEMA AUTHORIZATION
      <replaceable>owner_name</replaceable></literal>, with the schema
      name defaulting to <replaceable>owner_name</replaceable>.  However
      some code paths expected the schema name to be present and would
      fail.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [326a33a28] 2023-03-28 11:39:24 -0400
Branch: REL_15_STABLE [bf5c4b3d9] 2023-03-28 11:36:50 -0400
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [e3ac85014] 2023-03-15 11:59:18 -0400
Branch: REL_15_STABLE [3908d6ae1] 2023-03-15 11:59:18 -0400
-->
     <para>
      Fix various planner failures with <command>MERGE</command>
      commands (Tom Lane)
      <ulink url="&commit_baseurl;bf5c4b3d9">&sect;</ulink>
      <ulink url="&commit_baseurl;3908d6ae1">&sect;</ulink>
     </para>

     <para>
      Planning could fail with errors like <quote>variable not found in
      subplan target list</quote> or <quote>PlaceHolderVar found where not
      expected</quote>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [7b14e20b1] 2023-03-13 11:12:20 +0000
Branch: REL_15_STABLE [da6257eee] 2023-03-13 11:11:10 +0000
Branch: master [80a48e0f2] 2023-02-22 09:39:09 +0000
Branch: REL_15_STABLE [018af1cc1] 2023-02-22 09:41:28 +0000
-->
     <para>
      Fix the row count reported by <command>MERGE</command> for some
      corner cases (Dean Rasheed)
      <ulink url="&commit_baseurl;da6257eee">&sect;</ulink>
      <ulink url="&commit_baseurl;018af1cc1">&sect;</ulink>
     </para>

     <para>
      The row count reported in the command tag counted rows that actually
      hadn't been modified due to a <literal>BEFORE ROW</literal> trigger
      returning NULL.  This is inconsistent with what happens in
      plain <command>UPDATE</command> or <command>DELETE</command>, so
      change it to not count such rows.  Also, avoid counting a row twice
      when <command>MERGE</command> moves it into a different partition of
      a partitioned table.
     </para>
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [9321c79c8] 2023-03-13 10:22:22 +0000
Branch: REL_15_STABLE [7d9a75713] 2023-03-13 10:23:42 +0000
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [fd923b5de] 2023-02-15 20:37:44 +0100
Branch: REL_15_STABLE [5d8ec1b9f] 2023-02-15 20:37:44 +0100
-->
     <para>
      Fix <command>MERGE</command> problems with concurrent updates
      (Dean Rasheed, &Aacute;lvaro Herrera)
      <ulink url="&commit_baseurl;7d9a75713">&sect;</ulink>
      <ulink url="&commit_baseurl;5d8ec1b9f">&sect;</ulink>
     </para>

     <para>
      Some cases misbehaved if a row to be updated or deleted
      by <command>MERGE</command> had just been updated by a concurrent
      transaction.  This could lead to a crash, or the wrong merge action
      being executed, or no action at all.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [41e2c52fd] 2023-05-07 11:01:15 -0400
Branch: REL_15_STABLE [f200b9695] 2023-05-07 11:01:15 -0400
-->
     <para>
      Add support for decompiling <command>MERGE</command>
      commands (&Aacute;lvaro Herrera)
      <ulink url="&commit_baseurl;f200b9695">&sect;</ulink>
     </para>

     <para>
      This was overlooked when <command>MERGE</command> was added, but
      it's essential support for <command>MERGE</command> in new-style SQL
      functions.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [6949b921d] 2023-03-04 13:32:35 -0500
Branch: REL_15_STABLE [f61e60102] 2023-03-04 13:32:35 -0500
-->
     <para>
      Fix enabling/disabling of foreign-key triggers in partitioned tables
      (Tom Lane)
      <ulink url="&commit_baseurl;f61e60102">&sect;</ulink>
     </para>

     <para>
      <command>ALTER TABLE ... ENABLE/DISABLE TRIGGER</command> failed if
      applied to a partitioned table's foreign-key enforcement triggers,
      because it tried to locate the clone triggers for the partitions by
      name, and they do not have the same name.  Locate them by
      parent-trigger OID instead.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [a3c9d35ae] 2023-03-27 15:04:15 -0400
Branch: REL_15_STABLE [d90d59e25] 2023-03-27 15:04:02 -0400
Branch: REL_14_STABLE [334cc4c96] 2023-03-27 15:04:02 -0400
Branch: REL_13_STABLE [29a20ff06] 2023-03-27 15:04:02 -0400
Branch: REL_12_STABLE [cd07163c0] 2023-03-27 15:04:02 -0400
Branch: REL_11_STABLE [78838bc3d] 2023-03-27 15:04:02 -0400
-->
     <para>
      Disallow altering composite types that are stored in indexes
      (Tom Lane)
      <ulink url="&commit_baseurl;d90d59e25">&sect;</ulink>
     </para>

     <para>
      <command>ALTER TYPE</command> disallows non-binary-compatible
      modifications of composite types if they are stored in any table
      columns.  (Perhaps that will be allowed someday, but it hasn't
      happened yet; the locking implications of rewriting many tables are
      daunting.)  We overlooked the possibility that an index might
      contain a composite type that doesn't also appear in its table.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [f0d65c0ea] 2023-03-31 11:18:49 -0400
Branch: REL_15_STABLE [6e3698173] 2023-03-31 11:18:49 -0400
Branch: REL_14_STABLE [b0b55d8b8] 2023-03-31 11:18:49 -0400
Branch: REL_13_STABLE [bfb993b1b] 2023-03-31 11:18:49 -0400
Branch: REL_12_STABLE [e8d74aac5] 2023-03-31 11:18:49 -0400
-->
     <para>
      Disallow system columns as elements of foreign keys (Tom Lane)
      <ulink url="&commit_baseurl;6e3698173">&sect;</ulink>
     </para>

     <para>
      Since the removal of OID as a system column, there is no plausible
      use-case for this, and various bits of code no longer support it.
      Disallow it rather than trying to fix all the cases.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [d66bb048c] 2023-03-10 13:52:44 -0500
Branch: REL_15_STABLE [59947bac7] 2023-03-10 13:52:28 -0500
Branch: REL_14_STABLE [53a53ea33] 2023-03-10 13:52:28 -0500
Branch: REL_13_STABLE [866fd004d] 2023-03-10 13:52:28 -0500
Branch: REL_12_STABLE [a30310833] 2023-03-10 13:52:28 -0500
Branch: REL_11_STABLE [6e2674d77] 2023-03-10 13:52:28 -0500
-->
     <para>
      Ensure that <command>COPY TO</command> from an RLS-enabled parent
      table does not copy any rows from child tables (Antonin Houska)
      <ulink url="&commit_baseurl;59947bac7">&sect;</ulink>
     </para>

     <para>
      The documentation is quite clear that <command>COPY TO</command>
      copies rows from only the named table, not any inheritance children
      it may have.  However, if row-level security was enabled on the table
      then this stopped being true.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [4c40995f6] 2023-05-04 11:48:23 -0400
Branch: REL_15_STABLE [ccb479e76] 2023-05-04 11:48:23 -0400
Branch: REL_14_STABLE [d5de344a5] 2023-05-04 11:48:23 -0400
Branch: REL_13_STABLE [9a72f499a] 2023-05-04 11:48:23 -0400
Branch: REL_12_STABLE [580df5078] 2023-05-04 11:48:23 -0400
Branch: REL_11_STABLE [4624aad61] 2023-05-04 11:48:23 -0400
-->
     <para>
      Avoid possible crash when <function>array_position()</function>
      or <function>array_positions()</function> is passed an empty array
      (Tom Lane)
      <ulink url="&commit_baseurl;ccb479e76">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [b081fe419] 2023-03-14 19:17:31 -0400
Branch: REL_15_STABLE [a67c75f82] 2023-03-14 19:17:31 -0400
Branch: REL_14_STABLE [7cac19105] 2023-03-14 19:17:31 -0400
Branch: REL_13_STABLE [386a26023] 2023-03-14 19:17:31 -0400
Branch: REL_12_STABLE [6d3a9a60f] 2023-03-14 19:17:31 -0400
Branch: REL_11_STABLE [8e33fb9ef] 2023-03-14 19:17:31 -0400
-->
     <para>
      Fix possible out-of-bounds fetch in <function>to_char()</function>
      (Tom Lane)
      <ulink url="&commit_baseurl;a67c75f82">&sect;</ulink>
     </para>

     <para>
      With bad luck this could have resulted in a server crash.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [d7056bc1c] 2023-03-01 11:30:31 -0500
Branch: REL_15_STABLE [eae09137d] 2023-03-01 11:30:17 -0500
Branch: REL_14_STABLE [1a9356f65] 2023-03-01 11:30:17 -0500
Branch: REL_13_STABLE [3b37e8442] 2023-03-01 11:30:17 -0500
Branch: REL_12_STABLE [b162660d3] 2023-03-01 11:30:17 -0500
Branch: REL_11_STABLE [b1a9d8ef2] 2023-03-01 11:30:17 -0500
-->
     <para>
      Avoid buffer overread in <function>translate()</function> function
      (Daniil Anisimov)
      <ulink url="&commit_baseurl;eae09137d">&sect;</ulink>
     </para>

     <para>
      When using the deletion feature, the function might fetch the byte
      just after the input string, creating a small risk of crash.
     </para>
    </listitem>

    <listitem>
<!--
Author: Jeff Davis <jdavis@postgresql.org>
Branch: master [f413941f4] 2023-03-17 12:08:46 -0700
Branch: REL_15_STABLE [8b87e9291] 2023-03-17 12:07:47 -0700
-->
     <para>
      Adjust text-search-related character classification logic to
      correctly detect whether the prevailing locale
      is <literal>C</literal> (Jeff Davis)
      <ulink url="&commit_baseurl;8b87e9291">&sect;</ulink>
     </para>

     <para>
      This code got confused if the database's default collation uses ICU.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [5e80d3515] 2023-02-12 12:50:55 -0500
Branch: REL_15_STABLE [0ef65d0f5] 2023-02-12 12:50:55 -0500
-->
     <para>
      Avoid possible crash on empty input for type <type>interval</type>
      (Tom Lane)
      <ulink url="&commit_baseurl;0ef65d0f5">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [f0d0394e8] 2023-02-20 16:55:59 -0500
Branch: REL_15_STABLE [ded5ede27] 2023-02-20 16:55:59 -0500
-->
     <para>
      Re-allow exponential notation in ISO-8601 interval fields
      (Tom Lane)
      <ulink url="&commit_baseurl;ded5ede27">&sect;</ulink>
     </para>

     <para>
      Interval input like <literal>P0.1e10D</literal> isn't officially
      sanctioned by ISO-8601, but we accepted it for a long time before
      version 15, so re-allow it.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [25a7812cd] 2023-03-13 15:19:00 -0400
Branch: REL_15_STABLE [74a1a36d7] 2023-03-13 15:19:00 -0400
Branch: REL_14_STABLE [0ee9d685d] 2023-03-13 15:19:00 -0400
Branch: REL_13_STABLE [52e9a7816] 2023-03-13 15:19:00 -0400
Branch: REL_12_STABLE [c25a929a6] 2023-03-13 15:19:00 -0400
Branch: REL_11_STABLE [234941a3b] 2023-03-13 15:19:00 -0400
-->
     <para>
      Fix error cursor setting for parse errors in JSON string literals
      (Tom Lane)
      <ulink url="&commit_baseurl;74a1a36d7">&sect;</ulink>
     </para>

     <para>
      Most cases in which a syntax error is detected in a string literal
      within a JSON value failed to set the error cursor appropriately.
      This led at least to an unhelpful error message (pointing to the
      token before the string, rather than the actual trouble spot), and
      could even result in a crash in v14 and later.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [be504a3e9] 2023-03-07 21:52:32 -0800
Branch: REL_15_STABLE [391f08fd6] 2023-03-07 21:36:48 -0800
Branch: REL_14_STABLE [324281fd5] 2023-03-07 21:36:49 -0800
Branch: REL_13_STABLE [e6d77f22c] 2023-03-07 21:36:51 -0800
Branch: REL_12_STABLE [3c92f7e9d] 2023-03-07 21:36:52 -0800
-->
     <para>
      Fix data corruption due to <varname>vacuum_defer_cleanup_age</varname>
      being larger than the current 64-bit xid (Andres Freund)
      <ulink url="&commit_baseurl;391f08fd6">&sect;</ulink>
     </para>

     <para>
      In v14 and later with non-default settings
      of <varname>vacuum_defer_cleanup_age</varname>, it was possible to
      compute a very large vacuum cleanup horizon xid, leading to vacuum
      removing rows that are still live.  v12 and v13 have a lesser form
      of the same problem affecting only GiST indexes, which could lead to
      index pages getting recycled too early.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [30dbdbe75] 2023-03-13 12:40:28 -0400
Branch: REL_15_STABLE [5fd61bdc1] 2023-03-13 12:40:28 -0400
Branch: REL_14_STABLE [096e70805] 2023-03-13 12:40:28 -0400
Branch: REL_13_STABLE [bc0bcce2e] 2023-03-13 12:40:28 -0400
Branch: REL_12_STABLE [62a91a1b0] 2023-03-13 12:40:28 -0400
Branch: REL_11_STABLE [0736b1131] 2023-03-13 12:40:28 -0400
-->
     <para>
      Fix parser's failure to detect some cases of improperly-nested
      aggregates (Tom Lane)
      <ulink url="&commit_baseurl;5fd61bdc1">&sect;</ulink>
     </para>

     <para>
      This oversight could lead to executor failures for queries that
      should have been rejected as invalid.
     </para>
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master [6c3b697b1] 2023-03-31 12:13:05 +1300
Branch: REL_15_STABLE [df567fbf6] 2023-03-31 12:13:34 +1300
Branch: REL_14_STABLE [211016220] 2023-03-31 12:14:04 +1300
Branch: REL_13_STABLE [8d684c445] 2023-03-31 12:14:31 +1300
Branch: REL_12_STABLE [33510bc64] 2023-03-31 12:15:07 +1300
Branch: REL_11_STABLE [07554c99d] 2023-03-31 12:15:39 +1300
-->
     <para>
      Fix data structure corruption during parsing of
      serial <literal>SEQUENCE NAME</literal> options (David Rowley)
      <ulink url="&commit_baseurl;df567fbf6">&sect;</ulink>
     </para>

     <para>
      This can lead to trouble if an event trigger captures the corrupted
      parse tree.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [88ceac5d7] 2023-04-12 10:46:38 -0400
Branch: REL_15_STABLE [f4badbcf4] 2023-04-12 10:46:30 -0400
Branch: REL_14_STABLE [0dd55ef9b] 2023-04-12 10:46:30 -0400
Branch: REL_13_STABLE [96c698e3f] 2023-04-12 10:46:30 -0400
Branch: REL_12_STABLE [953ff99c2] 2023-04-12 10:46:30 -0400
Branch: REL_11_STABLE [60c8aeaf6] 2023-04-12 10:46:30 -0400
-->
     <para>
      Correctly update plan nodes' parallel-safety markings when moving
      initplans from one node to another (Tom Lane)
      <ulink url="&commit_baseurl;f4badbcf4">&sect;</ulink>
     </para>

     <para>
      This planner oversight could lead to <quote>subplan was not
      initialized</quote> errors at runtime.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [684ffac8c] 2023-03-14 11:10:45 -0400
Branch: REL_15_STABLE [3b4594443] 2023-03-14 11:10:45 -0400
Branch: REL_14_STABLE [7c509f7e5] 2023-03-14 11:10:45 -0400
-->
     <para>
      Avoid failure with PlaceHolderVars in extended-statistics code
      (Tom Lane)
      <ulink url="&commit_baseurl;3b4594443">&sect;</ulink>
     </para>

     <para>
      Use of dependency-type extended statistics could fail with
      <quote>PlaceHolderVar found where not expected</quote>.
     </para>
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master [eb7d043c9] 2023-03-17 15:49:53 +1300
Branch: REL_15_STABLE [371e3daaa] 2023-03-17 15:51:00 +1300
-->
     <para>
      Fix incorrect tests for whether a qual clause applied to a subquery
      can be transformed into a window aggregate <quote>run
      condition</quote> within the subquery (David Rowley)
      <ulink url="&commit_baseurl;371e3daaa">&sect;</ulink>
     </para>

     <para>
      A SubPlan within such a clause would cause assertion failures or
      incorrect answers, as would some other unusual cases.
     </para>
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master [836c31ba5] 2023-02-13 17:11:03 +1300
Branch: REL_15_STABLE [a9fa6d79a] 2023-02-13 17:10:31 +1300
Branch: REL_14_STABLE [4aa43ba21] 2023-02-13 17:09:55 +1300
Branch: REL_13_STABLE [301eb3ee4] 2023-02-13 17:09:26 +1300
Branch: REL_12_STABLE [ac55abd33] 2023-02-13 17:08:46 +1300
Branch: REL_11_STABLE [8d2a8581b] 2023-02-13 17:07:04 +1300
-->
     <para>
      Disable the inverse-transition optimization for window aggregates
      when the call contains sub-SELECTs (David Rowley)
      <ulink url="&commit_baseurl;a9fa6d79a">&sect;</ulink>
     </para>

     <para>
      This optimization requires that the aggregate's argument expressions
      have repeatable results, which might not hold for a sub-SELECT.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [554841699] 2023-03-26 13:41:06 -0400
Branch: REL_15_STABLE [7c4873438] 2023-03-26 13:41:06 -0400
Branch: REL_14_STABLE [11213d446] 2023-03-26 13:41:06 -0400
Branch: REL_13_STABLE [1bbbe1460] 2023-03-26 13:41:06 -0400
Branch: REL_12_STABLE [ad5fe7420] 2023-03-26 13:41:06 -0400
Branch: REL_11_STABLE [ae320fc21] 2023-03-26 13:41:06 -0400
-->
     <para>
      Fix oversights in execution of nested <literal>ARRAY[]</literal>
      constructs (Alexander Lakhin, Tom Lane)
      <ulink url="&commit_baseurl;7c4873438">&sect;</ulink>
     </para>

     <para>
      Correctly detect overflow of the total space needed for the result
      array, avoiding a possible crash due to undersized output
      allocation.  Also ensure that any trailing padding space in the
      result array is zeroed; while leaving garbage there is harmless for
      most purposes, it can result in odd behavior later.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [064eb89e8] 2023-04-15 12:01:39 -0400
Branch: REL_15_STABLE [c53ed26ea] 2023-04-15 12:01:39 -0400
Branch: REL_14_STABLE [9b104a27c] 2023-04-15 12:01:39 -0400
Branch: REL_13_STABLE [7428aecdd] 2023-04-15 12:01:39 -0400
Branch: REL_12_STABLE [048caf8d7] 2023-04-15 12:01:39 -0400
-->
     <para>
      Prevent crash when updating a field within an
      array-of-domain-over-composite-type column (Dmitry Dolgov)
      <ulink url="&commit_baseurl;c53ed26ea">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master [e0693faf7] 2023-04-14 16:20:27 +1200
Branch: REL_15_STABLE [0c09160e1] 2023-04-14 16:21:07 +1200
Branch: REL_14_STABLE [ae85fb828] 2023-04-14 16:21:42 +1200
Branch: REL_13_STABLE [6848f0c67] 2023-04-14 16:22:11 +1200
Branch: REL_12_STABLE [0b2e77ce2] 2023-04-14 16:22:46 +1200
Branch: REL_11_STABLE [1c19e2863] 2023-04-14 16:23:11 +1200
-->
     <para>
      Fix partition pruning logic for partitioning on boolean columns
      (David Rowley)
      <ulink url="&commit_baseurl;0c09160e1">&sect;</ulink>
     </para>

     <para>
      Pruning with a condition like <literal>boolcol IS NOT TRUE</literal>
      was done incorrectly, leading to possibly not returning rows in
      which <literal>boolcol</literal> is NULL.  Also, the rather unlikely
      case of partitioning on <literal>NOT boolcol</literal> was handled
      incorrectly.
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [8d578b9b2] 2023-03-21 14:29:34 +1300
Branch: REL_15_STABLE [c03c6e8cf] 2023-03-21 14:32:14 +1300
Branch: REL_14_STABLE [1b9e42e82] 2023-03-21 14:37:33 +1300
Branch: REL_13_STABLE [6e94d62e3] 2023-03-21 14:38:59 +1300
Branch: REL_12_STABLE [44d44aa97] 2023-03-21 14:41:35 +1300
Branch: REL_11_STABLE [ef16d2724] 2023-03-21 14:43:07 +1300
-->
     <para>
      Fix race condition in per-batch cleanup during parallel hash join
      (Thomas Munro, Melanie Plageman)
      <ulink url="&commit_baseurl;c03c6e8cf">&sect;</ulink>
     </para>

     <para>
      A crash was possible given unlucky timing and
      <varname>parallel_leader_participation</varname>
      = <literal>off</literal> (which is not the default).
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [7fee7871b] 2023-03-06 18:31:27 -0500
Branch: REL_15_STABLE [70ef50954] 2023-03-06 18:31:16 -0500
Branch: REL_14_STABLE [1e05ea51d] 2023-03-06 18:31:16 -0500
Branch: REL_13_STABLE [4a94cbd02] 2023-03-06 18:31:16 -0500
Branch: REL_12_STABLE [23b75dd03] 2023-03-06 18:31:16 -0500
-->
     <para>
      Recalculate <literal>GENERATED</literal> columns after an
      EvalPlanQual check (Tom Lane)
      <ulink url="&commit_baseurl;70ef50954">&sect;</ulink>
     </para>

     <para>
      In <literal>READ COMMITTED</literal> isolation mode, the effects of
      a row update might need to get reapplied to a newer version of the
      row than the query found originally.  If so, we need to recompute
      any <literal>GENERATED</literal> columns, in case they depend on
      columns that were changed by the concurrent update.
     </para>
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master [579ee5df1] 2023-03-20 13:28:47 +1300
Branch: REL_15_STABLE [8de4660a5] 2023-03-20 13:30:15 +1300
Branch: REL_14_STABLE [f654f343c] 2023-03-20 13:30:55 +1300
-->
     <para>
      Fix memory leak in Memoize plan execution (David Rowley)
      <ulink url="&commit_baseurl;8de4660a5">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [806fad757] 2023-04-25 09:42:19 +0900
Branch: REL_15_STABLE [aa6177c88] 2023-04-25 09:42:33 +0900
Branch: REL_14_STABLE [4cc56f8ed] 2023-04-25 09:42:36 +0900
-->
     <para>
      Fix buffer refcount leak when using batched inserts for a foreign
      table included in a partitioned tree (Alexander Pyhalov)
      <ulink url="&commit_baseurl;aa6177c88">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [720de00af] 2023-03-15 13:58:18 +1300
Branch: REL_15_STABLE [d9c9c43af] 2023-03-15 14:02:49 +1300
Branch: REL_14_STABLE [2bef57ee8] 2023-03-15 14:05:27 +1300
-->
     <para>
      Restore support for
      sub-millisecond <varname>vacuum_cost_delay</varname> settings
      (Thomas Munro)
      <ulink url="&commit_baseurl;d9c9c43af">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Daniel Gustafsson <dgustafsson@postgresql.org>
Branch: master [bfac8f8bc] 2023-04-25 13:54:10 +0200
Branch: REL_15_STABLE [0319b306e] 2023-04-25 13:54:10 +0200
Branch: REL_14_STABLE [0e8e5e856] 2023-04-25 13:54:10 +0200
Branch: REL_13_STABLE [b95f36f86] 2023-04-25 13:54:10 +0200
Branch: REL_12_STABLE [cba3c8f6d] 2023-04-25 13:54:10 +0200
Branch: REL_11_STABLE [0151d2c5f] 2023-04-25 13:54:10 +0200
-->
     <para>
      Don't balance vacuum cost delay when a table has a
      per-relation <varname>vacuum_cost_delay</varname> setting of zero
      (Masahiko Sawada)
      <ulink url="&commit_baseurl;0319b306e">&sect;</ulink>
     </para>

     <para>
      Delay balancing is supposed to be disabled whenever autovacuum is
      processing a table with a
      per-relation <varname>vacuum_cost_delay</varname> setting, but this
      was done only for positive settings, not zero.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [99be6feec] 2023-03-07 18:21:53 -0500
Branch: REL_15_STABLE [76d2177fb] 2023-03-07 18:21:53 -0500
Branch: REL_14_STABLE [9f1e51b59] 2023-03-07 18:21:37 -0500
Branch: REL_13_STABLE [695b34ab3] 2023-03-07 18:21:37 -0500
Branch: REL_12_STABLE [5a19da58e] 2023-03-07 18:21:37 -0500
Branch: REL_11_STABLE [721626cb5] 2023-03-07 18:21:37 -0500
-->
     <para>
      Fix corner-case crashes when columns have been added to the end of a
      view (Tom Lane)
      <ulink url="&commit_baseurl;76d2177fb">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [87f3667ec] 2023-02-25 14:44:14 -0500
Branch: REL_15_STABLE [a033f9165] 2023-02-25 14:44:14 -0500
Branch: REL_14_STABLE [9eaba0602] 2023-02-25 14:44:14 -0500
Branch: REL_13_STABLE [1e199c259] 2023-02-25 14:44:14 -0500
Branch: REL_12_STABLE [904b171a4] 2023-02-25 14:44:14 -0500
Branch: REL_11_STABLE [ffec64ba8] 2023-02-25 14:44:14 -0500
-->
     <para>
      Repair rare failure of MULTIEXPR_SUBLINK subplans in partitioned
      updates (Andres Freund, Tom Lane)
      <ulink url="&commit_baseurl;a033f9165">&sect;</ulink>
     </para>

     <para>
      Use of the syntax <literal>INSERT ... ON CONFLICT DO UPDATE SET (c1,
      ...) = (SELECT ...)</literal> with a partitioned target table could
      result in failure if any child table is dissimilar from the parent
      (for example, different physical column order).
      This typically manifested as failure of consistency checks in the
      executor; but a crash or incorrect data updates are also possible.
     </para>
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [75c737636] 2023-02-23 10:53:01 +0000
Branch: REL_15_STABLE [940b54743] 2023-02-23 10:54:51 +0000
Branch: REL_14_STABLE [f0423bea7] 2023-02-23 10:55:48 +0000
Branch: REL_13_STABLE [226da3d47] 2023-02-23 10:56:41 +0000
Branch: REL_12_STABLE [98b83b734] 2023-02-23 10:57:46 +0000
Branch: REL_11_STABLE [e68b133c3] 2023-02-23 10:58:43 +0000
-->
     <para>
      Fix handling of <literal>DEFAULT</literal> markers within a
      multi-row <literal>INSERT ... VALUES</literal> query on a view that
      has a <literal>DO ALSO INSERT ... SELECT</literal> rule (Dean
      Rasheed)
      <ulink url="&commit_baseurl;940b54743">&sect;</ulink>
     </para>

     <para>
      Such cases typically failed with <quote>unrecognized node
      type</quote> errors or assertion failures.
     </para>
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [a7d71c41d] 2023-02-25 14:41:12 +0000
Branch: REL_15_STABLE [8e5b4e001] 2023-02-25 14:43:57 +0000
Branch: REL_14_STABLE [27ff93d18] 2023-02-25 14:44:49 +0000
Branch: REL_13_STABLE [39ad791e8] 2023-02-25 14:45:44 +0000
Branch: REL_12_STABLE [4fd093af7] 2023-02-25 14:47:03 +0000
Branch: REL_11_STABLE [79f194cc0] 2023-02-25 14:48:08 +0000
-->
     <para>
      Support references to <literal>OLD</literal>
      and <literal>NEW</literal> within subqueries in rule actions
      (Dean Rasheed, Tom Lane)
      <ulink url="&commit_baseurl;8e5b4e001">&sect;</ulink>
     </para>

     <para>
      Such references are really lateral references, but the server could
      crash if the subquery wasn't explicitly marked
      with <literal>LATERAL</literal>.  Arrange to do that implicitly when
      necessary.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [393430f57] 2023-02-17 16:40:34 -0500
Branch: REL_15_STABLE [c8a5f1685] 2023-02-17 16:40:34 -0500
Branch: REL_14_STABLE [14345f3c6] 2023-02-17 16:40:34 -0500
Branch: REL_13_STABLE [4efb4f0d4] 2023-02-17 16:40:34 -0500
Branch: REL_12_STABLE [3dd287c14] 2023-02-17 16:40:34 -0500
Branch: REL_11_STABLE [df931e9ab] 2023-02-17 16:40:34 -0500
-->
     <para>
      When decompiling a rule or SQL function body
      containing <command>INSERT</command>/<command>UPDATE</command>/<command>DELETE</command>
      within <command>WITH</command>, take care to print the correct alias
      for the target table (Tom Lane)
      <ulink url="&commit_baseurl;c8a5f1685">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [47c0accbe] 2023-03-06 15:07:15 +1300
Branch: REL_15_STABLE [055990904] 2023-03-06 16:05:47 +1300
Branch: REL_14_STABLE [e9051ecd5] 2023-03-06 16:17:22 +1300
Branch: REL_13_STABLE [a0f55fc86] 2023-03-06 16:28:34 +1300
Branch: REL_12_STABLE [afa122e41] 2023-03-06 16:41:34 +1300
Branch: master [65e388d41] 2023-03-09 16:33:24 +1300
Branch: REL_15_STABLE [af397c6c2] 2023-03-09 16:56:51 +1300
Branch: REL_14_STABLE [d811d74be] 2023-03-09 16:57:11 +1300
Branch: REL_13_STABLE [ae632f7a3] 2023-03-09 17:09:57 +1300
Branch: REL_12_STABLE [e30fd0942] 2023-03-09 17:25:20 +1300
Branch: REL_11_STABLE [d1c0f81e7] 2023-03-09 17:26:06 +1300
-->
     <para>
      Fix glitches in <literal>SERIALIZABLE READ ONLY</literal>
      optimization (Thomas Munro)
      <ulink url="&commit_baseurl;055990904">&sect;</ulink>
      <ulink url="&commit_baseurl;af397c6c2">&sect;</ulink>
     </para>

     <para>
      Transactions already marked as <quote>doomed</quote> confused the
      safe-snapshot optimization for <literal>SERIALIZABLE READ
      ONLY</literal> transactions.  The optimization was unnecessarily
      skipped in some cases.  In other cases an assertion failure occurred
      (but there was no problem in non-assert builds).
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [05172f1f3] 2023-02-23 15:40:42 -0500
Branch: REL_15_STABLE [cef1c9c0c] 2023-02-23 15:40:28 -0500
Branch: REL_14_STABLE [0f78df719] 2023-02-23 15:40:28 -0500
Branch: REL_13_STABLE [861e9e486] 2023-02-23 15:40:28 -0500
Branch: REL_12_STABLE [95558bc8f] 2023-02-23 15:40:28 -0500
Branch: REL_11_STABLE [44dbc960f] 2023-02-23 15:40:28 -0500
-->
     <para>
      Avoid leaking cache callback slots in
      the <literal>pgoutput</literal> logical decoding plugin (Shi Yu)
      <ulink url="&commit_baseurl;cef1c9c0c">&sect;</ulink>
     </para>

     <para>
      Multiple cycles of starting up and shutting down the plugin within a
      single session would eventually lead to an <quote>out of
      relcache_callback_list slots</quote> error.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alexander Korotkov <akorotkov@postgresql.org>
Branch: master [cd115c353] 2023-04-23 13:58:41 +0300
Branch: REL_15_STABLE [6e7361c85] 2023-04-23 14:00:06 +0300
Branch: REL_14_STABLE [9ef5a3583] 2023-04-23 14:00:13 +0300
Branch: REL_13_STABLE [02191136c] 2023-04-23 14:00:16 +0300
-->
     <para>
      Avoid unnecessary calls to custom validators for index operator
      class options (Alexander Korotkov)
      <ulink url="&commit_baseurl;6e7361c85">&sect;</ulink>
     </para>

     <para>
      This change fixes some cases where an unexpected error was thrown.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [e72910f80] 2023-02-19 01:46:58 +0100
Branch: REL_15_STABLE [305d89ad9] 2023-02-19 01:48:04 +0100
Branch: REL_14_STABLE [f3daa3116] 2023-02-19 01:48:22 +0100
-->
     <para>
      Avoid useless work while scanning a multi-column BRIN index with
      multiple scan keys (Tomas Vondra)
      <ulink url="&commit_baseurl;305d89ad9">&sect;</ulink>
     </para>

     <para>
      The existing code effectively considered only the last scan key
      while deciding whether a range matched, thus usually scanning more
      of the index than it needed to.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [e85831268] 2023-03-20 10:24:14 +0100
Branch: REL_15_STABLE [0c7726c28] 2023-03-20 10:20:35 +0100
Branch: REL_14_STABLE [6a78a42fe] 2023-03-20 10:16:54 +0100
-->
     <para>
      Fix netmask handling in BRIN inet_minmax_multi_ops opclass
      (Tomas Vondra)
      <ulink url="&commit_baseurl;0c7726c28">&sect;</ulink>
     </para>

     <para>
      This error triggered an assertion failure in assert-enabled builds,
      but is mostly harmless in production builds.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [8e5eef50c] 2023-03-29 11:31:30 -0400
Branch: REL_15_STABLE [2dc77adc7] 2023-03-29 11:31:30 -0400
Branch: REL_14_STABLE [a1904c9ce] 2023-03-29 11:31:30 -0400
Branch: REL_13_STABLE [2adb6adad] 2023-03-29 11:31:30 -0400
Branch: REL_12_STABLE [d2a1d4b19] 2023-03-29 11:31:30 -0400
Branch: REL_11_STABLE [b5c6776c1] 2023-03-29 11:31:30 -0400
-->
     <para>
      Fix dereference of dangling pointer during buffering build of a GiST
      index (Alexander Lakhin)
      <ulink url="&commit_baseurl;2dc77adc7">&sect;</ulink>
     </para>

     <para>
      This error seems to usually be harmless in production builds, as the
      fetched value is noncritical; but in principle it could cause a
      server crash.
     </para>
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master [adedf54e6] 2023-03-23 11:58:36 +0530
Branch: REL_15_STABLE [b6bf90edc] 2023-03-23 11:46:16 +0530
Branch: REL_14_STABLE [9dac02c77] 2023-03-23 11:32:22 +0530
Branch: REL_13_STABLE [be52fff91] 2023-03-23 11:21:13 +0530
Branch: REL_12_STABLE [0f2d4adbf] 2023-03-23 11:08:38 +0530
Branch: master [b797def59] 2023-03-21 09:47:21 +0530
Branch: REL_15_STABLE [3c12407f4] 2023-03-21 09:40:41 +0530
Branch: REL_14_STABLE [65ead7696] 2023-03-21 09:18:51 +0530
Branch: REL_13_STABLE [751d6676d] 2023-03-21 09:07:37 +0530
Branch: REL_12_STABLE [fc63e6ba8] 2023-03-21 08:50:23 +0530
Branch: REL_11_STABLE [4cdaea7a2] 2023-03-21 08:39:00 +0530
-->
     <para>
      Ignore dropped columns and generated columns during logical
      replication of an update or delete action (Onder Kalaci, Shi Yu)
      <ulink url="&commit_baseurl;b6bf90edc">&sect;</ulink>
      <ulink url="&commit_baseurl;3c12407f4">&sect;</ulink>
     </para>

     <para>
      Replication with the <literal>REPLICA IDENTITY FULL</literal> option
      failed if the table contained such columns.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [58f5edf84] 2023-05-05 21:25:44 +0900
Branch: REL_15_STABLE [d31dab9a5] 2023-05-05 21:25:50 +0900
Branch: REL_14_STABLE [ae4ffa722] 2023-05-05 21:25:56 +0900
Branch: REL_13_STABLE [cedcc4191] 2023-05-05 21:26:02 +0900
-->
     <para>
      Correct the name of the wait event for SLRU buffer I/O for commit
      timestamps (Alexander Lakhin)
      <ulink url="&commit_baseurl;d31dab9a5">&sect;</ulink>
     </para>

     <para>
      This wait event is named <literal>CommitTsBuffer</literal> according
      to the documentation, but the code had it
      as <literal>CommitTSBuffer</literal>.  Change the code to match the
      documentation, as that way is more consistent with the naming of
      related wait events.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [84cc14267] 2023-04-26 07:10:06 +0900
Branch: REL_15_STABLE [1ed1b84bd] 2023-04-26 07:30:42 +0900
Branch: REL_14_STABLE [aeb6f4b3b] 2023-04-26 07:30:47 +0900
-->
     <para>
      Re-activate reporting of wait event <literal>SLRUFlushSync</literal>
      (Thomas Munro)
      <ulink url="&commit_baseurl;1ed1b84bd">&sect;</ulink>
     </para>

     <para>
      Reporting of this type of wait was accidentally removed in code
      refactoring.
     </para>
    </listitem>

    <listitem>
<!--
Author: Nathan Bossart <nathan@postgresql.org>
Branch: master [b72623671] 2023-04-27 14:31:17 -0700
Branch: REL_15_STABLE [c98b06e2f] 2023-04-27 14:31:33 -0700
Branch: REL_14_STABLE [137003036] 2023-04-27 14:32:40 -0700
Branch: REL_13_STABLE [be40dd63e] 2023-04-27 14:32:55 -0700
-->
     <para>
      Avoid possible underflow when calculating how many WAL segments to
      keep (Kyotaro Horiguchi)
      <ulink url="&commit_baseurl;c98b06e2f">&sect;</ulink>
     </para>

     <para>
      This could result in not honoring <varname>wal_keep_size</varname>
      accurately.
     </para>
    </listitem>

    <listitem>
<!--
Author: Robert Haas <rhaas@postgresql.org>
Branch: master [8a2f783cc] 2023-02-06 10:51:08 -0500
Branch: REL_15_STABLE [ecb01e6eb] 2023-02-10 16:27:05 -0500
-->
     <para>
      Disable startup progress reporting overhead in standby mode
      (Bharath Rupireddy)
      <ulink url="&commit_baseurl;ecb01e6eb">&sect;</ulink>
     </para>

     <para>
      In standby mode, we don't actually report progress of recovery,
      but we were doing work to track it anyway.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [9244c11af] 2023-02-15 10:12:16 +0900
Branch: REL_15_STABLE [5fd61055e] 2023-02-15 10:12:31 +0900
Branch: REL_14_STABLE [864f80fea] 2023-02-15 10:12:33 +0900
Branch: REL_13_STABLE [2eb8e54cc] 2023-02-15 10:12:36 +0900
Branch: REL_12_STABLE [a40e7b75e] 2023-02-15 10:12:38 +0900
Branch: REL_11_STABLE [88d606f7c] 2023-02-15 10:12:40 +0900
-->
     <para>
      Support RSA-PSS certificates with SCRAM-SHA-256 channel binding
      (Jacob Champion, Heikki Linnakangas)
      <ulink url="&commit_baseurl;5fd61055e">&sect;</ulink>
     </para>

     <para>
      This feature requires building with OpenSSL 1.1.1 or newer.  Both
      the server and <application>libpq</application> are affected.
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [d41a178b3] 2023-03-15 13:24:47 +1300
Branch: REL_15_STABLE [06066915d] 2023-03-15 13:25:56 +1300
Branch: REL_14_STABLE [9b6e0b9c3] 2023-03-15 13:30:58 +1300
Branch: REL_13_STABLE [9f1c64018] 2023-03-15 13:31:34 +1300
Branch: REL_12_STABLE [836288427] 2023-03-15 13:32:21 +1300
Branch: REL_11_STABLE [5ff8e69d8] 2023-03-15 13:32:41 +1300
Branch: master [6a9229da6] 2023-03-17 10:44:46 +1300
Branch: REL_15_STABLE [75e7378f6] 2023-03-17 10:45:20 +1300
Branch: REL_14_STABLE [00fc4b3a3] 2023-03-17 09:52:45 +1300
Branch: REL_13_STABLE [798dae9f6] 2023-03-17 09:54:03 +1300
Branch: REL_12_STABLE [6f508b8bc] 2023-03-17 09:54:51 +1300
Branch: REL_11_STABLE [9d6c34397] 2023-03-17 09:58:08 +1300
Branch: master [10b6745d3] 2023-03-17 14:44:12 +1300
Branch: REL_15_STABLE [e8a774d00] 2023-03-17 14:46:03 +1300
Branch: REL_14_STABLE [1c0d4affa] 2023-03-17 14:46:50 +1300
Branch: REL_13_STABLE [77a8133c9] 2023-03-17 14:47:16 +1300
Branch: REL_12_STABLE [8fcd1517f] 2023-03-17 14:47:38 +1300
Branch: REL_11_STABLE [b23f2a729] 2023-03-17 14:48:08 +1300
-->
     <para>
      Avoid race condition with process ID tracking on Windows (Thomas Munro)
      <ulink url="&commit_baseurl;06066915d">&sect;</ulink>
      <ulink url="&commit_baseurl;75e7378f6">&sect;</ulink>
      <ulink url="&commit_baseurl;e8a774d00">&sect;</ulink>
     </para>

     <para>
      The operating system could recycle a PID before the postmaster
      observed that that child process was gone.  This could lead to
      tracking more than one child with the same PID, resulting in
      confusion.
     </para>
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master [e35ded295] 2023-04-20 10:34:46 +1200
Branch: REL_15_STABLE [63a03aea6] 2023-04-21 10:02:25 +1200
-->
     <para>
      Fix <function>list_copy_head()</function> to work correctly on an
      empty List (David Rowley)
      <ulink url="&commit_baseurl;63a03aea6">&sect;</ulink>
     </para>

     <para>
      This case is not known to be reached by any
      core <productname>PostgreSQL</productname> code, but extensions
      might rely on it working.
     </para>
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [d0460a31d] 2023-02-22 13:23:09 +0000
Branch: REL_15_STABLE [576b25bfd] 2023-02-22 13:24:51 +0000
Branch: REL_14_STABLE [482ab3e4f] 2023-02-22 13:26:20 +0000
Branch: REL_13_STABLE [906356cf6] 2023-02-22 13:27:29 +0000
Branch: REL_12_STABLE [52dbd9f84] 2023-02-22 13:28:30 +0000
Branch: REL_11_STABLE [83a54d966] 2023-02-22 13:29:39 +0000
-->
     <para>
      Add missing cases to <function>SPI_result_code_string()</function>
      (Dean Rasheed)
      <ulink url="&commit_baseurl;576b25bfd">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [b3e184a5d] 2023-02-21 18:48:15 -0500
Branch: REL_15_STABLE [f6a55c1d5] 2023-02-21 18:47:46 -0500
Branch: REL_14_STABLE [dc44180f6] 2023-02-21 18:47:47 -0500
Branch: REL_13_STABLE [99e74cd23] 2023-02-21 18:47:47 -0500
Branch: REL_12_STABLE [463bef383] 2023-02-21 18:47:47 -0500
Branch: REL_11_STABLE [21bd818d0] 2023-02-21 18:47:47 -0500
-->
     <para>
      Fix erroneous Valgrind markings
      in <function>AllocSetRealloc()</function> (Karina Litskevich)
      <ulink url="&commit_baseurl;f6a55c1d5">&sect;</ulink>
     </para>

     <para>
      In the unusual case where the size of a large (&gt;8kB) palloc chunk
      is decreased, a Valgrind-aware build would mismark the defined-ness
      state of the memory released from the chunk, possibly causing
      incorrect results during Valgrind testing.
     </para>
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [0d3b49d4a] 2023-02-22 10:51:34 +0000
Branch: REL_15_STABLE [d8c3b65db] 2023-02-22 10:54:57 +0000
-->
     <para>
      Fix assertion failure for <command>MERGE</command> into a
      partitioned table with row-level security enabled (Dean Rasheed)
      <ulink url="&commit_baseurl;d8c3b65db">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [7fe1aa991] 2023-02-22 15:24:18 +0100
Branch: REL_15_STABLE [949ac32e1] 2023-02-22 16:48:30 +0100
Branch: REL_14_STABLE [8b9cbd42b] 2023-02-22 16:25:45 +0100
Branch: REL_13_STABLE [4df581fa0] 2023-02-22 16:09:30 +0100
Branch: REL_12_STABLE [497f863f0] 2023-02-22 15:50:37 +0100
Branch: REL_11_STABLE [8de91ebf2] 2023-02-22 15:35:19 +0100
-->
     <para>
      Avoid assertion failure when decoding a transactional logical
      replication message (Tomas Vondra)
      <ulink url="&commit_baseurl;949ac32e1">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Jeff Davis <jdavis@postgresql.org>
Branch: master [c04c6c5d6] 2023-04-21 08:19:41 -0700
Branch: REL_15_STABLE [109363de0] 2023-04-21 08:20:17 -0700
Branch: REL_14_STABLE [dde926b0f] 2023-04-21 08:20:32 -0700
Branch: REL_13_STABLE [79a66c617] 2023-04-21 08:20:47 -0700
Branch: REL_12_STABLE [5bcb15b81] 2023-04-21 08:21:04 -0700
Branch: REL_11_STABLE [106a1bf82] 2023-04-21 08:21:18 -0700
-->
     <para>
      Avoid locale sensitivity when processing regular expression escapes
      (Jeff Davis)
      <ulink url="&commit_baseurl;109363de0">&sect;</ulink>
     </para>

     <para>
      A backslash followed by a non-ASCII character could sometimes cause
      an assertion failure, depending on the prevailing locale.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [3e383f9b6] 2023-04-17 14:22:26 -0400
Branch: REL_15_STABLE [2207df7c3] 2023-04-17 14:22:06 -0400
Branch: REL_14_STABLE [72a914e9f] 2023-04-17 14:22:06 -0400
Branch: REL_13_STABLE [86874a6df] 2023-04-17 14:22:06 -0400
Branch: REL_12_STABLE [9b0c1f213] 2023-04-17 14:22:06 -0400
Branch: REL_11_STABLE [c796d7296] 2023-04-17 14:22:06 -0400
-->
     <para>
      Avoid trying to write an empty WAL record
      in <function>log_newpage_range()</function> when the last few pages
      in the specified range are empty (Matthias van de Meent)
      <ulink url="&commit_baseurl;2207df7c3">&sect;</ulink>
     </para>

     <para>
      It is not entirely clear whether this case is reachable in released
      branches, but if it is then an assertion failure could occur.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [441ee1677] 2023-04-24 14:19:46 -0400
Branch: REL_15_STABLE [c1598d85f] 2023-04-24 14:19:46 -0400
Branch: REL_14_STABLE [2ba890ce7] 2023-04-24 14:19:46 -0400
Branch: REL_13_STABLE [bfa691087] 2023-04-24 14:19:46 -0400
Branch: REL_12_STABLE [ee71cad9a] 2023-04-24 14:19:46 -0400
-->
     <para>
      Fix session-lifespan memory leakage in <application>plpgsql</application>
      <literal>DO</literal> blocks that use cast expressions
      (Ajit Awekar, Tom Lane)
      <ulink url="&commit_baseurl;c1598d85f">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [f47004add] 2023-04-29 13:06:44 -0400
Branch: REL_15_STABLE [ce9a1a3ea] 2023-04-29 13:06:44 -0400
Branch: REL_14_STABLE [1e868bb6c] 2023-04-29 13:06:44 -0400
Branch: REL_13_STABLE [ee24b5e79] 2023-04-29 13:06:44 -0400
Branch: REL_12_STABLE [900a8d526] 2023-04-29 13:06:44 -0400
Branch: REL_11_STABLE [ea96fbe77] 2023-04-29 13:06:44 -0400
-->
     <para>
      Tighten array dimensionality checks when converting Perl
      list structures to multi-dimensional SQL arrays (Tom Lane)
      <ulink url="&commit_baseurl;ce9a1a3ea">&sect;</ulink>
     </para>

     <para>
      <application>plperl</application> could misbehave when the nesting
      of sub-lists is inconsistent so that the data does not represent a
      rectangular array of values.  Such cases now produce errors, but
      previously they could result in a crash or garbage output.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [0553528e7] 2023-05-04 11:00:33 -0400
Branch: REL_15_STABLE [b7001c6b6] 2023-05-04 11:00:33 -0400
Branch: REL_14_STABLE [9d517339e] 2023-05-04 11:00:33 -0400
Branch: REL_13_STABLE [0e6354ed9] 2023-05-04 11:00:33 -0400
Branch: REL_12_STABLE [b7fcf3824] 2023-05-04 11:00:33 -0400
Branch: REL_11_STABLE [aa7e5e404] 2023-05-04 11:00:33 -0400
Branch: master [81eaaf65e] 2023-04-28 12:24:29 -0400
Branch: REL_15_STABLE [512c55522] 2023-04-28 12:24:29 -0400
Branch: REL_14_STABLE [a1d9aacc4] 2023-04-28 12:24:29 -0400
Branch: REL_13_STABLE [7dcd9998c] 2023-04-28 12:24:29 -0400
Branch: REL_12_STABLE [ff9203f46] 2023-04-28 12:24:29 -0400
Branch: REL_11_STABLE [b7c6af375] 2023-04-28 12:24:29 -0400
-->
     <para>
      Tighten array dimensionality checks when converting Python
      list structures to multi-dimensional SQL arrays (Tom Lane)
      <ulink url="&commit_baseurl;b7001c6b6">&sect;</ulink>
      <ulink url="&commit_baseurl;512c55522">&sect;</ulink>
     </para>

     <para>
      <application>plpython</application> could misbehave when dealing
      with empty sub-lists, or when the nesting of sub-lists is
      inconsistent so that the data does not represent a rectangular array
      of values.  The former should result in an empty output array, and
      the latter in an error.  But some cases resulted in a crash, and
      others in unexpected output.
     </para>
    </listitem>

    <listitem>
<!--
Author: Nathan Bossart <nathan@postgresql.org>
Branch: master [57d005170] 2023-05-04 16:23:05 -0700
Branch: REL_15_STABLE [825ebc984] 2023-05-04 16:24:48 -0700
Branch: REL_14_STABLE [52c9cf323] 2023-05-04 16:25:05 -0700
Branch: REL_13_STABLE [800531846] 2023-05-04 16:26:00 -0700
Branch: REL_12_STABLE [24964394a] 2023-05-04 16:26:05 -0700
Branch: REL_11_STABLE [0af386b0f] 2023-05-04 16:26:11 -0700
-->
     <para>
      Fix unwinding of exception stack
      in <application>plpython</application> (Xing Guo)
      <ulink url="&commit_baseurl;825ebc984">&sect;</ulink>
     </para>

     <para>
      Some rare failure cases could return without cleaning up the PG_TRY
      exception stack, risking a crash if another error was raised before
      the next stack level was unwound.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [e0a09d4e3] 2023-03-13 16:36:20 +0900
Branch: REL_15_STABLE [4493256c5] 2023-03-13 16:36:28 +0900
Branch: REL_14_STABLE [7e319231c] 2023-03-13 16:36:31 +0900
Branch: REL_13_STABLE [96bef4374] 2023-03-13 16:36:33 +0900
Branch: REL_12_STABLE [2bc36a56c] 2023-03-13 16:36:34 +0900
-->
     <para>
      Fix inconsistent GSS-encryption error handling
      in <application>libpq</application>'s
      <function>PQconnectPoll()</function>
      (Michael Paquier)
      <ulink url="&commit_baseurl;4493256c5">&sect;</ulink>
     </para>

     <para>
      With <option>gssencmode</option> set to <literal>require</literal>,
      the connection was not marked dead after a GSS initialization
      failure.  Make it fail immediately, as the equivalent case for TLS
      encryption has long done.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [f18029084] 2023-04-18 11:20:41 +0900
Branch: REL_15_STABLE [8c746be44] 2023-04-18 11:20:47 +0900
Branch: REL_14_STABLE [02f076454] 2023-04-18 11:20:50 +0900
Branch: REL_13_STABLE [e9e457d22] 2023-04-18 11:20:51 +0900
Branch: REL_12_STABLE [a28bd7713] 2023-04-18 11:20:53 +0900
Branch: REL_11_STABLE [9eb44bb04] 2023-04-18 11:20:55 +0900
Branch: REL_11_STABLE [dbd25dd0b] 2023-04-18 12:00:31 +0900
-->
     <para>
      Fix possible data corruption in <application>ecpg</application>
      programs built with the <option>-C ORACLE</option> option
      (Kyotaro Horiguchi)
      <ulink url="&commit_baseurl;8c746be44">&sect;</ulink>
     </para>

     <para>
      When <function>ecpg_get_data()</function> is called
      with <varname>varcharsize</varname> set to zero, it could write a
      terminating zero character into the last byte of the preceding
      field, truncating the data in that field.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [bc8cd50fe] 2023-03-17 13:31:40 -0400
Branch: REL_15_STABLE [2b216da1e] 2023-03-17 13:31:40 -0400
Branch: REL_14_STABLE [5fc1ac151] 2023-03-17 13:31:40 -0400
Branch: REL_13_STABLE [7e7c5b683] 2023-03-17 13:31:40 -0400
Branch: REL_12_STABLE [8f83ce8c5] 2023-03-17 13:31:40 -0400
Branch: REL_11_STABLE [012ffb365] 2023-03-17 13:31:40 -0400
-->
     <para>
      Fix <application>pg_dump</application> so that partitioned tables
      that are hash-partitioned on an enum-type column can be restored
      successfully (Tom Lane)
      <ulink url="&commit_baseurl;2b216da1e">&sect;</ulink>
     </para>

     <para>
      Since the hash codes for enum values depend on the OIDs assigned to
      the enum, they are typically different after a dump and restore,
      meaning that rows often need to go into a different partition than
      they were in originally.  Users can work around that by specifying
      the <option>--load-via-partition-root</option> option; but since
      there is very little chance of success without that,
      teach <application>pg_dump</application> to apply it automatically
      to such tables.
     </para>

     <para>
      Also, fix <application>pg_restore</application> to not try
      to <command>TRUNCATE</command> target tables before restoring into
      them when <option>--load-via-partition-root</option> mode is used.
      This avoids a hazard of deadlocks and lost data.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [a923e2163] 2023-04-12 09:09:38 +0900
Branch: REL_15_STABLE [5c3254946] 2023-04-12 09:09:53 +0900
Branch: REL_14_STABLE [34105eea6] 2023-04-12 09:09:58 +0900
Branch: master [765f5df72] 2023-03-15 12:55:51 +0900
Branch: REL_15_STABLE [69b6032e0] 2023-03-15 12:56:06 +0900
Branch: REL_14_STABLE [bbf18fe19] 2023-03-15 12:56:10 +0900
-->
     <para>
      Correctly detect non-seekable files on Windows
      (Juan José Santamaría Flecha, Michael Paquier, Daniel Watzinger)
      <ulink url="&commit_baseurl;5c3254946">&sect;</ulink>
      <ulink url="&commit_baseurl;69b6032e0">&sect;</ulink>
     </para>

     <para>
      This bug led to misbehavior when <application>pg_dump</application>
      writes to a pipe or <application>pg_restore</application> reads from
      one.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [038f586d5] 2023-02-21 10:56:37 +0100
Branch: REL_15_STABLE [108a22bd1] 2023-02-21 10:56:37 +0100
Branch: REL_14_STABLE [663e50e83] 2023-02-21 10:56:37 +0100
-->
     <para>
      In <application>pgbench</application>'s <quote>prepared</quote>
      mode, prepare all the commands in a pipeline before starting the
      pipeline (&Aacute;lvaro Herrera)
      <ulink url="&commit_baseurl;108a22bd1">&sect;</ulink>
     </para>

     <para>
      This avoids a failure when a pgbench script tries to
      start a serializable transaction inside a pipeline.
     </para>
    </listitem>

    <listitem>
<!--
Author: Robert Haas <rhaas@postgresql.org>
Branch: master [e88754a19] 2023-03-24 10:56:10 -0400
Branch: REL_15_STABLE [701ec5557] 2023-03-24 10:59:10 -0400
Branch: REL_14_STABLE [8fd5aa76c] 2023-03-24 11:06:45 -0400
Branch: master [b7cea5882] 2023-03-28 16:16:53 -0400
Branch: REL_15_STABLE [453f53821] 2023-03-28 16:17:03 -0400
Branch: REL_14_STABLE [e3363cda9] 2023-03-28 16:21:29 -0400
-->
     <para>
      In <filename>contrib/amcheck</filename>'s heap checking code, deal
      correctly with tuples having zero xmin or xmax (Robert Haas)
      <ulink url="&commit_baseurl;701ec5557">&sect;</ulink>
      <ulink url="&commit_baseurl;453f53821">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [4f5d461e0] 2023-03-11 14:12:52 -0800
Branch: REL_15_STABLE [e8a9750d0] 2023-03-11 14:14:50 -0800
Branch: REL_14_STABLE [b3a83055c] 2023-03-11 14:17:51 -0800
-->
     <para>
      In <filename>contrib/amcheck</filename>, deal sanely with xids that
      appear to be before epoch zero (Andres Freund)
      <ulink url="&commit_baseurl;e8a9750d0">&sect;</ulink>
     </para>

     <para>
      In cases of corruption we might see a wrapped-around 32-bit xid that
      appears to be before the first xid epoch.  Promoting such a value to
      64-bit form produced a value far in the future, resulting in wrong
      reports.  Return FirstNormalFullTransactionId in such cases so that
      things work reasonably sanely.
     </para>
    </listitem>

    <listitem>
<!--
Author: Robert Haas <rhaas@postgresql.org>
Branch: master [8e82db97b] 2023-04-12 11:37:13 -0400
Branch: REL_15_STABLE [fa83e9e23] 2023-04-12 11:51:09 -0400
-->
     <para>
      In <filename>contrib/basebackup_to_shell</filename>, properly detect
      failure to open a pipe (Robert Haas)
      <ulink url="&commit_baseurl;fa83e9e23">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [df38157d9] 2023-04-27 11:55:06 -0400
Branch: REL_15_STABLE [85ec8bcce] 2023-04-27 11:55:06 -0400
Branch: REL_14_STABLE [c74f88c40] 2023-04-27 11:55:06 -0400
Branch: REL_13_STABLE [de2dfa053] 2023-04-27 11:55:06 -0400
Branch: REL_12_STABLE [ce9662598] 2023-04-27 11:55:06 -0400
Branch: REL_11_STABLE [c3c1097dc] 2023-04-27 11:55:06 -0400
-->
     <para>
      In <filename>contrib/hstore_plpython</filename>, avoid crashing if
      the Python value to be transformed isn't a mapping (Dmitry Dolgov,
      Tom Lane)
      <ulink url="&commit_baseurl;85ec8bcce">&sect;</ulink>
     </para>

     <para>
      This should give an error, but Python 3 changed some APIs in a way
      that caused the check to misbehave, allowing a crash to ensue.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alexander Korotkov <akorotkov@postgresql.org>
Branch: master [8bbd0cce9] 2023-04-23 14:30:09 +0300
Branch: REL_15_STABLE [214495dc5] 2023-04-23 14:30:51 +0300
Branch: REL_14_STABLE [f4a4a18ec] 2023-04-23 14:31:11 +0300
Branch: REL_13_STABLE [48c6825d0] 2023-04-23 14:00:16 +0300
-->
     <para>
      Require the <literal>siglen</literal> option of a GiST index on
      an <type>ltree</type> column, if specified, to be a multiple of 4
      (Alexander Korotkov)
      <ulink url="&commit_baseurl;214495dc5">&sect;</ulink>
     </para>

     <para>
      Other values result in misaligned accesses to index content, which
      is harmless on Intel-compatible hardware but can cause a crash on
      some other architectures.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [be753639d] 2023-03-02 14:03:02 +0900
Branch: REL_15_STABLE [9d41ecfcd] 2023-03-02 14:03:08 +0900
Branch: REL_14_STABLE [5ad63eee1] 2023-03-02 14:03:21 +0900
-->
     <para>
      In <filename>contrib/pageinspect</filename>, add defenses against
      incorrect input for the <function>gist_page_items()</function> function
      (Dmitry Koval)
      <ulink url="&commit_baseurl;9d41ecfcd">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [1925ac281] 2023-03-11 12:15:41 -0500
Branch: REL_15_STABLE [6170386c7] 2023-03-11 12:15:41 -0500
Branch: REL_14_STABLE [786528039] 2023-03-11 12:15:41 -0500
Branch: REL_13_STABLE [bc436e4a9] 2023-03-11 12:15:41 -0500
Branch: REL_12_STABLE [1279414bc] 2023-03-11 12:15:41 -0500
Branch: REL_11_STABLE [b18327489] 2023-03-11 12:15:41 -0500
-->
     <para>
      Fix misbehavior in <filename>contrib/pg_trgm</filename> with an
      unsatisfiable regular expression (Tom Lane)
      <ulink url="&commit_baseurl;6170386c7">&sect;</ulink>
     </para>

     <para>
      A regex such as <literal>$foo</literal> is legal but unsatisfiable;
      the regex compiler recognizes that and produces an empty NFA graph.
      Attempting to optimize such a graph into a pg_trgm GIN or GiST index
      qualification resulted in accessing off the end of a work array,
      possibly leading to crashes.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [8427ce4c3] 2023-02-21 20:01:43 +0900
Branch: REL_15_STABLE [5bace41ab] 2023-02-21 20:02:09 +0900
-->
     <para>
      Fix handling of escape sequences
      in <filename>contrib/postgres_fdw</filename>'s
      <varname>application_name</varname> parameter (Kyotaro Horiguchi,
      Michael Paquier)
      <ulink url="&commit_baseurl;5bace41ab">&sect;</ulink>
     </para>

     <para>
      The code to expand these could fail if executed in a background
      process, as for example during auto-analyze of a foreign table.
     </para>
    </listitem>

    <listitem>
<!--
Author: Jeff Davis <jdavis@postgresql.org>
Branch: master [69e8c7cf1] 2023-02-20 11:07:24 -0800
Branch: REL_15_STABLE [da32a99df] 2023-02-20 11:29:31 -0800
-->
     <para>
      In <filename>contrib/pg_walinspect</filename>, limit memory usage
      of <function>pg_get_wal_records_info()</function> (Bharath Rupireddy)
      <ulink url="&commit_baseurl;da32a99df">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [eab2d3147] 2023-04-20 18:12:32 -0400
Branch: REL_15_STABLE [a14afd3bd] 2023-04-20 18:12:48 -0400
Branch: REL_14_STABLE [6d60b718c] 2023-04-20 18:12:32 -0400
Branch: REL_13_STABLE [6dce37203] 2023-04-20 18:12:32 -0400
Branch: REL_12_STABLE [e2e34dfff] 2023-04-20 18:12:32 -0400
Branch: REL_11_STABLE [c976ccc9e] 2023-04-20 18:12:32 -0400
-->
     <para>
      Use the <option>--strip-unneeded</option> option when stripping
      static libraries with
      GNU-compatible <application>strip</application> (Tom Lane)
      <ulink url="&commit_baseurl;a14afd3bd">&sect;</ulink>
     </para>

     <para>
      Previously, <literal>make install-strip</literal> used
      the <option>-x</option> option in this case.  This change avoids
      misbehavior of <application>llvm-strip</application>, and gives
      slightly smaller output as well.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [969509c3f] 2023-02-08 17:15:25 -0500
Branch: REL_15_STABLE [2ee703c9d] 2023-02-08 17:15:23 -0500
Branch: REL_14_STABLE [7f8778fcf] 2023-02-08 17:15:23 -0500
Branch: REL_13_STABLE [c7b608600] 2023-02-08 17:15:23 -0500
Branch: REL_12_STABLE [11f1f9f4f] 2023-02-08 17:15:27 -0500
Branch: REL_11_STABLE [36a646d99] 2023-02-08 17:15:27 -0500
-->
     <para>
      Stop recommending auto-download of DTD files for building the
      documentation, and indeed disable it (Aleksander Alekseev, Peter
      Eisentraut, Tom Lane)
      <ulink url="&commit_baseurl;2ee703c9d">&sect;</ulink>
     </para>

     <para>
      It appears no longer possible to build the SGML documentation
      without a local installation of the DocBook DTD files.
      Formerly <application>xsltproc</application> could download those
      files on-the-fly from sourceforge.net; but sourceforge.net now
      permits only HTTPS access, and no common version
      of <application>xsltproc</application> supports that.  Hence, remove
      the bits of our documentation suggesting that that's possible or
      useful, and instead
      add <application>xsltproc</application>'s <option>--nonet</option>
      option to the build recipes.
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
Branch: master [5d42a9751] 2023-05-05 07:09:52 +0200
Branch: REL_15_STABLE [3d37476f5] 2023-05-05 07:10:15 +0200
Branch: REL_14_STABLE [e07022500] 2023-05-05 07:10:30 +0200
Branch: REL_13_STABLE [670494477] 2023-05-05 07:11:58 +0200
Branch: REL_12_STABLE [14bb2e76c] 2023-05-05 07:12:18 +0200
Branch: REL_11_STABLE [b189f71e5] 2023-05-05 07:12:26 +0200
-->
     <para>
      When running TAP tests in PGXS builds, use a saner location for the
      temporary <filename>portlock</filename> directory (Peter Eisentraut)
      <ulink url="&commit_baseurl;3d37476f5">&sect;</ulink>
     </para>

     <para>
      Place it under <filename>tmp_check</filename> in the build
      directory.  With the previous coding, a PGXS build would try to place
      it in the installation directory, which is not necessarily writable.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [4ddee4d9d] 2023-04-18 14:46:39 -0400
Branch: REL_15_STABLE [62b22caa5] 2023-04-18 14:46:39 -0400
Branch: REL_14_STABLE [b79b36f26] 2023-04-18 14:46:39 -0400
Branch: REL_13_STABLE [87d8ec3e4] 2023-04-18 14:46:39 -0400
Branch: REL_12_STABLE [2ad35cf06] 2023-04-18 14:46:39 -0400
Branch: REL_11_STABLE [7228f2f81] 2023-04-18 14:46:39 -0400
-->
     <para>
      Update time zone data files to <application>tzdata</application>
      release 2023c for DST law changes in Egypt, Greenland, Morocco, and
      Palestine. (Tom Lane)
      <ulink url="&commit_baseurl;62b22caa5">&sect;</ulink>
     </para>

     <para>
      When observing Moscow time, Europe/Kirov and Europe/Volgograd now
      use the abbreviations MSK/MSD instead of numeric abbreviations,
      for consistency with other timezones observing Moscow time.
      Also, America/Yellowknife is no longer distinct from America/Edmonton;
      this affects some pre-1948 timestamps in that area.
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-15-2">
  <title>Release 15.2</title>

  <formalpara>
  <title>Release date:</title>
  <para>2023-02-09</para>
  </formalpara>

  <para>
   This release contains a variety of fixes from 15.1.
   For information about new features in major release 15, see
   <xref linkend="release-15"/>.
  </para>

  <sect2>
   <title>Migration to Version 15.2</title>

   <para>
    A dump/restore is not required for those running 15.X.
   </para>

   <para>
    However, if you are upgrading from a version earlier than 15.1,
    see <xref linkend="release-15-1"/>.
   </para>
  </sect2>

  <sect2>
   <title>Changes</title>

   <itemizedlist>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [71c37797d] 2023-02-06 11:20:07 +0900
Branch: REL_15_STABLE [715c345dd] 2023-02-06 11:20:20 +0900
Branch: REL_14_STABLE [626f2c1d6] 2023-02-06 11:20:23 +0900
Branch: REL_13_STABLE [45a945ee9] 2023-02-06 11:20:27 +0900
Branch: REL_12_STABLE [3f7342671] 2023-02-06 11:20:31 +0900
-->
     <para>
      <application>libpq</application> can leak memory contents after
      GSSAPI transport encryption initiation fails (Jacob Champion)
      <ulink url="&commit_baseurl;715c345dd">&sect;</ulink>
     </para>

     <para>
      A modified server, or an unauthenticated man-in-the-middle, can
      send a not-zero-terminated error message during setup of GSSAPI
      (Kerberos) transport encryption.  <application>libpq</application>
      will then copy that string, as well as following bytes in
      application memory up to the next zero byte, to its error report.
      Depending on what the calling application does with the error
      report, this could result in disclosure of application memory
      contents.  There is also a small probability of a crash due to
      reading beyond the end of memory.  Fix by properly zero-terminating
      the server message.
      (CVE-2022-41862)
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [3f7836ff6] 2023-01-05 14:12:17 -0500
Branch: REL_15_STABLE [3706cc97a] 2023-01-05 14:12:17 -0500
Branch: REL_14_STABLE [8cd190e13] 2023-01-05 14:12:17 -0500
Branch: REL_13_STABLE [ad38e2f89] 2023-01-05 14:12:17 -0500
Branch: master [3f244d020] 2023-01-15 13:14:52 -0500
Branch: REL_15_STABLE [a8f7687a0] 2023-01-15 14:06:46 -0500
Branch: REL_14_STABLE [a8b88c26f] 2023-01-15 14:06:46 -0500
Branch: REL_13_STABLE [787db4be9] 2023-01-15 14:06:46 -0500
-->
     <para>
      Fix calculation of which <literal>GENERATED</literal> columns need
      to be updated in child tables during an <command>UPDATE</command> on
      a partitioned table or inheritance tree (Amit Langote, Tom Lane)
      <ulink url="&commit_baseurl;3706cc97a">&sect;</ulink>
      <ulink url="&commit_baseurl;a8f7687a0">&sect;</ulink>
     </para>

     <para>
      This fixes failure to update <literal>GENERATED</literal> columns
      that do not exist in the parent table, or that have different
      dependencies than are in the parent column's generation expression.
     </para>
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [fe9e658f4] 2023-01-30 10:04:57 +0000
Branch: REL_15_STABLE [4785af9e6] 2023-01-30 10:07:32 +0000
-->
     <para>
      Fix possible failure of <command>MERGE</command> to compute
      <literal>GENERATED</literal> columns (Dean Rasheed)
      <ulink url="&commit_baseurl;4785af9e6">&sect;</ulink>
     </para>

     <para>
      When the first row-level action of the <command>MERGE</command> was
      an <literal>UPDATE</literal>, any
      subsequent <literal>INSERT</literal> actions would fail to
      compute <literal>GENERATED</literal> columns that were deemed
      unnecessary to compute for the <literal>UPDATE</literal> action
      (due to not depending on any of the <literal>UPDATE</literal> target
      columns).
     </para>
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [f026c16a2] 2023-01-10 14:17:47 +0000
Branch: REL_15_STABLE [38255f2d0] 2023-01-10 14:16:27 +0000
-->
     <para>
      Fix <command>MERGE</command>'s check for
      unreachable <literal>WHEN</literal> clauses (Dean Rasheed)
      <ulink url="&commit_baseurl;38255f2d0">&sect;</ulink>
     </para>

     <para>
      A <literal>WHEN</literal> clause following an
      unconditional <literal>WHEN</literal> clause should be rejected as
      unreachable, but this case was not always detected.
     </para>
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [7b2ccc5e0] 2022-11-25 13:31:48 +0000
Branch: REL_15_STABLE [04d61bfe6] 2022-11-25 13:29:51 +0000
-->
     <para>
      Fix <command>MERGE</command>'s rule-detection test (Dean Rasheed)
      <ulink url="&commit_baseurl;04d61bfe6">&sect;</ulink>
     </para>

     <para>
      <command>MERGE</command> is not supported on tables with rules;
      but it also failed on tables that once had rules but no longer do.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [6ff5aa129] 2022-11-17 18:56:11 +0100
Branch: REL_15_STABLE [3d45edcef] 2022-11-17 18:56:11 +0100
-->
     <para>
      In <command>MERGE</command>, don't count a <literal>DO
      NOTHING</literal> action as a processed tuple (&Aacute;lvaro Herrera)
      <ulink url="&commit_baseurl;3d45edcef">&sect;</ulink>
     </para>

     <para>
      This makes the code's behavior match the documentation.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [935277b24] 2022-12-16 13:07:42 -0500
Branch: REL_15_STABLE [ae98debf7] 2022-12-16 13:07:42 -0500
Branch: REL_14_STABLE [ea5ae4cae] 2022-12-16 13:07:42 -0500
-->
     <para>
      Allow a <literal>WITH RECURSIVE ... CYCLE</literal> CTE
      to access its output column (Tom Lane)
      <ulink url="&commit_baseurl;ae98debf7">&sect;</ulink>
     </para>

     <para>
      A reference to the <literal>SET</literal> column from within the CTE
      would fail with <quote>cache lookup failed for type 0</quote>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Etsuro Fujita <efujita@postgresql.org>
Branch: master [ffbb7e65a] 2022-11-25 17:45:00 +0900
Branch: REL_15_STABLE [fc02019c0] 2022-11-25 17:45:01 +0900
Branch: REL_14_STABLE [e52245228] 2022-11-25 17:45:03 +0900
Branch: master [4b3e37993] 2022-12-08 16:15:00 +0900
Branch: REL_15_STABLE [a0bf7a0ec] 2022-12-08 16:15:01 +0900
Branch: REL_14_STABLE [d43a97ef4] 2022-12-08 16:15:03 +0900
-->
     <para>
      Fix handling of pending inserts when doing a bulk insertion to a
      foreign table (Etsuro Fujita)
      <ulink url="&commit_baseurl;fc02019c0">&sect;</ulink>
      <ulink url="&commit_baseurl;a0bf7a0ec">&sect;</ulink>
     </para>

     <para>
      In some cases pending insertions were not flushed to the FDW soon
      enough, leading to logical inconsistencies, for
      example <literal>BEFORE ROW</literal> triggers not seeing rows they
      should be able to see.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [c9f7f9264] 2023-01-21 13:10:29 -0500
Branch: REL_15_STABLE [9e4288ce6] 2023-01-21 13:10:29 -0500
Branch: REL_14_STABLE [70ec756b0] 2023-01-21 13:10:29 -0500
Branch: REL_13_STABLE [72d611109] 2023-01-21 13:10:29 -0500
Branch: REL_12_STABLE [a5f3f2fce] 2023-01-21 13:10:30 -0500
Branch: REL_11_STABLE [6c122edde] 2023-01-21 13:10:30 -0500
-->
     <para>
      Allow <literal>REPLICA IDENTITY</literal>
      to be set on an index that's not (yet) valid (Tom Lane)
      <ulink url="&commit_baseurl;9e4288ce6">&sect;</ulink>
     </para>

     <para>
      When <application>pg_dump</application> dumps a partitioned index
      that's marked <literal>REPLICA IDENTITY</literal>, it generates a
      command sequence that applies <literal>REPLICA IDENTITY</literal>
      before the partitioned index has been marked valid, causing restore
      to fail.  There seems no very good reason to prohibit doing it in
      that order, so allow it.  The marking will have no effect anyway
      until the index becomes valid.
     </para>
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [2605643a3] 2022-12-03 12:11:33 +0000
Branch: REL_15_STABLE [c67204db6] 2022-12-03 12:14:36 +0000
Branch: REL_14_STABLE [2c7ed9f75] 2022-12-03 12:16:07 +0000
Branch: REL_13_STABLE [3bed88123] 2022-12-03 12:17:47 +0000
Branch: REL_12_STABLE [33f600f04] 2022-12-03 12:18:58 +0000
Branch: REL_11_STABLE [30f9b03a0] 2022-12-03 12:20:02 +0000
-->
     <para>
      Fix handling of <literal>DEFAULT</literal> markers in rules that
      perform an <command>INSERT</command> from a
      multi-row <literal>VALUES</literal> list (Dean Rasheed)
      <ulink url="&commit_baseurl;c67204db6">&sect;</ulink>
     </para>

     <para>
      In some cases a <literal>DEFAULT</literal> marker would not get
      replaced with the proper default-value expression, leading to
      an <quote>unrecognized node type</quote> error.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alexander Korotkov <akorotkov@postgresql.org>
Branch: master [3161ae86c] 2023-01-12 18:16:34 +0300
Branch: REL_15_STABLE [4dc3f94fa] 2023-01-12 18:17:43 +0300
Branch: REL_14_STABLE [0d9221f1d] 2023-01-12 18:18:04 +0300
Branch: REL_13_STABLE [2ff3ac3b5] 2023-01-12 18:18:31 +0300
Branch: REL_12_STABLE [9e24e4781] 2023-01-12 18:19:19 +0300
-->
     <para>
      Reject uses of undefined variables in <type>jsonpath</type>
      existence checks (Alexander Korotkov, David G. Johnston)
      <ulink url="&commit_baseurl;4dc3f94fa">&sect;</ulink>
     </para>

     <para>
      While <type>jsonpath</type> match operators threw an error for an
      undefined variable in the path pattern, the existence operators
      silently treated it as a match.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [b0feda79f] 2022-12-12 16:17:54 -0500
Branch: REL_15_STABLE [d79b76b10] 2022-12-12 16:17:49 -0500
Branch: REL_14_STABLE [a18328bb3] 2022-12-12 16:17:49 -0500
-->
     <para>
      Fix <type>jsonb</type> subscripting to cope with toasted subscript
      values (Tom Lane, David G. Johnston)
      <ulink url="&commit_baseurl;d79b76b10">&sect;</ulink>
     </para>

     <para>
      Using a text value fetched directly from a table as
      a <type>jsonb</type> subscript was likely to fail.
      Fetches would usually not find any matching element.
      Assignments could store the value with a garbage key,
      although keys long enough to cause that problem are probably rare in
      the field.
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [ffcf6f4cf] 2023-01-26 14:52:19 +1300
Branch: REL_15_STABLE [d9f5345bf] 2023-01-26 14:53:37 +1300
Branch: REL_14_STABLE [2f65b8468] 2023-01-26 14:54:17 +1300
Branch: REL_13_STABLE [1a5afe007] 2023-01-26 14:54:39 +1300
Branch: REL_12_STABLE [b55303792] 2023-01-26 14:55:03 +1300
Branch: REL_11_STABLE [d95dcc9ab] 2023-01-26 14:55:37 +1300
-->
     <para>
      Fix edge-case data corruption in parallel hash joins (Dmitry Astapov)
      <ulink url="&commit_baseurl;d9f5345bf">&sect;</ulink>
     </para>

     <para>
      If the final chunk of a large tuple being written out to a temporary
      file was exactly 32760 bytes, it would be corrupted due to a
      fencepost bug.  The query would typically fail later with
      corrupted-data symptoms.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [7e8a80d1f] 2023-01-19 13:13:05 +0900
Branch: REL_15_STABLE [49e3a5e71] 2023-01-19 13:13:27 +0900
Branch: REL_14_STABLE [2e21e2857] 2023-01-19 13:13:28 +0900
Branch: REL_13_STABLE [fed4e92f3] 2023-01-19 13:13:30 +0900
Branch: REL_12_STABLE [162a48287] 2023-01-19 13:13:32 +0900
Branch: REL_11_STABLE [0c2f34af7] 2023-01-19 13:13:34 +0900
-->
     <para>
      Honor non-default settings
      of <varname>checkpoint_completion_target</varname>
      (Bharath Rupireddy)
      <ulink url="&commit_baseurl;49e3a5e71">&sect;</ulink>
     </para>

     <para>
      Internal state was not updated after a change
      in <varname>checkpoint_completion_target</varname>, possibly
      resulting in performing checkpoint I/O faster or slower than
      desired, especially if that setting was changed on-the-fly.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [44e9e3426] 2023-01-19 12:23:20 -0500
Branch: REL_15_STABLE [abe203304] 2023-01-19 12:23:20 -0500
Branch: REL_14_STABLE [103450724] 2023-01-19 12:23:20 -0500
Branch: REL_13_STABLE [1b9a0b96a] 2023-01-19 12:23:20 -0500
Branch: REL_12_STABLE [87591db19] 2023-01-19 12:23:20 -0500
Branch: REL_11_STABLE [0a269527f] 2023-01-19 12:23:20 -0500
-->
     <para>
      Log the correct ending timestamp
      in <varname>recovery_target_xid</varname> mode (Tom Lane)
      <ulink url="&commit_baseurl;abe203304">&sect;</ulink>
     </para>

     <para>
      When ending recovery based on the <varname>recovery_target_xid</varname>
      setting with <varname>recovery_target_inclusive</varname>
      = <literal>off</literal>, we printed an incorrect timestamp (always
      2000-01-01) in the <quote>recovery stopping before
      ... transaction</quote> log message.
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
Branch: master [1561612e3] 2023-01-16 09:44:04 +0100
Branch: REL_15_STABLE [ac01fa647] 2023-01-16 09:45:03 +0100
Branch: REL_14_STABLE [f463335e1] 2023-01-16 09:48:09 +0100
Branch: REL_13_STABLE [cf74b6ead] 2023-01-16 09:54:15 +0100
-->
     <para>
      Improve error reporting for some buffered file read failures
      (Peter Eisentraut)
      <ulink url="&commit_baseurl;ac01fa647">&sect;</ulink>
     </para>

     <para>
      Correctly report a short read, giving the numbers of bytes desired
      and actually read, instead of reporting an irrelevant error code.
      Most places got this right already, but some recently-written
      replication logic did not.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [647fa5005] 2023-01-15 17:32:09 -0500
Branch: REL_15_STABLE [db9127c58] 2023-01-15 17:32:09 -0500
-->
     <para>
      Remove arbitrary limit on number of elements
      in <type>int2vector</type> and <type>oidvector</type> (Tom Lane)
      <ulink url="&commit_baseurl;db9127c58">&sect;</ulink>
     </para>

     <para>
      The input functions for these types previously rejected more than
      100 elements.  With the introduction of the logical replication
      column list feature, it's necessary to
      accept <type>int2vector</type>s having up to 1600 columns,
      otherwise long column lists cause logical-replication failures.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [20432f873] 2022-12-13 14:23:58 -0500
Branch: REL_15_STABLE [18431ee6f] 2022-12-13 14:23:59 -0500
Branch: REL_14_STABLE [ae47f8a96] 2022-12-13 14:23:59 -0500
Branch: REL_13_STABLE [942cc240f] 2022-12-13 14:23:59 -0500
Branch: REL_12_STABLE [1cca4a75f] 2022-12-13 14:23:59 -0500
Branch: REL_11_STABLE [f48aa5df4] 2022-12-13 14:23:59 -0500
-->
     <para>
      In extended query protocol, avoid an immediate commit
      after <command>ANALYZE</command> if we're running a pipeline
      (Tom Lane)
      <ulink url="&commit_baseurl;18431ee6f">&sect;</ulink>
     </para>

     <para>
      If there's not been an explicit <command>BEGIN
      TRANSACTION</command>, <command>ANALYZE</command> would take it on
      itself to commit, which should not happen within a pipelined series
      of commands.
     </para>
    </listitem>

    <listitem>
<!--
Author: Noah Misch <noah@leadboat.com>
Branch: master [e52daaabf] 2023-01-21 06:08:00 -0800
Branch: REL_15_STABLE [b152bb7b2] 2023-01-21 06:08:03 -0800
Branch: REL_14_STABLE [6900aea67] 2023-01-21 06:08:04 -0800
Branch: REL_13_STABLE [a9bccffe5] 2023-01-21 06:08:04 -0800
Branch: REL_12_STABLE [e75b5c855] 2023-01-21 06:08:04 -0800
Branch: REL_11_STABLE [8f70de7e0] 2023-01-21 06:08:05 -0800
-->
     <para>
      Reject cancel request packets having the wrong length
      (Andrey Borodin)
      <ulink url="&commit_baseurl;b152bb7b2">&sect;</ulink>
     </para>

     <para>
      The server would process a cancel request even if its length word
      was too small.  This led to reading beyond the end of the allocated
      buffer.  In theory that could cause a segfault, but it seems quite
      unlikely to happen in practice, since the buffer would have to be
      very close to the end of memory.  The more likely outcome was a bogus
      log message about wrong backend PID or cancel code.  Complain about
      the wrong length, instead.
     </para>
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master [94985c210] 2022-12-10 19:27:20 +1300
Branch: REL_15_STABLE [04788ee4c] 2022-12-10 19:27:53 +1300
-->
     <para>
      Fix planner preprocessing oversights for window function run-condition
      expressions (Richard Guo, David Rowley)
      <ulink url="&commit_baseurl;04788ee4c">&sect;</ulink>
     </para>

     <para>
      This could lead to planner errors such as <quote>WindowFunc not
      found in subplan target lists</quote>.
     </para>
    </listitem>

    <listitem>
<!--
Author: David Rowley <drowley@postgresql.org>
Branch: master [a85832722] 2022-12-07 00:09:36 +1300
Branch: REL_15_STABLE [2a535620c] 2022-12-07 00:10:21 +1300
-->
     <para>
      Fix possible dangling-pointer access during execution of window
      function run-condition expressions (David Rowley)
      <ulink url="&commit_baseurl;2a535620c">&sect;</ulink>
     </para>

     <para>
      In practice, because the run-condition optimization is only applied
      to certain window functions that happen to all
      return <type>int8</type>, this only manifested as a problem on
      32-bit builds.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [5beb7881f] 2022-12-22 10:35:02 -0500
Branch: REL_15_STABLE [1a3daa5bb] 2022-12-22 10:35:02 -0500
Branch: REL_14_STABLE [97431d673] 2022-12-22 10:35:02 -0500
Branch: REL_13_STABLE [4fceb454f] 2022-12-22 10:35:03 -0500
Branch: REL_12_STABLE [d572003f7] 2022-12-22 10:35:03 -0500
Branch: REL_11_STABLE [8cd700cc5] 2022-12-22 10:35:03 -0500
-->
     <para>
      Add recursion and looping defenses in subquery pullup (Tom Lane)
      <ulink url="&commit_baseurl;1a3daa5bb">&sect;</ulink>
     </para>

     <para>
      A contrived query can result in deep recursion and unreasonable
      amounts of time spent trying to flatten subqueries.  A proper fix
      for that seems unduly invasive for a back-patch, but we can at least
      add stack depth checks and an interrupt check to allow the query to
      be cancelled.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [d69d01ba9] 2022-12-05 12:36:40 -0500
Branch: REL_15_STABLE [c959f84c2] 2022-12-05 12:36:41 -0500
Branch: REL_14_STABLE [dc3648f65] 2022-12-05 12:36:41 -0500
Branch: master [e76913802] 2022-12-04 13:48:12 -0500
Branch: REL_15_STABLE [834d97c32] 2022-12-04 13:48:12 -0500
Branch: REL_14_STABLE [ce093aa18] 2022-12-04 13:48:12 -0500
-->
     <para>
      Fix planner issues when combining Memoize nodes with partitionwise
      joins or parameterized nestloops (Richard Guo)
      <ulink url="&commit_baseurl;c959f84c2">&sect;</ulink>
      <ulink url="&commit_baseurl;834d97c32">&sect;</ulink>
     </para>

     <para>
      These errors could lead to not using Memoize in contexts where it
      would be useful, or possibly to wrong query plans.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [fe12f2f8f] 2022-12-04 13:17:18 -0500
Branch: REL_15_STABLE [bf8fd64ff] 2022-12-04 13:17:18 -0500
Branch: REL_14_STABLE [ec3daeec3] 2022-12-04 13:17:18 -0500
Branch: REL_13_STABLE [4ebca555c] 2022-12-04 13:17:18 -0500
Branch: REL_12_STABLE [1ff549e84] 2022-12-04 13:17:18 -0500
Branch: REL_11_STABLE [2df073313] 2022-12-04 13:17:18 -0500
-->
     <para>
      Fix partitionwise-join code to tolerate failure to produce a plan for
      each partition (Tom Lane)
      <ulink url="&commit_baseurl;bf8fd64ff">&sect;</ulink>
     </para>

     <para>
      This could result in <quote>could not devise a query plan for the
      given query</quote> errors.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [9c6ad5eaa] 2022-11-22 14:40:20 -0500
Branch: REL_15_STABLE [2debceed2] 2022-11-22 14:40:44 -0500
Branch: REL_14_STABLE [bd06fe4de] 2022-11-22 14:40:45 -0500
Branch: REL_13_STABLE [6e639267a] 2022-11-22 14:40:45 -0500
Branch: REL_12_STABLE [ec10b6139] 2022-11-22 14:40:45 -0500
Branch: REL_11_STABLE [b96a096db] 2022-11-22 14:40:46 -0500
-->
     <para>
      Limit the amount of cleanup work done
      by <function>get_actual_variable_range</function> (Simon Riggs)
      <ulink url="&commit_baseurl;2debceed2">&sect;</ulink>
     </para>

     <para>
      Planner runs occurring just after deletion of a large number of
      tuples appearing at the end of an index could expend significant
      amounts of work setting the <quote>killed</quote> bits for those
      index entries.  Limit the amount of work done in any one query by
      giving up on this process after examining 100 heap pages.  All the
      cleanup will still happen eventually, but without so large a
      performance hiccup.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [cb2e7ddfe] 2022-12-02 18:10:30 -0800
Branch: REL_15_STABLE [c6a60471a] 2022-12-02 18:07:47 -0800
-->
     <para>
      Prevent the statistics machinery from getting confused when a
      relation's relkind changes (Andres Freund)
      <ulink url="&commit_baseurl;c6a60471a">&sect;</ulink>
     </para>

     <para>
      Converting a table to a view could lead to crashes or assertion
      failures.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [1dd6700f4] 2022-12-01 11:38:14 -0500
Branch: REL_15_STABLE [a711b36e5] 2022-12-01 11:38:15 -0500
Branch: REL_14_STABLE [de0ff6088] 2022-12-01 11:38:15 -0500
-->
     <para>
      Fix under-parenthesized display of <literal>AT TIME ZONE</literal>
      constructs (Tom Lane)
      <ulink url="&commit_baseurl;a711b36e5">&sect;</ulink>
     </para>

     <para>
      This could result in dump/restore failures for rules or views in
      which an argument of <literal>AT TIME ZONE</literal> is itself an
      expression.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [8b47ccb62] 2022-11-29 11:46:33 -0500
Branch: REL_15_STABLE [5dfc2b753] 2022-11-29 11:46:33 -0500
Branch: REL_14_STABLE [7715a3c24] 2022-11-29 11:46:33 -0500
-->
     <para>
      Prevent clobbering of cached parsetrees for utility statements in
      SQL functions (Tom Lane, Daniel Gustafsson)
      <ulink url="&commit_baseurl;5dfc2b753">&sect;</ulink>
     </para>

     <para>
      If a SQL-language function executes the same utility command more
      than once within a single calling query, it could crash or report
      strange errors such as <quote>unrecognized node type</quote>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [5644d6f90] 2022-11-21 17:07:29 -0500
Branch: REL_15_STABLE [0353db996] 2022-11-21 17:07:07 -0500
Branch: REL_14_STABLE [1b9c04b13] 2022-11-21 17:07:07 -0500
Branch: REL_13_STABLE [74670688f] 2022-11-21 17:07:07 -0500
Branch: REL_12_STABLE [1aed4c4fd] 2022-11-21 17:07:07 -0500
Branch: REL_11_STABLE [c0eed8891] 2022-11-21 17:07:07 -0500
-->
     <para>
      Ensure that execution of full-text-search queries can be cancelled
      while they are performing phrase matches (Tom Lane)
      <ulink url="&commit_baseurl;0353db996">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Jeff Davis <jdavis@postgresql.org>
Branch: master [edf12e7bb] 2022-12-01 11:49:15 -0800
Branch: REL_15_STABLE [9377b4f30] 2022-12-01 11:55:59 -0800
Branch: REL_14_STABLE [47e1224d5] 2022-12-01 11:53:53 -0800
Branch: REL_13_STABLE [a844052b5] 2022-12-01 11:52:06 -0800
Branch: REL_12_STABLE [f98c4fb1d] 2022-12-01 11:49:43 -0800
-->
     <para>
      Fix memory leak in hashing strings with nondeterministic collations
      (Jeff Davis)
      <ulink url="&commit_baseurl;9377b4f30">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master [6c6d6ba3e] 2023-01-24 09:25:36 +0530
Branch: REL_15_STABLE [267135d01] 2023-01-24 09:12:04 +0530
Branch: REL_14_STABLE [fd270b728] 2023-01-24 09:02:05 +0530
-->
     <para>
      Fix deadlock between <command>DROP DATABASE</command> and logical
      replication worker process (Hou Zhijie)
      <ulink url="&commit_baseurl;267135d01">&sect;</ulink>
     </para>

     <para>
      This was caused by an ill-advised choice to block interrupts while
      creating a logical replication slot in the worker.  In version 15
      that could lead to an undetected deadlock.  In version 14, no
      deadlock has been observed, but it's still a bad idea to block
      interrupts while waiting for network I/O.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [bc54ef4ec] 2023-01-23 18:27:42 -0800
Branch: REL_15_STABLE [704a330a9] 2023-01-23 18:27:45 -0800
Branch: REL_14_STABLE [0a796b8b3] 2023-01-23 18:27:48 -0800
Branch: REL_13_STABLE [c5864805b] 2023-01-23 18:27:51 -0800
Branch: REL_12_STABLE [92fc12787] 2023-01-23 18:27:55 -0800
Branch: REL_11_STABLE [243373159] 2023-01-23 18:27:58 -0800
-->
     <para>
      Clean up the <application>libpq</application> connection object
      after a failed replication connection attempt (Andres Freund)
      <ulink url="&commit_baseurl;704a330a9">&sect;</ulink>
     </para>

     <para>
      The previous coding leaked the connection object.  In background
      code paths that's pretty harmless because the calling process will
      give up and exit.  But in commands such as <command>CREATE
      SUBSCRIPTION</command>, such a failure resulted in a small
      session-lifespan memory leak.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [8242752f9] 2022-11-29 15:43:17 -0500
Branch: REL_15_STABLE [55fa993d7] 2022-11-29 15:43:17 -0500
Branch: REL_14_STABLE [06998eab1] 2022-11-29 15:43:17 -0500
Branch: REL_13_STABLE [6e8ad1152] 2022-11-29 15:43:17 -0500
Branch: REL_12_STABLE [c4a153d77] 2022-11-29 15:43:17 -0500
Branch: REL_11_STABLE [a6c9e1db2] 2022-11-29 15:43:17 -0500
-->
     <para>
      In hot-standby servers, reduce processing effort for tracking XIDs
      known to be active on the primary (Simon Riggs, Michail Nikolaev)
      <ulink url="&commit_baseurl;55fa993d7">&sect;</ulink>
     </para>

     <para>
      Insufficiently-aggressive cleanup of the KnownAssignedXids array
      could lead to poor performance, particularly
      when <varname>max_connections</varname> is set to a large value on
      the standby.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [0557e1770] 2022-11-22 10:56:07 +0100
Branch: REL_15_STABLE [1ad033df1] 2022-11-22 10:56:07 +0100
Branch: REL_14_STABLE [1b3ed7571] 2022-11-22 10:56:07 +0100
Branch: REL_13_STABLE [36eeb37cd] 2022-11-22 10:56:07 +0100
-->
     <para>
      Ignore invalidated logical-replication slots while determining
      oldest catalog xmin (Sirisha Chamarthi)
      <ulink url="&commit_baseurl;1ad033df1">&sect;</ulink>
     </para>

     <para>
      A replication slot could prevent cleanup of dead tuples in the
      system catalogs even after it becomes invalidated due to
      exceeding <varname>max_slot_wal_keep_size</varname>.  Thus, failure
      of a replication consumer could lead to indefinitely-large catalog
      bloat.
     </para>
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master [2b6df0546] 2023-01-07 12:17:14 +0530
Branch: REL_15_STABLE [18b81258a] 2023-01-07 12:04:33 +0530
Branch: REL_14_STABLE [b2cc5b810] 2023-01-07 11:52:41 +0530
-->
     <para>
      In logical decoding, notify the remote node when a transaction is
      detected to have crashed (Hou Zhijie)
      <ulink url="&commit_baseurl;18b81258a">&sect;</ulink>
     </para>

     <para>
      After a server restart, we'll re-stream the changes for transactions
      occurring shortly before the restart.  Some of these transactions
      probably never completed; when we realize that one didn't we throw
      away the relevant decoding state locally, but we neglected to tell
      the subscriber about it.  That led to the subscriber keeping useless
      streaming files until it's next restarted.
     </para>
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: REL_15_STABLE [898ef41bf] 2022-11-25 09:38:03 +0530
Branch: REL_14_STABLE [9f2cc1a73] 2022-11-25 09:25:50 +0530
Branch: REL_13_STABLE [4ec157c15] 2022-11-25 09:15:31 +0530
Branch: REL_12_STABLE [aa9d916f6] 2022-11-25 09:00:15 +0530
Branch: REL_11_STABLE [9b788aafd] 2022-11-25 08:56:54 +0530
-->
     <para>
      Fix uninitialized-memory usage in logical decoding (Masahiko Sawada)
      <ulink url="&commit_baseurl;898ef41bf">&sect;</ulink>
     </para>

     <para>
      In certain cases, resumption of logical decoding could try to re-use
      XID data that had already been freed, leading to unpredictable
      behavior.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [5ad165d2c] 2023-01-12 13:40:33 +0900
Branch: REL_15_STABLE [6f25e4877] 2023-01-12 13:41:22 +0900
-->
     <para>
      Acquire spinlock while updating shared state during logical decoding
      context creation (Masahiko Sawada)
      <ulink url="&commit_baseurl;6f25e4877">&sect;</ulink>
     </para>

     <para>
      We neglected to acquire the appropriate lock while updating data
      about two-phase transactions, potentially allowing other processes
      to see inconsistent data.
     </para>
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master [40b149135] 2022-12-02 10:52:58 +0530
Branch: REL_15_STABLE [ebf87c019] 2022-12-02 11:14:42 +0530
-->
     <para>
      Fix <application>pgoutput</application> replication plug-in to not
      send columns not listed in a table's replication column list
      (Hou Zhijie)
      <ulink url="&commit_baseurl;ebf87c019">&sect;</ulink>
     </para>

     <para>
      <literal>UPDATE</literal> and <literal>DELETE</literal> events did
      not pay attention to the configured column list, thus sending more
      data than expected.  This did not cause a problem when the receiver
      is our built-in logical replication code, but it might confuse other
      receivers, and in any case it wasted network bandwidth.
     </para>
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master [e848be60b] 2022-11-14 10:43:33 +0530
Branch: REL_15_STABLE [e49e19181] 2022-11-14 10:32:47 +0530
Branch: REL_14_STABLE [9693f1900] 2022-11-14 10:22:28 +0530
Branch: REL_13_STABLE [20c223336] 2022-11-14 10:11:10 +0530
Branch: REL_12_STABLE [4dccccb37] 2022-11-14 10:01:14 +0530
Branch: REL_11_STABLE [1703033f8] 2022-11-14 09:52:06 +0530
-->
     <para>
      Avoid rare <quote>failed to acquire cleanup lock</quote> panic
      during WAL replay of hash-index page split operations (Robert Haas)
      <ulink url="&commit_baseurl;e49e19181">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Jeff Davis <jdavis@postgresql.org>
Branch: master [d6a3dbe14] 2022-11-11 12:38:29 -0800
Branch: REL_15_STABLE [7bf713dd2] 2022-11-11 12:46:11 -0800
Branch: REL_14_STABLE [f893af496] 2022-11-11 12:46:22 -0800
Branch: REL_13_STABLE [58a45bb1d] 2022-11-11 12:46:34 -0800
Branch: REL_12_STABLE [7dd39e9e8] 2022-11-11 12:46:44 -0800
Branch: REL_11_STABLE [5eaf3e375] 2022-11-11 12:46:52 -0800
-->
     <para>
      Advance a heap page's LSN when setting its all-visible bit during
      WAL replay (Jeff Davis)
      <ulink url="&commit_baseurl;7bf713dd2">&sect;</ulink>
     </para>

     <para>
      Failure to do this left the page possibly different on standby
      servers than the primary, and violated some other expectations about
      when the LSN changes.  This seems only a theoretical hazard so
      far as <productname>PostgreSQL</productname> itself is concerned,
      but it could upset third-party tools.
     </para>
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [b2d479289] 2023-02-03 11:13:34 +0000
Branch: REL_15_STABLE [4f74741a5] 2023-02-03 11:11:59 +0000
Branch: REL_14_STABLE [86bfbeab4] 2023-02-03 11:09:15 +0000
-->
     <para>
      Fix <function>int64_div_fast_to_numeric()</function> to work for a
      wider range of inputs (Dean Rasheed)
      <ulink url="&commit_baseurl;4f74741a5">&sect;</ulink>
     </para>

     <para>
      This function misbehaved with some values of its second argument.
      No such usages exist in core <productname>PostgreSQL</productname>,
      but it's clearly a hazard for external modules, so repair.
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [f1821b58f] 2023-01-13 11:02:12 +1300
Branch: REL_15_STABLE [8a98523a5] 2023-01-13 11:02:00 +1300
Branch: REL_14_STABLE [547e60b83] 2023-01-13 10:57:29 +1300
Branch: REL_13_STABLE [c159b0383] 2023-01-13 10:54:49 +1300
Branch: REL_12_STABLE [bf388ab82] 2023-01-13 10:54:34 +1300
Branch: REL_11_STABLE [1b40710a8] 2023-01-13 10:54:20 +1300
-->
     <para>
      Fix latent buffer-overrun problem in <literal>WaitEventSet</literal>
      logic (Thomas Munro)
      <ulink url="&commit_baseurl;8a98523a5">&sect;</ulink>
     </para>

     <para>
      The <function>epoll</function>-based
      and <function>kqueue</function>-based implementations could ask the
      kernel for too many events if the size of their internal buffer was
      different from the size of the caller's output buffer.  That case is
      not known to occur in released <productname>PostgreSQL</productname>
      versions, but this error is a hazard for external modules and future
      bug fixes.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [8c954168c] 2022-11-19 12:22:04 -0800
Branch: REL_15_STABLE [a0d35ebcc] 2022-11-19 12:33:11 -0800
Branch: REL_14_STABLE [fc4154286] 2022-11-19 12:33:14 -0800
Branch: REL_13_STABLE [c13667b51] 2022-11-19 12:36:33 -0800
Branch: REL_12_STABLE [4cbcb7ed8] 2022-11-19 12:36:48 -0800
Branch: REL_11_STABLE [140c80372] 2022-11-19 12:36:52 -0800
-->
     <para>
      Avoid nominally-undefined behavior when accessing shared memory in
      32-bit builds (Andres Freund)
      <ulink url="&commit_baseurl;a0d35ebcc">&sect;</ulink>
     </para>

     <para>
      clang's undefined-behavior sanitizer complained about use of a
      pointer that was less aligned than it should be.  It's very unlikely
      that this would cause a problem in non-debug builds, but it's worth
      fixing for testing purposes.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
Branch: master [02699bc1f] 2022-12-30 20:49:50 +0100
Branch: REL_15_STABLE [c4f64cfab] 2022-12-30 20:49:11 +0100
Branch: REL_14_STABLE [883dc0214] 2022-12-30 20:47:58 +0100
-->
     <para>
      Fix assertion failure in BRIN minmax-multi opclasses (Tomas Vondra)
      <ulink url="&commit_baseurl;c4f64cfab">&sect;</ulink>
     </para>

     <para>
      The assertion was overly strict, so this mistake was harmless in
      non-assert builds.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [51dfaa0b0] 2022-11-29 10:52:44 -0500
Branch: REL_15_STABLE [556c0b913] 2022-11-29 10:52:44 -0500
Branch: REL_14_STABLE [0224646be] 2022-11-29 10:52:44 -0500
Branch: REL_13_STABLE [aca695fb6] 2022-11-29 10:52:44 -0500
Branch: REL_12_STABLE [bb8d48cb9] 2022-11-29 10:52:44 -0500
-->
     <para>
      Remove faulty assertion in useless-RESULT-RTE optimization logic
      (Tom Lane)
      <ulink url="&commit_baseurl;556c0b913">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [2fcf685f6] 2022-12-23 10:04:18 +0900
Branch: REL_15_STABLE [e3897a3a4] 2022-12-23 10:04:30 +0900
Branch: REL_14_STABLE [7ad458e06] 2022-12-23 10:04:33 +0900
Branch: REL_13_STABLE [4dbe72d61] 2022-12-23 10:04:34 +0900
Branch: REL_12_STABLE [7445869e1] 2022-12-23 10:04:36 +0900
Branch: REL_11_STABLE [df6fea51f] 2022-12-23 10:04:37 +0900
-->
     <para>
      Fix copy-and-paste errors in cache-lookup-failure messages for ACL
      checks (Justin Pryzby)
      <ulink url="&commit_baseurl;e3897a3a4">&sect;</ulink>
     </para>

     <para>
      In principle these errors should never be reached.  But if they are,
      some of them reported the wrong type of object.
     </para>
    </listitem>

    <listitem>
<!--
Author: Robert Haas <rhaas@postgresql.org>
Branch: master [45f5c81ad] 2022-12-12 10:26:48 -0500
Branch: REL_15_STABLE [8b5ba2f3f] 2022-12-12 10:33:02 -0500
-->
     <para>
      Fix possible corruption of very large tablespace map files
      in <application>pg_basebackup</application> (Antonin Houska)
      <ulink url="&commit_baseurl;8b5ba2f3f">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [74739d1d3] 2023-01-19 19:32:50 -0500
Branch: REL_15_STABLE [488e89bf7] 2023-01-19 19:32:47 -0500
-->
     <para>
      Avoid harmless warning from <application>pg_dump</application>
      in <option>--if-exists</option> mode (Tom Lane)
      <ulink url="&commit_baseurl;488e89bf7">&sect;</ulink>
     </para>

     <para>
      If the <literal>public</literal> schema has a non-default owner then
      use of <application>pg_dump</application>'s <option>--if-exists</option>
      option resulted in a warning message <quote>warning: could not find
      where to insert IF EXISTS in statement "-- *not* dropping schema,
      since initdb creates it"</quote>.  The dump output was okay, though.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [cabfb8241] 2022-12-02 14:24:44 -0500
Branch: REL_15_STABLE [97299cf99] 2022-12-02 14:24:44 -0500
Branch: REL_14_STABLE [303b26c1b] 2022-12-02 14:24:44 -0500
-->
     <para>
      Fix <application>psql</application>'s <literal>\sf</literal>
      and <literal>\ef</literal> commands to handle SQL-language functions
      that have <acronym>SQL</acronym>-standard function bodies (Tom Lane)
      <ulink url="&commit_baseurl;97299cf99">&sect;</ulink>
     </para>

     <para>
      These commands misidentified the start of the function body when it
      used new-style syntax.
     </para>
    </listitem>

    <listitem>
<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
Branch: master [e7a59094b] 2023-01-06 11:18:44 +0000
Branch: REL_15_STABLE [2daf4664c] 2023-01-06 11:16:53 +0000
Branch: REL_14_STABLE [48599a18d] 2023-01-06 11:15:22 +0000
Branch: REL_13_STABLE [2ad4abedf] 2023-01-06 11:13:34 +0000
Branch: REL_12_STABLE [274185d11] 2023-01-06 11:11:51 +0000
Branch: REL_11_STABLE [c54b88870] 2023-01-06 11:09:56 +0000
-->
     <para>
      Fix tab completion of <command>ALTER
      FUNCTION/PROCEDURE/ROUTINE</command> ... <command>SET
      SCHEMA</command> (Dean Rasheed)
      <ulink url="&commit_baseurl;2daf4664c">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [aeaaf520f] 2022-11-21 15:37:10 -0500
Branch: REL_15_STABLE [b8988cf1d] 2022-11-21 15:37:10 -0500
-->
     <para>
      Update <filename>contrib/pageinspect</filename> to mark its
      disk-accessing functions as <literal>PARALLEL RESTRICTED</literal>
      (Tom Lane)
      <ulink url="&commit_baseurl;b8988cf1d">&sect;</ulink>
     </para>

     <para>
      This avoids possible failure if one of these functions is used to
      examine a temporary table, since a session's temporary tables are not
      accessible from parallel workers.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [701c881f7] 2022-12-21 17:51:50 -0500
Branch: REL_15_STABLE [b87037b37] 2022-12-21 17:51:50 -0500
Branch: REL_14_STABLE [f489b480f] 2022-12-21 17:51:50 -0500
Branch: REL_13_STABLE [d35f1d485] 2022-12-21 17:51:50 -0500
Branch: REL_12_STABLE [c8314d62a] 2022-12-21 17:51:50 -0500
Branch: REL_11_STABLE [0ff4056b8] 2022-12-21 17:51:50 -0500
-->
     <para>
      Fix <filename>contrib/seg</filename> to not crash or print garbage
      if an input number has more than 127 digits (Tom Lane)
      <ulink url="&commit_baseurl;b87037b37">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: REL_15_STABLE [576506303] 2022-11-10 10:23:49 -0500
Branch: REL_14_STABLE [06dca17ad] 2022-11-10 10:23:49 -0500
Branch: REL_13_STABLE [0942acb73] 2022-11-10 10:23:49 -0500
Branch: REL_12_STABLE [cf0f465c0] 2022-11-10 10:23:49 -0500
-->
     <para>
      Fix build on Microsoft Visual Studio 2013 (Tom Lane)
      <ulink url="&commit_baseurl;576506303">&sect;</ulink>
     </para>

     <para>
      A previous patch supposed that all platforms of interest
      have <function>snprintf()</function>, but MSVC 2013 isn't quite
      there yet.  Revert to using <function>sprintf()</function> on that
      platform.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andrew Dunstan <andrew@dunslane.net>
Branch: master [341f4e002] 2022-11-25 15:28:38 -0500
Branch: REL_15_STABLE [fed54fc9a] 2022-11-25 15:37:33 -0500
Branch: REL_14_STABLE [f76191fd9] 2022-11-25 15:37:33 -0500
Branch: REL_13_STABLE [9fe5cff14] 2022-11-25 15:37:33 -0500
Branch: REL_12_STABLE [171c7fffa] 2022-11-25 15:37:34 -0500
Branch: REL_11_STABLE [ae7c51213] 2022-11-25 15:37:34 -0500
-->
     <para>
      Fix compile failure in building PL/Perl with MSVC when using
      Strawberry Perl (Andrew Dunstan)
      <ulink url="&commit_baseurl;fed54fc9a">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Andrew Dunstan <andrew@dunslane.net>
Branch: master [ccc59a83c] 2022-11-27 09:03:22 -0500
Branch: REL_15_STABLE [b5d8fd418] 2022-11-27 09:18:14 -0500
Branch: REL_14_STABLE [f3f70b8de] 2022-11-27 09:18:20 -0500
Branch: REL_13_STABLE [68d89d80c] 2022-11-27 09:18:32 -0500
Branch: REL_12_STABLE [85565cbca] 2022-11-27 09:18:40 -0500
Branch: REL_11_STABLE [724dd5649] 2022-11-27 09:18:46 -0500
-->
     <para>
      Fix mismatch of PL/Perl built with MSVC versus a Perl library built
      with gcc (Andrew Dunstan)
      <ulink url="&commit_baseurl;b5d8fd418">&sect;</ulink>
     </para>

     <para>
      Such combinations could previously fail with <quote>loadable library
      and perl binaries are mismatched</quote> errors.
     </para>
    </listitem>

    <listitem>
<!--
Author: Andres Freund <andres@anarazel.de>
Branch: master [388e80132] 2022-12-29 12:47:29 -0800
Branch: REL_15_STABLE [c6e75e4c2] 2023-01-02 15:49:33 -0800
Branch: REL_14_STABLE [7b5dec760] 2023-01-02 15:50:00 -0800
Branch: REL_13_STABLE [ce073d014] 2023-01-02 15:50:33 -0800
Branch: REL_12_STABLE [f0e13802f] 2023-01-02 15:51:03 -0800
Branch: REL_11_STABLE [99f8bc335] 2023-01-02 15:51:05 -0800
-->
     <para>
      Suppress compiler warnings from Perl's header files (Andres Freund)
      <ulink url="&commit_baseurl;c6e75e4c2">&sect;</ulink>
     </para>

     <para>
      Our preferred compiler options provoke warnings about constructs
      appearing in recent versions of Perl's header files.  When using
      <application>gcc</application>, we can suppress these warnings with
      a pragma.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: REL_15_STABLE [9a40a0311] 2023-01-20 11:58:12 -0500
Branch: REL_14_STABLE [21c058648] 2023-01-20 11:58:12 -0500
Branch: REL_13_STABLE [c78f109b8] 2023-01-20 11:58:12 -0500
Branch: REL_12_STABLE [6d066d56b] 2023-01-20 11:58:12 -0500
Branch: REL_11_STABLE [b69e9dfab] 2023-01-20 11:58:12 -0500
-->
     <para>
      Fix <application>pg_waldump</application> to build on compilers that
      don't discard unused static-inline functions (Tom Lane)
      <ulink url="&commit_baseurl;9a40a0311">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [758f44bc3] 2023-01-31 17:36:55 -0500
Branch: REL_15_STABLE [65f0d9d27] 2023-01-31 17:37:06 -0500
Branch: REL_14_STABLE [7e6154779] 2023-01-31 17:37:14 -0500
Branch: REL_13_STABLE [20d9da107] 2023-01-31 17:37:22 -0500
Branch: REL_12_STABLE [2c95d8776] 2023-01-31 17:37:28 -0500
Branch: REL_11_STABLE [7ddc428ef] 2023-01-31 17:37:34 -0500
-->
     <para>
      Update time zone data files to <application>tzdata</application>
      release 2022g for DST law changes in Greenland and Mexico,
      plus historical corrections for northern Canada, Colombia, and
      Singapore. (Tom Lane)
      <ulink url="&commit_baseurl;65f0d9d27">&sect;</ulink>
     </para>

     <para>
      Notably, a new timezone America/Ciudad_Juarez has been split off
      from America/Ojinaga.
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-15-1">
  <title>Release 15.1</title>

  <formalpara>
  <title>Release date:</title>
  <para>2022-11-10</para>
  </formalpara>

  <para>
   This release contains a variety of fixes from 15.0.
   For information about new features in major release 15, see
   <xref linkend="release-15"/>.
  </para>

  <sect2>
   <title>Migration to Version 15.1</title>

   <para>
    A dump/restore is not required for those running 15.X.
   </para>

   <para>
    However, if you regularly create and drop tables exceeding 1GB,
    see the first changelog entry below.
   </para>
  </sect2>

  <sect2>
   <title>Changes</title>

   <itemizedlist>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [0e758ae89] 2022-11-07 11:36:45 -0500
Branch: REL_15_STABLE [5fe0ab420] 2022-11-07 11:36:45 -0500
-->
     <para>
      Fix failure to remove non-first segments of large tables
      (Tom Lane)
      <ulink url="&commit_baseurl;5fe0ab420">&sect;</ulink>
     </para>

     <para>
      <productname>PostgreSQL</productname> splits large tables into
      multiple files (normally with 1GB per file).  The logic for dropping
      a table was broken and would miss removing all but the first such
      file, in two cases: drops of temporary tables and WAL replay of
      drops of regular tables.  Applications that routinely create
      multi-gigabyte temporary tables could suffer significant disk space
      leakage.
     </para>

     <para>
      Orphaned temporary-table files are removed during postmaster start,
      so the mere act of updating to 15.1 is sufficient to clear any
      leaked temporary-table storage.  However, if you suffered any
      database crashes while using 15.0, and there might have been
      large tables dropped just before such crashes, it's advisable
      to check the database directories for files named according to the
      pattern
      <literal><replaceable>NNNN</replaceable>.<replaceable>NN</replaceable></literal>.
      If there is no matching file named
      just <literal><replaceable>NNNN</replaceable></literal> (without
      the <literal>.<replaceable>NN</replaceable></literal> suffix), these
      files should be removed manually.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [b8f2687fd] 2022-10-11 18:24:14 -0400
Branch: REL_15_STABLE [07ce67698] 2022-10-11 18:24:14 -0400
Branch: REL_14_STABLE [3162bd95c] 2022-10-11 18:24:14 -0400
Branch: REL_13_STABLE [21e042b0b] 2022-10-11 18:24:14 -0400
Branch: REL_12_STABLE [abc510fa2] 2022-10-11 18:24:15 -0400
Branch: REL_11_STABLE [addde9bc6] 2022-10-11 18:24:15 -0400
Branch: REL_10_STABLE [23e2a06ac] 2022-10-11 18:24:15 -0400
-->
     <para>
      Fix handling of <literal>DEFAULT</literal> tokens that appear
      in a multi-row <literal>VALUES</literal> clause of an
      <command>INSERT</command> on an updatable view (Tom Lane)
      <ulink url="&commit_baseurl;07ce67698">&sect;</ulink>
     </para>

     <para>
      This oversight could lead to <quote>cache lookup failed for
      type</quote> errors, or in older branches even to crashes.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [797e313dc] 2022-10-17 12:14:39 -0400
Branch: REL_15_STABLE [4a41a069e] 2022-10-17 12:14:39 -0400
Branch: REL_14_STABLE [2f26cec48] 2022-10-17 12:14:39 -0400
Branch: REL_13_STABLE [b21615d1e] 2022-10-17 12:14:39 -0400
Branch: REL_12_STABLE [65c1106d8] 2022-10-17 12:14:39 -0400
Branch: REL_11_STABLE [e9377e3e5] 2022-10-17 12:14:39 -0400
Branch: REL_10_STABLE [ecf4ce689] 2022-10-17 12:14:39 -0400
-->
     <para>
      Disallow rules named <literal>_RETURN</literal> that are
      not <literal>ON SELECT</literal> (Tom Lane)
      <ulink url="&commit_baseurl;4a41a069e">&sect;</ulink>
     </para>

     <para>
      This avoids confusion between a view's <literal>ON SELECT</literal>
      rule and any other rules it may have.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [d57534740] 2022-10-16 19:18:08 -0400
Branch: REL_15_STABLE [d4abb0bc5] 2022-10-16 19:18:08 -0400
Branch: REL_14_STABLE [8122160ff] 2022-10-16 19:18:08 -0400
-->
     <para>
      Avoid failure in <command>EXPLAIN VERBOSE</command> for a query
      using <literal>SEARCH BREADTH FIRST</literal> with constant
      initial values (Tom Lane)
      <ulink url="&commit_baseurl;d4abb0bc5">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [cba4e78f3] 2022-10-15 19:24:26 +0200
Branch: REL_15_STABLE [16d11d684] 2022-10-15 19:24:26 +0200
-->
     <para>
      Prevent use of <command>MERGE</command> on a partitioned table with
      foreign-table partitions (&Aacute;lvaro Herrera)
      <ulink url="&commit_baseurl;16d11d684">&sect;</ulink>
     </para>

     <para>
      The case isn't supported, and previously threw an incomprehensible
      error.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [b0284bfb1] 2022-11-03 20:40:21 +0100
Branch: REL_15_STABLE [c301e1c0c] 2022-11-03 20:40:21 +0100
Branch: REL_14_STABLE [18865f4df] 2022-11-03 20:40:21 +0100
Branch: REL_13_STABLE [41b6e7c9a] 2022-11-03 20:40:21 +0100
Branch: REL_12_STABLE [ab70b3a52] 2022-11-03 20:40:21 +0100
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [614a406b4] 2022-10-07 19:37:48 +0200
Branch: REL_15_STABLE Release: REL_15_0 [6083132ab] 2022-10-07 19:37:48 +0200
Branch: REL_14_STABLE [483d26930] 2022-10-07 19:37:48 +0200
Branch: REL_13_STABLE [7d520e68e] 2022-10-07 19:37:48 +0200
Branch: REL_12_STABLE [669803af0] 2022-10-07 19:37:48 +0200
-->
     <para>
      Fix construction of per-partition foreign key constraints while
      doing <command>ALTER TABLE ATTACH PARTITION</command>
      (Jehan-Guillaume de Rorthais, &Aacute;lvaro Herrera)
      <ulink url="&commit_baseurl;c301e1c0c">&sect;</ulink>
      <ulink url="&commit_baseurl;6083132ab">&sect;</ulink>
     </para>

     <para>
      Previously, incorrect or duplicate constraints could be constructed
      for the newly-added partition.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [f4857082b] 2022-11-01 14:34:44 -0400
Branch: REL_15_STABLE [1f1865e90] 2022-11-01 14:34:44 -0400
-->
     <para>
      Fix planner failure with extended statistics on partitioned or
      inherited tables (Richard Guo, Justin Pryzby)
      <ulink url="&commit_baseurl;1f1865e90">&sect;</ulink>
     </para>

     <para>
      Some cases failed with <quote>cache lookup failed for statistics
      object</quote>.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [56b662523] 2022-10-13 09:31:57 +0900
Branch: REL_15_STABLE [ca4070f2b] 2022-10-26 09:41:13 +0900
Branch: REL_14_STABLE [5a30d43fa] 2022-10-26 09:41:18 +0900
Branch: REL_13_STABLE [594b97509] 2022-10-26 09:41:22 +0900
Branch: REL_12_STABLE [51c24d9e2] 2022-10-26 09:41:26 +0900
Branch: REL_11_STABLE [341fba2a6] 2022-10-26 09:41:28 +0900
Branch: REL_10_STABLE [b02fc7df1] 2022-10-26 09:41:31 +0900
-->
     <para>
      Fix mis-ordering of WAL operations in fast insert path for GIN
      indexes (Matthias van de Meent, Zhang Mingli)
      <ulink url="&commit_baseurl;ca4070f2b">&sect;</ulink>
     </para>

     <para>
      This mistake is not known to have any negative consequences within
      core <productname>PostgreSQL</productname>, but it did cause issues
      for some extensions.
     </para>
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master [16b1fe003] 2022-10-20 08:49:48 +0530
Branch: REL_15_STABLE [64ff0fe4e] 2022-10-20 09:43:59 +0530
Branch: REL_14_STABLE [a592ed923] 2022-10-20 09:34:18 +0530
Branch: REL_13_STABLE [25f7be1ca] 2022-10-20 09:25:13 +0530
Branch: REL_12_STABLE [1bf4d9206] 2022-10-20 09:16:28 +0530
Branch: REL_11_STABLE [5f7076cb6] 2022-10-20 09:07:04 +0530
Branch: REL_10_STABLE [10ed7b9e4] 2022-10-20 08:58:11 +0530
Branch: REL_15_STABLE [343afa967] 2022-10-21 10:03:35 +0530
Branch: REL_14_STABLE [4fbe6096b] 2022-10-21 09:52:44 +0530
Branch: REL_13_STABLE [38dbaaf27] 2022-10-21 09:42:24 +0530
Branch: REL_12_STABLE [02600886c] 2022-10-21 09:32:21 +0530
Branch: REL_11_STABLE [216af69ae] 2022-10-21 09:22:20 +0530
-->
     <para>
      Fix bugs in logical decoding when replay starts from a point
      between the beginning of a transaction and the beginning of its
      subtransaction (Masahiko Sawada, Kuroda Hayato)
      <ulink url="&commit_baseurl;64ff0fe4e">&sect;</ulink>
      <ulink url="&commit_baseurl;343afa967">&sect;</ulink>
     </para>

     <para>
      These errors could lead to assertion failures in debug builds, and
      otherwise to memory leaks.
     </para>
    </listitem>

    <listitem>
<!--
Author: Amit Kapila <akapila@postgresql.org>
Branch: master [ce20f8b9f] 2022-10-21 12:57:18 +0530
Branch: REL_15_STABLE [10eaa9750] 2022-10-21 12:43:28 +0530
Branch: REL_14_STABLE [36fc013fa] 2022-10-21 12:33:47 +0530
Branch: REL_13_STABLE [1eed947f9] 2022-10-21 12:22:47 +0530
Branch: REL_12_STABLE [f7f82cf05] 2022-10-21 12:10:11 +0530
Branch: REL_11_STABLE [5c51afe23] 2022-10-21 12:08:14 +0530
Branch: REL_10_STABLE [61838d2dd] 2022-10-21 11:54:34 +0530
Author: Amit Kapila <akapila@postgresql.org>
Branch: master [f972ec5c2] 2022-08-23 10:20:02 +0530
Branch: REL_15_STABLE Release: REL_15_0 [42681dffa] 2022-08-23 10:08:43 +0530
Branch: REL_14_STABLE [6d05d575b] 2022-08-23 09:24:51 +0530
Branch: REL_13_STABLE [4985a4591] 2022-08-23 09:10:28 +0530
Branch: REL_12_STABLE [9415873ae] 2022-08-23 08:51:20 +0530
Branch: REL_11_STABLE [51e9469a4] 2022-08-23 08:42:51 +0530
Branch: REL_10_STABLE [6b50433e8] 2022-08-23 08:39:31 +0530
-->
     <para>
      Accept interrupts in more places during logical decoding (Amit
      Kapila, Masahiko Sawada)
      <ulink url="&commit_baseurl;10eaa9750">&sect;</ulink>
      <ulink url="&commit_baseurl;42681dffa">&sect;</ulink>
     </para>

     <para>
      This ameliorates problems with slow shutdown of replication workers.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [be541efbf] 2022-11-02 12:29:39 -0400
Branch: REL_15_STABLE [414d29a82] 2022-11-02 12:29:39 -0400
Branch: REL_14_STABLE [a5b7821fc] 2022-11-02 12:29:39 -0400
Branch: REL_13_STABLE [4d3f7e75c] 2022-11-02 12:29:39 -0400
-->
     <para>
      Prevent attempts to replicate into a foreign-table partition in
      replication workers (Shi Yu, Tom Lane)
      <ulink url="&commit_baseurl;414d29a82">&sect;</ulink>
     </para>

     <para>
      Although partitioned tables can have foreign tables as partitions,
      replicating into such a partition isn't currently supported.
      The logical replication worker process would crash if it was
      attempted.  Now, an error is thrown.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [dea834938] 2022-11-03 12:02:14 -0400
Branch: REL_15_STABLE [f2dc7f9e3] 2022-11-03 12:01:57 -0400
Branch: REL_14_STABLE [2489c38cd] 2022-11-03 12:01:57 -0400
Branch: REL_13_STABLE [b00f342ea] 2022-11-03 12:01:57 -0400
Branch: REL_12_STABLE [d9ffccf8d] 2022-11-03 12:01:57 -0400
Branch: REL_11_STABLE [ed019b5ef] 2022-11-03 12:01:57 -0400
Branch: REL_10_STABLE [5f3cec77b] 2022-11-03 12:01:57 -0400
-->
     <para>
      Avoid crash after function syntax error in replication workers
      (Maxim Orlov, Anton Melnikov, Masahiko Sawada, Tom Lane)
      <ulink url="&commit_baseurl;f2dc7f9e3">&sect;</ulink>
     </para>

     <para>
      If a syntax error occurred in a SQL-language or PL/pgSQL-language
      <command>CREATE FUNCTION</command> or <command>DO</command> command
      executed in a logical replication worker, the worker process would
      crash with a null pointer dereference or assertion failure.
     </para>
    </listitem>

    <listitem>
<!--
Author: Michael Paquier <michael@paquier.xyz>
Branch: master [9668c4a66] 2022-10-19 14:06:56 +0900
Branch: REL_15_STABLE [5d2a47a29] 2022-10-19 14:07:01 +0900
-->
     <para>
      Avoid double call of the shutdown callback of an archiver module
      (Nathan Bossart, Bharath Rupireddy)
      <ulink url="&commit_baseurl;5d2a47a29">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [eec346611] 2022-10-17 11:35:23 -0400
Branch: REL_15_STABLE [2e3326929] 2022-10-17 11:35:23 -0400
Branch: REL_14_STABLE [8c611602b] 2022-10-17 11:35:23 -0400
Branch: REL_13_STABLE [62b263bf7] 2022-10-17 11:35:23 -0400
Branch: REL_12_STABLE [99b6b705d] 2022-10-17 11:35:23 -0400
-->
     <para>
      Add plan-time check for attempted access to a table that has no
      table access method (Tom Lane)
      <ulink url="&commit_baseurl;2e3326929">&sect;</ulink>
     </para>

     <para>
      This prevents a crash in some catalog-corruption scenarios, for
      example use of a view whose <literal>ON SELECT</literal> rule is
      missing.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [18a4a620e] 2022-10-11 18:54:31 -0400
Branch: REL_15_STABLE [e7b4ff327] 2022-10-11 18:54:31 -0400
Branch: REL_14_STABLE [b10546ecf] 2022-10-11 18:54:31 -0400
Branch: REL_13_STABLE [744270137] 2022-10-11 18:54:31 -0400
Branch: REL_12_STABLE [8f98352b5] 2022-10-11 18:54:31 -0400
Branch: REL_11_STABLE [6c1de98ba] 2022-10-11 18:54:31 -0400
Branch: REL_10_STABLE [ab35b9dd7] 2022-10-11 18:54:31 -0400
-->
     <para>
      Prevent postmaster crash when shared-memory state is corrupted
      (Tom Lane)
      <ulink url="&commit_baseurl;e7b4ff327">&sect;</ulink>
     </para>

     <para>
      The postmaster process is supposed to survive and initiate a
      database restart if shared memory becomes corrupted, but one
      bit of code was being insufficiently cautious about that.
     </para>
    </listitem>

    <listitem>
<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
Branch: master [db1b931a4] 2022-10-14 19:06:26 +0200
Branch: REL_15_STABLE [27ca0bce5] 2022-10-14 19:06:26 +0200
Branch: REL_14_STABLE [b8af4166f] 2022-10-14 19:06:26 +0200
-->
     <para>
      In <application>libpq</application>, handle single-row mode
      correctly when pipelining (Denis Laxalde)
      <ulink url="&commit_baseurl;27ca0bce5">&sect;</ulink>
     </para>

     <para>
      The single-row flag was not reset at the correct time if pipeline
      mode was also active.
     </para>
    </listitem>

    <listitem>
<!--
Author: Peter Eisentraut <peter@eisentraut.org>
Branch: master [2598b76bf] 2022-10-22 09:42:52 +0200
Branch: REL_15_STABLE [4a6de748d] 2022-10-22 09:41:38 +0200
-->
     <para>
      Fix <application>psql</application>'s exit status when a
      command-line query is canceled (Peter Eisentraut)
      <ulink url="&commit_baseurl;4a6de748d">&sect;</ulink>
     </para>

     <para>
      <literal>psql -c <replaceable>query</replaceable></literal> would
      exit successfully if the query was canceled.  Fix it to exit with
      nonzero status, as in other error cases.
     </para>
    </listitem>

    <listitem>
<!--
Author: Robert Haas <rhaas@postgresql.org>
Branch: master [1f0c4fa25] 2022-10-21 08:21:55 -0400
Branch: REL_15_STABLE [5c013e620] 2022-10-21 08:31:39 -0400
Branch: REL_14_STABLE [aaad8adb0] 2022-10-21 08:39:48 -0400
Branch: REL_13_STABLE [0bf2cd160] 2022-10-21 08:45:08 -0400
Branch: REL_12_STABLE [475e9daf3] 2022-10-21 08:59:26 -0400
Branch: REL_11_STABLE [38214dabd] 2022-10-21 09:05:57 -0400
Branch: REL_10_STABLE [ba58266eb] 2022-10-21 09:11:47 -0400
-->
     <para>
      Allow cross-platform tablespace relocation
      in <application>pg_basebackup</application> (Robert Haas)
      <ulink url="&commit_baseurl;5c013e620">&sect;</ulink>
     </para>

     <para>
      Allow the remote path in <option>--tablespace-mapping</option> to be
      either a Unix-style or Windows-style absolute path, since the source
      server could be on a different OS than the local system.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [26ee7fb36] 2022-11-02 11:30:04 -0400
Branch: REL_15_STABLE [0eede9625] 2022-11-02 11:30:04 -0400
-->
     <para>
      Fix <application>pg_dump</application>'s failure to dump comments
      attached to some <literal>CHECK</literal> constraints (Tom Lane)
      <ulink url="&commit_baseurl;0eede9625">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [34fa0ddae] 2022-11-04 10:39:52 -0400
Branch: REL_15_STABLE [2c6d43650] 2022-11-04 10:39:52 -0400
-->
     <para>
      Fix <command>CREATE DATABASE</command> to allow
      its <literal>oid</literal> parameter to exceed
      2<superscript>31</superscript> (Tom Lane)
      <ulink url="&commit_baseurl;2c6d43650">&sect;</ulink>
     </para>

     <para>
      This oversight prevented <application>pg_upgrade</application> from
      succeeding when the source installation contained databases with
      OIDs larger than that.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [495e73c20] 2022-11-01 12:48:01 -0400
Branch: REL_15_STABLE [8b0a5cf3f] 2022-11-01 12:48:01 -0400
Branch: REL_14_STABLE [0f2f5645a] 2022-11-01 12:48:01 -0400
Branch: REL_13_STABLE [a9fdb48b7] 2022-11-01 12:48:01 -0400
Branch: REL_12_STABLE [ca4c6764b] 2022-11-01 12:48:01 -0400
Branch: REL_11_STABLE [149e00192] 2022-11-01 12:48:01 -0400
Branch: REL_10_STABLE [56083ff30] 2022-11-01 12:48:01 -0400
-->
     <para>
      In <application>pg_stat_statements</application>, fix access to
      already-freed memory (zhaoqigui)
      <ulink url="&commit_baseurl;8b0a5cf3f">&sect;</ulink>
     </para>

     <para>
      This occurred if <application>pg_stat_statements</application>
      tracked a <command>ROLLBACK</command> command issued via extended
      query protocol.  In debug builds it consistently led to an assertion
      failure.  In production builds there would often be no visible ill
      effect; but if the freed memory had already been reused, the likely
      result would be to store garbage for the query string.
     </para>
    </listitem>

    <listitem>
<!--
Author: Thomas Munro <tmunro@postgresql.org>
Branch: master [c2ae01f69] 2022-10-19 22:18:26 +1300
Branch: REL_15_STABLE [af64846e1] 2022-10-19 22:18:54 +1300
Branch: REL_14_STABLE [d033f8f8b] 2022-10-19 22:32:14 +1300
Branch: REL_13_STABLE [cf94cb586] 2022-10-19 22:38:58 +1300
Branch: REL_12_STABLE [aa34bc4e2] 2022-10-19 22:44:53 +1300
Branch: REL_11_STABLE [da3a6825e] 2022-10-19 22:49:25 +1300
-->
     <para>
      Fix incompatibilities with LLVM 15 (Thomas Munro, Andres Freund)
      <ulink url="&commit_baseurl;af64846e1">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [1c72d82c2] 2022-11-02 17:37:29 -0400
Branch: REL_15_STABLE [a5737e765] 2022-11-02 17:37:26 -0400
Branch: REL_14_STABLE [058c7b5dd] 2022-11-02 17:37:26 -0400
Branch: REL_13_STABLE [c479492c0] 2022-11-02 17:37:26 -0400
Branch: REL_12_STABLE [5ecf836e9] 2022-11-02 17:37:26 -0400
Branch: REL_11_STABLE [a0f9be1f9] 2022-11-02 17:37:26 -0400
Branch: REL_10_STABLE [19cefebe7] 2022-11-02 17:37:26 -0400
-->
     <para>
      Allow use of <function>__sync_lock_test_and_set()</function> for
      spinlocks on any machine (Tom Lane)
      <ulink url="&commit_baseurl;a5737e765">&sect;</ulink>
     </para>

     <para>
      This eases porting to new machine architectures, at least if you're
      using a compiler that supports this GCC builtin function.
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [717ec1aae] 2022-10-16 15:27:04 -0400
Branch: REL_15_STABLE [24c4c2617] 2022-10-16 15:27:04 -0400
Branch: REL_14_STABLE [18e60712d] 2022-10-16 15:27:04 -0400
Branch: REL_13_STABLE [bc7a40b42] 2022-10-16 15:27:04 -0400
Branch: REL_12_STABLE [3d7df87c4] 2022-10-16 15:27:04 -0400
Branch: REL_11_STABLE [6618c276b] 2022-10-16 15:27:04 -0400
Branch: REL_10_STABLE [02d074e3e] 2022-10-16 15:27:04 -0400
Branch: REL9_6_STABLE [9bfa043a1] 2022-10-16 15:27:04 -0400
Branch: REL9_5_STABLE [377b37cf7] 2022-10-16 15:27:04 -0400
Branch: REL9_4_STABLE [57dfb6ce6] 2022-10-16 15:27:04 -0400
Branch: REL9_3_STABLE [ee4c44014] 2022-10-16 15:27:04 -0400
Branch: REL9_2_STABLE [fec443414] 2022-10-16 15:27:04 -0400
-->
     <para>
      Rename symbol <literal>REF</literal> to <literal>REF_P</literal> to
      avoid compile failure on recent macOS (Tom Lane)
      <ulink url="&commit_baseurl;24c4c2617">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [450ee7012] 2022-10-16 11:47:44 -0400
Branch: REL_15_STABLE [bd4b2926e] 2022-10-16 11:47:44 -0400
Branch: REL_14_STABLE [6fa431d84] 2022-10-16 11:47:44 -0400
Branch: REL_13_STABLE [a2acafc7b] 2022-10-16 11:47:44 -0400
Branch: REL_12_STABLE [d33ac1ec2] 2022-10-16 11:47:44 -0400
-->
     <para>
      Avoid using <function>sprintf</function>, to avoid compile-time
      deprecation warnings (Tom Lane)
      <ulink url="&commit_baseurl;bd4b2926e">&sect;</ulink>
     </para>
    </listitem>

    <listitem>
<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
Branch: master [e7c7605a7] 2022-11-01 17:08:28 -0400
Branch: REL_15_STABLE [c3d16eb3d] 2022-11-01 17:08:49 -0400
Branch: REL_14_STABLE [97bb80b1b] 2022-11-01 17:08:58 -0400
Branch: REL_13_STABLE [ebf48810b] 2022-11-01 17:09:04 -0400
Branch: REL_12_STABLE [ec9a000d8] 2022-11-01 17:09:09 -0400
Branch: REL_11_STABLE [b1cb77bdf] 2022-11-01 17:09:16 -0400
Branch: REL_10_STABLE [b3326a753] 2022-11-01 17:09:21 -0400
-->
     <para>
      Update time zone data files to <application>tzdata</application>
      release 2022f for DST law changes in Chile, Fiji, Iran, Jordan,
      Mexico, Palestine, and Syria, plus historical corrections for Chile,
      Crimea, Iran, and Mexico. (Tom Lane)
      <ulink url="&commit_baseurl;c3d16eb3d">&sect;</ulink>
     </para>

     <para>
      Also, the Europe/Kiev zone has been renamed to Europe/Kyiv.
      Also, the following zones have been merged into nearby,
      more-populous zones whose clocks have agreed with them since 1970:
      Antarctica/Vostok, Asia/Brunei,
      Asia/Kuala_Lumpur, Atlantic/Reykjavik, Europe/Amsterdam,
      Europe/Copenhagen, Europe/Luxembourg, Europe/Monaco, Europe/Oslo,
      Europe/Stockholm, Indian/Christmas, Indian/Cocos, Indian/Kerguelen,
      Indian/Mahe, Indian/Reunion, Pacific/Chuuk, Pacific/Funafuti,
      Pacific/Majuro, Pacific/Pohnpei, Pacific/Wake and Pacific/Wallis.
      (This indirectly affects zones that were already links to one of
      these: Arctic/Longyearbyen, Atlantic/Jan_Mayen, Iceland,
      Pacific/Ponape, Pacific/Truk, and Pacific/Yap.)  America/Nipigon,
      America/Rainy_River, America/Thunder_Bay, Europe/Uzhgorod, and
      Europe/Zaporozhye were also merged into nearby zones after
      discovering that their claimed post-1970 differences from those
      zones seem to have been errors.
      In all these cases, the previous zone name remains as an alias;
      but the actual data is that of the zone that was merged into.
     </para>

     <para>
      These zone mergers result in loss of pre-1970 timezone history for
      the merged zones, which may be troublesome for applications
      expecting consistency of <type>timestamptz</type> display.  As an
      example, the stored value <literal>1944-06-01 12:00 UTC</literal>
      would previously display as <literal>1944-06-01
      13:00:00+01</literal> if the Europe/Stockholm zone is selected, but
      now it will read out as <literal>1944-06-01 14:00:00+02</literal>.
     </para>

     <para>
      It is possible to build the time zone data files with options that
      will restore the older zone data, but that choice also inserts a lot
      of other old (and typically poorly-attested) zone data, resulting in
      more total changes from the previous release than accepting these
      upstream changes does.  <productname>PostgreSQL</productname> has
      chosen to ship the <productname>tzdb</productname> data
      as-recommended, and so far as we are aware most major operating
      system distributions are doing likewise.  However, if these changes
      cause significant problems for your application, a possible solution
      is to install a local build of the time zone data files using
      <productname>tzdb</productname>'s backwards-compatibility options
      (see their <literal>PACKRATDATA</literal>
      and <literal>PACKRATLIST</literal> options).
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-15">
  <title>Release 15</title>

  <formalpara>
   <title>Release date:</title>
   <para>2022-10-13</para>
  </formalpara>

  <sect2>
   <title>Overview</title>

   <para>
    <productname>PostgreSQL</productname> 15 contains many new features
    and enhancements, including:
   </para>

   <itemizedlist>
    <listitem>
     <para>
      Support for the <acronym>SQL</acronym>
      <link linkend="sql-merge"><command>MERGE</command></link> command.
     </para>
    </listitem>
    <listitem>
     <para>
      Selective publication of tables' contents within
      <link linkend="logical-replication">logical replication</link>
      publications, through the ability to specify column lists and
      row filter conditions.
     </para>
    </listitem>
    <listitem>
     <para>
      More options for compression, including support for Zstandard (zstd)
      compression.  This includes support for performing compression on
      the server side during
      <link linkend="app-pgbasebackup"><application>pg_basebackup</application></link>.
     </para>
    </listitem>
    <listitem>
     <para>
      Support for structured <link linkend="guc-log-destination">server
      log output</link> using the <acronym>JSON</acronym> format.
     </para>
    </listitem>
    <listitem>
     <para>
      Performance improvements, particularly for in-memory and on-disk
      sorting.
     </para>
    </listitem>
   </itemizedlist>

   <para>
    The above items and other new features of
    <productname>PostgreSQL</productname> 15 are explained in more detail
    in the sections below.
   </para>

  </sect2>

  <sect2>

   <title>Migration to Version 15</title>

    <para>
     A dump/restore using <xref linkend="app-pg-dumpall"/> or use of
     <xref linkend="pgupgrade"/> or logical replication is required for
     those wishing to migrate data from any previous release.  See <xref
     linkend="upgrading"/> for general information on migrating to new
     major releases.
    </para>

    <para>
     Version 15 contains a number of changes that may affect compatibility
     with previous releases.  Observe the following incompatibilities:
    </para>

   <itemizedlist>

<!--
Author: Noah Misch <noah@leadboat.com>
2021-09-09 [b073c3ccd] Revoke PUBLIC CREATE from public schema, now owned by pg
-->

    <listitem>
     <para>
      Remove <literal>PUBLIC</literal> creation permission on the <link
      linkend="ddl-schemas-public"><literal>public</literal> schema</link>
      (Noah Misch)
      <ulink url="&commit_baseurl;b073c3ccd">&sect;</ulink>
     </para>

     <para>
      The new default is one of the secure schema usage patterns that <xref
      linkend="ddl-schemas-patterns"/> has recommended since the security
      release for CVE-2018-1058.  The change applies to new database
      clusters and to newly-created databases in existing clusters.
      Upgrading a cluster or restoring a database dump will preserve
      <literal>public</literal>'s existing permissions.
     </para>

     <para>
      For existing databases, especially those having multiple users,
      consider revoking <literal>CREATE</literal> permission on
      the <literal>public</literal> schema to adopt this new default.
      For new databases having no need to defend against insider threats,
      granting <literal>CREATE</literal> permission will yield the behavior
      of prior releases.
     </para>
    </listitem>

<!--
Author: Noah Misch <noah@leadboat.com>
2021-09-09 [b073c3ccd] Revoke PUBLIC CREATE from public schema, now owned by pg
-->

    <listitem>
     <para>
      Change the owner of the <literal>public</literal> schema to be the
      new <literal>pg_database_owner</literal> role (Noah Misch)
      <ulink url="&commit_baseurl;b073c3ccd">&sect;</ulink>
     </para>

     <para>
      This allows each database's owner to have ownership privileges on
      the <literal>public</literal> schema within their database.
      Previously it was owned by the bootstrap superuser, so that
      non-superuser database owners could not do anything with it.
     </para>

     <para>
      This change applies to new database clusters and to newly-created
      databases in existing clusters.
      Upgrading a cluster or restoring a database dump will preserve
      <literal>public</literal>'s existing ownership specification.
     </para>
    </listitem>

<!--
Author: Stephen Frost <sfrost@snowman.net>
2022-04-06 [39969e2a1] Remove exclusive backup mode
-->

    <listitem>
     <para>
      Remove long-deprecated <link linkend="backup-base-backup">exclusive
      backup mode</link> (David Steele, Nathan Bossart)
      <ulink url="&commit_baseurl;39969e2a1">&sect;</ulink>
     </para>

     <para>
      If the database server stops abruptly while in this mode, the
      server could fail to start.  The non-exclusive backup mode is
      considered superior for all purposes.  Functions
      <function>pg_start_backup()</function>/<function>pg_stop_backup()</function>
      have been renamed to
      <function>pg_backup_start()</function>/<function>pg_backup_stop()</function>,
      and the functions <function>pg_backup_start_time()</function>
      and <function>pg_is_in_backup()</function> have been removed.
     </para>
    </listitem>

<!--
Author: Peter Geoghegan <pg@bowt.ie>
2022-02-16 [8f388f6f5] Increase hash_mem_multiplier default to 2.0.
-->

    <listitem>
     <para>
      Increase <link
      linkend="guc-hash-mem-multiplier"><varname>hash_mem_multiplier</varname></link>
      default to 2.0 (Peter Geoghegan)
      <ulink url="&commit_baseurl;8f388f6f5">&sect;</ulink>
     </para>

     <para>
      This allows query hash operations to use more
      <link linkend="guc-work-mem"><varname>work_mem</varname></link>
      memory than other operations.
     </para>
    </listitem>

<!--
Author: Andres Freund <andres@anarazel.de>
2022-03-07 [76a29adee] plpython: Remove plpythonu, plpython2u and associated tr
-->

    <listitem>
     <para>
      Remove server-side language <link
      linkend="plpython"><literal>plpython2u</literal></link> and generic
      Python language <literal>plpythonu</literal> (Andres Freund)
      <ulink url="&commit_baseurl;76a29adee">&sect;</ulink>
     </para>

     <para>
      Python 2.x is no longer supported.  While the original intent of
      <literal>plpythonu</literal> was that it could eventually refer
      to <literal>plpython3u</literal>, changing it now seems more likely
      to cause problems than solve them, so it's just been removed.
     </para>
    </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-11-06 [cbe25dcff] Disallow making an empty lexeme via array_to_tsvector().
-->

    <listitem>
     <para>
      Generate an error if <link
      linkend="textsearch-functions-table"><function>array_to_tsvector()</function></link>
      is passed an empty-string array element (Jean-Christophe Arnu)
      <ulink url="&commit_baseurl;cbe25dcff">&sect;</ulink>
     </para>

     <para>
      This is prohibited because lexemes should never be empty.  Users of
      previous Postgres releases should verify that no empty lexemes
      are stored because they can lead to dump/restore failures and
      inconsistent results.
     </para>
    </listitem>

<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2021-12-06 [e9e63b702] Fix inappropriate uses of PG_GETARG_UINT32()
-->

    <listitem>
     <para>
      Generate an error when <link
      linkend="functions-string-other"><function>chr()</function></link>
      is supplied with a negative argument (Peter Eisentraut)
      <ulink url="&commit_baseurl;e9e63b702">&sect;</ulink>
     </para>
    </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-02-15 [2523928b2] Reject change of output-column collation in CREATE OR RE
-->

    <listitem>
     <para>
      Prevent <link linkend="sql-createview"><command>CREATE OR REPLACE
      VIEW</command></link> from changing the collation of an output column
      (Tom Lane)
      <ulink url="&commit_baseurl;2523928b2">&sect;</ulink>
     </para>
    </listitem>

<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2022-01-12 [a18b6d2dc] ecpg: Catch zero-length Unicode identifiers correctly
-->

    <listitem>
     <para>
      Disallow zero-length <link
      linkend="sql-syntax-identifiers">Unicode identifiers</link>,
      e.g., <literal>U&amp;""</literal>
      (Peter Eisentraut)
      <ulink url="&commit_baseurl;a18b6d2dc">&sect;</ulink>
     </para>

     <para>
      Non-Unicode zero-length identifiers were already disallowed.
     </para>
    </listitem>

<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2022-02-16 [2549f0661] Reject trailing junk after numeric literals
-->

    <listitem>
     <para>
      Prevent <link linkend="sql-syntax-constants-numeric">numeric
      literals</link> from having non-numeric trailing characters (Peter
      Eisentraut)
      <ulink url="&commit_baseurl;2549f0661">&sect;</ulink>
     </para>

     <para>
      Previously, query text like <literal>123abc</literal> would be
      interpreted as <literal>123</literal> followed
      by a separate token <literal>abc</literal>.
     </para>
    </listitem>

<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2022-03-28 [e26114c81] Make JSON path numeric literals more correct
-->

    <listitem>
     <para>
      Adjust <link linkend="datatype-json"><acronym>JSON</acronym></link>
      numeric literal processing to match the
      <acronym>SQL</acronym>/<acronym>JSON</acronym>-standard (Peter
      Eisentraut)
      <ulink url="&commit_baseurl;e26114c81">&sect;</ulink>
     </para>

     <para>
      This accepts numeric formats like <literal>.1</literal> and
      <literal>1.</literal>, and disallows trailing junk after numeric
      literals, like <literal>1.type()</literal>.
     </para>
    </listitem>

<!--
Author: Bruce Momjian <bruce@momjian.us>
2021-08-03 [95ab1e0a9] interval:  round values when spilling to months
-->

    <listitem>
     <para>
      When <link linkend="datatype-datetime"><type>interval</type></link>
      input provides a fractional value for a unit greater than months,
      round to the nearest month (Bruce Momjian)
      <ulink url="&commit_baseurl;95ab1e0a9">&sect;</ulink>
     </para>

     <para>
      For example, convert <literal>1.99 years</literal> to <literal>2
      years</literal>, not <literal>1 year 11 months</literal> as before.
     </para>
    </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-04-03 [591e088dd] Fix portability issues in datetime parsing.
-->

    <listitem>
     <para>
      Improve consistency of <type>interval</type> parsing with trailing
      periods (Tom Lane)
      <ulink url="&commit_baseurl;591e088dd">&sect;</ulink>
     </para>

     <para>
      Numbers with trailing periods were rejected on some platforms.
     </para>
    </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-01-19 [a3d6264bb] interval_out() must be marked STABLE, not IMMUTABLE.
-->

    <listitem>
     <para>
      Mark the <type>interval</type> output
      function as stable, not immutable, since it depends on <link
      linkend="guc-intervalstyle"><varname>IntervalStyle</varname></link>
      (Tom Lane)
      <ulink url="&commit_baseurl;a3d6264bb">&sect;</ulink>
     </para>

     <para>
      This will, for example, cause creation of indexes relying on the
      text output of <type>interval</type> values to fail.
     </para>
    </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-02-28 [54bd1e43c] Handle integer overflow in interval justification functi
-->

    <listitem>
     <para>
      Detect integer overflow in <link
      linkend="functions-datetime-table">interval justification
      functions</link> (Joe Koshakow)
      <ulink url="&commit_baseurl;54bd1e43c">&sect;</ulink>
     </para>

     <para>
      The affected functions are <function>justify_interval()</function>,
      <function>justify_hours()</function>, and
      <function>justify_days()</function>.
     </para>
    </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-08-02 [c034b629c] Change type "char"'s I/O format for non-ASCII characters
-->

    <listitem>
     <para>
      Change the I/O format of type <type>"char"</type> for non-ASCII
      characters (Tom Lane)
      <ulink url="&commit_baseurl;c034b629c">&sect;</ulink>
     </para>

     <para>
      Bytes with the high bit set are now output as a backslash and three
      octal digits, to avoid encoding issues.
     </para>
    </listitem>

<!--
Author: Robert Haas <rhaas@postgresql.org>
2022-03-28 [79de9842a] Remove the ability of a role to administer itself.
-->

    <listitem>
     <para>
      Remove the default <link linkend="sql-createrole"><literal>ADMIN
      OPTION</literal></link> privilege a login role has on its own role
      membership (Robert Haas)
      <ulink url="&commit_baseurl;79de9842a">&sect;</ulink>
     </para>

     <para>
      Previously, a login role could add/remove members of its own role,
      even without <literal>ADMIN OPTION</literal> privilege.
     </para>
    </listitem>

<!--
Author: Jeff Davis <jdavis@postgresql.org>
2022-01-07 [a2ab9c06e] Respect permissions within logical replication.
-->

    <listitem>
     <para>
      Allow <link linkend="logical-replication">logical replication</link>
      to run as the owner of the subscription (Mark Dilger)
      <ulink url="&commit_baseurl;a2ab9c06e">&sect;</ulink>
     </para>

     <para>
      Because row-level security policies are not checked, only superusers,
      roles with <literal>bypassrls</literal>, and table owners can
      replicate into tables with row-level security policies.
     </para>
    </listitem>

<!--
Author: Jeff Davis <jdavis@postgresql.org>
2022-01-08 [96a6f11c0] More cleanup of a2ab9c06ea.
-->

    <listitem>
     <para>
      Prevent <command>UPDATE</command> and <command>DELETE</command>
      <link linkend="logical-replication">logical replication</link>
      operations on tables where the subscription owner does not have
      <command>SELECT</command> permission on the table (Jeff Davis)
      <ulink url="&commit_baseurl;96a6f11c0">&sect;</ulink>
     </para>

     <para>
      <command>UPDATE</command> and <command>DELETE</command> commands
      typically involve reading the table as well, so require the
      subscription owner to have table <command>SELECT</command>
      permission.
     </para>
    </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-07-27 [48c5c9068] Use the "pg_temp" schema alias in EXPLAIN and related ou
-->

    <listitem>
     <para>
      When <link linkend="sql-explain"><command>EXPLAIN</command></link>
      references the session's temporary object schema, refer to it as
      <literal>pg_temp</literal> (Amul Sul)
      <ulink url="&commit_baseurl;48c5c9068">&sect;</ulink>
     </para>

     <para>
      Previously the actual schema name was reported, leading to
      inconsistencies across sessions.
     </para>
    </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-03-24 [ce95c5437] Fix pg_statio_all_tables view for multiple TOAST indexes
-->

    <listitem>
     <para>
      Fix <link
      linkend="monitoring-pg-statio-all-tables-view"><structname>pg_statio_all_tables</structname></link>
      to sum values for the rare case of <acronym>TOAST</acronym> tables
      with multiple indexes (Andrei Zubkov)
      <ulink url="&commit_baseurl;ce95c5437">&sect;</ulink>
     </para>

     <para>
      Previously such cases would show one row for each index.
     </para>
    </listitem>

<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2021-12-01 [75d22069e] Warning on SET of nonexisting setting with a prefix rese
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-12-27 [2ed8a8cc5] Rethink handling of settings with a prefix reserved by a
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-02-21 [88103567c] Disallow setting bogus GUCs within an extension's reserv
-->

    <listitem>
     <para>
      Disallow setting <link linkend="runtime-config-custom">custom
      options</link> that match the name of an installed extension, but
      are not one of the extension's declared variables
      (Florin Irion, Tom Lane)
      <ulink url="&commit_baseurl;75d22069e">&sect;</ulink>
      <ulink url="&commit_baseurl;2ed8a8cc5">&sect;</ulink>
      <ulink url="&commit_baseurl;88103567c">&sect;</ulink>
     </para>

     <para>
      This change causes any such pre-existing variables to be deleted
      during extension load, and then prevents new ones from being created
      later in the session.  The intent is to prevent confusion about
      whether a variable is associated with an extension or not.
     </para>
    </listitem>

<!--
Author: Andres Freund <andres@anarazel.de>
2022-04-06 [6f0cf8787] pgstat: remove stats_temp_directory.
-->

    <listitem>
     <para>
      Remove obsolete server variable
      <varname>stats_temp_directory</varname> (Andres Freund, Kyotaro
      Horiguchi)
      <ulink url="&commit_baseurl;6f0cf8787">&sect;</ulink>
     </para>
    </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-11-28 [3804539e4] Replace random(), pg_erand48(), etc with a better PRNG A
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-04-12 [d4f109e4a] Doc: update description of random() function.
-->

    <listitem>
     <para>
      Improve the algorithm used to compute <link
      linkend="functions-math-random-table"><function>random()</function></link>
      (Fabien Coelho)
      <ulink url="&commit_baseurl;3804539e4">&sect;</ulink>
      <ulink url="&commit_baseurl;d4f109e4a">&sect;</ulink>
     </para>

     <para>
      This will cause <function>random()</function>'s results to differ
      from what was emitted by prior versions, even for the same seed
      value.
     </para>
    </listitem>

<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
2022-09-23 [bd8ac900d] Remove PQsendQuery support in pipeline mode
-->

    <listitem>
     <para>
      <application>libpq</application>'s <link
      linkend="libpq-PQsendQuery"><function>PQsendQuery()</function></link>
      function is no longer supported in pipeline mode (Álvaro Herrera)
      <ulink url="&commit_baseurl;bd8ac900d">&sect;</ulink>
     </para>

     <para>
      Applications that are using that combination will need to be
      modified to use <function>PQsendQueryParams()</function> instead.
     </para>
    </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-01-09 [376ce3e40] Prefer $HOME when looking up the current user's home dir
-->

    <listitem>
     <para>
      On non-Windows platforms, consult the <envar>HOME</envar> environment
      variable to find the user's home directory (Anders Kaseorg)
      <ulink url="&commit_baseurl;376ce3e40">&sect;</ulink>
     </para>

     <para>
      If <envar>HOME</envar> is empty or unset, fall back to the previous
      method of checking the <literal>&lt;pwd.h&gt;</literal> database.
      This change affects <application>libpq</application> (for example,
      while looking up <filename>~/.pgpass</filename>) as well as various
      client application programs.
     </para>
    </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-12-15 [2a712066d] Remove pg_dump's - -no-synchronized-snapshots switch.
-->

    <listitem>
     <para>
      Remove <link
      linkend="app-pgdump"><application>pg_dump</application></link>'s
      <option>--no-synchronized-snapshots</option> option (Tom Lane)
      <ulink url="&commit_baseurl;2a712066d">&sect;</ulink>
     </para>

     <para>
      All still-supported server versions support synchronized snapshots,
      so there's no longer a need for this option.
     </para>
    </listitem>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2022-06-15 [a3ff08e0b] Tweak behavior of psql - -single-transaction depending
-->

      <listitem>
       <para>
        After an error is detected in <link
        linkend="app-psql"><application>psql</application></link>'s
        <option>--single-transaction</option> mode, change the
        final <command>COMMIT</command> command
        to <command>ROLLBACK</command> only
        if <varname>ON_ERROR_STOP</varname> is set (Michael Paquier)
        <ulink url="&commit_baseurl;a3ff08e0b">&sect;</ulink>
       </para>
      </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-11-12 [f8abb0f5e] postgres_fdw: suppress casts on constants in limited cas
-->

    <listitem>
     <para>
      Avoid unnecessary casting of constants in queries sent by <link
      linkend="postgres-fdw">postgres_fdw</link> (Dian Fay)
      <ulink url="&commit_baseurl;f8abb0f5e">&sect;</ulink>
     </para>

     <para>
      When column types are intentionally different between local and
      remote databases, such casts could cause errors.
     </para>
    </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-02-14 [fd2abeb7c] Delete contrib/xml2's legacy implementation of xml_is_we
-->

    <listitem>
     <para>
      Remove <link linkend="xml2">xml2</link>'s
      <function>xml_is_well_formed()</function> function (Tom Lane)
      <ulink url="&commit_baseurl;fd2abeb7c">&sect;</ulink>
     </para>

     <para>
      This function has been implemented in the core backend since
      Postgres 9.1.
     </para>
    </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-07-06 [955b3e0f9] Allow CustomScan providers to say whether they support p
-->

    <listitem>
     <para>
      Allow <link linkend="custom-scan">custom scan providers</link>
      to indicate if they support projections (Sven Klemm)
      <ulink url="&commit_baseurl;955b3e0f9">&sect;</ulink>
     </para>

     <para>
      The default is now that custom scan providers are assumed to not
      support projections;  those that do will need to be updated for
      this release.
     </para>
    </listitem>

   </itemizedlist>

  </sect2>

  <sect2>
   <title>Changes</title>

   <para>
    Below you will find a detailed account of the changes between
    <productname>PostgreSQL</productname> 15 and the previous major
    release.
   </para>

   <sect3>
    <title>Server</title>

    <itemizedlist>

<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2022-02-14 [37851a8b8] Database-level collation version tracking
-->

     <listitem>
      <para>
       Record and check the collation version of each <link
       linkend="sql-createdatabase">database</link> (Peter Eisentraut)
       <ulink url="&commit_baseurl;37851a8b8">&sect;</ulink>
      </para>

      <para>
       This feature is designed to detect collation version
       changes to avoid index corruption.  Function
       <function>pg_database_collation_actual_version()</function>
       reports the underlying operating system collation version, and
       <command>ALTER DATABASE ...  REFRESH</command> sets the recorded
       database collation version to match the operating system collation
       version.
      </para>
     </listitem>

<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2022-03-17 [f2553d430] Add option to use ICU as global locale provider
-->

     <listitem>
      <para>
       Allow <link linkend="locale"><acronym>ICU</acronym></link>
       collations to be set as the default for clusters and databases
       (Peter Eisentraut)
       <ulink url="&commit_baseurl;f2553d430">&sect;</ulink>
      </para>

      <para>
       Previously, only <application>libc</application>-based
       collations could be selected at the cluster and database levels.
       <acronym>ICU</acronym> collations could only be used via explicit
       <literal>COLLATE</literal> clauses.
      </para>
     </listitem>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2022-03-29 [a2c84990b] Add system view pg_ident_file_mappings
-->

     <listitem>
      <para>
       Add system view <link
       linkend="view-pg-ident-file-mappings"><structname>pg_ident_file_mappings</structname></link>
       to report <filename>pg_ident.conf</filename> information (Julien
       Rouhaud)
       <ulink url="&commit_baseurl;a2c84990b">&sect;</ulink>
      </para>
     </listitem>

       </itemizedlist>

    <sect4>
     <title><link linkend="ddl-partitioning">Partitioning</link></title>

     <itemizedlist>

<!--
Author: David Rowley <drowley@postgresql.org>
2021-08-03 [475dbd0b7] Track a Bitmapset of non-pruned partitions in RelOptInfo
-->

      <listitem>
       <para>
        Improve planning time for queries referencing partitioned tables
        (David Rowley)
        <ulink url="&commit_baseurl;475dbd0b7">&sect;</ulink>
       </para>

       <para>
        This change helps when only a few of many partitions are relevant.
       </para>
      </listitem>

<!--
Author: David Rowley <drowley@postgresql.org>
2021-08-03 [db632fbca] Allow ordered partition scans in more cases
-->

      <listitem>
       <para>
        Allow ordered scans of partitions to avoid sorting in more cases
        (David Rowley)
        <ulink url="&commit_baseurl;db632fbca">&sect;</ulink>
       </para>

       <para>
        Previously, a partitioned table with a <literal>DEFAULT</literal>
        partition or a <literal>LIST</literal> partition containing
        multiple values could not be used for ordered partition scans.
        Now they can be used if such partitions are pruned during planning.
       </para>
      </listitem>

<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
2022-03-20 [ba9a7e392] Enforce foreign key correctly during cross-partition upd
-->

      <listitem>
       <para>
        Improve foreign key behavior of updates on partitioned tables
        that move rows between partitions (Amit Langote)
        <ulink url="&commit_baseurl;ba9a7e392">&sect;</ulink>
       </para>

       <para>
        Previously, such updates ran a delete action on the source
        partition and an insert action on the target partition.
        <productname>PostgreSQL</productname> will now run an update action
        on the partition root, providing cleaner semantics.
       </para>
      </listitem>

<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
2022-04-02 [cfdd03f45] Allow CLUSTER on partitioned tables
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
2022-04-14 [3f19e176a] Have CLUSTER ignore partitions not owned by caller
-->

      <listitem>
       <para>
        Allow <link linkend="sql-cluster"><command>CLUSTER</command></link>
        on partitioned tables (Justin Pryzby)
        <ulink url="&commit_baseurl;cfdd03f45">&sect;</ulink>
        <ulink url="&commit_baseurl;3f19e176a">&sect;</ulink>
       </para>
      </listitem>

<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
2021-07-22 [80ba4bb38] Make ALTER TRIGGER RENAME consistent for partitioned tab
-->

      <listitem>
       <para>
        Fix <link linkend="sql-altertable"><command>ALTER TRIGGER
        RENAME</command></link> on partitioned tables to properly rename
        triggers on all partitions (Arne Roland, Álvaro Herrera)
        <ulink url="&commit_baseurl;80ba4bb38">&sect;</ulink>
       </para>

       <para>
        Also prohibit cloned triggers from being renamed.
       </para>
      </listitem>

     </itemizedlist>

    </sect4>

    <sect4>
     <title>Indexes</title>

     <itemizedlist>

<!--
Author: Peter Geoghegan <pg@bowt.ie>
2021-10-02 [2903f1404] Enable deduplication in system catalog indexes.
-->

      <listitem>
       <para>
        Allow btree indexes on system and <link
        linkend="storage-toast"><acronym>TOAST</acronym></link>
        tables to efficiently store duplicates (Peter Geoghegan)
        <ulink url="&commit_baseurl;2903f1404">&sect;</ulink>
       </para>

       <para>
        Previously de-duplication was disabled for these types of indexes.
       </para>
      </listitem>

<!--
Author: Alexander Korotkov <akorotkov@postgresql.org>
2022-02-07 [f1ea98a79] Reduce non-leaf keys overlap in GiST indexes produced by
-->

      <listitem>
       <para>
        Improve lookup performance
        of <link linkend="gist"><acronym>GiST</acronym></link> indexes
        that were built using sorting (Aliaksandr Kalenik, Sergei
        Shoulbakov, Andrey Borodin)
        <ulink url="&commit_baseurl;f1ea98a79">&sect;</ulink>
       </para>
      </listitem>

<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2022-02-03 [94aa7cc5f] Add UNIQUE null treatment option
-->

      <listitem>
       <para>
        Allow unique constraints and indexes to treat
        <literal>NULL</literal> values as not distinct (Peter Eisentraut)
        <ulink url="&commit_baseurl;94aa7cc5f">&sect;</ulink>
       </para>

       <para>
        Previously <literal>NULL</literal> entries were always treated
        as distinct values, but this can now be changed by creating
        constraints and indexes using <literal>UNIQUE NULLS NOT
        DISTINCT</literal>.
       </para>
      </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-11-17 [a148f8bc0] Add a planner support function for starts_with().
-->

      <listitem>
       <para>
        Allow the <link
        linkend="functions-string-other"><literal>^@</literal></link>
        starts-with operator and the <function>starts_with()</function>
        function to use btree indexes if using the C collation (Tom Lane)
        <ulink url="&commit_baseurl;a148f8bc0">&sect;</ulink>
       </para>

       <para>
        Previously these could only use <link
        linkend="spgist"><acronym>SP-GiST</acronym></link> indexes.
       </para>
      </listitem>

     </itemizedlist>

    </sect4>

    <sect4>
     <title>Optimizer</title>

     <itemizedlist>

<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
2022-01-16 [269b532ae] Add stxdinherit flag to pg_statistic_ext_data
-->

      <listitem>
       <para>
        Allow <link linkend="sql-createstatistics">extended
        statistics</link> to record statistics for a parent with all its
        children (Tomas Vondra, Justin Pryzby)
        <ulink url="&commit_baseurl;269b532ae">&sect;</ulink>
       </para>

       <para>
        Regular statistics already tracked parent and
        parent-plus-all-children statistics separately.
       </para>
      </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-03-24 [0bd7af082] Invent recursive_worktable_factor GUC to replace hard-wi
-->

      <listitem>
       <para>
        Add server variable <link
        linkend="guc-recursive-worktable-factor"><varname>recursive_worktable_factor</varname></link>
        to allow the user to specify the expected size of the working
        table of a <link linkend="queries-with-recursive">recursive
        query</link> (Simon Riggs)
        <ulink url="&commit_baseurl;0bd7af082">&sect;</ulink>
       </para>
      </listitem>

     </itemizedlist>

    </sect4>

    <sect4>
     <title>General Performance</title>

     <itemizedlist>

<!--
Author: David Rowley <drowley@postgresql.org>
2021-07-07 [29f45e299] Use a hash table to speed up NOT IN(values)
-->

      <listitem>
       <para>
        Allow hash lookup for <link
        linkend="functions-subquery-notin"><literal>NOT IN</literal></link>
        clauses with many constants (David Rowley, James Coleman)
        <ulink url="&commit_baseurl;29f45e299">&sect;</ulink>
       </para>

       <para>
        Previously the code always sequentially scanned the list of values.
       </para>
      </listitem>

<!--
Author: David Rowley <drowley@postgresql.org>
2021-08-22 [22c4e88eb] Allow parallel DISTINCT
-->

     <listitem>
      <para>
       Allow <command>SELECT DISTINCT</command> to be parallelized
       (David Rowley)
       <ulink url="&commit_baseurl;22c4e88eb">&sect;</ulink>
      </para>
     </listitem>

<!--
Author: John Naylor <john.naylor@postgresql.org>
2021-12-20 [911588a3f] Add fast path for validating UTF-8 text
-->

      <listitem>
       <para>
        Speed up encoding validation of <acronym>UTF</acronym>-8 text
        by processing 16 bytes at a time
        (John Naylor, Heikki Linnakangas)
        <ulink url="&commit_baseurl;911588a3f">&sect;</ulink>
       </para>

       <para>
        This will improve text-heavy operations like <link
        linkend="sql-copy"><command>COPY FROM</command></link>.
       </para>
      </listitem>

<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
2021-10-18 [65014000b] Replace polyphase merge algorithm with a simple balanced
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
2021-10-25 [166f94377] Clarify the logic in a few places in the new balanced me
-->

      <listitem>
       <para>
        Improve performance for sorts that exceed <link
        linkend="guc-work-mem"><varname>work_mem</varname></link>
        (Heikki Linnakangas)
        <ulink url="&commit_baseurl;65014000b">&sect;</ulink>
        <ulink url="&commit_baseurl;166f94377">&sect;</ulink>
       </para>

       <para>
        When the sort data no longer fits in <varname>work_mem</varname>,
        switch to a batch sorting algorithm that uses more output streams
        than before.
       </para>
      </listitem>

<!--
Author: David Rowley <drowley@postgresql.org>
2021-07-22 [91e9e89dc] Make nodeSort.c use Datum sorts for single column sorts
Author: David Rowley <drowley@postgresql.org>
2022-04-04 [40af10b57] Use Generation memory contexts to store tuples in sorts
Author: John Naylor <john.naylor@postgresql.org>
2022-04-02 [697492434] Specialize tuplesort routines for different kinds of abb
-->

      <listitem>
       <para>
        Improve performance and reduce memory consumption of in-memory
        sorts (Ronan Dunklau, David Rowley, Thomas Munro, John Naylor)
        <ulink url="&commit_baseurl;91e9e89dc">&sect;</ulink>
        <ulink url="&commit_baseurl;40af10b57">&sect;</ulink>
        <ulink url="&commit_baseurl;697492434">&sect;</ulink>
       </para>
      </listitem>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2021-06-29 [4035cd5d4] Add support for LZ4 with compression of full-page writes
Author: Michael Paquier <michael@paquier.xyz>
2022-03-11 [e9537321a] Add support for zstd with compression of full-page write
-->

      <listitem>
       <para>
        Allow <acronym>WAL</acronym> <link
        linkend="guc-full-page-writes">full page writes</link> to use
        LZ4 and Zstandard compression (Andrey Borodin, Justin Pryzby)
        <ulink url="&commit_baseurl;4035cd5d4">&sect;</ulink>
        <ulink url="&commit_baseurl;e9537321a">&sect;</ulink>
       </para>

       <para>
        This is controlled by the <link
        linkend="guc-wal-compression"><varname>wal_compression</varname></link>
        server setting.
       </para>
      </listitem>

<!--
Author: Thomas Munro <tmunro@postgresql.org>
2021-07-19 [2dbe89057] Support direct I/O on macOS.
-->

      <listitem>
       <para>
        Add support for writing <acronym>WAL</acronym>
        using <link linkend="guc-wal-sync-method">direct I/O</link> on
        macOS (Thomas Munro)
        <ulink url="&commit_baseurl;2dbe89057">&sect;</ulink>
       </para>

       <para>
        This only works if <literal>max_wal_senders = 0</literal>
        and <literal>wal_level = minimal</literal>.
       </para>
      </listitem>

<!--
Author: Peter Geoghegan <pg@bowt.ie>
2022-04-03 [0b018faba] Set relfrozenxid to oldest extant XID seen by VACUUM.
-->

      <listitem>
       <para>
        Allow <link linkend="routine-vacuuming">vacuum</link> to be more
        aggressive in setting the oldest frozen and multi transaction id
        (Peter Geoghegan)
        <ulink url="&commit_baseurl;0b018faba">&sect;</ulink>
       </para>
      </listitem>

<!--
Author: Etsuro Fujita <efujita@postgresql.org>
2022-04-06 [c2bb02bc2] Allow asynchronous execution in more cases.
-->

      <listitem>
       <para>
        Allow a query referencing multiple <link
        linkend="ddl-foreign-data">foreign tables</link> to perform
        parallel foreign table scans in more cases (Andrey Lepikhov,
        Etsuro Fujita)
        <ulink url="&commit_baseurl;c2bb02bc2">&sect;</ulink>
       </para>
      </listitem>

<!--
Author: David Rowley <drowley@postgresql.org>
2022-04-08 [9d9c02ccd] Teach planner and executor about monotonic window funcs
-->

      <listitem>
       <para>
        Improve the performance of <link linkend="functions-window">window
        functions</link> that use <function>row_number()</function>,
        <function>rank()</function>, <function>dense_rank()</function> and
        <function>count()</function>
        (David Rowley)
        <ulink url="&commit_baseurl;9d9c02ccd">&sect;</ulink>
       </para>
      </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-04-06 [a82a5eee3] Use ISB as a spin-delay instruction on ARM64.
-->

      <listitem>
       <para>
        Improve the performance of spinlocks on high-core-count ARM64
        systems (Geoffrey Blake)
        <ulink url="&commit_baseurl;a82a5eee3">&sect;</ulink>
       </para>
      </listitem>

     </itemizedlist>

    </sect4>

    <sect4>
     <title>Monitoring</title>

     <itemizedlist>

<!--
Author: Robert Haas <rhaas@postgresql.org>
2021-12-13 [64da07c41] Default to log_checkpoints=on, log_autovacuum_min_durati
-->

      <listitem>
       <para>
        Enable default logging of checkpoints and slow autovacuum
        operations (Bharath Rupireddy)
        <ulink url="&commit_baseurl;64da07c41">&sect;</ulink>
       </para>

       <para>
        This changes the default of <link
        linkend="guc-log-checkpoints"><varname>log_checkpoints</varname></link>
        to <literal>on</literal> and that of <link
        linkend="guc-log-autovacuum-min-duration"><varname>log_autovacuum_min_duration</varname></link>
        to 10 minutes.  This will cause even an idle server to generate
        some log output, which might cause problems on
        resource-constrained servers without log file rotation.  These
        defaults should be changed in such cases.
       </para>
      </listitem>

<!--
Author: Robert Haas <rhaas@postgresql.org>
2021-10-25 [9ce346eab] Report progress of startup operations that take a long t
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
2021-11-05 [e543906e2] Document default and changeability of log_startup_progre
-->

      <listitem>
       <para>
        Generate progress messages in the server log during slow server
        starts (Nitin Jadhav, Robert Haas)
        <ulink url="&commit_baseurl;9ce346eab">&sect;</ulink>
        <ulink url="&commit_baseurl;e543906e2">&sect;</ulink>
       </para>

       <para>
        The messages report the cause of the delay.  The time interval for
        notification is controlled by the new server variable <link
        linkend="guc-log-startup-progress-interval"><varname>log_startup_progress_interval</varname></link>.
       </para>
      </listitem>

<!--
Author: Andres Freund <andres@anarazel.de>
2022-04-06 [5891c7a8e] pgstat: store statistics in shared memory.
Author: Andres Freund <andres@anarazel.de>
2022-04-07 [b3abca681] pgstat: Update docs to match the shared memory stats rea
-->

      <listitem>
       <para>
        Store <link linkend="monitoring-stats">cumulative statistics
        system</link> data in shared memory (Kyotaro Horiguchi, Andres
        Freund, Melanie Plageman)
        <ulink url="&commit_baseurl;5891c7a8e">&sect;</ulink>
        <ulink url="&commit_baseurl;b3abca681">&sect;</ulink>
       </para>

       <para>
        Previously this data was sent to a statistics collector process
        via <acronym>UDP</acronym> packets, and could only be read by
        sessions after transferring it via the file system.  There is no
        longer a separate statistics collector process.
       </para>
      </listitem>

<!--
Author: Peter Geoghegan <pg@bowt.ie>
2022-02-11 [872770fd6] Add VACUUM instrumentation for scanned pages, relfrozenx
Author: Peter Geoghegan <pg@bowt.ie>
2022-03-13 [6e20f4600] VACUUM VERBOSE: tweak scanned_pages logic.
Author: Peter Geoghegan <pg@bowt.ie>
2022-04-15 [bdb71dbe8] VACUUM VERBOSE: Show dead items for an empty table.
-->

      <listitem>
       <para>
        Add additional information to <command>VACUUM VERBOSE</command>
        and autovacuum logging messages (Peter Geoghegan)
        <ulink url="&commit_baseurl;872770fd6">&sect;</ulink>
        <ulink url="&commit_baseurl;6e20f4600">&sect;</ulink>
        <ulink url="&commit_baseurl;bdb71dbe8">&sect;</ulink>
       </para>
      </listitem>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2022-04-08 [efb0ef909] Track I/O timing for temporary file blocks in EXPLAIN (B
-->

      <listitem>
       <para>
        Add <link linkend="sql-explain"><command>EXPLAIN
        (BUFFERS)</command></link> output for temporary file block I/O
        (Masahiko Sawada)
        <ulink url="&commit_baseurl;efb0ef909">&sect;</ulink>
       </para>
      </listitem>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2022-01-17 [dc686681e] Introduce log_destination=jsonlog
-->

      <listitem>
       <para>
        Allow <link linkend="guc-log-destination">log output</link> in
        <acronym>JSON</acronym> format (Sehrope Sarkuni, Michael Paquier)
        <ulink url="&commit_baseurl;dc686681e">&sect;</ulink>
       </para>

       <para>
        The new setting is <literal>log_destination = jsonlog</literal>.
       </para>
      </listitem>

<!--
Author: Fujii Masao <fujii@postgresql.org>
2021-09-02 [e04267844] Enhance pg_stat_reset_single_table_counters function.
-->

      <listitem>
       <para>
        Allow <link
        linkend="monitoring-stats-funcs-table"><function>pg_stat_reset_single_table_counters()</function></link>
        to reset the counters of relations shared across all databases
        (Sadhuprasad Patro)
        <ulink url="&commit_baseurl;e04267844">&sect;</ulink>
       </para>
      </listitem>

<!--
Author: Fujii Masao <fujii@postgresql.org>
2021-11-22 [1b06d7bac] Report wait events for local shell commands like archive
-->

      <listitem>
       <para>
        Add <link linkend="wait-event-table">wait events</link> for local
        shell commands (Fujii Masao)
        <ulink url="&commit_baseurl;1b06d7bac">&sect;</ulink>
       </para>

       <para>
        The new wait events are used when calling
        <varname>archive_command</varname>,
        <varname>archive_cleanup_command</varname>,
        <varname>restore_command</varname> and
        <varname>recovery_end_command</varname>.
       </para>
      </listitem>

     </itemizedlist>

    </sect4>

    <sect4>
     <title>Privileges</title>

     <itemizedlist>

<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
2022-03-22 [7faa5fc84] Add support for security invoker views.
-->

      <listitem>
       <para>
        Allow table accesses done by
        a <link linkend="sql-createview">view</link> to optionally be
        controlled by privileges of the view's caller (Christoph Heiss)
        <ulink url="&commit_baseurl;7faa5fc84">&sect;</ulink>
       </para>

       <para>
        Previously, view accesses were always treated as being done by the
        view's owner.  That's still the default.
       </para>
      </listitem>

<!--
Author: Robert Haas <rhaas@postgresql.org>
2022-01-28 [7f6772317] Adjust server-side backup to depend on pg_write_server_f
-->

      <listitem>
       <para>
        Allow members of the <link
        linkend="predefined-roles-table"><literal>pg_write_server_files</literal></link>
        predefined role to perform server-side base backups (Dagfinn
        Ilmari Mannsåker)
        <ulink url="&commit_baseurl;7f6772317">&sect;</ulink>
       </para>

       <para>
        Previously only superusers could perform such backups.
       </para>
      </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-04-06 [a0ffa885e] Allow granting SET and ALTER SYSTEM privileges on GUC pa
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-07-19 [a2944d872] Fix missed corner cases for grantable permissions on GUC
-->

      <listitem>
       <para>
        Allow <link linkend="sql-grant"><command>GRANT</command></link>
        to grant permissions to change individual server variables via
        <command>SET</command> and <command>ALTER SYSTEM</command>
        (Mark Dilger)
        <ulink url="&commit_baseurl;a0ffa885e">&sect;</ulink>
        <ulink url="&commit_baseurl;a2944d872">&sect;</ulink>
       </para>

       <para>
        The new function <function>has_parameter_privilege()</function>
        reports on this privilege.
       </para>
      </listitem>

<!--
Author: Jeff Davis <jdavis@postgresql.org>
2021-11-09 [4168a4745] Add pg_checkpointer predefined role for CHECKPOINT comma
Author: Robert Haas <rhaas@postgresql.org>
2022-07-05 [d3526e59f] Rename pg_checkpointer predefined role to pg_checkpoint.
-->

      <listitem>
       <para>
        Add predefined role <link
        linkend="predefined-roles-table"><literal>pg_checkpoint</literal></link>
        that allows members to run <command>CHECKPOINT</command>
        (Jeff Davis)
        <ulink url="&commit_baseurl;4168a4745">&sect;</ulink>
        <ulink url="&commit_baseurl;d3526e59f">&sect;</ulink>
       </para>

       <para>
        Previously checkpoints could only be run by superusers.
       </para>
      </listitem>

<!--
Author: Jeff Davis <jdavis@postgresql.org>
2021-10-27 [77ea4f943] Grant memory views to pg_read_all_stats.
-->

      <listitem>
       <para>
        Allow members of the <link
        linkend="predefined-roles-table"><literal>pg_read_all_stats</literal></link>
        predefined role to access the views <link
        linkend="view-pg-backend-memory-contexts"><structname>pg_backend_memory_contexts</structname></link>
        and <link
        linkend="view-pg-shmem-allocations"><structname>pg_shmem_allocations</structname></link>
        (Bharath Rupireddy)
        <ulink url="&commit_baseurl;77ea4f943">&sect;</ulink>
       </para>

       <para>
        Previously these views could only be accessed by superusers.
       </para>
      </listitem>

<!--
Author: Jeff Davis <jdavis@postgresql.org>
2021-10-26 [f0b051e32] Allow GRANT on pg_log_backend_memory_contexts().
-->

      <listitem>
       <para>
        Allow <link linkend="sql-grant"><command>GRANT</command></link>
        to grant permissions on <link
        linkend="functions-admin-signal"><function>pg_log_backend_memory_contexts()</function></link>
        (Jeff Davis)
        <ulink url="&commit_baseurl;f0b051e32">&sect;</ulink>
       </para>

       <para>
        Previously this function could only be run by superusers.
       </para>
      </listitem>

     </itemizedlist>

    </sect4>

    <sect4>
     <title>Server Configuration</title>

     <itemizedlist>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2021-09-08 [bd1788051] Introduce GUC shared_memory_size
Author: Michael Paquier <michael@paquier.xyz>
2021-09-09 [3b231596c] Make shared_memory_size a preset option
-->

      <listitem>
       <para>
        Add server variable <link
        linkend="guc-shared-memory-size"><varname>shared_memory_size</varname></link>
        to report the size of allocated shared memory (Nathan Bossart)
        <ulink url="&commit_baseurl;bd1788051">&sect;</ulink>
        <ulink url="&commit_baseurl;3b231596c">&sect;</ulink>
       </para>
      </listitem>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2021-09-21 [43c1c4f65] Introduce GUC shared_memory_size_in_huge_pages
Author: Michael Paquier <michael@paquier.xyz>
2022-03-24 [bbd4951b7] doc: Improve postgres command for shared_memory_size_in_
-->

      <listitem>
       <para>
        Add server variable <link
        linkend="guc-shared-memory-size-in-huge-pages"><varname>shared_memory_size_in_huge_pages</varname></link>
        to report the number of huge memory pages required (Nathan Bossart)
        <ulink url="&commit_baseurl;43c1c4f65">&sect;</ulink>
        <ulink url="&commit_baseurl;bbd4951b7">&sect;</ulink>
       </para>

       <para>
        This is only supported on Linux.
       </para>
      </listitem>

<!--
Author: Jeff Davis <jdavis@postgresql.org>
2022-07-20 [2103266a3] Process shared_preload_libraries in single-user mode.
-->

      <listitem>
       <para>
        Honor server variable <link
        linkend="guc-shared-preload-libraries"><varname>shared_preload_libraries</varname></link>
        in single-user mode (Jeff Davis)
        <ulink url="&commit_baseurl;2103266a3">&sect;</ulink>
       </para>

       <para>
        This change supports use
        of <varname>shared_preload_libraries</varname> to load custom
        access methods and WAL resource managers, which would be essential
        for database access even in single-user mode.
       </para>
      </listitem>

<!--
Author: Thomas Munro <tmunro@postgresql.org>
2022-07-02 [a2b0719cc] Default to dynamic_shared_memory_type=sysv on Solaris.
-->

      <listitem>
       <para>
        On Solaris, make the default setting of <link
        linkend="guc-dynamic-shared-memory-type"><varname>dynamic_shared_memory_type</varname></link>
        be <literal>sysv</literal> (Thomas Munro)
        <ulink url="&commit_baseurl;a2b0719cc">&sect;</ulink>
       </para>

       <para>
        The previous default choice, <literal>posix</literal>, can result
        in spurious failures on this platform.
       </para>
      </listitem>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2021-09-16 [0c39c2920] Support "postgres -C" with runtime-computed GUCs
-->

      <listitem>
       <para>
        Allow <link linkend="app-postgres"><command>postgres
        -C</command></link> to properly report runtime-computed values
        (Nathan Bossart)
        <ulink url="&commit_baseurl;0c39c2920">&sect;</ulink>
       </para>

       <para>
        Previously runtime-computed values <link
        linkend="guc-data-checksums"><varname>data_checksums</varname></link>,
        <link
        linkend="guc-wal-segment-size"><varname>wal_segment_size</varname></link>,
        and <link
        linkend="guc-data-directory-mode"><varname>data_directory_mode</varname></link>
        would report values that would not be accurate on the running
        server.  However, this does not work on a running server.
       </para>
      </listitem>

     </itemizedlist>

    </sect4>

   </sect3>

   <sect3>
    <title>Streaming Replication and Recovery</title>

    <itemizedlist>

<!--
Author: Robert Haas <rhaas@postgresql.org>
2022-02-11 [dab298471] Add suport for server-side LZ4 base backup compression.
Author: Robert Haas <rhaas@postgresql.org>
2022-03-08 [7cf085f07] Add support for zstd base backup compression.
Author: Robert Haas <rhaas@postgresql.org>
2022-03-30 [51c0d186d] Allow parallel zstd compression when taking a base backu
-->

     <listitem>
      <para>
       Add support for LZ4 and Zstandard compression of server-side <link
       linkend="backup-base-backup">base backups</link> (Jeevan Ladhe,
       Robert Haas)
       <ulink url="&commit_baseurl;dab298471">&sect;</ulink>
       <ulink url="&commit_baseurl;7cf085f07">&sect;</ulink>
       <ulink url="&commit_baseurl;51c0d186d">&sect;</ulink>
      </para>
     </listitem>

<!--
Author: Thomas Munro <tmunro@postgresql.org>
2021-08-02 [7ff23c6d2] Run checkpointer and bgwriter in crash recovery.
-->

     <listitem>
      <para>
       Run the checkpointer and bgwriter processes during crash recovery
       (Thomas Munro)
       <ulink url="&commit_baseurl;7ff23c6d2">&sect;</ulink>
      </para>

      <para>
       This helps to speed up long crash recoveries.
      </para>
     </listitem>

<!--
Author: Thomas Munro <tmunro@postgresql.org>
2022-04-07 [5dc0418fa] Prefetch data referenced by the WAL, take II.
-->

     <listitem>
      <para>
       Allow <acronym>WAL</acronym> processing to pre-fetch needed file
       contents (Thomas Munro)
       <ulink url="&commit_baseurl;5dc0418fa">&sect;</ulink>
      </para>

      <para>
       This is controlled by the server variable <link
       linkend="guc-recovery-prefetch"><varname>recovery_prefetch</varname></link>.
      </para>
     </listitem>

<!--
Author: Robert Haas <rhaas@postgresql.org>
2022-02-03 [5ef1eefd7] Allow archiving via loadable modules.
-->

     <listitem>
      <para>
       Allow archiving via loadable modules (Nathan Bossart)
       <ulink url="&commit_baseurl;5ef1eefd7">&sect;</ulink>
      </para>

      <para>
       Previously, archiving was only done by calling shell commands.
       The new server variable <link
       linkend="guc-archive-library"><varname>archive_library</varname></link>
       can be set to specify a library to be called for archiving.
      </para>
     </listitem>

<!--
Author: Jeff Davis <jdavis@postgresql.org>
2021-07-09 [8e7811e95] Eliminate replication protocol error related to IDENTIFY
-->

     <listitem>
      <para>
       No longer require <link
       linkend="protocol-replication"><literal>IDENTIFY_SYSTEM</literal></link>
       to be run before <literal>START_REPLICATION</literal> (Jeff Davis)
       <ulink url="&commit_baseurl;8e7811e95">&sect;</ulink>
      </para>
     </listitem>

    </itemizedlist>

    <sect4>
     <title><link linkend="logical-replication">Logical Replication</link></title>

     <itemizedlist>

<!--
Author: Amit Kapila <akapila@postgresql.org>
2021-10-27 [5a2832465] Allow publishing the tables of schema.
Author: Amit Kapila <akapila@postgresql.org>
2021-12-08 [1a2aaeb0d] Fix changing the ownership of ALL TABLES IN SCHEMA publi
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
2022-09-22 [f256236fb] Remove ALL keyword from TABLES IN SCHEMA for publication
-->

      <listitem>
       <para>
        Allow <link linkend="sql-createpublication">publication</link> of
        all tables in a schema (Vignesh C, Hou Zhijie, Amit Kapila)
        <ulink url="&commit_baseurl;5a2832465">&sect;</ulink>
        <ulink url="&commit_baseurl;1a2aaeb0d">&sect;</ulink>
        <ulink url="&commit_baseurl;f256236fb">&sect;</ulink>
       </para>

       <para>
        For example, this syntax is now supported: <literal>CREATE
        PUBLICATION pub1 FOR TABLES IN SCHEMA s1,s2</literal>.
        <command>ALTER PUBLICATION</command> supports a similar syntax.
        Tables added later to the listed schemas will also be replicated.
       </para>
      </listitem>

<!--
Author: Amit Kapila <akapila@postgresql.org>
2022-02-22 [52e4f0cd4] Allow specifying row filters for logical replication of
Author: Tomas Vondra <tomas.vondra@postgresql.org>
2022-03-17 [5a0796622] Fix row filters with multiple publications
Author: Amit Kapila <akapila@postgresql.org>
2022-04-18 [676eeb6dd] Add additional documentation for row filters.
-->

      <listitem>
       <para>
        Allow publication content to be filtered using a
        <literal>WHERE</literal> clause (Hou Zhijie, Euler Taveira,
        Peter Smith, Ajin Cherian, Tomas Vondra, Amit Kapila)
        <ulink url="&commit_baseurl;52e4f0cd4">&sect;</ulink>
        <ulink url="&commit_baseurl;5a0796622">&sect;</ulink>
        <ulink url="&commit_baseurl;676eeb6dd">&sect;</ulink>
       </para>

       <para>
        Rows not satisfying the <literal>WHERE</literal> clause are not
        published.
       </para>
      </listitem>

<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
2022-03-26 [923def9a5] Allow specifying column lists for logical replication
-->

      <listitem>
       <para>
        Allow publication content to
        be restricted to specific columns (Tomas Vondra, Álvaro Herrera,
        Rahila Syed)
        <ulink url="&commit_baseurl;923def9a5">&sect;</ulink>
       </para>
      </listitem>

<!--
Author: Amit Kapila <akapila@postgresql.org>
2022-03-22 [208c5d65b] Add ALTER SUBSCRIPTION ... SKIP.
-->

      <listitem>
       <para>
        Allow skipping of transactions on a subscriber using <link
        linkend="sql-altersubscription"><command>ALTER SUBSCRIPTION
        ... SKIP</command></link> (Masahiko Sawada)
        <ulink url="&commit_baseurl;208c5d65b">&sect;</ulink>
       </para>
      </listitem>

<!--
Author: Amit Kapila <akapila@postgresql.org>
2021-06-30 [cda03cfed] Allow enabling two-phase option via replication protocol
Author: Amit Kapila <akapila@postgresql.org>
2021-07-14 [a8fd13cab] Add support for prepared transactions to built-in logica
Author: Amit Kapila <akapila@postgresql.org>
2021-08-04 [63cf61cde] Add prepare API support for streaming transactions in lo
-->

      <listitem>
       <para>
        Add support for prepared (two-phase) transactions to logical
        replication (Peter Smith, Ajin Cherian, Amit Kapila, Nikhil
        Sontakke, Stas Kelvich)
        <ulink url="&commit_baseurl;cda03cfed">&sect;</ulink>
        <ulink url="&commit_baseurl;a8fd13cab">&sect;</ulink>
        <ulink url="&commit_baseurl;63cf61cde">&sect;</ulink>
       </para>

       <para>
        The new <link
        linkend="protocol-replication"><literal>CREATE_REPLICATION_SLOT</literal></link>
        option is called <literal>TWO_PHASE</literal>.
        <application>pg_recvlogical</application> now supports a new
        <option>--two-phase</option> option during slot creation.
       </para>
      </listitem>

<!--
Author: Amit Kapila <akapila@postgresql.org>
2022-03-30 [d5a9d86d8] Skip empty transactions for logical replication.
-->

      <listitem>
       <para>
        Prevent logical replication of empty transactions (Ajin Cherian,
        Hou Zhijie, Euler Taveira)
        <ulink url="&commit_baseurl;d5a9d86d8">&sect;</ulink>
       </para>

       <para>
        Previously, publishers would send empty transactions to
        subscribers if subscribed tables were not modified.
       </para>
      </listitem>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2021-11-23 [1922d7c6e] Add SQL functions to monitor the directory contents of r
-->

      <listitem>
       <para>
        Add <acronym>SQL</acronym> functions to monitor the directory
        contents of logical replication slots (Bharath Rupireddy)
        <ulink url="&commit_baseurl;1922d7c6e">&sect;</ulink>
       </para>

       <para>
        The new functions are <link
        linkend="functions-admin-genfile-table"><function>pg_ls_logicalsnapdir()</function></link>,
        <function>pg_ls_logicalmapdir()</function>, and
        <function>pg_ls_replslotdir()</function>.  They can be run by
        members of the predefined <literal>pg_monitor</literal> role.
       </para>
      </listitem>

<!--
Author: Amit Kapila <akapila@postgresql.org>
2022-03-14 [705e20f85] Optionally disable subscriptions on error.
-->

      <listitem>
       <para>
        Allow subscribers to stop the application of logical replication changes on error
        (Osumi Takamichi, Mark Dilger)
        <ulink url="&commit_baseurl;705e20f85">&sect;</ulink>
       </para>

       <para>
        This is enabled with the subscriber option <link
        linkend="sql-createsubscription"><literal>disable_on_error</literal></link>
        and avoids possible infinite error loops during stream application.
       </para>
      </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-11-02 [f3d4019da] Ensure consistent logical replication of datetime and fl
-->

      <listitem>
       <para>
        Adjust subscriber server variables to match the publisher so
        datetime and float8 values are interpreted consistently (Japin Li)
        <ulink url="&commit_baseurl;f3d4019da">&sect;</ulink>
       </para>

       <para>
        Some publishers might be relying on inconsistent behavior.
       </para>
      </listitem>

<!--
Author: Amit Kapila <akapila@postgresql.org>
2021-11-30 [8d74fc96d] Add a view to show the stats of subscription workers.
Author: Amit Kapila <akapila@postgresql.org>
2022-03-01 [7a8507329] Reconsider pg_stat_subscription_workers view.
-->

      <listitem>
       <para>
        Add system view <link
        linkend="monitoring-pg-stat-subscription-stats"><structname>pg_stat_subscription_stats</structname></link>
        to report on subscriber activity (Masahiko Sawada)
        <ulink url="&commit_baseurl;8d74fc96d">&sect;</ulink>
        <ulink url="&commit_baseurl;7a8507329">&sect;</ulink>
       </para>

       <para>
        The new function <link
        linkend="monitoring-stats-functions"><function>pg_stat_reset_subscription_stats()</function></link>
        allows resetting these statistics counters.
       </para>
      </listitem>

<!--
Author: Amit Kapila <akapila@postgresql.org>
2021-12-08 [a61bff2bf] De-duplicate the result of pg_publication_tables view.
-->

      <listitem>
       <para>
        Suppress duplicate entries in the <link
        linkend="view-pg-publication-tables"><structname>pg_publication_tables</structname></link>
        system view (Hou Zhijie)
        <ulink url="&commit_baseurl;a61bff2bf">&sect;</ulink>
       </para>

       <para>
        In some cases a partition could appear more than once.
       </para>
      </listitem>

     </itemizedlist>

    </sect4>

   </sect3>

   <sect3>
    <title>Utility Commands</title>

    <itemizedlist>

<!--
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
2022-03-28 [7103ebb7a] Add support for MERGE SQL command
-->

     <listitem>
      <para>
       Add <acronym>SQL</acronym> <link
       linkend="sql-merge"><command>MERGE</command></link>
       command to adjust one table to match another (Simon Riggs, Pavan
       Deolasee, Álvaro Herrera, Amit Langote)
       <ulink url="&commit_baseurl;7103ebb7a">&sect;</ulink>
      </para>

      <para>
       This is similar to <command>INSERT ... ON CONFLICT</command>
       but more batch-oriented.
      </para>
     </listitem>

<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2022-01-28 [43f33dc01] Add HEADER support to COPY text format
Author: Peter Eisentraut <peter@eisentraut.org>
2022-03-30 [072132f04] Add header matching mode to COPY FROM
-->

     <listitem>
      <para>
       Add support for <literal>HEADER</literal> option in <link
       linkend="sql-copy"><command>COPY</command></link> text format
       (Rémi Lapeyre)
       <ulink url="&commit_baseurl;43f33dc01">&sect;</ulink>
       <ulink url="&commit_baseurl;072132f04">&sect;</ulink>
      </para>

      <para>
       The new option causes the column names to be output, and optionally
       verified on input.
      </para>
     </listitem>

<!--
Author: Robert Haas <rhaas@postgresql.org>
2022-03-29 [9c08aea6a] Add new block-by-block strategy for CREATE DATABASE.
-->

     <listitem>
      <para>
       Add new <acronym>WAL</acronym>-logged method for <link
       linkend="sql-createdatabase">database creation</link> (Dilip Kumar)
       <ulink url="&commit_baseurl;9c08aea6a">&sect;</ulink>
      </para>

      <para>
       This is the new default method for copying the template database,
       as it avoids the need for checkpoints during database creation.
       However, it might be slow if the template database is large, so
       the old method is still available.
      </para>
     </listitem>

<!--
Author: Robert Haas <rhaas@postgresql.org>
2022-01-24 [aa0105141] pg_upgrade: Preserve database OIDs.
-->

     <listitem>
      <para>
       Allow <link linkend="sql-createdatabase"><command>CREATE
       DATABASE</command></link> to set the database <acronym>OID</acronym>
       (Shruthi Gowda, Antonin Houska)
       <ulink url="&commit_baseurl;aa0105141">&sect;</ulink>
      </para>
     </listitem>

<!--
Author: Thomas Munro <tmunro@postgresql.org>
2022-02-12 [4eb217631] Fix DROP {DATABASE,TABLESPACE} on Windows.
-->

     <listitem>
      <para>
       Prevent <link linkend="sql-dropdatabase"><command>DROP
       DATABASE</command></link>, <link
       linkend="sql-droptablespace"><command>DROP
       TABLESPACE</command></link>, and <link
       linkend="sql-alterdatabase"><command>ALTER DATABASE SET
       TABLESPACE</command></link> from occasionally failing during
       concurrent use on Windows (Thomas Munro)
       <ulink url="&commit_baseurl;4eb217631">&sect;</ulink>
      </para>
     </listitem>

<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2021-12-08 [d6f96ed94] Allow specifying column list for foreign key ON DELETE S
-->

     <listitem>
      <para>
       Allow foreign key <link linkend="ddl-constraints-fk"><literal>ON
       DELETE SET</literal></link> actions to affect only specified columns
       (Paul Martinez)
       <ulink url="&commit_baseurl;d6f96ed94">&sect;</ulink>
      </para>

      <para>
       Previously, all of the columns in the foreign key were always
       affected.
      </para>
     </listitem>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2021-07-28 [b0483263d] Add support for SET ACCESS METHOD in ALTER TABLE
-->

     <listitem>
      <para>
       Allow <link linkend="sql-altertable"><command>ALTER
       TABLE</command></link> to modify a table's <literal>ACCESS
       METHOD</literal> (Justin Pryzby, Jeff Davis)
       <ulink url="&commit_baseurl;b0483263d">&sect;</ulink>
      </para>
     </listitem>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2021-08-10 [7b565843a] Add call to object access hook at the end of table rewri
-->

     <listitem>
      <para>
       Properly call object access hooks when <link
       linkend="sql-altertable"><command>ALTER TABLE</command></link>
       causes table rewrites (Michael Paquier)
       <ulink url="&commit_baseurl;7b565843a">&sect;</ulink>
      </para>
     </listitem>

<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2022-04-07 [344d62fb9] Unlogged sequences
-->

     <listitem>
      <para>
       Allow creation of unlogged <link
       linkend="sql-createsequence">sequences</link> (Peter Eisentraut)
       <ulink url="&commit_baseurl;344d62fb9">&sect;</ulink>
      </para>
     </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-07-22 [c2fa113dd] Close old gap in dependency checks for functions returni
-->

     <listitem>
      <para>
       Track dependencies on individual columns in the results of
       functions returning composite types (Tom Lane)
       <ulink url="&commit_baseurl;c2fa113dd">&sect;</ulink>
      </para>

      <para>
       Previously, if a view or rule contained a reference to a specific
       column within the result of a composite-returning function, that
       was not noted as a dependency; the view or rule was only considered
       to depend on the composite type as a whole.  This meant that
       dropping the individual column would be allowed, causing problems
       in later use of the view or rule.  The column-level dependency is
       now also noted, so that dropping such a column will be rejected
       unless the view is changed or dropped.
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
    <title>Data Types</title>

    <itemizedlist>

<!--
Author: Dean Rasheed <dean.a.rasheed@gmail.com>
2021-07-26 [085f931f5] Allow numeric scale to be negative or greater than preci
-->

     <listitem>
      <para>
       Allow the scale of
       a <link linkend="datatype-numeric"><type>numeric</type></link>
       value to be negative, or greater than its precision (Dean Rasheed,
       Tom Lane)
       <ulink url="&commit_baseurl;085f931f5">&sect;</ulink>
      </para>

      <para>
       This allows rounding of values to the left of the decimal point,
       e.g., <literal>'1234'::numeric(4, -2)</literal> returns 1200.
      </para>
     </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-04-02 [e39f99046] Fix overflow hazards in interval input and output conver
-->

     <listitem>
      <para>
       Improve overflow detection when casting values to <link
       linkend="datatype-datetime">interval</link> (Joe Koshakow)
       <ulink url="&commit_baseurl;e39f99046">&sect;</ulink>
      </para>
     </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-08-02 [c034b629c] Change type "char"'s I/O format for non-ASCII characters
-->

    <listitem>
     <para>
      Change the I/O format of type <type>"char"</type> for non-ASCII
      characters (Tom Lane)
      <ulink url="&commit_baseurl;c034b629c">&sect;</ulink>
     </para>
    </listitem>

<!--
Author: John Naylor <john.naylor@postgresql.org>
2021-08-26 [bab982161] Update display widths as part of updating Unicode
Author: Peter Eisentraut <peter@eisentraut.org>
2021-09-15 [f7e56f1f5] Update Unicode data to Unicode 14.0.0
-->

     <listitem>
      <para>
       Update the display width information of modern Unicode characters,
       like emojis (Jacob Champion)
       <ulink url="&commit_baseurl;bab982161">&sect;</ulink>
       <ulink url="&commit_baseurl;f7e56f1f5">&sect;</ulink>
      </para>

      <para>
       Also update from Unicode 5.0 to 14.0.0.  There is now an automated
       way to keep Postgres updated with Unicode releases.
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
    <title>Functions</title>

    <itemizedlist>

<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2022-03-30 [7ae1619bc] Add range_agg with multirange inputs
-->

     <listitem>
      <para>
       Add multirange input to <link
       linkend="functions-aggregate-table"><function>range_agg()</function></link>
       (Paul Jungwirth)
       <ulink url="&commit_baseurl;7ae1619bc">&sect;</ulink>
      </para>
     </listitem>

<!--
Author: Fujii Masao <fujii@postgresql.org>
2022-02-10 [400fc6b64] Add min() and max() aggregates for xid8.
-->

     <listitem>
      <para>
       Add <link linkend="tutorial-agg"><function>MIN()</function></link>
       and <function>MAX()</function> aggregates for the <link
       linkend="datatype-int"><type>xid8</type></link> data type (Ken Kato)
       <ulink url="&commit_baseurl;400fc6b64">&sect;</ulink>
      </para>
     </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-08-03 [642433707] Add assorted new regexp_xxx SQL functions.
-->

     <listitem>
      <para>
       Add regular expression functions for compatibility with other
       relational systems (Gilles Darold, Tom Lane)
       <ulink url="&commit_baseurl;642433707">&sect;</ulink>
      </para>

      <para>
       The new functions are <link
       linkend="functions-string-other"><function>regexp_count()</function></link>,
       <function>regexp_instr()</function>,
       <function>regexp_like()</function>, and
       <function>regexp_substr()</function>.  Some new optional arguments
       were also added to <function>regexp_replace()</function>.
      </para>
     </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-12-13 [c5c192d7b] Implement poly_distance().
-->

     <listitem>
      <para>
       Add the ability to compute the distance between <link
       linkend="datatype-polygon"><type>polygons</type></link> (Tom Lane)
       <ulink url="&commit_baseurl;c5c192d7b">&sect;</ulink>
      </para>
     </listitem>

<!--
Author: Robert Haas <rhaas@postgresql.org>
2022-03-14 [9dde82899] Support "of", "tzh", and "tzm" format codes.
-->

     <listitem>
      <para>
       Add <link
       linkend="functions-formatting-table"><function>to_char()</function></link>
       format codes <literal>of</literal>, <literal>tzh</literal>, and
       <literal>tzm</literal> (Nitin Jadhav)
       <ulink url="&commit_baseurl;9dde82899">&sect;</ulink>
      </para>

      <para>
       The upper-case equivalents of these were already supported.
      </para>
     </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-09-06 [388e71af8] Make timetz_zone() stable, and correct a bug for DYNTZ a
-->

     <listitem>
      <para>
       When applying <link
       linkend="functions-datetime-zoneconvert"><literal>AT
       TIME ZONE</literal></link> to a <type>time with time zone</type>
       value, use the transaction start time rather than wall clock time
       to determine whether DST applies (Aleksander Alekseev, Tom Lane)
       <ulink url="&commit_baseurl;388e71af8">&sect;</ulink>
      </para>

      <para>
       This allows the conversion to be considered stable rather than
       volatile, and it saves a kernel call per invocation.
      </para>
     </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-11-06 [cbe25dcff] Disallow making an empty lexeme via array_to_tsvector().
-->

     <listitem>
      <para>
       Ignore NULL array elements in <link
       linkend="textsearch-functions-table"><function>ts_delete()</function></link> and
       <function>setweight()</function> functions with array arguments
       (Jean-Christophe Arnu)
       <ulink url="&commit_baseurl;cbe25dcff">&sect;</ulink>
      </para>

      <para>
       These functions effectively ignore empty-string array elements
       (since those could never match a valid lexeme).  It seems
       consistent to let them ignore NULL elements too, instead of
       failing.
      </para>
     </listitem>

<!--
Author: David Rowley <drowley@postgresql.org>
2021-07-09 [ca2e4472b] Teach pg_size_pretty and pg_size_bytes about petabytes
-->

     <listitem>
      <para>
       Add support for petabyte units to <link
       linkend="functions-admin-dbsize"><function>pg_size_pretty()</function></link>
       and <function>pg_size_bytes()</function> (David Christensen)
       <ulink url="&commit_baseurl;ca2e4472b">&sect;</ulink>
      </para>
     </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-07-27 [024515cac] In event triggers, use "pg_temp" only for our own temp s
-->

     <listitem>
      <para>
       Change <link
       linkend="pg-event-trigger-ddl-command-end-functions"><function>pg_event_trigger_ddl_commands()</function></link>
       to output references to other sessions' temporary schemas using the
       actual schema name (Tom Lane)
       <ulink url="&commit_baseurl;024515cac">&sect;</ulink>
      </para>

      <para>
       Previously this function reported all temporary schemas as
       <literal>pg_temp</literal>, but it's misleading to use that for any
       but the current session's temporary schema.
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
    <title><link linkend="plpgsql">PL/pgSQL</link></title>

    <itemizedlist>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-04-30 [ccd10a9bf] Tighten enforcement of variable CONSTANT markings in plp
-->

     <listitem>
      <para>
       Fix enforcement of PL/pgSQL variable <literal>CONSTANT</literal>
       markings (Tom Lane)
       <ulink url="&commit_baseurl;ccd10a9bf">&sect;</ulink>
      </para>

      <para>
       Previously, a variable could be used as a <link
       linkend="plpgsql-statements-calling-procedure"><command>CALL</command></link>
       output parameter or refcursor <command>OPEN</command> variable
       despite being marked <literal>CONSTANT</literal>.
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
    <title><link linkend="libpq">libpq</link></title>

    <itemizedlist>

<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2022-04-01 [c1932e542] libpq: Allow IP address SANs in server certificates
-->

     <listitem>
      <para>
       Allow <acronym>IP</acronym> address matching against a server
       certificate's Subject Alternative Name (Jacob Champion)
       <ulink url="&commit_baseurl;c1932e542">&sect;</ulink>
      </para>
     </listitem>

<!--
Author: Daniel Gustafsson <dgustafsson@postgresql.org>
2022-03-29 [ebc8b7d44] Enable SSL library detection via PQsslAttribute()
-->

     <listitem>
      <para>
       Allow <function>PQsslAttribute()</function> to report the
       <acronym>SSL</acronym> library type without requiring a libpq
       connection (Jacob Champion)
       <ulink url="&commit_baseurl;ebc8b7d44">&sect;</ulink>
      </para>
     </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-01-18 [5987feb70] Make PQcancel use the PGconn's tcp_user_timeout and keep
-->

     <listitem>
      <para>
       Change query cancellations sent by the client to use the same
       <acronym>TCP</acronym> settings as normal client connections
       (Jelte Fennema)
       <ulink url="&commit_baseurl;5987feb70">&sect;</ulink>
      </para>

      <para>
       This allows configured <acronym>TCP</acronym> timeouts to apply
       to query cancel connections.
      </para>
     </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-02-18 [ce1e7a2f7] Don't let libpq "event" procs break the state of PGresul
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-02-18 [2e372869a] Don't let libpq PGEVT_CONNRESET callbacks break a PGconn
-->

     <listitem>
      <para>
       Prevent libpq event callback failures from forcing an error result
       (Tom Lane)
       <ulink url="&commit_baseurl;ce1e7a2f7">&sect;</ulink>
       <ulink url="&commit_baseurl;2e372869a">&sect;</ulink>
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
    <title>Client Applications</title>

    <itemizedlist>

<!--
Author: Tatsuo Ishii <ishii@postgresql.org>
2022-03-23 [4a39f87ac] Allow pgbench to retry in some cases.
-->

     <listitem>
      <para>
       Allow <link
       linkend="pgbench"><application>pgbench</application></link> to
       retry after serialization and deadlock failures (Yugo Nagata,
       Marina Polyakova)
       <ulink url="&commit_baseurl;4a39f87ac">&sect;</ulink>
      </para>
     </listitem>

    </itemizedlist>

     <sect4>
      <title><xref linkend="app-psql"/></title>

      <itemizedlist>

<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
2021-07-14 [eec57115e] In psql \copy from, send data to server in larger chunks
-->

      <listitem>
       <para>
        Improve performance
        of <application>psql</application>'s <command>\copy</command>
        command, by sending data in larger chunks (Heikki Linnakangas)
        <ulink url="&commit_baseurl;eec57115e">&sect;</ulink>
       </para>
      </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-04-07 [3e707fbb4] psql: add \dconfig command to show server's configuratio
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-04-11 [5e70d8b5d] Tweak the default behavior of psql's \dconfig.
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-04-13 [139d46ee2] Further tweak the default behavior of psql's \dconfig.
-->

      <listitem>
       <para>
        Add <command>\dconfig</command> command to report server variables
        (Mark Dilger, Tom Lane)
        <ulink url="&commit_baseurl;3e707fbb4">&sect;</ulink>
        <ulink url="&commit_baseurl;5e70d8b5d">&sect;</ulink>
        <ulink url="&commit_baseurl;139d46ee2">&sect;</ulink>
       </para>

       <para>
        This is similar to the server-side <command>SHOW</command>
        command, but it can process patterns to show multiple variables
        conveniently.
       </para>
      </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-12-20 [33d3eeadb] Add a \getenv command to psql.
-->

      <listitem>
       <para>
        Add <command>\getenv</command> command
        to assign the value of an environment variable to a
        <application>psql</application> variable (Tom Lane)
        <ulink url="&commit_baseurl;33d3eeadb">&sect;</ulink>
       </para>
      </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-01-06 [328dfbdab] Extend psql's \lo_list/\dl to be able to print large obj
-->

      <listitem>
       <para>
        Add <literal>+</literal> option to the
        <literal>\lo_list</literal> and <literal>\dl</literal> commands to
        show large-object privileges (Pavel Luzanov)
        <ulink url="&commit_baseurl;328dfbdab">&sect;</ulink>
       </para>
      </listitem>

<!--
Author: Thomas Munro <tmunro@postgresql.org>
2021-07-13 [7c09d2797] Add PSQL_WATCH_PAGER for psql's \watch command.
-->

      <listitem>
       <para>
        Add a pager option for the <command>\watch</command>
        command (Pavel Stehule, Thomas Munro)
        <ulink url="&commit_baseurl;7c09d2797">&sect;</ulink>
       </para>

       <para>
        This is only supported on Unix and is controlled by the
        <envar>PSQL_WATCH_PAGER</envar> environment variable.
       </para>
      </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-12-01 [83884682f] psql: include intra-query "- -" comments in what's sent t
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-12-01 [c2f654930] psql: treat "- -" comments between queries as separate hi
-->

      <listitem>
       <para>
        Make <application>psql</application> include intra-query double-hyphen
        comments in queries sent to the server (Tom Lane, Greg Nancarrow)
        <ulink url="&commit_baseurl;83884682f">&sect;</ulink>
        <ulink url="&commit_baseurl;c2f654930">&sect;</ulink>
       </para>

       <para>
        Previously such comments were removed from the query
        before being sent.  Double-hyphen comments that are before any
        query text are not sent, and are not recorded as separate
        <application>psql</application> history entries.
       </para>
      </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-12-01 [3d858af07] psql: initialize comment-begin setting to a useful value
-->

      <listitem>
       <para>
        Adjust <application>psql</application> so
        that <application>Readline</application>'s
        meta-<literal>#</literal> command will insert a double-hyphen
        comment marker (Tom Lane)
        <ulink url="&commit_baseurl;3d858af07">&sect;</ulink>
       </para>

       <para>
        Previously a pound marker was inserted, unless the user had taken
        the trouble to configure a non-default comment marker.
       </para>
      </listitem>

<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2022-04-04 [7844c9918] psql: Show all query results by default
-->

      <listitem>
       <para>
        Make <application>psql</application> output all results when multiple
        queries are passed to the server at once (Fabien Coelho)
        <ulink url="&commit_baseurl;7844c9918">&sect;</ulink>
       </para>

       <para>
        Previously, only the last query result was displayed.  The old
        behavior can be restored by setting
        the <literal>SHOW_ALL_RESULTS</literal> <application>psql</application>
        variable to <literal>off</literal>.
       </para>
      </listitem>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2022-06-15 [a3ff08e0b] Tweak behavior of psql - -single-transaction depending
-->

      <listitem>
       <para>
        After an error is detected
        in <option>--single-transaction</option> mode, change the
        final <command>COMMIT</command> command
        to <command>ROLLBACK</command> only
        if <varname>ON_ERROR_STOP</varname> is set (Michael Paquier)
        <ulink url="&commit_baseurl;a3ff08e0b">&sect;</ulink>
       </para>

       <para>
        Previously, detection of an error in a <option>-c</option> command
        or <option>-f</option> script file would lead to
        issuing <command>ROLLBACK</command> at the end, regardless of the
        value of <varname>ON_ERROR_STOP</varname>.
       </para>
      </listitem>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2021-08-10 [e2ce88b58] Add tab completion for DECLARE .. ASENSITIVE in psql
Author: Michael Paquier <michael@paquier.xyz>
2021-08-25 [346511313] Add tab completion for EXPLAIN .. EXECUTE in psql
Author: Michael Paquier <michael@paquier.xyz>
2021-08-30 [d3fa87657] Add more tab completion support for ALTER TABLE ADD in p
Author: Michael Paquier <michael@paquier.xyz>
2021-08-31 [f2bbadce6] Add tab completion for data types after ALTER TABLE ADD
Author: Fujii Masao <fujii@postgresql.org>
2021-09-01 [b0c066297] Improve tab-completion for CREATE PUBLICATION.
Author: Fujii Masao <fujii@postgresql.org>
2021-10-05 [0b0d277c3] psql: Improve tab-completion for LOCK TABLE.
Author: Michael Paquier <michael@paquier.xyz>
2021-11-05 [a5b336b8b] Improve psql tab completion for COMMENT
Author: Michael Paquier <michael@paquier.xyz>
2021-11-19 [0cd6d3b3c] Improve psql tab completion for transforms, domains and
Author: Michael Paquier <michael@paquier.xyz>
2021-11-29 [f44ceb46e] Improve psql tab completion for views, FDWs, sequences a
Author: Michael Paquier <michael@paquier.xyz>
2021-12-01 [9270778f4] Improve psql tab completion for various DROP commands
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-01-03 [dfe67c0e8] Tab completion: don't offer valid constraints in VALIDAT
Author: Fujii Masao <fujii@postgresql.org>
2022-01-15 [74527c3e0] Add tab-completion for CREATE FOREIGN TABLE.
Author: Peter Eisentraut <peter@eisentraut.org>
2022-01-27 [fefce9ef9] psql: Add tab completion for ALTER COLLATION / REFRESH V
Author: Alvaro Herrera <alvherre@alvh.no-ip.org>
2022-01-28 [95787e849] Tab-complete ALTER PUBLICATION ADD TABLE with list of ta
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-01-30 [02b8048ba] psql: improve tab-complete's handling of variant SQL nam
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-02-01 [020258fbd] Treat case of tab-completion keywords a bit more careful
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-02-09 [f0cd9097c] Further tweaks for psql's new tab-completion logic.
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-03-20 [7fa3db367] psql: handle tab completion of timezone names after "SET
Author: Tomas Vondra <tomas.vondra@postgresql.org>
2022-03-25 [2d2232933] Update tab-completion for CREATE PUBLICATION with sequen
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-04-13 [b5607b074] Fix case sensitivity in psql's tab completion for GUC na
-->

      <listitem>
       <para>
        Improve <application>psql</application>'s tab completion (Shinya
        Kato, Dagfinn Ilmari Mannsåker, Peter Smith, Koyu Tanigawa,
        Ken Kato, David Fetter, Haiying Tang, Peter Eisentraut, Álvaro
        Herrera, Tom Lane, Masahiko Sawada)
        <ulink url="&commit_baseurl;e2ce88b58">&sect;</ulink>
        <ulink url="&commit_baseurl;346511313">&sect;</ulink>
        <ulink url="&commit_baseurl;d3fa87657">&sect;</ulink>
        <ulink url="&commit_baseurl;f2bbadce6">&sect;</ulink>
        <ulink url="&commit_baseurl;b0c066297">&sect;</ulink>
        <ulink url="&commit_baseurl;0b0d277c3">&sect;</ulink>
        <ulink url="&commit_baseurl;a5b336b8b">&sect;</ulink>
        <ulink url="&commit_baseurl;0cd6d3b3c">&sect;</ulink>
        <ulink url="&commit_baseurl;f44ceb46e">&sect;</ulink>
        <ulink url="&commit_baseurl;9270778f4">&sect;</ulink>
        <ulink url="&commit_baseurl;dfe67c0e8">&sect;</ulink>
        <ulink url="&commit_baseurl;74527c3e0">&sect;</ulink>
        <ulink url="&commit_baseurl;fefce9ef9">&sect;</ulink>
        <ulink url="&commit_baseurl;95787e849">&sect;</ulink>
        <ulink url="&commit_baseurl;02b8048ba">&sect;</ulink>
        <ulink url="&commit_baseurl;020258fbd">&sect;</ulink>
        <ulink url="&commit_baseurl;f0cd9097c">&sect;</ulink>
        <ulink url="&commit_baseurl;7fa3db367">&sect;</ulink>
        <ulink url="&commit_baseurl;2d2232933">&sect;</ulink>
        <ulink url="&commit_baseurl;b5607b074">&sect;</ulink>
       </para>
      </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-12-16 [cf0cab868] Remove psql support for server versions preceding 9.2.
-->

      <listitem>
       <para>
        Limit support of <application>psql</application>'s backslash
        commands to servers running <productname>PostgreSQL</productname>
        9.2 or later (Tom Lane)
        <ulink url="&commit_baseurl;cf0cab868">&sect;</ulink>
       </para>

       <para>
        Remove code that was only used when running with an older server.
        Commands that do not require any version-specific adjustments
        compared to 9.2 will still work.
       </para>
      </listitem>

     </itemizedlist>

    </sect4>

    <sect4>
     <title><link linkend="app-pgdump"><application>pg_dump</application></link></title>

     <itemizedlist>

<!--
Author: Noah Misch <noah@leadboat.com>
2021-06-28 [a7a7be1f2] Dump public schema ownership and security labels.
Author: Noah Misch <noah@leadboat.com>
2021-06-28 [7ac10f692] Dump COMMENT ON SCHEMA public.
-->

      <listitem>
       <para>
        Make <application>pg_dump</application> dump
        <literal>public</literal> schema ownership changes and security
        labels (Noah Misch)
        <ulink url="&commit_baseurl;a7a7be1f2">&sect;</ulink>
        <ulink url="&commit_baseurl;7ac10f692">&sect;</ulink>
       </para>
      </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-12-06 [989596152] Avoid per-object queries in performance-critical paths i
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-12-06 [be85727a3] Use PREPARE/EXECUTE for repetitive per-object queries in
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-12-31 [d5e8930f5] pg_dump: minor performance improvements from eliminating
-->

      <listitem>
       <para>
        Improve performance of dumping databases with many objects
        (Tom Lane)
        <ulink url="&commit_baseurl;989596152">&sect;</ulink>
        <ulink url="&commit_baseurl;be85727a3">&sect;</ulink>
        <ulink url="&commit_baseurl;d5e8930f5">&sect;</ulink>
       </para>

       <para>
        This will also improve the performance of <link
        linkend="pgupgrade"><application>pg_upgrade</application></link>.
       </para>
      </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-12-06 [65aaed22a] Account for TOAST data while scheduling parallel dumps.
-->

      <listitem>
       <para>
        Improve parallel <application>pg_dump</application>'s performance
        for tables with large <acronym>TOAST</acronym> tables (Tom Lane)
        <ulink url="&commit_baseurl;65aaed22a">&sect;</ulink>
       </para>
      </listitem>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2022-01-17 [215862886] Add support for - -no-table-access-method in pg_{dump,dum
-->

      <listitem>
       <para>
        Add dump/restore option <option>--no-table-access-method</option>
        to force restore to only use the default table access method
        (Justin Pryzby)
        <ulink url="&commit_baseurl;215862886">&sect;</ulink>
       </para>
      </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-12-14 [30e7c175b] Remove pg_dump/pg_dumpall support for dumping from pre-9
-->

      <listitem>
       <para>
        Limit support of <application>pg_dump</application> and <link
        linkend="app-pg-dumpall"><application>pg_dumpall</application></link>
        to servers running <productname>PostgreSQL</productname> 9.2 or
        later (Tom Lane)
        <ulink url="&commit_baseurl;30e7c175b">&sect;</ulink>
       </para>
      </listitem>

     </itemizedlist>

    </sect4>

   </sect3>

   <sect3>
    <title>Server Applications</title>

    <itemizedlist>

<!--
Author: Robert Haas <rhaas@postgresql.org>
2022-01-20 [3500ccc39] Support base backup targets.
-->

     <listitem>
      <para>
       Add new <link
       linkend="app-pgbasebackup"><application>pg_basebackup</application></link>
       option <option>--target</option> to control the base backup location
       (Robert Haas)
       <ulink url="&commit_baseurl;3500ccc39">&sect;</ulink>
      </para>

      <para>
       The new options are <literal>server</literal> to write the
       backup locally and <literal>blackhole</literal> to discard the
       backup (for testing).
      </para>
     </listitem>

<!--
Author: Robert Haas <rhaas@postgresql.org>
2022-02-11 [751b8d23b] pg_basebackup: Allow client-side LZ4 (de)compression.
Author: Robert Haas <rhaas@postgresql.org>
2022-03-08 [7cf085f07] Add support for zstd base backup compression.
Author: Robert Haas <rhaas@postgresql.org>
2022-01-24 [0ad803291] Server-side gzip compression.
-->

     <listitem>
      <para>
       Allow <application>pg_basebackup</application> to do server-side
       gzip, LZ4, and Zstandard compression and client-side LZ4 and
       Zstandard compression of base backup files (Dipesh Pandit,
       Jeevan Ladhe)
       <ulink url="&commit_baseurl;751b8d23b">&sect;</ulink>
       <ulink url="&commit_baseurl;7cf085f07">&sect;</ulink>
       <ulink url="&commit_baseurl;0ad803291">&sect;</ulink>
      </para>

      <para>
       Client-side <literal>gzip</literal> compression was already
       supported.
      </para>
     </listitem>

<!--
Author: Robert Haas <rhaas@postgresql.org>
2022-01-28 [d45099425] Allow server-side compression to be used with -Fp.
-->

     <listitem>
      <para>
       Allow <application>pg_basebackup</application> to compress on
       the server side and decompress on the client side before storage
       (Dipesh Pandit)
       <ulink url="&commit_baseurl;d45099425">&sect;</ulink>
      </para>

      <para>
       This is accomplished by specifying compression on the server side
       and plain output format.
      </para>
     </listitem>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2022-01-21 [5c649fe15] Extend the options of pg_basebackup to control compressi
Author: Robert Haas <rhaas@postgresql.org>
2022-01-24 [0ad803291] Server-side gzip compression.
Author: Robert Haas <rhaas@postgresql.org>
2022-01-25 [e1f860f13] Tidy up a few cosmetic issues related to pg_basebackup.
-->

     <listitem>
      <para>
       Allow <application>pg_basebackup</application>'s
       <option>--compress</option> option to control the compression
       location (server or client), compression method, and compression
       options (Michael Paquier, Robert Haas)
       <ulink url="&commit_baseurl;5c649fe15">&sect;</ulink>
       <ulink url="&commit_baseurl;0ad803291">&sect;</ulink>
       <ulink url="&commit_baseurl;e1f860f13">&sect;</ulink>
      </para>
     </listitem>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2021-11-05 [babbbb595] Add support for LZ4 compression in pg_receivewal
Author: Michael Paquier <michael@paquier.xyz>
2022-04-13 [042a923ad] Rework compression options of pg_receivewal
-->

     <listitem>
      <para>
       Add the LZ4 compression method to <link
       linkend="app-pgreceivewal"><application>pg_receivewal</application></link>
       (Georgios Kokolatos)
       <ulink url="&commit_baseurl;babbbb595">&sect;</ulink>
       <ulink url="&commit_baseurl;042a923ad">&sect;</ulink>
      </para>

      <para>
       This is enabled via <literal>--compress=lz4</literal> and requires
       binaries to be built using <option>--with-lz4</option>.
      </para>
     </listitem>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2021-11-04 [d62bcc8b0] Rework compression options of pg_receivewal
-->

     <listitem>
      <para>
       Add additional capabilities to
       <application>pg_receivewal</application>'s
       <option>--compress</option> option (Georgios Kokolatos)
       <ulink url="&commit_baseurl;d62bcc8b0">&sect;</ulink>
      </para>
     </listitem>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2021-10-26 [f61e1dd2c] Allow pg_receivewal to stream from a slot's restart LSN
-->

     <listitem>
      <para>
       Improve <application>pg_receivewal</application>'s ability to
       restart at the proper <acronym>WAL</acronym> location (Ronan
       Dunklau)
       <ulink url="&commit_baseurl;f61e1dd2c">&sect;</ulink>
      </para>

      <para>
       Previously, <application>pg_receivewal</application> would start
       based on the <acronym>WAL</acronym> file stored in the local archive
       directory, or at the sending server's current <acronym>WAL</acronym>
       flush location.  With this change, if the sending server is running
       Postgres 15 or later, the local archive directory is empty, and
       a replication slot is specified, the replication slot's restart
       point will be used.
      </para>
     </listitem>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2022-04-07 [0d5c38757] Add option - -config-file to pg_rewind
-->

     <listitem>
      <para>
       Add <link
       linkend="app-pgrewind"><application>pg_rewind</application></link>
       option <option>--config-file</option> to simplify use when server
       configuration files are stored outside the data directory (Gunnar
       Bluth)
       <ulink url="&commit_baseurl;0d5c38757">&sect;</ulink>
      </para>
     </listitem>

    </itemizedlist>

    <sect4>
     <title><link linkend="pgupgrade"><application>pg_upgrade</application></link></title>

     <itemizedlist>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2022-02-06 [38bfae365] pg_upgrade: Move all the files generated internally to a
Author: Michael Paquier <michael@paquier.xyz>
2022-02-15 [a00849630] Fix thinko with subdirectories generated by pg_upgrade f
Author: Michael Paquier <michael@paquier.xyz>
2022-09-13 [f5047c129] Move any remaining files generated by pg_upgrade into an
-->

      <listitem>
       <para>
        Store <application>pg_upgrade</application>'s log and
        temporary files in a subdirectory of the new cluster called
        <filename>pg_upgrade_output.d</filename> (Justin Pryzby)
        <ulink url="&commit_baseurl;38bfae365">&sect;</ulink>
        <ulink url="&commit_baseurl;a00849630">&sect;</ulink>
        <ulink url="&commit_baseurl;f5047c129">&sect;</ulink>
       </para>

       <para>
        Previously such files were left in the current directory,
        requiring manual cleanup.  Now they are automatically removed on
        successful completion of <application>pg_upgrade</application>.
       </para>
      </listitem>

<!--
Author: Andres Freund <andres@anarazel.de>
2022-02-21 [27b02e070] pg_upgrade: Don't print progress status when output is n
-->

      <listitem>
       <para>
        Disable default status reporting during
        <application>pg_upgrade</application> operation if the output is
        not a terminal (Andres Freund)
        <ulink url="&commit_baseurl;27b02e070">&sect;</ulink>
       </para>

       <para>
        The status reporting output can be enabled for non-tty usage by
        using <option>--verbose</option>.
       </para>
      </listitem>

<!--
Author: Daniel Gustafsson <dgustafsson@postgresql.org>
2022-03-24 [26ebb0e28] List offending databases in pg_upgrade datallowconn chec
-->

      <listitem>
       <para>
        Make <application>pg_upgrade</application> report all databases
        with invalid connection settings (Jeevan Ladhe)
        <ulink url="&commit_baseurl;26ebb0e28">&sect;</ulink>
       </para>

       <para>
        Previously only the first database with an invalid connection
        setting was reported.
       </para>
      </listitem>

<!--
Author: Robert Haas <rhaas@postgresql.org>
2022-01-17 [9a974cbcb] pg_upgrade: Preserve relfilenodes and tablespace OIDs.
Author: Robert Haas <rhaas@postgresql.org>
2022-01-24 [aa0105141] pg_upgrade: Preserve database OIDs.
Author: Robert Haas <rhaas@postgresql.org>
2022-07-28 [4ab5dae94] Use TRUNCATE to preserve relfilenode for pg_largeobject
-->

      <listitem>
       <para>
        Make <application>pg_upgrade</application> preserve tablespace
        and database OIDs, as well as relation relfilenode numbers
        (Shruthi Gowda, Antonin Houska)
        <ulink url="&commit_baseurl;9a974cbcb">&sect;</ulink>
        <ulink url="&commit_baseurl;aa0105141">&sect;</ulink>
        <ulink url="&commit_baseurl;4ab5dae94">&sect;</ulink>
       </para>
      </listitem>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2021-12-18 [3d5ffccb6] Add option -N/- -no-sync to pg_upgrade
-->

      <listitem>
       <para>
        Add a <option>--no-sync</option> option to
        <application>pg_upgrade</application> (Michael Paquier)
        <ulink url="&commit_baseurl;3d5ffccb6">&sect;</ulink>
       </para>

       <para>
        This is recommended only for testing.
       </para>
      </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-12-14 [e469f0aaf] Remove pg_upgrade support for upgrading from pre-9.2 ser
-->

      <listitem>
       <para>
        Limit support of <application>pg_upgrade</application> to old
        servers running <productname>PostgreSQL</productname> 9.2 or later
        (Tom Lane)
        <ulink url="&commit_baseurl;e469f0aaf">&sect;</ulink>
       </para>
      </listitem>

     </itemizedlist>

    </sect4>

    <sect4>
     <title><link linkend="pgwaldump"><application>pg_waldump</application></link></title>

     <itemizedlist>

<!--
Author: Thomas Munro <tmunro@postgresql.org>
2022-03-24 [127aea2a6] Add additional filtering options to pg_waldump.
Author: Thomas Munro <tmunro@postgresql.org>
2022-03-25 [52b556843] Improve command line options for pg_waldump.
-->

      <listitem>
       <para>
        Allow <application>pg_waldump</application> output to be filtered by
        relation file node, block number, fork number, and full page images
        (David Christensen, Thomas Munro)
        <ulink url="&commit_baseurl;127aea2a6">&sect;</ulink>
        <ulink url="&commit_baseurl;52b556843">&sect;</ulink>
       </para>
      </listitem>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2021-12-02 [f2c52eeba] pg_waldump: Emit stats summary when interrupted by SIGIN
-->

      <listitem>
       <para>
        Make <application>pg_waldump</application> report statistics
        before an interrupted exit (Bharath Rupireddy)
        <ulink url="&commit_baseurl;f2c52eeba">&sect;</ulink>
       </para>

       <para>
        For example, issuing a control-C in a terminal running
        <command>pg_waldump --stats --follow</command> will report the
        current statistics before exiting.  This does not work on Windows.
       </para>
      </listitem>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2021-12-13 [c8b733c4c] Improve description of some WAL records with transaction
-->

      <listitem>
       <para>
        Improve descriptions of some transaction <acronym>WAL</acronym>
        records reported by <application>pg_waldump</application>
        (Masahiko Sawada, Michael Paquier)
        <ulink url="&commit_baseurl;c8b733c4c">&sect;</ulink>
       </para>
      </listitem>

<!--
Author: Heikki Linnakangas <heikki.linnakangas@iki.fi>
2021-07-01 [c8bf5098c] Allow specifying pg_waldump - -rmgr option multiple times
-->

      <listitem>
       <para>
        Allow <application>pg_waldump</application> to dump information
        about multiple resource managers (Heikki Linnakangas)
        <ulink url="&commit_baseurl;c8bf5098c">&sect;</ulink>
       </para>

       <para>
        This is enabled by specifying the <option>--rmgr</option> option
        multiple times.
       </para>
      </listitem>

     </itemizedlist>

    </sect4>

   </sect3>

   <sect3>
    <title>Documentation</title>

    <itemizedlist>

<!--
Author: Fujii Masao <fujii@postgresql.org>
2021-10-05 [f6b5d05ba] doc: Document pg_encoding_to_char() and pg_char_to_encod
-->

     <listitem>
      <para>
       Add documentation for <link
       linkend="functions-info-catalog-table"><function>pg_encoding_to_char()</function></link>
       and <function>pg_char_to_encoding()</function> (Ian Lawrence
       Barwick)
       <ulink url="&commit_baseurl;f6b5d05ba">&sect;</ulink>
      </para>
     </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-10-09 [2ae5d72f0] Doc: improve documentation for ^@ starts-with operator.
-->

     <listitem>
      <para>
       Document the <link
       linkend="functions-string-other"><literal>^@</literal></link>
       starts-with operator (Tom Lane)
       <ulink url="&commit_baseurl;2ae5d72f0">&sect;</ulink>
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
    <title>Source Code</title>

    <itemizedlist>

<!--
Author: Andres Freund <andres@anarazel.de>
2021-12-30 [93d973494] ci: Add continuous integration for github repositories v
-->

     <listitem>
      <para>
       Add support for continuous integration testing using cirrus-ci
       (Andres Freund, Thomas Munro, Melanie Plageman)
       <ulink url="&commit_baseurl;93d973494">&sect;</ulink>
      </para>
     </listitem>

<!--
Author: Robert Haas <rhaas@postgresql.org>
2022-02-18 [6c417bbcc] Add support for building with ZSTD.
-->

     <listitem>
      <para>
       Add configure option <link
       linkend="configure-options-features"><option>--with-zstd</option></link>
       to enable Zstandard builds (Jeevan Ladhe, Robert Haas, Michael
       Paquier)
       <ulink url="&commit_baseurl;6c417bbcc">&sect;</ulink>
      </para>
     </listitem>

<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2021-11-22 [d6d1dfcc9] Add ABI extra field to fmgr magic block
-->

     <listitem>
      <para>
       Add an ABI identifier field to the magic block in loadable
       libraries, allowing
       non-community <productname>PostgreSQL</productname> distributions
       to identify libraries that are not compatible with other builds
       (Peter Eisentraut)
       <ulink url="&commit_baseurl;d6d1dfcc9">&sect;</ulink>
      </para>

      <para>
       An ABI field mismatch will generate an error at load time.
      </para>
     </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-12-11 [07eee5a0d] Create a new type category for "internal use" types.
-->

     <listitem>
      <para>
       Create a new <link
       linkend="catalog-pg-type"><structfield>pg_type.typcategory</structfield></link>
       value for <type>"char"</type> (Tom Lane)
       <ulink url="&commit_baseurl;07eee5a0d">&sect;</ulink>
      </para>

      <para>
       Some other internal-use-only types have also been assigned to this
       category.
      </para>
     </listitem>

<!--
Author: Robert Haas <rhaas@postgresql.org>
2022-01-18 [cc333f323] Modify pg_basebackup to use a new COPY subprotocol for b
-->

     <listitem>
      <para>
       Add new protocol message <link
       linkend="protocol-replication-base-backup"><literal>TARGET</literal></link>
       to specify a new <command>COPY</command> method to be used for base
       backups (Robert Haas)
       <ulink url="&commit_baseurl;cc333f323">&sect;</ulink>
      </para>

      <para>
       <link
       linkend="app-pgbasebackup"><application>pg_basebackup</application></link>
       now uses this method.
      </para>
     </listitem>

<!--
Author: Robert Haas <rhaas@postgresql.org>
2022-01-24 [0ad803291] Server-side gzip compression.
Author: Robert Haas <rhaas@postgresql.org>
2022-03-23 [ffd53659c] Replace BASE_BACKUP COMPRESSION_LEVEL option with COMPRE
-->

     <listitem>
      <para>
       Add new protocol message <link
       linkend="protocol-replication-base-backup"><literal>COMPRESSION</literal></link>
       and <literal>COMPRESSION_DETAIL</literal> to specify the compression
       method and options (Robert Haas)
       <ulink url="&commit_baseurl;0ad803291">&sect;</ulink>
       <ulink url="&commit_baseurl;ffd53659c">&sect;</ulink>
      </para>
     </listitem>

<!--
Author: Robert Haas <rhaas@postgresql.org>
2022-02-10 [9cd28c2e5] Remove server support for old BASE_BACKUP command syntax
Author: Robert Haas <rhaas@postgresql.org>
2022-02-10 [0d4513b61] Remove server support for the previous base backup proto
-->

     <listitem>
      <para>
       Remove server support for old <literal>BASE_BACKUP</literal>
       command syntax and base backup protocol (Robert Haas)
       <ulink url="&commit_baseurl;9cd28c2e5">&sect;</ulink>
       <ulink url="&commit_baseurl;0d4513b61">&sect;</ulink>
      </para>
     </listitem>

<!--
Author: Robert Haas <rhaas@postgresql.org>
2022-03-15 [e4ba69f3f] Allow extensions to add new backup targets.
-->

     <listitem>
      <para>
       Add support for extensions to set custom backup targets (Robert
       Haas)
       <ulink url="&commit_baseurl;e4ba69f3f">&sect;</ulink>
      </para>
     </listitem>

<!--
Author: Jeff Davis <jdavis@postgresql.org>
2022-04-06 [5c279a6d3] Custom WAL Resource Managers.
-->

     <listitem>
      <para>
       Allow extensions to define custom <acronym>WAL</acronym>
       resource managers (Jeff Davis)
       <ulink url="&commit_baseurl;5c279a6d3">&sect;</ulink>
      </para>
     </listitem>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2022-01-31 [d10e41d42] Introduce pg_settings_get_flags() to find flags associat
-->

     <listitem>
      <para>
       Add function <link
       linkend="functions-info-catalog-table"><function>pg_settings_get_flags()</function></link>
       to get the flags of server variables (Justin Pryzby)
       <ulink url="&commit_baseurl;d10e41d42">&sect;</ulink>
      </para>
     </listitem>

<!--
Author: Robert Haas <rhaas@postgresql.org>
2022-04-08 [8ec569479] Apply PGDLLIMPORT markings broadly.
-->

     <listitem>
      <para>
       On Windows, export all the server's global variables using
       <literal>PGDLLIMPORT</literal> markers (Robert Haas)
       <ulink url="&commit_baseurl;8ec569479">&sect;</ulink>
      </para>

      <para>
       Previously, only specific variables were accessible to extensions
       on Windows.
      </para>
     </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-07-23 [3b474a2e6] Increase minimum supported GNU make version to 3.81.
-->

     <listitem>
      <para>
       Require GNU <application>make</application> version 3.81 or later
       to build <productname>PostgreSQL</productname> (Tom Lane)
       <ulink url="&commit_baseurl;3b474a2e6">&sect;</ulink>
      </para>
     </listitem>

<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2021-11-05 [db7d1a7b0] pgcrypto: Remove non-OpenSSL support
-->

     <listitem>
      <para>
       Require OpenSSL to build the <link
       linkend="pgcrypto"><application>pgcrypto</application></link>
       extension (Peter Eisentraut)
       <ulink url="&commit_baseurl;db7d1a7b0">&sect;</ulink>
      </para>
     </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-10-07 [92e6a98c3] Adjust configure to insist on Perl version &gt;= 5.8.3.
-->

     <listitem>
      <para>
       Require <application>Perl</application>
       version 5.8.3 or later (Dagfinn Ilmari Mannsåker)
       <ulink url="&commit_baseurl;92e6a98c3">&sect;</ulink>
      </para>
     </listitem>

<!--
Author: Andres Freund <andres@anarazel.de>
2022-02-16 [19252e8ec] plpython: Reject Python 2 during build configuration.
-->

     <listitem>
      <para>
       Require <application>Python</application>
       version 3.2 or later (Andres Freund)
       <ulink url="&commit_baseurl;19252e8ec">&sect;</ulink>
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
    <title>Additional Modules</title>

    <itemizedlist>

<!--
Author: Peter Eisentraut <peter@eisentraut.org>
2021-09-28 [c3b011d99] Support amcheck of sequences
-->

     <listitem>
      <para>
       Allow <link
       linkend="amcheck"><application>amcheck</application></link> to
       check sequences (Mark Dilger)
       <ulink url="&commit_baseurl;c3b011d99">&sect;</ulink>
      </para>
     </listitem>

<!--
Author: Robert Haas <rhaas@postgresql.org>
2021-11-05 [bd807be69] amcheck: Add additional TOAST pointer checks.
-->

     <listitem>
      <para>
       Improve <application>amcheck</application> sanity checks for
       <acronym>TOAST</acronym> tables (Mark Dilger)
       <ulink url="&commit_baseurl;bd807be69">&sect;</ulink>
      </para>
     </listitem>

<!--
Author: Robert Haas <rhaas@postgresql.org>
2022-03-15 [c6306db24] Add 'basebackup_to_shell' contrib module.
Author: Robert Haas <rhaas@postgresql.org>
2022-03-30 [26a0c025e] Document basebackup_to_shell.required_role.
-->

     <listitem>
      <para>
       Add new module <application><link
       linkend="basebackup-to-shell">basebackup_to_shell</link></application>
       as an example of a custom backup target (Robert Haas)
       <ulink url="&commit_baseurl;c6306db24">&sect;</ulink>
       <ulink url="&commit_baseurl;26a0c025e">&sect;</ulink>
      </para>
     </listitem>

<!--
Author: Robert Haas <rhaas@postgresql.org>
2022-02-03 [5ef1eefd7] Allow archiving via loadable modules.
-->

     <listitem>
      <para>
       Add new module <link
       linkend="basic-archive"><application>basic_archive</application></link>
       as an example of performing archiving via a library (Nathan Bossart)
       <ulink url="&commit_baseurl;5ef1eefd7">&sect;</ulink>
      </para>
     </listitem>

<!--
Author: Tomas Vondra <tomas.vondra@postgresql.org>
2021-11-06 [57e3c5160] Add bool GiST opclass to btree_gist
Author: Tomas Vondra <tomas.vondra@postgresql.org>
2021-11-08 [e2fbb8837] Fix gist_bool_ops to use gbtreekey2
Author: Tomas Vondra <tomas.vondra@postgresql.org>
2021-12-11 [4c6145b51] Add bool to btree_gist documentation
-->

     <listitem>
      <para>
       Allow <link
       linkend="btree-gist"><application>btree_gist</application></link>
       indexes on boolean columns (Emre Hasegeli)
       <ulink url="&commit_baseurl;57e3c5160">&sect;</ulink>
       <ulink url="&commit_baseurl;e2fbb8837">&sect;</ulink>
       <ulink url="&commit_baseurl;4c6145b51">&sect;</ulink>
      </para>

      <para>
       These can be used for exclusion constraints.
      </para>
     </listitem>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2021-07-12 [127404fbe] pageinspect: Improve page_header() for pages of 32kB
-->

     <listitem>
      <para>
       Fix <link
       linkend="pageinspect"><application>pageinspect</application></link>'s
       <function>page_header()</function> to handle 32-kilobyte page sizes
       (Quan Zongliang)
       <ulink url="&commit_baseurl;127404fbe">&sect;</ulink>
      </para>

      <para>
       Previously, improper negative values could be returned in certain
       cases.
      </para>
     </listitem>

<!--
Author: Michael Paquier <michael@paquier.xyz>
2022-04-08 [76cbf7edb] pg_stat_statements: Track I/O timing for temporary file
-->

     <listitem>
      <para>
       Add counters for temporary file block I/O to <link
       linkend="pgstatstatements"><application>pg_stat_statements</application></link>
       (Masahiko Sawada)
       <ulink url="&commit_baseurl;76cbf7edb">&sect;</ulink>
      </para>
     </listitem>

<!--
Author: Magnus Hagander <magnus@hagander.net>
2022-04-08 [57d6aea00] Add JIT counters to pg_stat_statements
-->

     <listitem>
      <para>
       Add <acronym>JIT</acronym> counters to pg_stat_statements (Magnus
       Hagander)
       <ulink url="&commit_baseurl;57d6aea00">&sect;</ulink>
      </para>
     </listitem>

<!--
Author: Jeff Davis <jdavis@postgresql.org>
2022-04-08 [2258e76f9] Add contrib/pg_walinspect.
-->

     <listitem>
      <para>
       Add new module <link
       linkend="pgwalinspect"><application>pg_walinspect</application></link>
       (Bharath Rupireddy)
       <ulink url="&commit_baseurl;2258e76f9">&sect;</ulink>
      </para>

      <para>
       This gives <acronym>SQL</acronym>-level output similar to <link
       linkend="pgwaldump"><application>pg_waldump</application></link>.
      </para>
     </listitem>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2022-01-12 [134d97463] Include permissive/enforcing state in sepgsql log messag
-->

     <listitem>
      <para>
       Indicate the permissive/enforcing state in <link
       linkend="sepgsql"><application>sepgsql</application></link> log
       messages (Dave Page)
       <ulink url="&commit_baseurl;134d97463">&sect;</ulink>
      </para>
     </listitem>

    </itemizedlist>

    <sect4>
     <title><link linkend="postgres-fdw"><application>postgres_fdw</application></link></title>

     <itemizedlist>

<!--
Author: Tom Lane <tgl@sss.pgh.pa.us>
2021-07-30 [5d44fff01] In postgres_fdw, allow CASE expressions to be pushed to
-->

      <listitem>
       <para>
        Allow postgres_fdw to push down <literal>CASE</literal> expressions
        (Alexander Pyhalov)
        <ulink url="&commit_baseurl;5d44fff01">&sect;</ulink>
       </para>
      </listitem>

<!--
Author: Fujii Masao <fujii@postgresql.org>
2021-09-07 [449ab6350] postgres_fdw: Allow application_name of remote connectio
Author: Fujii Masao <fujii@postgresql.org>
2021-12-24 [6e0cb3dec] postgres_fdw: Allow postgres_fdw.application_name to inc
Author: Fujii Masao <fujii@postgresql.org>
2022-02-18 [94c49d534] postgres_fdw: Make postgres_fdw.application_name support
-->

      <listitem>
       <para>
        Add server variable
        <varname>postgres_fdw.application_name</varname> to control the
        application name of postgres_fdw connections (Hayato Kuroda)
        <ulink url="&commit_baseurl;449ab6350">&sect;</ulink>
        <ulink url="&commit_baseurl;6e0cb3dec">&sect;</ulink>
        <ulink url="&commit_baseurl;94c49d534">&sect;</ulink>
       </para>

       <para>
        Previously the remote session's <link
        linkend="guc-application-name"><varname>application_name</varname></link>
        could only be set on the remote server or via a
        <application>postgres_fdw</application> connection specification.
        <varname>postgres_fdw.application_name</varname> supports some
        escape sequences for customization, making it easier to tell such
        connections apart on the remote server.
       </para>
      </listitem>

<!--
Author: Etsuro Fujita <efujita@postgresql.org>
2022-02-24 [04e706d42] postgres_fdw: Add support for parallel commit.
-->

      <listitem>
       <para>
        Allow parallel commit on <application>postgres_fdw</application>
        servers (Etsuro Fujita)
        <ulink url="&commit_baseurl;04e706d42">&sect;</ulink>
       </para>

       <para>
        This is enabled with the <literal>CREATE SERVER</literal> option
        <literal>parallel_commit</literal>.
       </para>
      </listitem>

     </itemizedlist>

    </sect4>

   </sect3>

  </sect2>

  <sect2 id="release-15-acknowledgements">
   <title>Acknowledgments</title>

   <para>
    The following individuals (in alphabetical order) have contributed
    to this release as patch authors, committers, reviewers, testers,
    or reporters of issues.
   </para>

   <simplelist>
    <member>Abhijit Menon-Sen</member>
    <member>Adam Brusselback</member>
    <member>Adam Mackler</member>
    <member>Adrian Ho</member>
    <member>Ahsan Hadi</member>
    <member>Ajin Cherian</member>
    <member>Alastair McKinley</member>
    <member>Aleksander Alekseev</member>
    <member>Ales Zeleny</member>
    <member>Alex Kingsborough</member>
    <member>Alex Kozhemyakin</member>
    <member>Alexander Korotkov</member>
    <member>Alexander Kukushkin</member>
    <member>Alexander Lakhin</member>
    <member>Alexander Nawratil</member>
    <member>Alexander Pyhalov</member>
    <member>Alexey Borzov</member>
    <member>Alexey Ermakov</member>
    <member>Aliaksandr Kalenik</member>
    <member>Álvaro Herrera</member>
    <member>Amit Kapila</member>
    <member>Amit Khandekar</member>
    <member>Amit Langote</member>
    <member>Amul Sul</member>
    <member>Anastasia Lubennikova</member>
    <member>Anders Kaseorg</member>
    <member>Andreas Dijkman</member>
    <member>Andreas Grob</member>
    <member>Andreas Seltenreich</member>
    <member>Andrei Zubkov</member>
    <member>Andres Freund</member>
    <member>Andrew Alsup</member>
    <member>Andrew Bille</member>
    <member>Andrew Dunstan</member>
    <member>Andrew Gierth</member>
    <member>Andrew Kesper</member>
    <member>Andrey Borodin</member>
    <member>Andrey Lepikhov</member>
    <member>Andrey Sokolov</member>
    <member>Andy Fan</member>
    <member>Anton Melnikov</member>
    <member>Anton Voloshin</member>
    <member>Antonin Houska</member>
    <member>Arjan van de Ven</member>
    <member>Arne Roland</member>
    <member>Arthur Zakirov</member>
    <member>Ashutosh Bapat</member>
    <member>Ashutosh Sharma</member>
    <member>Ashwin Agrawal</member>
    <member>Asif Rehman</member>
    <member>Asim Praveen</member>
    <member>Atsushi Torikoshi</member>
    <member>Aya Iwata</member>
    <member>Bauyrzhan Sakhariyev</member>
    <member>Benoit Lobréau</member>
    <member>Bernd Dorn</member>
    <member>Bertrand Drouvot</member>
    <member>Bharath Rupireddy</member>
    <member>Björn Harrtell</member>
    <member>Boris Kolpackov</member>
    <member>Boris Korzun</member>
    <member>Brad Nicholson</member>
    <member>Brar Piening</member>
    <member>Bruce Momjian</member>
    <member>Bruno da Silva</member>
    <member>Bryn Llewellyn</member>
    <member>Carl Sopchak</member>
    <member>Cary Huang</member>
    <member>Chapman Flack</member>
    <member>Chen Jiaoqian</member>
    <member>Chris Bandy</member>
    <member>Chris Lowder</member>
    <member>Christian Quest</member>
    <member>Christoph Berg</member>
    <member>Christoph Heiss</member>
    <member>Christophe Pettus</member>
    <member>Christopher Painter-Wakefield</member>
    <member>Claudio Freire</member>
    <member>Clemens Zeidler</member>
    <member>Corey Huinker</member>
    <member>Dag Lem</member>
    <member>Dagfinn Ilmari Mannsåker</member>
    <member>Dan Kubb</member>
    <member>Daniel Cherniy</member>
    <member>Daniel Gustafsson</member>
    <member>Daniel Polski</member>
    <member>Daniel Vérité</member>
    <member>Daniel Westermann</member>
    <member>Daniele Varrazzo</member>
    <member>Daniil Anisimov</member>
    <member>Danny Shemesh</member>
    <member>Darafei Praliaskouski</member>
    <member>Daria Lepikhova</member>
    <member>Dave Cramer</member>
    <member>Dave Page</member>
    <member>David Christensen</member>
    <member>David Fetter</member>
    <member>David G. Johnston</member>
    <member>David Rowley</member>
    <member>David Steele</member>
    <member>David Zhang</member>
    <member>Dean Rasheed</member>
    <member>Dian Fay</member>
    <member>Dilip Kumar</member>
    <member>Dipesh Pandit</member>
    <member>Dmitry Dolgov</member>
    <member>Dmitry Koval</member>
    <member>Dmitry Marakasov</member>
    <member>Dominique Devienne</member>
    <member>Dong Wook</member>
    <member>Drew DeVault</member>
    <member>Eduard Català</member>
    <member>Egor Chindyaskin</member>
    <member>Egor Rogov</member>
    <member>Ekaterina Kiryanova</member>
    <member>Elena Indrupskaya</member>
    <member>Elvis Pranskevichus</member>
    <member>Emmanuel Quincerot</member>
    <member>Emre Hasegeli</member>
    <member>Eric Mutta</member>
    <member>Erica Zhang</member>
    <member>Erik Rijkers</member>
    <member>Erki Eessaar</member>
    <member>Etsuro Fujita</member>
    <member>Euler Taveira</member>
    <member>Fabien Coelho</member>
    <member>Fabrice Chapuis</member>
    <member>Fabrice Fontaine</member>
    <member>Fabrízio de Royes Mello</member>
    <member>Feike Steenbergen</member>
    <member>Filip Gospodinov</member>
    <member>Florin Irion</member>
    <member>Floris Van Nee</member>
    <member>Frédéric Yhuel</member>
    <member>Gabriela Serventi</member>
    <member>Gaurab Dey</member>
    <member>Geoff Winkless</member>
    <member>Geoffrey Blake</member>
    <member>Georgios Kokolatos</member>
    <member>Gilles Darold</member>
    <member>Greg Nancarrow</member>
    <member>Greg Rychlewski</member>
    <member>Greg Sabino Mullane</member>
    <member>Greg Stark</member>
    <member>Gregory Smith</member>
    <member>Guillaume Lelarge</member>
    <member>Gunnar Bluth</member>
    <member>Gurjeet Singh</member>
    <member>Haiyang Wang</member>
    <member>Haiying Tang</member>
    <member>Hannu Krosing</member>
    <member>Hans Buschmann</member>
    <member>Hayato Kuroda</member>
    <member>Heath Lord</member>
    <member>Heikki Linnakangas</member>
    <member>Herwig Goemans</member>
    <member>Himanshu Upadhyaya</member>
    <member>Holly Roberts</member>
    <member>Hou Zhijie</member>
    <member>Hubert Lubaczewski</member>
    <member>Ian Barwick</member>
    <member>Ian Campbell</member>
    <member>Ibrar Ahmed</member>
    <member>Ildus Kurbangaliev</member>
    <member>Ilya Anfimov</member>
    <member>Itamar Gafni</member>
    <member>Jacob Champion</member>
    <member>Jaime Casanova</member>
    <member>Jakub Wartak</member>
    <member>James Coleman</member>
    <member>James Hilliard</member>
    <member>James Inform</member>
    <member>Jan Piotrowski</member>
    <member>Japin Li</member>
    <member>Jason Harvey</member>
    <member>Jason Kim</member>
    <member>Jean-Christophe Arnu</member>
    <member>Jeevan Ladhe</member>
    <member>Jeff Davis</member>
    <member>Jeff Janes</member>
    <member>Jehan-Guillaume de Rorthais</member>
    <member>Jelte Fennema</member>
    <member>Jeremy Evans</member>
    <member>Jeremy Schneider</member>
    <member>Jian Guo</member>
    <member>Jian He</member>
    <member>Jimmy Yih</member>
    <member>Jiri Fejfar</member>
    <member>Jitka Plesníková</member>
    <member>Joe Conway</member>
    <member>Joe Wildish</member>
    <member>Joel Jacobson</member>
    <member>Joey Bodoia</member>
    <member>John Naylor</member>
    <member>Jonathan Katz</member>
    <member>Josef Simanek</member>
    <member>Joseph Koshakow</member>
    <member>Josh Soref</member>
    <member>Joshua Brindle</member>
    <member>Juan José Santamaría Flecha</member>
    <member>Julien Rouhaud</member>
    <member>Julien Roze</member>
    <member>Junwang Zhao</member>
    <member>Jürgen Purtz</member>
    <member>Justin Pryzby</member>
    <member>Ken Kato</member>
    <member>Kevin Burke</member>
    <member>Kevin Grittner</member>
    <member>Kevin Humphreys</member>
    <member>Kevin McKibbin</member>
    <member>Kevin Sweet</member>
    <member>Kevin Zheng</member>
    <member>Klaudie Willis</member>
    <member>Konstantin Knizhnik</member>
    <member>Konstantina Skovola</member>
    <member>Kosei Masumura</member>
    <member>Kotaro Kawamoto</member>
    <member>Koyu Tanigawa</member>
    <member>Kuntal Ghosh</member>
    <member>Kyotaro Horiguchi</member>
    <member>Lars Kanis</member>
    <member>Lauren Fliksteen</member>
    <member>Laurent Hasson</member>
    <member>Laurenz Albe</member>
    <member>Leslie Lemaire</member>
    <member>Liam Bowen</member>
    <member>Lingjie Qiang</member>
    <member>Liu Huailing</member>
    <member>Louis Jachiet</member>
    <member>Lukas Fittl</member>
    <member>Ma Liangzhu</member>
    <member>Maciek Sakrejda</member>
    <member>Magnus Hagander</member>
    <member>Mahendra Singh Thalor</member>
    <member>Maksim Milyutin</member>
    <member>Marc Bachmann</member>
    <member>Marcin Krupowicz</member>
    <member>Marcus Gartner</member>
    <member>Marek Szuba</member>
    <member>Marina Polyakova</member>
    <member>Mario Emmenlauer</member>
    <member>Mark Dilger</member>
    <member>Mark Murawski</member>
    <member>Mark Wong</member>
    <member>Markus Wanner</member>
    <member>Markus Winand</member>
    <member>Martijn van Oosterhout</member>
    <member>Martin Jurca</member>
    <member>Martin Kalcher</member>
    <member>Martín Marqués</member>
    <member>Masahiko Sawada</member>
    <member>Masahiro Ikeda</member>
    <member>Masao Fujii</member>
    <member>Masaya Kawamoto</member>
    <member>Masayuki Hirose</member>
    <member>Matthias van de Meent</member>
    <member>Matthijs van der Vleuten</member>
    <member>Maxim Orlov</member>
    <member>Maxim Yablokov</member>
    <member>Melanie Plageman</member>
    <member>Michael Banck</member>
    <member>Michael Harris</member>
    <member>Michael J. Sullivan</member>
    <member>Michael Meskes</member>
    <member>Michael Mühlbeyer</member>
    <member>Michael Paquier</member>
    <member>Michael Powers</member>
    <member>Mike Fiedler</member>
    <member>Mike Oh</member>
    <member>Mikhail Kulagin</member>
    <member>Miles Delahunty</member>
    <member>Naoki Okano</member>
    <member>Nathan Bossart</member>
    <member>Nathan Long</member>
    <member>Nazir Bilal Yavuz</member>
    <member>Neha Sharma</member>
    <member>Neil Chen</member>
    <member>Nicola Contu</member>
    <member>Nicolas Lutic</member>
    <member>Nikhil Benesch</member>
    <member>Nikhil Shetty</member>
    <member>Nikhil Sontakke</member>
    <member>Nikita Glukhov</member>
    <member>Nikolai Berkoff</member>
    <member>Nikolay Samokhvalov</member>
    <member>Nikolay Shaplov</member>
    <member>Nitin Jadhav</member>
    <member>Noah Misch</member>
    <member>Noboru Saito</member>
    <member>Noriyoshi Shinoda</member>
    <member>Olaf Bohlen</member>
    <member>Olly Betts</member>
    <member>Onder Kalaci</member>
    <member>Oskar Stenberg</member>
    <member>Otto Kekalainen</member>
    <member>Paul Guo</member>
    <member>Paul Jungwirth</member>
    <member>Paul Martinez</member>
    <member>Pavan Deolasee</member>
    <member>Pavel Borisov</member>
    <member>Pavel Luzanov</member>
    <member>Pavel Stehule</member>
    <member>Peter Eisentraut</member>
    <member>Peter Geoghegan</member>
    <member>Peter Slavov</member>
    <member>Peter Smith</member>
    <member>Petr Jelínek</member>
    <member>Phil Florent</member>
    <member>Phil Krylov</member>
    <member>Pierre-Aurélien Georges</member>
    <member>Prabhat Sahu</member>
    <member>Quan Zongliang</member>
    <member>Rachel Heaton</member>
    <member>Rahila Syed</member>
    <member>Rajakavitha Kodhandapani</member>
    <member>Rajkumar Raghuwanshi</member>
    <member>Ranier Vilela</member>
    <member>Rei Kamigishi</member>
    <member>Reid Thompson</member>
    <member>Rémi Lapeyre</member>
    <member>Renan Soares Lopes</member>
    <member>Richard Guo</member>
    <member>Richard Wesley</member>
    <member>RKN Sai Krishna</member>
    <member>Robert Haas</member>
    <member>Robert Treat</member>
    <member>Roberto Mello</member>
    <member>Robins Tharakan</member>
    <member>Roger Mason</member>
    <member>Roman Zharkov</member>
    <member>Ronan Dunklau</member>
    <member>Rui Zhao</member>
    <member>Ryan Kelly</member>
    <member>Ryo Matsumura</member>
    <member>Ryohei Takahashi</member>
    <member>Sadhuprasad Patro</member>
    <member>Sait Talha Nisanci</member>
    <member>Sami Imseih</member>
    <member>Sandeep Thakkar</member>
    <member>Sebastian Kemper</member>
    <member>Sehrope Sarkuni</member>
    <member>Sergei Kornilov</member>
    <member>Sergei Shoulbakov</member>
    <member>Sergey Shinderuk</member>
    <member>Shay Rojansky</member>
    <member>Shenhao Wang</member>
    <member>Shi Yu</member>
    <member>Shinya Kato</member>
    <member>Shruthi Gowda</member>
    <member>Simon Perepelitsa</member>
    <member>Simon Riggs</member>
    <member>Sirisha Chamarthi</member>
    <member>Soumyadeep Chakraborty</member>
    <member>Stan Hu</member>
    <member>Stas Kelvich</member>
    <member>Stefen Hillman</member>
    <member>Stephen Frost</member>
    <member>Steve Chavez</member>
    <member>Sumanta Mukherjee</member>
    <member>Suraj Khamkar</member>
    <member>Suraj Kharage</member>
    <member>Sven Klemm</member>
    <member>Takamichi Osumi</member>
    <member>Takayuki Tsunakawa</member>
    <member>Takeshi Ideriha</member>
    <member>Tatsuhiro Nakamori</member>
    <member>Tatsuhito Kasahara</member>
    <member>Tatsuo Ishii</member>
    <member>Tatsuro Yamada</member>
    <member>Teja Mupparti</member>
    <member>Teodor Sigaev</member>
    <member>Thibaud Walkowiak</member>
    <member>Thom Brown</member>
    <member>Thomas McKay</member>
    <member>Thomas Munro</member>
    <member>Tim McNamara</member>
    <member>Timo Stolz</member>
    <member>Timur Khanjanov</member>
    <member>Tom Lane</member>
    <member>Tomas Barton</member>
    <member>Tomas Vondra</member>
    <member>Tony Reix</member>
    <member>Troy Frericks</member>
    <member>Tushar Ahuja</member>
    <member>Victor Wagner</member>
    <member>Victor Yegorov</member>
    <member>Vignesh C</member>
    <member>Vik Fearing</member>
    <member>Vincas Dargis</member>
    <member>Vitaly Burovoy</member>
    <member>Vitaly Voronov</member>
    <member>Vladimir Sitnikov</member>
    <member>Wang Ke</member>
    <member>Wei Sun</member>
    <member>Wei Wang</member>
    <member>Whale Song</member>
    <member>Will Mortensen</member>
    <member>Wolfgang Walther</member>
    <member>Yanliang Lei</member>
    <member>Yaoguang Chen</member>
    <member>Yogendra Suralkar</member>
    <member>YoungHwan Joo</member>
    <member>Yugo Nagata</member>
    <member>Yukun Wang</member>
    <member>Yura Sokolov</member>
    <member>Yusuke Egashira</member>
    <member>Yuzuko Hosoya</member>
    <member>Zhang Mingli</member>
    <member>Zhang Wenjie</member>
    <member>Zhihong Yu</member>
    <member>Zhiyong Wu</member>
   </simplelist>
  </sect2>

 </sect1>
