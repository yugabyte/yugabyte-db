<!--
doc/src/sgml/ref/alter_large_object.sgml
PostgreSQL documentation
-->

<refentry id="sql-alterlargeobject">
 <indexterm zone="sql-alterlargeobject">
  <primary>ALTER LARGE OBJECT</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>ALTER LARGE OBJECT</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>ALTER LARGE OBJECT</refname>
  <refpurpose>change the definition of a large object</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis>
ALTER LARGE OBJECT <replaceable class="parameter">large_object_oid</replaceable> OWNER TO { <replaceable>new_owner</replaceable> | CURRENT_ROLE | CURRENT_USER | SESSION_USER }
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>

  <para>
   <command>ALTER LARGE OBJECT</command> changes the definition of a
   large object.
  </para>

  <para>
   You must own the large object to use <command>ALTER LARGE OBJECT</command>.
   To alter the owner, you must also be a direct or indirect member of the new
   owning role.  (However, a superuser can alter any large object anyway.)
   Currently, the only functionality is to assign a new owner, so both
   restrictions always apply.
  </para>
 </refsect1>

 <refsect1>
  <title>Parameters</title>

  <variablelist>
   <varlistentry>
    <term><replaceable>large_object_oid</replaceable></term>
    <listitem>
     <para>
      OID of the large object to be altered
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable>new_owner</replaceable></term>
    <listitem>
     <para>
      The new owner of the large object
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
  <title>Compatibility</title>

  <para>
   There is no <command>ALTER LARGE OBJECT</command> statement in the SQL
   standard.
  </para>
 </refsect1>

 <refsect1>
  <title>See Also</title>

  <simplelist type="inline">
   <member><xref linkend="largeobjects"/></member>
  </simplelist>
 </refsect1>

</refentry>
