SET search_path TO documentdb_api,documentdb_core;
SET documentdb.next_collection_id TO 1000;
SET documentdb.next_collection_index_id TO 1000;
-- insert int32
SELECT documentdb_api.insert_one('db','bsontypetests','{"_id":"1", "value": { "$numberInt" : "11" }, "valueMax": { "$numberInt" : "2147483647" }, "valueMin": { "$numberInt" : "-2147483648" }}', NULL);
NOTICE:  creating collection
                              insert_one                              
----------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

-- insert int64
SELECT documentdb_api.insert_one('db','bsontypetests','{"_id":"2", "value":{"$numberLong" : "134311"}, "valueMax": { "$numberLong" : "9223372036854775807" }, "valueMin": { "$numberLong" : "-9223372036854775808" }}', NULL);
                              insert_one                              
----------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

-- insert double
SELECT documentdb_api.insert_one('db','bsontypetests','{"_id":"3", "value":{"$numberDouble" : "0"}, "valueMax": { "$numberDouble" : "1.7976931348623157E+308" }, "valueMin": { "$numberDouble" : "-1.7976931348623157E+308" }, "valueEpsilon": { "$numberDouble": "4.94065645841247E-324"}, "valueinfinity": {"$numberDouble":"Infinity"}}', NULL);
                              insert_one                              
----------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

-- insert string
SELECT documentdb_api.insert_one('db','bsontypetests','{"_id":"4", "value": "A quick brown fox jumps over the lazy dog."}', NULL);
                              insert_one                              
----------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

-- insert binary
SELECT documentdb_api.insert_one('db','bsontypetests','{"_id":"5", "value": {"$binary": { "base64": "U29tZVRleHRUb0VuY29kZQ==", "subType": "02"}}}', NULL);
                              insert_one                              
----------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

-- minKey/maxKey
SELECT documentdb_api.insert_one('db','bsontypetests','{"_id":"6", "valueMin": { "$minKey": 1 }, "valueMax": { "$maxKey": 1 }}', NULL);
                              insert_one                              
----------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

-- oid, date, time
SELECT documentdb_api.insert_one('db','bsontypetests','{"_id":"7", "tsField": {"$timestamp":{"t":1565545664,"i":1}}, "dateBefore1970": {"$date":{"$numberLong":"-1577923200000"}}, "dateField": {"$date":{"$numberLong":"1565546054692"}}, "oidField": {"$oid":"5d505646cf6d4fe581014ab2"}}', NULL);
                              insert_one                              
----------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

-- array & nested object
SELECT documentdb_api.insert_one('db','bsontypetests','{"_id":"8", "arrayOfObject": [ { "ola": "ola"}, { "tudo bem?": "tudo bem!"}, { "o que tu fizeste essa semana?" : "nada" } ]}', NULL);
                              insert_one                              
----------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

-- fetch all rows
SELECT shard_key_value, object_id, document FROM documentdb_data.documents_1001 ORDER BY 1,2,3;
 shard_key_value |  object_id   |                                                                                                                                                      document                                                                                                                                                      
-----------------+--------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
            1001 | { "" : "1" } | { "_id" : "1", "value" : { "$numberInt" : "11" }, "valueMax" : { "$numberInt" : "2147483647" }, "valueMin" : { "$numberInt" : "-2147483648" } }
            1001 | { "" : "2" } | { "_id" : "2", "value" : { "$numberLong" : "134311" }, "valueMax" : { "$numberLong" : "9223372036854775807" }, "valueMin" : { "$numberLong" : "-9223372036854775808" } }
            1001 | { "" : "3" } | { "_id" : "3", "value" : { "$numberDouble" : "0.0" }, "valueMax" : { "$numberDouble" : "1.7976931348623157081e+308" }, "valueMin" : { "$numberDouble" : "-1.7976931348623157081e+308" }, "valueEpsilon" : { "$numberDouble" : "4.9406564584124654418e-324" }, "valueinfinity" : { "$numberDouble" : "Infinity" } }
            1001 | { "" : "4" } | { "_id" : "4", "value" : "A quick brown fox jumps over the lazy dog." }
            1001 | { "" : "5" } | { "_id" : "5", "value" : { "$binary" : { "base64" : "U29tZVRleHRUb0VuY29kZQ==", "subType" : "02" } } }
            1001 | { "" : "6" } | { "_id" : "6", "valueMin" : { "$minKey" : 1 }, "valueMax" : { "$maxKey" : 1 } }
            1001 | { "" : "7" } | { "_id" : "7", "tsField" : { "$timestamp" : { "t" : 1565545664, "i" : 1 } }, "dateBefore1970" : { "$date" : { "$numberLong" : "-1577923200000" } }, "dateField" : { "$date" : { "$numberLong" : "1565546054692" } }, "oidField" : { "$oid" : "5d505646cf6d4fe581014ab2" } }
            1001 | { "" : "8" } | { "_id" : "8", "arrayOfObject" : [ { "ola" : "ola" }, { "tudo bem?" : "tudo bem!" }, { "o que tu fizeste essa semana?" : "nada" } ] }
(8 rows)

-- project two fields out.
SELECT document->'_id', document->'value' FROM documentdb_data.documents_1001 ORDER BY object_id;
   ?column?   |                                       ?column?                                       
--------------+--------------------------------------------------------------------------------------
 { "" : "1" } | { "" : { "$numberInt" : "11" } }
 { "" : "2" } | { "" : { "$numberLong" : "134311" } }
 { "" : "3" } | { "" : { "$numberDouble" : "0.0" } }
 { "" : "4" } | { "" : "A quick brown fox jumps over the lazy dog." }
 { "" : "5" } | { "" : { "$binary" : { "base64" : "U29tZVRleHRUb0VuY29kZQ==", "subType" : "02" } } }
 { "" : "6" } | 
 { "" : "7" } | 
 { "" : "8" } | 
(8 rows)

-- insert document with $ or . in the field path
SELECT documentdb_api.insert_one('db', 'bsontypetests', '{ "_id": 9, "$field": 1}');
                              insert_one                              
----------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'bsontypetests', '{ "_id": 10, "field": { "$subField": 1 } }');
                              insert_one                              
----------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'bsontypetests', '{ "_id": 11, "field": [ { "$subField": 1 } ] }');
                              insert_one                              
----------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'bsontypetests', '{ "_id": 12, ".field": 1}');
                              insert_one                              
----------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'bsontypetests', '{ "_id": 13, "fie.ld": 1}');
                              insert_one                              
----------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'bsontypetests', '{ "_id": 14, "field": { ".subField": 1 } }');
                              insert_one                              
----------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'bsontypetests', '{ "_id": 15, "field": { "sub.Field": 1 } }');
                              insert_one                              
----------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'bsontypetests', '{ "_id": 16, "field": [ { "sub.Field": 1 } ] }');
                              insert_one                              
----------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

/* Test to validate that _id field cannot have regex as it's value */
select documentdb_api.insert_one('db', 'bsontypetests', '{"_id": {"$regex": "^A", "$options": ""}}');
                                                                                                          insert_one                                                                                                          
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 { "n" : { "$numberInt" : "0" }, "ok" : { "$numberDouble" : "1.0" }, "writeErrors" : [ { "index" : { "$numberInt" : "0" }, "code" : { "$numberInt" : "16777245" }, "errmsg" : "The '_id' value cannot be of type regex" } ] }
(1 row)

/* Test _id cannot have nested paths with $ */
SELECT documentdb_api.insert_one('db', 'bsontypetests', '{ "_id": { "a": 2, "$c": 3 } }');
                                                                                                                             insert_one                                                                                                                             
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 { "n" : { "$numberInt" : "0" }, "ok" : { "$numberDouble" : "1.0" }, "writeErrors" : [ { "index" : { "$numberInt" : "0" }, "code" : { "$numberInt" : "385875997" }, "errmsg" : "_id fields may not contain '$'-prefixed fields: $c is not valid for storage." } ] }
(1 row)

/* Test to validate that _id field cannot have array as it's value */
select documentdb_api.insert_one('db', 'bsontypetests', '{"_id": [1]}');
                                                                                                          insert_one                                                                                                          
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 { "n" : { "$numberInt" : "0" }, "ok" : { "$numberDouble" : "1.0" }, "writeErrors" : [ { "index" : { "$numberInt" : "0" }, "code" : { "$numberInt" : "16777245" }, "errmsg" : "The '_id' value cannot be of type array" } ] }
(1 row)

-- assert object_id matches the '_id' from the content - should be numRows.
SELECT COUNT(*) FROM documentdb_data.documents_1001 where object_id::bson = bson_get_value(document, '_id');
 count 
-------
    16
(1 row)

