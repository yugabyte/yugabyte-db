NOTICE:  identifier "pg_regress/bson_aggregation_pipeline_tests_facet_group_explain_pg15" will be truncated to "pg_regress/bson_aggregation_pipeline_tests_facet_group_explain_"
SET search_path TO documentdb_api,documentdb_api_catalog,documentdb_core;
SET documentdb.next_collection_id TO 6700;
SET documentdb.next_collection_index_id TO 6700;
\i sql/bson_aggregation_pipeline_tests_facet_group_explain_core.sql
SET search_path TO documentdb_api,documentdb_api_catalog,documentdb_core;
SELECT documentdb_api.insert_one('db','agg_facet_group_exp','{ "_id": 1, "a": { "b": 1, "c": 1} }', NULL);
psql:sql/bson_aggregation_pipeline_tests_facet_group_explain_core.sql:3: NOTICE:  creating collection
                              insert_one                              
----------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','agg_facet_group_exp','{ "_id": 2, "a": { "b": 1, "c": 2} }', NULL);
                              insert_one                              
----------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','agg_facet_group_exp','{ "_id": 3, "a": { "b": 1, "c": 3} }', NULL);
                              insert_one                              
----------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','agg_facet_group_exp','{ "_id": 4, "a": { "b": 2, "c": 1} }', NULL);
                              insert_one                              
----------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','agg_facet_group_exp','{ "_id": 5, "a": { "b": 2, "c": 2} }', NULL);
                              insert_one                              
----------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','agg_facet_group_exp','{ "_id": 6, "a": { "b": 2, "c": 3} }', NULL);
                              insert_one                              
----------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','agg_facet_group_exp','{ "_id": 7, "a": { "b": 3, "c": 1} }', NULL);
                              insert_one                              
----------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','agg_facet_group_exp','{ "_id": 8, "a": { "b": 3, "c": 2} }', NULL);
                              insert_one                              
----------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','agg_facet_group_exp','{ "_id": 9, "a": { "b": 3, "c": 3} }', NULL);
                              insert_one                              
----------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

-- test non projection for const expressions
EXPLAIN (COSTS OFF, VERBOSE ON) SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "agg_facet_group_exp", "pipeline": [ { "$group": { "_id": "1", "c": { "$count": 1 }}}]}');
                                                    QUERY PLAN                                                    
------------------------------------------------------------------------------------------------------------------
 Subquery Scan on agg_stage_0
   Output: bson_repath_and_build(agg_stage_0.c1, agg_stage_0.c2, agg_stage_0.c3, agg_stage_0.c4)
   ->  GroupAggregate
         Output: '_id'::text, ('{ "" : "1" }'::bson), 'c'::text, bsonsum('{ "" : { "$numberInt" : "1" } }'::bson)
         Group Key: '{ "" : "1" }'::bson
         ->  Bitmap Heap Scan on documentdb_data.documents_6700 collection
               Output: '{ "" : "1" }'::bson
               Recheck Cond: (collection.shard_key_value = '6700'::bigint)
               ->  Bitmap Index Scan on _id_
                     Index Cond: (collection.shard_key_value = '6700'::bigint)
(10 rows)

EXPLAIN (COSTS OFF, VERBOSE ON) SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "agg_facet_group_exp", "pipeline": [ { "$group": { "_id": 1, "c": { "$sum": 10 }}}]}');
                                                              QUERY PLAN                                                              
--------------------------------------------------------------------------------------------------------------------------------------
 Subquery Scan on agg_stage_0
   Output: bson_repath_and_build(agg_stage_0.c1, agg_stage_0.c2, agg_stage_0.c3, agg_stage_0.c4)
   ->  GroupAggregate
         Output: '_id'::text, ('{ "" : { "$numberInt" : "1" } }'::bson), 'c'::text, bsonsum('{ "" : { "$numberInt" : "10" } }'::bson)
         Group Key: '{ "" : { "$numberInt" : "1" } }'::bson
         ->  Bitmap Heap Scan on documentdb_data.documents_6700 collection
               Output: '{ "" : { "$numberInt" : "1" } }'::bson
               Recheck Cond: (collection.shard_key_value = '6700'::bigint)
               ->  Bitmap Index Scan on _id_
                     Index Cond: (collection.shard_key_value = '6700'::bigint)
(10 rows)

EXPLAIN (COSTS OFF, VERBOSE ON) SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "agg_facet_group_exp", "pipeline": [ { "$group": { "_id": 1, "c": { "$max": 10 }}}]}');
                                                              QUERY PLAN                                                              
--------------------------------------------------------------------------------------------------------------------------------------
 Subquery Scan on agg_stage_0
   Output: bson_repath_and_build(agg_stage_0.c1, agg_stage_0.c2, agg_stage_0.c3, agg_stage_0.c4)
   ->  GroupAggregate
         Output: '_id'::text, ('{ "" : { "$numberInt" : "1" } }'::bson), 'c'::text, bsonmax('{ "" : { "$numberInt" : "10" } }'::bson)
         Group Key: '{ "" : { "$numberInt" : "1" } }'::bson
         ->  Bitmap Heap Scan on documentdb_data.documents_6700 collection
               Output: '{ "" : { "$numberInt" : "1" } }'::bson
               Recheck Cond: (collection.shard_key_value = '6700'::bigint)
               ->  Bitmap Index Scan on _id_
                     Index Cond: (collection.shard_key_value = '6700'::bigint)
(10 rows)

-- test where only some are non-const
EXPLAIN (COSTS OFF, VERBOSE ON) SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "agg_facet_group_exp", "pipeline": [ { "$group": { "_id": 1, "c": { "$max": "$a" }}}]}');
                                                                                                                            QUERY PLAN                                                                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Subquery Scan on agg_stage_0
   Output: bson_repath_and_build(agg_stage_0.c1, agg_stage_0.c2, agg_stage_0.c3, agg_stage_0.c4)
   ->  GroupAggregate
         Output: '_id'::text, ('{ "" : { "$numberInt" : "1" } }'::bson), 'c'::text, bsonmax(documentdb_api_internal.bson_expression_get(collection.document, '{ "" : "$a" }'::bson, true, '{ "now" : NOW_SYS_VARIABLE }'::bson))
         Group Key: '{ "" : { "$numberInt" : "1" } }'::bson
         ->  Bitmap Heap Scan on documentdb_data.documents_6700 collection
               Output: '{ "" : { "$numberInt" : "1" } }'::bson, collection.document
               Recheck Cond: (collection.shard_key_value = '6700'::bigint)
               ->  Bitmap Index Scan on _id_
                     Index Cond: (collection.shard_key_value = '6700'::bigint)
(10 rows)

EXPLAIN (COSTS OFF, VERBOSE ON) SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "agg_facet_group_exp", "pipeline": [ { "$group": { "_id": "$a", "c": { "$count": 1 }}}]}');
                                                                                                                            QUERY PLAN                                                                                                                            
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Subquery Scan on agg_stage_0
   Output: bson_repath_and_build(agg_stage_0.c1, agg_stage_0.c2, agg_stage_0.c3, agg_stage_0.c4)
   ->  GroupAggregate
         Output: '_id'::text, (documentdb_api_internal.bson_expression_get(collection.document, '{ "" : "$a" }'::bson, true, '{ "now" : NOW_SYS_VARIABLE }'::bson)), 'c'::text, bsonsum('{ "" : { "$numberInt" : "1" } }'::bson)
         Group Key: (documentdb_api_internal.bson_expression_get(collection.document, '{ "" : "$a" }'::bson, true, '{ "now" : NOW_SYS_VARIABLE }'::bson))
         ->  Sort
               Output: (documentdb_api_internal.bson_expression_get(collection.document, '{ "" : "$a" }'::bson, true, '{ "now" : NOW_SYS_VARIABLE }'::bson))
               Sort Key: (documentdb_api_internal.bson_expression_get(collection.document, '{ "" : "$a" }'::bson, true, '{ "now" : NOW_SYS_VARIABLE }'::bson))
               ->  Bitmap Heap Scan on documentdb_data.documents_6700 collection
                     Output: documentdb_api_internal.bson_expression_get(collection.document, '{ "" : "$a" }'::bson, true, '{ "now" : NOW_SYS_VARIABLE }'::bson)
                     Recheck Cond: (collection.shard_key_value = '6700'::bigint)
                     ->  Bitmap Index Scan on _id_
                           Index Cond: (collection.shard_key_value = '6700'::bigint)
(13 rows)

-- both are non const
EXPLAIN (COSTS OFF, VERBOSE ON) SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "agg_facet_group_exp", "pipeline": [ { "$group": { "_id": "$a", "c": { "$max": "$b" }}}]}');
                                                                                                                                                                                          QUERY PLAN                                                                                                                                                                                           
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Subquery Scan on agg_stage_0
   Output: bson_repath_and_build(agg_stage_0.c1, agg_stage_0.c2, agg_stage_0.c3, agg_stage_0.c4)
   ->  GroupAggregate
         Output: '_id'::text, (documentdb_api_internal.bson_expression_get(collection.document, '{ "" : "$a" }'::bson, true, '{ "now" : NOW_SYS_VARIABLE }'::bson)), 'c'::text, bsonmax(documentdb_api_internal.bson_expression_get(collection.document, '{ "" : "$b" }'::bson, true, '{ "now" : NOW_SYS_VARIABLE }'::bson))
         Group Key: (documentdb_api_internal.bson_expression_get(collection.document, '{ "" : "$a" }'::bson, true, '{ "now" : NOW_SYS_VARIABLE }'::bson))
         ->  Sort
               Output: (documentdb_api_internal.bson_expression_get(collection.document, '{ "" : "$a" }'::bson, true, '{ "now" : NOW_SYS_VARIABLE }'::bson)), collection.document
               Sort Key: (documentdb_api_internal.bson_expression_get(collection.document, '{ "" : "$a" }'::bson, true, '{ "now" : NOW_SYS_VARIABLE }'::bson))
               ->  Bitmap Heap Scan on documentdb_data.documents_6700 collection
                     Output: documentdb_api_internal.bson_expression_get(collection.document, '{ "" : "$a" }'::bson, true, '{ "now" : NOW_SYS_VARIABLE }'::bson), collection.document
                     Recheck Cond: (collection.shard_key_value = '6700'::bigint)
                     ->  Bitmap Index Scan on _id_
                           Index Cond: (collection.shard_key_value = '6700'::bigint)
(13 rows)

