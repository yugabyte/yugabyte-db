CREATE SCHEMA regex5;
SET search_path TO documentdb_core,documentdb_api,documentdb_api_catalog,documentdb_api_internal,public,regex5;
SET citus.next_shard_id TO 1010000;
SET documentdb.next_collection_id TO 101000;
SET documentdb.next_collection_index_id TO 101000;
SELECT insert_one('db','regex5', '{"x": "ayc"}');
NOTICE:  creating collection
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT insert_one('db','regex5', '{"x": ["abc", "xyz1"]}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT insert_one('db','regex5', '{"x": ["acd", "xyz23"]}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT insert_one('db','regex5', '{"F1" : "F1_value",  "x": ["first regular expression", "second expression", "third value for x"]}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT insert_one('db','regex5', '{"F1" : "F1_value2"}');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

-- DROP PRIMARY KEY
SELECT documentdb_distributed_test_helpers.drop_primary_key('db', 'regex5');
 drop_primary_key 
---------------------------------------------------------------------
 
(1 row)

\set prevEcho :ECHO
\set ECHO none
--
-- FORCING INDEX PATH
--
BEGIN;
set local enable_seqscan TO OFF;
set local documentdb.forceRumIndexScantoBitmapHeapScan TO OFF;
-- When x is non-array
EXPLAIN (COSTS OFF) SELECT document FROM collection('db', 'regex5') WHERE document @@ '{"x": {"$in": [{"$regex" : ".*Yc", "$options": "i"}]}}';
                                                                                QUERY PLAN                                                                                
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Node: host=localhost port=58070 dbname=regression
         ->  Index Scan using index_wc on documents_101000_1010007 collection
               Index Cond: (document OPERATOR(documentdb_api_catalog.@*=) '{ "x" : [ { "$regularExpression" : { "pattern" : ".*Yc", "options" : "i" } } ] }'::documentdb_core.bson)
(7 rows)

-- When x's value is array and regex matches one of the array elements, specifically the first element (3rd record).
EXPLAIN (COSTS OFF) SELECT document FROM collection('db', 'regex5') WHERE document @@ '{"x": {"$in": [{"$regex" : "^.*cd", "$options": ""}]}}';
                                                                                QUERY PLAN                                                                                
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Node: host=localhost port=58070 dbname=regression
         ->  Index Scan using index_wc on documents_101000_1010007 collection
               Index Cond: (document OPERATOR(documentdb_api_catalog.@*=) '{ "x" : [ { "$regularExpression" : { "pattern" : "^.*cd", "options" : "" } } ] }'::documentdb_core.bson)
(7 rows)

-- When x'z value is array and regex matches second element of 2nd record and 3rd element in the 4th record.
EXPLAIN (COSTS OFF) SELECT document FROM collection('db', 'regex5') WHERE document @@ '{"x": {"$in": [{"$regex" : "x.+1", "$options": ""}, {"$regex" : "value .+ x", "$options": ""}]}}';
                                                                                                                    QUERY PLAN                                                                                                                    
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Node: host=localhost port=58070 dbname=regression
         ->  Index Scan using index_wc on documents_101000_1010007 collection
               Index Cond: (document OPERATOR(documentdb_api_catalog.@*=) '{ "x" : [ { "$regularExpression" : { "pattern" : "x.+1", "options" : "" } }, { "$regularExpression" : { "pattern" : "value .+ x", "options" : "" } } ] }'::documentdb_core.bson)
(7 rows)

-- Without any regex
EXPLAIN (COSTS OFF) SELECT document FROM collection('db', 'regex5') WHERE document @@ '{"x": {"$in": ["acd", "first regular expression"]}}';
                                                               QUERY PLAN                                                                
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Node: host=localhost port=58070 dbname=regression
         ->  Index Scan using index_wc on documents_101000_1010007 collection
               Index Cond: (document OPERATOR(documentdb_api_catalog.@*=) '{ "x" : [ "acd", "first regular expression" ] }'::documentdb_core.bson)
(7 rows)

-- Mix of Regex and text
EXPLAIN (COSTS OFF) SELECT document FROM collection('db', 'regex5') WHERE document @@ '{"x": {"$in": [  "second expression", {"$regex" : "xy.1", "$options": ""}  ]  }}';
                                                                                          QUERY PLAN                                                                                          
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Node: host=localhost port=58070 dbname=regression
         ->  Index Scan using index_wc on documents_101000_1010007 collection
               Index Cond: (document OPERATOR(documentdb_api_catalog.@*=) '{ "x" : [ "second expression", { "$regularExpression" : { "pattern" : "xy.1", "options" : "" } } ] }'::documentdb_core.bson)
(7 rows)

-- Test for hasNull (10 filler records and 3 actual records to match)
EXPLAIN (COSTS OFF) SELECT document FROM collection('db', 'regex5') WHERE document @@ '{"x": {"$in": [  "second expression", null, {"$regex" : "xy.1", "$options": ""}  ]  }}';
                                                                                             QUERY PLAN                                                                                             
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Node: host=localhost port=58070 dbname=regression
         ->  Index Scan using index_wc on documents_101000_1010007 collection
               Index Cond: (document OPERATOR(documentdb_api_catalog.@*=) '{ "x" : [ "second expression", null, { "$regularExpression" : { "pattern" : "xy.1", "options" : "" } } ] }'::documentdb_core.bson)
(7 rows)

-- Test for $all
EXPLAIN (COSTS OFF) SELECT document FROM collection('db','regex5') WHERE document @@ '{"x": {"$all": [{"$regex" : "expression", "$options": ""}, {"$regex" : "value .+ x", "$options": ""}]}}';
                                                                                                                       QUERY PLAN                                                                                                                       
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Node: host=localhost port=58070 dbname=regression
         ->  Index Scan using index_wc on documents_101000_1010007 collection
               Index Cond: (document OPERATOR(documentdb_api_catalog.@&=) '{ "x" : [ { "$regularExpression" : { "pattern" : "expression", "options" : "" } }, { "$regularExpression" : { "pattern" : "value .+ x", "options" : "" } } ] }'::documentdb_core.bson)
(7 rows)

ROLLBACK;
--
-- RUN TIME PATH
--
-- When x is non-array
EXPLAIN (COSTS OFF) SELECT document FROM collection('db', 'regex5') WHERE document @@ '{"x": {"$in": [{"$regex" : ".*yc", "$options": ""}]}}';
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Node: host=localhost port=58070 dbname=regression
         ->  Seq Scan on documents_101000_1010007 collection
               Filter: (document OPERATOR(documentdb_api_catalog.@*=) '{ "x" : [ { "$regularExpression" : { "pattern" : ".*yc", "options" : "" } } ] }'::documentdb_core.bson)
(7 rows)

-- When x's value is array and regex matches one of the array elements, specifically the first element (3rd record).
EXPLAIN (COSTS OFF) SELECT document FROM collection('db', 'regex5') WHERE document @@ '{"x": {"$in": [{"$regex" : "^.*cd", "$options": ""}]}}';
                                                                              QUERY PLAN                                                                              
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Node: host=localhost port=58070 dbname=regression
         ->  Seq Scan on documents_101000_1010007 collection
               Filter: (document OPERATOR(documentdb_api_catalog.@*=) '{ "x" : [ { "$regularExpression" : { "pattern" : "^.*cd", "options" : "" } } ] }'::documentdb_core.bson)
(7 rows)

-- When x'z value is array and regex matches second element of 2nd record and 3rd element in the 4th record.
EXPLAIN (COSTS OFF) SELECT document FROM collection('db', 'regex5') WHERE document @@ '{"x": {"$in": [{"$regex" : "x.+1", "$options": ""}, {"$regex" : "value .+ x", "$options": ""}]}}';
                                                                                                                  QUERY PLAN                                                                                                                  
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Node: host=localhost port=58070 dbname=regression
         ->  Seq Scan on documents_101000_1010007 collection
               Filter: (document OPERATOR(documentdb_api_catalog.@*=) '{ "x" : [ { "$regularExpression" : { "pattern" : "x.+1", "options" : "" } }, { "$regularExpression" : { "pattern" : "value .+ x", "options" : "" } } ] }'::documentdb_core.bson)
(7 rows)

-- Without any regex
EXPLAIN (COSTS OFF) SELECT document FROM collection('db', 'regex5') WHERE document @@ '{"x": {"$in": ["acd", "first regular expression"]}}';
                                                             QUERY PLAN                                                              
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Node: host=localhost port=58070 dbname=regression
         ->  Seq Scan on documents_101000_1010007 collection
               Filter: (document OPERATOR(documentdb_api_catalog.@*=) '{ "x" : [ "acd", "first regular expression" ] }'::documentdb_core.bson)
(7 rows)

-- Mix of Regex and text
EXPLAIN (COSTS OFF) SELECT document FROM collection('db', 'regex5') WHERE document @@ '{"x": {"$in": [  "second expression", {"$regex" : "xy.1", "$options": ""}  ]  }}';
                                                                                        QUERY PLAN                                                                                        
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Node: host=localhost port=58070 dbname=regression
         ->  Seq Scan on documents_101000_1010007 collection
               Filter: (document OPERATOR(documentdb_api_catalog.@*=) '{ "x" : [ "second expression", { "$regularExpression" : { "pattern" : "xy.1", "options" : "" } } ] }'::documentdb_core.bson)
(7 rows)

-- Test for hasNull (10 filler records and 3 actual records to match)
EXPLAIN (COSTS OFF) SELECT document FROM collection('db', 'regex5') WHERE document @@ '{"x": {"$in": [  "second expression", null, {"$regex" : "xy.1", "$options": ""}  ]  }}';
                                                                                           QUERY PLAN                                                                                           
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Node: host=localhost port=58070 dbname=regression
         ->  Seq Scan on documents_101000_1010007 collection
               Filter: (document OPERATOR(documentdb_api_catalog.@*=) '{ "x" : [ "second expression", null, { "$regularExpression" : { "pattern" : "xy.1", "options" : "" } } ] }'::documentdb_core.bson)
(7 rows)

-- Test for $all
EXPLAIN (COSTS OFF) SELECT document FROM collection('db','regex5') WHERE document @@ '{"x": {"$all": [{"$regex" : "expression", "$options": ""}, {"$regex" : "value .+ x", "$options": ""}]}}';
                                                                                                                     QUERY PLAN                                                                                                                     
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Node: host=localhost port=58070 dbname=regression
         ->  Seq Scan on documents_101000_1010007 collection
               Filter: (document OPERATOR(documentdb_api_catalog.@&=) '{ "x" : [ { "$regularExpression" : { "pattern" : "expression", "options" : "" } }, { "$regularExpression" : { "pattern" : "value .+ x", "options" : "" } } ] }'::documentdb_core.bson)
(7 rows)

SELECT drop_collection('db','regex5');
 drop_collection 
---------------------------------------------------------------------
 t
(1 row)

DROP SCHEMA regex5 CASCADE;
