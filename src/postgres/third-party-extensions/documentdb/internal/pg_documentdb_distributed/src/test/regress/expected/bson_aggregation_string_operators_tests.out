SET search_path TO documentdb_core,documentdb_api,documentdb_api_catalog,documentdb_api_internal;
SET citus.next_shard_id TO 620000;
SET documentdb.next_collection_id TO 6200;
SET documentdb.next_collection_index_id TO 6200;
-- $concat operator: basic test:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$concat" : []} }');
      bson_dollar_project       
---------------------------------------------------------------------
 { "_id" : "1", "result" : "" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$concat" : "apple"} }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "apple" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$concat" : ["apple"]} }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "apple" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$concat" : "ℹ️ ❤️ documentdb"} }');
             bson_dollar_project              
---------------------------------------------------------------------
 { "_id" : "1", "result" : "ℹ️ ❤️ documentdb" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$concat" : ["a","b"]} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : "ab" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$concat" : ["apple ","is ","a ","fruit", " ", "."]} }');
               bson_dollar_project                
---------------------------------------------------------------------
 { "_id" : "1", "result" : "apple is a fruit ." }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$concat" : ["ℹ️","❤️","documentdb"]} }');
            bson_dollar_project             
---------------------------------------------------------------------
 { "_id" : "1", "result" : "ℹ️❤️documentdb" }
(1 row)

-- $concat operator: with literals and operators test:
select bson_dollar_project('{"_id":"1", "x": "1"}', '{"result" : { "$concat" : "$x"} }');
       bson_dollar_project       
---------------------------------------------------------------------
 { "_id" : "1", "result" : "1" }
(1 row)

select bson_dollar_project('{"_id":"1", "x": "3"}', '{"result" : { "$concat" : ["1", {"$concat": ["foo","$x","bar"]}, "2"] } }');
           bson_dollar_project           
---------------------------------------------------------------------
 { "_id" : "1", "result" : "1foo3bar2" }
(1 row)

select bson_dollar_project('{"_id":"1", "product": "mango", "qty": "10"}', '{"result" : { "$concat" : ["$product","-","$qty"]} }');
          bson_dollar_project           
---------------------------------------------------------------------
 { "_id" : "1", "result" : "mango-10" }
(1 row)

-- $concat operator: null undefined test:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$concat" : null} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$concat" : [null]} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$concat" : ["apple", "is", "a", null, "fruit"]} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$concat" : {"$undefined": true}} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$concat" : [{"$undefined": true}]} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$concat" : ["apple", "is", "a", {"$undefined": true} , "fruit"]} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$concat" : ["$a","$b"]} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

--$concat with large input data
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$concat" : ["string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2","string1", "string2"]} }');
bson_dollar_project
---------------------------------------------------------------------
 { "_id" : "1", "result" : "" }
(1 row)

-- $concat operator: Unicode representation and escape sequences  test:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$concat" : ["a","b\u0000"]} }');
          bson_dollar_project           
---------------------------------------------------------------------
 { "_id" : "1", "result" : "ab\u0000" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$concat" : ["a","b\u000Ac"]} }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "ab\nc" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$concat" : ["a","b\u0022"]} }');
        bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "ab\"" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$concat" : ["a","b\u000C"]} }');
        bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "ab\f" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$concat" : ["Copyright 2023 ","\u00A9 ","Concatstring ", "Inc.", " All rights reserved"]} }');
                                 bson_dollar_project                                  
---------------------------------------------------------------------
 { "_id" : "1", "result" : "Copyright 2023 © Concatstring Inc. All rights reserved" }
(1 row)

-- $concat operator: Negative test:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$concat" : 1} }');
ERROR:  $concat only supports strings, not int
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$concat" : true} }');
ERROR:  $concat only supports strings, not bool
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$concat" : 1.2} }');
ERROR:  $concat only supports strings, not double
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$concat" : [1]} }');
ERROR:  $concat only supports strings, not int
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$concat" : [{"$numberDecimal": "10"}]} }');
ERROR:  $concat only supports strings, not decimal
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$concat" : ["apple", "is", 1, "fruit"]} }');
ERROR:  $concat only supports strings, not int
select bson_dollar_project('{"_id":"1", "x": ["hello ","this ","is ","test"]}', '{"result" : { "$concat" : "$x"} }');
ERROR:  $concat only supports strings, not array
-- $split operator: basic test:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$split" : ["hello, this is a test case"," "]} }');
                             bson_dollar_project                             
---------------------------------------------------------------------
 { "_id" : "1", "result" : [ "hello,", "this", "is", "a", "test", "case" ] }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$split" : ["mango,banana,lemon,grapes",","]} }');
                         bson_dollar_project                          
---------------------------------------------------------------------
 { "_id" : "1", "result" : [ "mango", "banana", "lemon", "grapes" ] }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$split" : ["I❤️documentdb","❤️"]} }');
                bson_dollar_project                
---------------------------------------------------------------------
 { "_id" : "1", "result" : [ "I", "documentdb" ] }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$split" : ["1abcd2abcd3abcd4abcd","abcd"]} }');
                  bson_dollar_project                   
---------------------------------------------------------------------
 { "_id" : "1", "result" : [ "1", "2", "3", "4", "" ] }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$split" : ["app","apple"]} }');
          bson_dollar_project          
---------------------------------------------------------------------
 { "_id" : "1", "result" : [ "app" ] }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$split" : ["app","app"]} }');
          bson_dollar_project           
---------------------------------------------------------------------
 { "_id" : "1", "result" : [ "", "" ] }
(1 row)

-- $split operaator: delimeter in front and end
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$split" : ["abcabcabc","abc"]} }');
              bson_dollar_project               
---------------------------------------------------------------------
 { "_id" : "1", "result" : [ "", "", "", "" ] }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$split" : ["testcase    "," "]} }');
                    bson_dollar_project                     
---------------------------------------------------------------------
 { "_id" : "1", "result" : [ "testcase", "", "", "", "" ] }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$split" : ["   testcase   "," "]} }');
                        bson_dollar_project                         
---------------------------------------------------------------------
 { "_id" : "1", "result" : [ "", "", "", "testcase", "", "", "" ] }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$split" : ["testcase   "," "]} }');
                  bson_dollar_project                   
---------------------------------------------------------------------
 { "_id" : "1", "result" : [ "testcase", "", "", "" ] }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$split" : ["test  case   "," "]} }');
                      bson_dollar_project                       
---------------------------------------------------------------------
 { "_id" : "1", "result" : [ "test", "", "case", "", "", "" ] }
(1 row)

-- $split operator: with literals and operators test:
select bson_dollar_project('{"_id":"1", "x": "apple is a fruit", "y" : " "}', '{"result" : { "$split" : ["$x","$y"]} }');
                     bson_dollar_project                     
---------------------------------------------------------------------
 { "_id" : "1", "result" : [ "apple", "is", "a", "fruit" ] }
(1 row)

select bson_dollar_project('{"_id":"1", "x": "name,age,address,height,weight", "y" : ","}', '{"result" : { "$split" : ["$x","$y"]} }');
                             bson_dollar_project                              
---------------------------------------------------------------------
 { "_id" : "1", "result" : [ "name", "age", "address", "height", "weight" ] }
(1 row)

select bson_dollar_project('{"_id":"1","a":"ram"}', '{"result" : { "$split" : [{"$concat" : ["apple ","is ", "a " , "fruit "] }," "]} }');
                       bson_dollar_project                       
---------------------------------------------------------------------
 { "_id" : "1", "result" : [ "apple", "is", "a", "fruit", "" ] }
(1 row)

select bson_dollar_project('{"_id":"1","a":"ram"}', '{"result" : { "$split" : [{"$concat" : ["apple is a fruit"] }, {"$concat" : [" "] }]} }');
                     bson_dollar_project                     
---------------------------------------------------------------------
 { "_id" : "1", "result" : [ "apple", "is", "a", "fruit" ] }
(1 row)

-- $split operator: null undefined output test:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$split" : [null,null]} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$split" : [{"$undefined": true},{"$undefined": true}]} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$split" : [1,null]} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$split" : [{"$undefined": true},"app"]} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"1", "a": "apple is a fruit"}', '{"result" : { "$split" : ["$a","$b"]} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

-- $split operator: Unicode representation and escape sequences  test:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$split" : ["a\u0000b\u0000c\u0000d","\u0000"]} }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : [ "a", "b", "c", "d" ] }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$split" : ["\u000A","\u000A"]} }');
          bson_dollar_project           
---------------------------------------------------------------------
 { "_id" : "1", "result" : [ "", "" ] }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$split" : ["\u0022\u00A9\u0022\u00A9\u0022\u00A9\u0022","\u00A9"]} }');
                  bson_dollar_project                   
---------------------------------------------------------------------
 { "_id" : "1", "result" : [ "\"", "\"", "\"", "\"" ] }
(1 row)

-- $split operator: Negative test:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$split" : "apple"} }');
ERROR:  Expression $split takes exactly 2 arguments. 1 were passed in.
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$split" : ["apple", ""]} }');
ERROR:  $split requires a non-empty separator
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$split" : [1, "test"]} }');
ERROR:  $split requires an expression that evaluates to a string as a first argument, found: int
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$split" : ["test", 1]} }');
ERROR:  $split requires an expression that evaluates to a string as a second argument, found: int
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$split" : [{"$numberDecimal" : "1.231"}, 1]} }');
ERROR:  $split requires an expression that evaluates to a string as a first argument, found: decimal
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$split" : []} }');
ERROR:  Expression $split takes exactly 2 arguments. 0 were passed in.
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$split" : null} }');
ERROR:  Expression $split takes exactly 2 arguments. 1 were passed in.
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$split" : [null]} }');
ERROR:  Expression $split takes exactly 2 arguments. 1 were passed in.
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$split" : ["a"]} }');
ERROR:  Expression $split takes exactly 2 arguments. 1 were passed in.
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$split" : {"$undefined": true}} }');
ERROR:  Expression $split takes exactly 2 arguments. 1 were passed in.
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$split" : [{"$undefined": true}]} }');
ERROR:  Expression $split takes exactly 2 arguments. 1 were passed in.
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$split" : ["a","b","c"]} }');
ERROR:  Expression $split takes exactly 2 arguments. 3 were passed in.
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$split" : [1]} }');
ERROR:  Expression $split takes exactly 2 arguments. 1 were passed in.
-- $strLenBytes operator: basic test:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenBytes" : ""} }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "0" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenBytes" : "A"} }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "1" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenBytes" : "Apple"} }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "5" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenBytes" : "🙈"} }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "4" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenBytes" : "I use to eat one apple 🍎 a day that became reason of my breakup 💔 as one apple a day keeps doctor away and she👧🏽 was a doctor 🧑🏽‍⚕️"} }');
                 bson_dollar_project                  
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "155" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenBytes" : ["Apple"]} }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "5" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenBytes" : "abcdefghijklmnopqrstuvwxyz"} }');
                 bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "26" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenBytes" : "1234567890"} }');
                 bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "10" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenBytes" : "!@#$%^&*(){}[];:<>?"} }');
                 bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "19" } }
(1 row)

-- $strLenBytes operator: Unicode representation and escape sequences  test:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenBytes" : ["I ❤️ documentdb"]} }');
                 bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "19" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenBytes" : "I ❤️ documentdb"} }');
                 bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "19" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenBytes" : "A\u0000B"} }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "3" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenBytes" : "\uA000BCD"} }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "6" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenBytes" : "😀😁😂🤣😃😄😅😆😉😊😋😎🥲🙈🤔😪😟"} }');
                 bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "68" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenBytes" : "👩🏽👨🏽🧑🏽👧🏽👦🏽🧒🏽👨🏽‍🦰👩🏽‍🦰🧓🏽👴🏽👵🏽👶🏽🧑🏽‍🦰👩🏽‍🦱👨🏽‍🦱🧑🏽‍🦱👩🏽‍🦲👨🏽‍🦲🧑🏽‍🦲👩🏽‍🦳👨🏽‍🦳🧑🏽‍🦳👱🏽‍♀️👱🏽‍♂️👱🏽👸🏽🤴🏽🫅🏽👳🏽‍♀️👳🏽‍♂️👳🏽👲🏽🧔🏽🧔🏽‍♂️🧔🏽‍♀️👼🏽"} }');
                 bson_dollar_project                  
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "426" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenBytes" : ["\u0022\u00A9\u0022\u00A9\u0022\u00A9\u0022\u00A9"]} }');
                 bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "12" } }
(1 row)

-- $strLenBytes operator: literals and operators :
select bson_dollar_project('{"_id":"1", "a" : "One apple a day, keeps doctor away"}', '{"result" : { "$strLenBytes" : "$a"} }');
                 bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "34" } }
(1 row)

select bson_dollar_project('{"_id":"1", "a" : "One apple a day, keeps doctor away"}', '{"result" : { "$strLenBytes" :  {"$concat" : ["$a", "Apple is a fruit"]} } }');
                 bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "50" } }
(1 row)

-- $strLenBytes operator: Negative test:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenBytes" : 1} }');
ERROR:  $strLenBytes requires a string argument, found: int
select bson_dollar_project('{"_id":"1", "a" : 1}', '{"result" : { "$strLenBytes" : "$a"} }');
ERROR:  $strLenBytes requires a string argument, found: int
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenBytes" : [1]} }');
ERROR:  $strLenBytes requires a string argument, found: int
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenBytes" : ["apple","cat"]} }');
ERROR:  Expression $strLenBytes takes exactly 1 arguments. 2 were passed in.
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenBytes" : [1,"cat"]} }');
ERROR:  Expression $strLenBytes takes exactly 1 arguments. 2 were passed in.
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenBytes" : ["cat",1]} }');
ERROR:  Expression $strLenBytes takes exactly 1 arguments. 2 were passed in.
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenBytes" : null} }');
ERROR:  $strLenBytes requires a string argument, found: null
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenBytes" : [null]} }');
ERROR:  $strLenBytes requires a string argument, found: null
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenBytes" : {"$undefined": true}} }');
ERROR:  $strLenBytes requires a string argument, found: undefined
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenBytes" : [{"$undefined": true}]} }');
ERROR:  $strLenBytes requires a string argument, found: undefined
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenBytes" : ["$a"]} }');
ERROR:  $strLenBytes requires a string argument, found: missing
-- $strLenCP operator: basic test:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenCP" : ""} }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "0" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenCP" : "A"} }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "1" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenCP" : "Apple"} }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "5" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenCP" : "🙈"} }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "1" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenCP" : "I use to eat one apple 🍎 a day that became reason of my breakup 💔 as one apple a day keeps doctor away and she👧🏽 was a doctor 🧑🏽‍⚕️"} }');
                 bson_dollar_project                  
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "131" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenCP" : ["Apple"]} }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "5" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenCP" : "abcdefghijklmnopqrstuvwxyz"} }');
                 bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "26" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenCP" : "1234567890"} }');
                 bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "10" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenCP" : "!@#$%^&*(){}[];:<>?"} }');
                 bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "19" } }
(1 row)

-- $strLenCP operator: Unicode representation and escape sequences  test:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenCP" : ["I ❤️ documentdb"]} }');
                 bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "15" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenCP" : "I ❤️ documentdb"} }');
                 bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "15" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenCP" : "A\u0000B"} }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "3" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenCP" : "\uA000BCD"} }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "4" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenCP" : "😀😁😂🤣😃😄😅😆😉😊😋😎🥲🙈🤔😪😟"} }');
                 bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "17" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenCP" : "👩🏽👨🏽🧑🏽👧🏽👦🏽🧒🏽👨🏽‍🦰👩🏽‍🦰🧓🏽👴🏽👵🏽👶🏽🧑🏽‍🦰👩🏽‍🦱👨🏽‍🦱🧑🏽‍🦱👩🏽‍🦲👨🏽‍🦲🧑🏽‍🦲👩🏽‍🦳👨🏽‍🦳🧑🏽‍🦳👱🏽‍♀️👱🏽‍♂️👱🏽👸🏽🤴🏽🫅🏽👳🏽‍♀️👳🏽‍♂️👳🏽👲🏽🧔🏽🧔🏽‍♂️🧔🏽‍♀️👼🏽"} }');
                 bson_dollar_project                  
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "114" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenCP" : ["\u0022\u00A9\u0022\u00A9\u0022\u00A9\u0022\u00A9"]} }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "8" } }
(1 row)

-- $strLenCP operator: literals and operators :
select bson_dollar_project('{"_id":"1", "a" : "One apple a day, keeps doctor away"}', '{"result" : { "$strLenCP" : "$a"} }');
                 bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "34" } }
(1 row)

select bson_dollar_project('{"_id":"1", "a" : "One apple a day, keeps doctor away"}', '{"result" : { "$strLenCP" :  {"$concat" : ["$a", "Apple is a fruit"]} } }');
                 bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "50" } }
(1 row)

-- $strLenCP operator: Negative test:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenCP" : 1} }');
ERROR:  $strLenCP requires a string argument, found: int
select bson_dollar_project('{"_id":"1", "a" : 1}', '{"result" : { "$strLenCP" : "$a"} }');
ERROR:  $strLenCP requires a string argument, found: int
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenCP" : [1]} }');
ERROR:  $strLenCP requires a string argument, found: int
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenCP" : ["apple","cat"]} }');
ERROR:  Expression $strLenCP takes exactly 1 arguments. 2 were passed in.
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenCP" : [1,"cat"]} }');
ERROR:  Expression $strLenCP takes exactly 1 arguments. 2 were passed in.
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenCP" : ["cat",1]} }');
ERROR:  Expression $strLenCP takes exactly 1 arguments. 2 were passed in.
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenCP" : null} }');
ERROR:  $strLenCP requires a string argument, found: null
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenCP" : [null]} }');
ERROR:  $strLenCP requires a string argument, found: null
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenCP" : {"$undefined": true}} }');
ERROR:  $strLenCP requires a string argument, found: undefined
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenCP" : [{"$undefined": true}]} }');
ERROR:  $strLenCP requires a string argument, found: undefined
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strLenCP" : ["$a"]} }');
ERROR:  $strLenCP requires a string argument, found: missing
--$trim operator : basic test:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$trim" : {"input": "", "chars" :""}} }');
      bson_dollar_project       
---------------------------------------------------------------------
 { "_id" : "1", "result" : "" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$trim" : {"input": "apple", "chars" :"apple"}} }');
      bson_dollar_project       
---------------------------------------------------------------------
 { "_id" : "1", "result" : "" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$trim" : {"input": "111apple111", "chars" :"1"}} }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "apple" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$trim" : {"input": "123apple321", "chars" :"333333222222111111"}} }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "apple" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$trim" : {"input": "apple ", "chars" :"pl"}} }');
         bson_dollar_project          
---------------------------------------------------------------------
 { "_id" : "1", "result" : "apple " }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$trim" : {"input": " apple ", "chars" :" ppl"}} }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "apple" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$trim" : {"input": " apple ", "chars" :" "}} }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "apple" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$trim" : {"input": "apple ", "chars" :" "}} }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "apple" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$trim" : {"input": " apple", "chars" :" "}} }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "apple" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$trim" : {"input": "ABCDOGABC", "chars" :"ABC"}} }');
        bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : "DOG" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$trim" : {"input": "Remove this characters AAAAAAAAAAAAAAAAAA Remove this too", "chars" :"Removthiscarto "}} }');
               bson_dollar_project                
---------------------------------------------------------------------
 { "_id" : "1", "result" : "AAAAAAAAAAAAAAAAAA" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$trim" : {"input": "1234apple5678", "chars" :"12345678"}} }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "apple" }
(1 row)

--$trim operator : without chars test:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$trim" : {"input": ""}} }');
      bson_dollar_project       
---------------------------------------------------------------------
 { "_id" : "1", "result" : "" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$trim" : {"input": " apple "}} }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "apple" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$trim" : {"input": "ABCDOGABC"}} }');
           bson_dollar_project           
---------------------------------------------------------------------
 { "_id" : "1", "result" : "ABCDOGABC" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$trim" : {"input": "apple "}} }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "apple" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$trim" : {"input": " apple"}} }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "apple" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$trim" : {"input": "\napple"}} }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "apple" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$trim" : {"input": " \u0000 \n apple \t \u200A "}} }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "apple" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$trim" : {"input": " \u00E2apple"}} }');
         bson_dollar_project          
---------------------------------------------------------------------
 { "_id" : "1", "result" : "âapple" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$trim" : {"input": " \u00E2apple\u00E2"}} }');
          bson_dollar_project          
---------------------------------------------------------------------
 { "_id" : "1", "result" : "âappleâ" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$trim" : {"input": " \u0080\u00E2apple\u0080"}} }');
               bson_dollar_project                
---------------------------------------------------------------------
 { "_id" : "1", "result" : "\u0080âapple\u0080" }
(1 row)

--$trim operator : Unicode representation and escape sequences test:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$trim" : {"input": "\n I 💗 documentdb \n", "chars" :"\n "}} }');
              bson_dollar_project              
---------------------------------------------------------------------
 { "_id" : "1", "result" : "I 💗 documentdb" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$trim" : {"input": "😀😀😎😎😋😎😎😁😁", "chars" :"😁😀"}} }');
           bson_dollar_project            
---------------------------------------------------------------------
 { "_id" : "1", "result" : "😎😎😋😎😎" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$trim" : {"input": "\napple", "chars" :"\n "}} }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "apple" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$trim" : {"input": " \u0000 \n apple \t \u200A ", "chars" :" \u0000 \n\t\u200A"}} }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "apple" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$trim" : {"input": " \u00E2apple", "chars" :"\u00E2 "}} }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "apple" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$trim" : {"input": " \u00E2apple\u00E2", "chars" :" \u00E2"}} }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "apple" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$trim" : {"input": " \u0080\u00E2apple\u0080", "chars" :"\u0080\u00E2"}} }');
             bson_dollar_project             
---------------------------------------------------------------------
 { "_id" : "1", "result" : " \u0080âapple" }
(1 row)

-- $trim operator: literals and operators :
select bson_dollar_project('{"_id":"1", "a" : "0  this is test  0", "b": "0 " }', '{"result" : { "$trim" : {"input": "$a","chars": "$b"}} }');
            bson_dollar_project             
---------------------------------------------------------------------
 { "_id" : "1", "result" : "this is test" }
(1 row)

select bson_dollar_project('{"_id":"1", "a" : "  0this is test0  ", "b": "0 " }', '{"result" : { "$trim" : {"input": "$a"}} }');
             bson_dollar_project              
---------------------------------------------------------------------
 { "_id" : "1", "result" : "0this is test0" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$trim" : {"input": {"$concat" : ["1","2","3","string","1","2","3"]}, "chars": {"$concat":["12","3"]} }} }');
         bson_dollar_project          
---------------------------------------------------------------------
 { "_id" : "1", "result" : "string" }
(1 row)

-- $trim operator: null test:
select bson_dollar_project('{"_id":"1", "a" : "0  this is test  0", "b": "0 " }', '{"result" : { "$trim" : {"input": "$z","chars": "$b"}} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"1", "a" : "0  this is test  0", "b": "0 " }', '{"result" : { "$trim" : {"input": "$a","chars": "$z"}} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$trim" : {"input": null, "chars" :"apple"}} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$trim" : {"input": "apple", "chars" :null}} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$trim" : {"input": {"$undefined" : true}, "chars" :"apple"}} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$trim" : {"input": "apple", "chars" :{"$undefined" : true}}} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

-- $trim operator: Negative test :
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$trim" : 1} }');
ERROR:  $trim only supports an object as an argument, found int
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$trim" : {}} }');
ERROR:  $trim requires an 'input' field
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$trim" : {"input": 1}} }');
ERROR:  $trim requires its input to be a string, got 1 (of type int) instead.
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$trim" : {"input": 1, "unknowarG": "1"}} }');
ERROR:  $trim found an unknown argument: unknowarG
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$trim" : {"input": "", "chars" : ["apple"]}} }');
ERROR:   $trim requires 'chars' to be a string, got [ "apple" ] (of type array) instead.
select bson_dollar_project('{"_id":"1", "a" : 1}', '{"result" : { "$trim" : {"input": "$a"}} }');
ERROR:  $trim requires its input to be a string, got 1 (of type int) instead.
select bson_dollar_project('{"_id":"1", "a" : 1}', '{"result" : { "$trim" : {"input": "apple", "chars" : "$a"}} }');
ERROR:   $trim requires 'chars' to be a string, got 1 (of type int) instead.
--$ltrim operator : basic test:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$ltrim" : {"input": "", "chars" :""}} }');
      bson_dollar_project       
---------------------------------------------------------------------
 { "_id" : "1", "result" : "" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$ltrim" : {"input": "apple", "chars" :"apple"}} }');
      bson_dollar_project       
---------------------------------------------------------------------
 { "_id" : "1", "result" : "" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$ltrim" : {"input": "111apple", "chars" :"1"}} }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "apple" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$ltrim" : {"input": "123apple", "chars" :"333333222222111111"}} }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "apple" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$ltrim" : {"input": " apple", "chars" :" "}} }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "apple" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$ltrim" : {"input": "apple ", "chars" :" "}} }');
         bson_dollar_project          
---------------------------------------------------------------------
 { "_id" : "1", "result" : "apple " }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$ltrim" : {"input": "ABCDOG", "chars" :"ABC"}} }');
        bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : "DOG" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$ltrim" : {"input": "Remove this characters AAAAAAAAAAAAAAAAAA", "chars" :"Removthiscarto "}} }');
               bson_dollar_project                
---------------------------------------------------------------------
 { "_id" : "1", "result" : "AAAAAAAAAAAAAAAAAA" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$ltrim" : {"input": "1234apple", "chars" :"12345678"}} }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "apple" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$ltrim" : {"input": "1234apple5678", "chars" :"12345678"}} }');
           bson_dollar_project           
---------------------------------------------------------------------
 { "_id" : "1", "result" : "apple5678" }
(1 row)

--$ltrim operator : without chars test:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$ltrim" : {"input": ""}} }');
      bson_dollar_project       
---------------------------------------------------------------------
 { "_id" : "1", "result" : "" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$ltrim" : {"input": " apple "}} }');
         bson_dollar_project          
---------------------------------------------------------------------
 { "_id" : "1", "result" : "apple " }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$ltrim" : {"input": "ABCDOGABC"}} }');
           bson_dollar_project           
---------------------------------------------------------------------
 { "_id" : "1", "result" : "ABCDOGABC" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$ltrim" : {"input": "apple "}} }');
         bson_dollar_project          
---------------------------------------------------------------------
 { "_id" : "1", "result" : "apple " }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$ltrim" : {"input": " apple"}} }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "apple" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$ltrim" : {"input": "\napple"}} }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "apple" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$ltrim" : {"input": " \u0000 \n apple \t \u200A "}} }');
            bson_dollar_project            
---------------------------------------------------------------------
 { "_id" : "1", "result" : "apple \t   " }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$ltrim" : {"input": " \u00E2apple"}} }');
         bson_dollar_project          
---------------------------------------------------------------------
 { "_id" : "1", "result" : "âapple" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$ltrim" : {"input": " \u00E2apple\u00E2"}} }');
          bson_dollar_project          
---------------------------------------------------------------------
 { "_id" : "1", "result" : "âappleâ" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$ltrim" : {"input": " \u0080\u00E2apple\u0080"}} }');
               bson_dollar_project                
---------------------------------------------------------------------
 { "_id" : "1", "result" : "\u0080âapple\u0080" }
(1 row)

--$ltrim operator : Unicode representation and escape sequences test:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$ltrim" : {"input": "\n I 💗 documentdb \n", "chars" :"\n "}} }');
               bson_dollar_project                
---------------------------------------------------------------------
 { "_id" : "1", "result" : "I 💗 documentdb \n" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$ltrim" : {"input": "😀😀😎😎😋😎😎😁😁", "chars" :"😁😀"}} }');
             bson_dollar_project              
---------------------------------------------------------------------
 { "_id" : "1", "result" : "😎😎😋😎😎😁😁" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$ltrim" : {"input": "\napple", "chars" :"\n "}} }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "apple" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$ltrim" : {"input": " \u0000 \n apple \t \u200A ", "chars" :" \u0000 \n\t\u200A"}} }');
            bson_dollar_project            
---------------------------------------------------------------------
 { "_id" : "1", "result" : "apple \t   " }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$ltrim" : {"input": " \u00E2apple", "chars" :"\u00E2 "}} }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "apple" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$ltrim" : {"input": " \u00E2apple\u00E2", "chars" :" \u00E2"}} }');
         bson_dollar_project          
---------------------------------------------------------------------
 { "_id" : "1", "result" : "appleâ" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$ltrim" : {"input": " \u0080\u00E2apple\u0080", "chars" :"\u0080\u00E2"}} }');
                bson_dollar_project                
---------------------------------------------------------------------
 { "_id" : "1", "result" : " \u0080âapple\u0080" }
(1 row)

-- $ltrim operator: literals and operators :
select bson_dollar_project('{"_id":"1", "a" : "0  this is test  0", "b": "0 " }', '{"result" : { "$ltrim" : {"input": "$a","chars": "$b"}} }');
              bson_dollar_project              
---------------------------------------------------------------------
 { "_id" : "1", "result" : "this is test  0" }
(1 row)

select bson_dollar_project('{"_id":"1", "a" : "  0this is test0  ", "b": "0 " }', '{"result" : { "$ltrim" : {"input": "$a"}} }');
              bson_dollar_project               
---------------------------------------------------------------------
 { "_id" : "1", "result" : "0this is test0  " }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$ltrim" : {"input": {"$concat" : ["1","2","3","string","1","2","3"]}, "chars": {"$concat":["12","3"]} }} }');
           bson_dollar_project           
---------------------------------------------------------------------
 { "_id" : "1", "result" : "string123" }
(1 row)

-- $ltrim operator: null test:
select bson_dollar_project('{"_id":"1", "a" : "0  this is test  0", "b": "0 " }', '{"result" : { "$ltrim" : {"input": "$z","chars": "$b"}} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"1", "a" : "0  this is test  0", "b": "0 " }', '{"result" : { "$ltrim" : {"input": "$a","chars": "$z"}} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$ltrim" : {"input": null, "chars" :"apple"}} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$ltrim" : {"input": "apple", "chars" :null}} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$ltrim" : {"input": {"$undefined" : true}, "chars" :"apple"}} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$ltrim" : {"input": "apple", "chars" :{"$undefined" : true}}} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

-- $ltrim operator: Negative test :
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$ltrim" : 1} }');
ERROR:  $ltrim only supports an object as an argument, found int
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$ltrim" : {}} }');
ERROR:  $ltrim requires an 'input' field
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$ltrim" : {"input": 1}} }');
ERROR:  $ltrim requires its input to be a string, got 1 (of type int) instead.
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$ltrim" : {"input": 1, "unknowarG": "1"}} }');
ERROR:  $ltrim found an unknown argument: unknowarG
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$ltrim" : {"input": "", "chars" : ["apple"]}} }');
ERROR:   $ltrim requires 'chars' to be a string, got [ "apple" ] (of type array) instead.
select bson_dollar_project('{"_id":"1", "a" : 1}', '{"result" : { "$ltrim" : {"input": "$a"}} }');
ERROR:  $ltrim requires its input to be a string, got 1 (of type int) instead.
select bson_dollar_project('{"_id":"1", "a" : 1}', '{"result" : { "$ltrim" : {"input": "apple", "chars" : "$a"}} }');
ERROR:   $ltrim requires 'chars' to be a string, got 1 (of type int) instead.
--$rtrim operator : basic test:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$rtrim" : {"input": "", "chars" :""}} }');
      bson_dollar_project       
---------------------------------------------------------------------
 { "_id" : "1", "result" : "" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$rtrim" : {"input": "apple", "chars" :"apple"}} }');
      bson_dollar_project       
---------------------------------------------------------------------
 { "_id" : "1", "result" : "" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$rtrim" : {"input": "apple111", "chars" :"1"}} }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "apple" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$rtrim" : {"input": "apple321", "chars" :"333333222222111111"}} }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "apple" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$rtrim" : {"input": "apple ", "chars" :"pl"}} }');
         bson_dollar_project          
---------------------------------------------------------------------
 { "_id" : "1", "result" : "apple " }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$rtrim" : {"input": "apple ", "chars" :" ppl"}} }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "apple" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$rtrim" : {"input": "apple ", "chars" :" "}} }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "apple" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$rtrim" : {"input": "DOGABC", "chars" :"ABC"}} }');
        bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : "DOG" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$rtrim" : {"input": "Remove this characters AAAAAAAAAAAAAAAAAA Remove this too", "chars" :"Removthiscarto "}} }');
                           bson_dollar_project                           
---------------------------------------------------------------------
 { "_id" : "1", "result" : "Remove this characters AAAAAAAAAAAAAAAAAA" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$rtrim" : {"input": "1234apple5678", "chars" :"12345678"}} }');
           bson_dollar_project           
---------------------------------------------------------------------
 { "_id" : "1", "result" : "1234apple" }
(1 row)

--$rtrim operator : without chars test:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$rtrim" : {"input": ""}} }');
      bson_dollar_project       
---------------------------------------------------------------------
 { "_id" : "1", "result" : "" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$rtrim" : {"input": " apple "}} }');
         bson_dollar_project          
---------------------------------------------------------------------
 { "_id" : "1", "result" : " apple" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$rtrim" : {"input": "DOGABC"}} }');
         bson_dollar_project          
---------------------------------------------------------------------
 { "_id" : "1", "result" : "DOGABC" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$rtrim" : {"input": "apple "}} }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "apple" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$rtrim" : {"input": " apple"}} }');
         bson_dollar_project          
---------------------------------------------------------------------
 { "_id" : "1", "result" : " apple" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$rtrim" : {"input": "\napple"}} }');
          bson_dollar_project          
---------------------------------------------------------------------
 { "_id" : "1", "result" : "\napple" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$rtrim" : {"input": " \u0000 \n apple \t \u200A "}} }');
              bson_dollar_project               
---------------------------------------------------------------------
 { "_id" : "1", "result" : " \u0000 \n apple" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$rtrim" : {"input": " \u00E2apple"}} }');
          bson_dollar_project          
---------------------------------------------------------------------
 { "_id" : "1", "result" : " âapple" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$rtrim" : {"input": " \u00E2apple\u00E2"}} }');
          bson_dollar_project           
---------------------------------------------------------------------
 { "_id" : "1", "result" : " âappleâ" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$rtrim" : {"input": " \u0080\u00E2apple\u0080"}} }');
                bson_dollar_project                
---------------------------------------------------------------------
 { "_id" : "1", "result" : " \u0080âapple\u0080" }
(1 row)

--$rtrim operator : Unicode representation and escape sequences test:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$rtrim" : {"input": "\n I 💗 documentdb \n", "chars" :"\n "}} }');
               bson_dollar_project                
---------------------------------------------------------------------
 { "_id" : "1", "result" : "\n I 💗 documentdb" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$rtrim" : {"input": "😀😀😎😎😋😎😎😁😁", "chars" :"😁😀"}} }');
             bson_dollar_project              
---------------------------------------------------------------------
 { "_id" : "1", "result" : "😀😀😎😎😋😎😎" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$rtrim" : {"input": "\napple", "chars" :"\n "}} }');
          bson_dollar_project          
---------------------------------------------------------------------
 { "_id" : "1", "result" : "\napple" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$rtrim" : {"input": " \u0000 \n apple \t \u200A ", "chars" :" \u0000 \n\t\u200A"}} }');
              bson_dollar_project               
---------------------------------------------------------------------
 { "_id" : "1", "result" : " \u0000 \n apple" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$rtrim" : {"input": " \u00E2apple", "chars" :"\u00E2 "}} }');
          bson_dollar_project          
---------------------------------------------------------------------
 { "_id" : "1", "result" : " âapple" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$rtrim" : {"input": " \u00E2apple\u00E2", "chars" :" \u00E2"}} }');
          bson_dollar_project          
---------------------------------------------------------------------
 { "_id" : "1", "result" : " âapple" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$rtrim" : {"input": " \u0080\u00E2apple\u0080", "chars" :"\u0080\u00E2"}} }');
             bson_dollar_project             
---------------------------------------------------------------------
 { "_id" : "1", "result" : " \u0080âapple" }
(1 row)

-- $rtrim operator: literals and operators :
select bson_dollar_project('{"_id":"1", "a" : "0  this is test  0", "b": "0 " }', '{"result" : { "$rtrim" : {"input": "$a","chars": "$b"}} }');
              bson_dollar_project              
---------------------------------------------------------------------
 { "_id" : "1", "result" : "0  this is test" }
(1 row)

select bson_dollar_project('{"_id":"1", "a" : "  0this is test0  ", "b": "0 " }', '{"result" : { "$rtrim" : {"input": "$a"}} }');
              bson_dollar_project               
---------------------------------------------------------------------
 { "_id" : "1", "result" : "  0this is test0" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$rtrim" : {"input": {"$concat" : ["1","2","3","string","1","2","3"]}, "chars": {"$concat":["12","3"]} }} }');
           bson_dollar_project           
---------------------------------------------------------------------
 { "_id" : "1", "result" : "123string" }
(1 row)

-- $rtrim operator: null test:
select bson_dollar_project('{"_id":"1", "a" : "0  this is test  0", "b": "0 " }', '{"result" : { "$rtrim" : {"input": "$z","chars": "$b"}} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"1", "a" : "0  this is test  0", "b": "0 " }', '{"result" : { "$rtrim" : {"input": "$a","chars": "$z"}} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$rtrim" : {"input": null, "chars" :"apple"}} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$rtrim" : {"input": "apple", "chars" :null}} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$rtrim" : {"input": {"$undefined" : true}, "chars" :"apple"}} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$rtrim" : {"input": "apple", "chars" :{"$undefined" : true}}} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

-- $rtrim operator: Negative test :
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$rtrim" : 1} }');
ERROR:  $rtrim only supports an object as an argument, found int
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$rtrim" : {}} }');
ERROR:  $rtrim requires an 'input' field
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$rtrim" : {"input": 1}} }');
ERROR:  $rtrim requires its input to be a string, got 1 (of type int) instead.
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$rtrim" : {"input": 1, "unknowarG": "1"}} }');
ERROR:  $rtrim found an unknown argument: unknowarG
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$rtrim" : {"input": "", "chars" : ["apple"]}} }');
ERROR:   $rtrim requires 'chars' to be a string, got [ "apple" ] (of type array) instead.
select bson_dollar_project('{"_id":"1", "a" : 1}', '{"result" : { "$rtrim" : {"input": "$a"}} }');
ERROR:  $rtrim requires its input to be a string, got 1 (of type int) instead.
select bson_dollar_project('{"_id":"1", "a" : 1}', '{"result" : { "$rtrim" : {"input": "apple", "chars" : "$a"}} }');
ERROR:   $rtrim requires 'chars' to be a string, got 1 (of type int) instead.
--$indexOfBytes operator : basic test:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfBytes" : ["",""]} }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "0" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfBytes" : ["apple","ple"]} }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "2" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfBytes" : ["appleple","ple"]} }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "2" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfBytes" : ["appleple","ple",0,10]} }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "2" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfBytes" : ["appleple","ple",10,0]} }');
                 bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "-1" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfBytes" : ["appleple","xyz"]} }');
                 bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "-1" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfBytes" : ["","",1,3]} }');
                 bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "-1" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfBytes" : ["appleple","ple",4]} }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "5" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfBytes" : ["appleple","ple",4,5]} }');
                 bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "-1" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfBytes" : ["appleple","ple",4,6]} }');
                 bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "-1" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfBytes" : ["appleple","ple",2147483647,7]} }');
                 bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "-1" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfBytes" : ["appleple","ple",1,2147483647]} }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "2" } }
(1 row)

--$indexOfBytes operator : Unicode representation and escape sequences test:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfBytes" : ["\u0000\u00E2\t\n\u200A\u0080","\n\u200A"]} }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "4" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfBytes" : ["\u0000\u00E2\t\n\u200A\u0080","\u0080",4,7]} }');
                 bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "-1" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfBytes" : ["\u0000\u00E2\t\n\u200A\u0080","\u0080",7]} }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "8" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfBytes" : ["I ❤️ documentdb ","❤️"]} }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "2" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfBytes" : ["😁😲😎🧔🏽‍♂️🧔🏽‍♂️🧔🏽‍♂️😁😲😎","🧔🏽‍♂️🧔🏽‍♂️"]} }');
                 bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "12" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfBytes" : ["😁😲😎🧔🏽‍♂️🧔🏽‍♂️🧔🏽‍♂️😁😲😎","🧔🏽‍♂️🧔🏽‍♂️",2]} }');
                 bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "12" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfBytes" : ["😁😲😎🧔🏽‍♂️🧔🏽‍♂️🧔🏽‍♂️😁😲😎","🧔🏽‍♂️🧔🏽‍♂️",2,4]} }');
                 bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "-1" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfBytes" : ["😁😲😎🧔🏽‍♂️🧔🏽‍♂️🧔🏽‍♂️😁😲😎","🧔🏽‍♂️🧔🏽‍♂️",3,4]} }');
                 bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "-1" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfBytes" : ["😁😟😴🥲😀😋😎🙈🧔🏽‍♂️🧔🏽🧔🏽‍♂️🧔🏽‍♀️😲😁❤️🕷️🙈💔👳🏽‍♂️","😎🙈🧔🏽‍♂️🧔🏽🧔🏽‍♂️🧔🏽‍♀️"]} }');
                 bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "24" } }
(1 row)

-- $indexOfBytes operator: literals and operators :
select bson_dollar_project('{"_id":"1","a":"1234567", "b":"456","c":2, "d":9 }', '{"result" : { "$indexOfBytes" : ["$a","$b","$c","$d"]} }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "3" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfBytes" : [{"$concat" : ["a","p","p","l","e"]},{"$concat" : ["p","l"]},{"$add": [0,1]},{"$add" :[3,2]}]} }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "2" } }
(1 row)

-- $indexOfBytes operator: null test:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfBytes" : [null,"a"]} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfBytes" : [{"$undefined": true},"a"]} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfBytes" : ["$x","y"]} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

-- $indexOfBytes operator: Negative test :
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfBytes" : 1} }');
ERROR:  Expression $indexOfBytes takes at least 2 arguments, and at most 4, but 1 were passed in.
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfBytes" : []} }');
ERROR:  Expression $indexOfBytes takes at least 2 arguments, and at most 4, but 0 were passed in.
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfBytes" : ["a"]} }');
ERROR:  Expression $indexOfBytes takes at least 2 arguments, and at most 4, but 1 were passed in.
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfBytes" : [1]} }');
ERROR:  Expression $indexOfBytes takes at least 2 arguments, and at most 4, but 1 were passed in.
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfBytes" : ["a",1]} }');
ERROR:  $indexOfBytes requires a string as the second argument, found: int
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfBytes" : ["a",null]} }');
ERROR:  $indexOfBytes requires a string as the second argument, found: null
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfBytes" : ["a","$x"]} }');
ERROR:  $indexOfBytes requires a string as the second argument, found: missing
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfBytes" : ["a","b",-1]} }');
ERROR:  $indexOfBytes requires a nonnegative start index, found: -1
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfBytes" : ["a","b","x"]} }');
ERROR:  $indexOfBytes requires an integral starting index, found a value of type: string, with value: "x"
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfBytes" : ["a","b",1,-3]} }');
ERROR:  $indexOfBytes requires a nonnegative ending index, found: -3
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfBytes" : ["a","b",1,"z"]} }');
ERROR:  $indexOfBytes requires an integral ending index, found a value of type: string, with value: "z"
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfBytes" : ["a","b",1,"$t"]} }');
ERROR:  $indexOfBytes requires an integral ending index, found a value of type: missing, with value: MISSING
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfBytes" : ["appleple","ple",2147483648,7]} }');
ERROR:  $indexOfBytes requires a nonnegative start index, found: -2147483648
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfBytes" : ["appleple","ple",1,2147483648]} }');
ERROR:  $indexOfBytes requires a nonnegative ending index, found: -2147483648
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfBytes" : ["appleple","ple",1.2]} }');
ERROR:  $indexOfBytes requires an integral starting index, found a value of type: double, with value: 1.2
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfBytes" : ["appleple","ple",1,1.3]} }');
ERROR:  $indexOfBytes requires an integral ending index, found a value of type: double, with value: 1.3
--$indexOfCP operator : basic test:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfCP" : ["",""]} }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "0" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfCP" : ["apple","ple"]} }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "2" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfCP" : ["appleple","ple"]} }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "2" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfCP" : ["appleple","ple",0,10]} }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "2" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfCP" : ["appleple","ple",10,0]} }');
                 bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "-1" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfCP" : ["appleple","xyz"]} }');
                 bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "-1" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfCP" : ["appleple","ple",4]} }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "5" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfCP" : ["","",2,3]} }');
                 bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "-1" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfCP" : ["appleple","ple",4,5]} }');
                 bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "-1" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfCP" : ["appleple","ple",4,6]} }');
                 bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "-1" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfCP" : ["appleple","ple",2147483647,7]} }');
                 bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "-1" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfCP" : ["appleple","ple",1,2147483647]} }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "2" } }
(1 row)

--$indexOfCP operator : Unicode representation and escape sequences test:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfCP" : ["\u0000\u00E2\t\n\u200A\u0080","\n\u200A"]} }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "3" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfCP" : ["\u0000\u00E2\t\n\u200A\u0080","\u0080",7]} }');
                 bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "-1" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfCP" : ["I ❤️ documentdb ","❤️"]} }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "2" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfCP" : ["😁😲😎🧔🏽‍♂️🧔🏽‍♂️🧔🏽‍♂️😁😲😎","🧔🏽‍♂️🧔🏽‍♂️"]} }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "3" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfCP" : ["😁😲😎🧔🏽‍♂️🧔🏽‍♂️🧔🏽‍♂️😁😲😎","🧔🏽‍♂️🧔🏽‍♂️",2]} }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "3" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfCP" : ["😁😲😎🧔🏽‍♂️🧔🏽‍♂️🧔🏽‍♂️😁😲😎","🧔🏽‍♂️🧔🏽‍♂️",2,4]} }');
                 bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "-1" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfCP" : ["😁😲😎🧔🏽‍♂️🧔🏽‍♂️🧔🏽‍♂️😁😲😎","🧔🏽‍♂️🧔🏽‍♂️",3,4]} }');
                 bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "-1" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfCP" : ["😁😟😴🥲😀😋😎🙈🧔🏽‍♂️🧔🏽🧔🏽‍♂️🧔🏽‍♀️😲😁❤️🕷️🙈💔👳🏽‍♂️","😎🙈🧔🏽‍♂️🧔🏽🧔🏽‍♂️🧔🏽‍♀️"]} }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "6" } }
(1 row)

-- $indexOfCP operator: literals and operators :
select bson_dollar_project('{"_id":"1","a":"1234567", "b":"456","c":2, "d":9 }', '{"result" : { "$indexOfCP" : ["$a","$b","$c","$d"]} }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "3" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfCP" : [{"$concat" : ["a","p","p","l","e"]},{"$concat" : ["p","l"]},{"$add": [0,1]},{"$add" :[3,2]}]} }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "2" } }
(1 row)

-- $indexOfCP operator: null test:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfCP" : [null,"a"]} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfCP" : [{"$undefined": true},"a"]} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfCP" : ["$x","y"]} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

-- $indexOfCP operator: Negative test :
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfCP" : 1} }');
ERROR:  Expression $indexOfCP takes at least 2 arguments, and at most 4, but 1 were passed in.
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfCP" : []} }');
ERROR:  Expression $indexOfCP takes at least 2 arguments, and at most 4, but 0 were passed in.
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfCP" : ["a"]} }');
ERROR:  Expression $indexOfCP takes at least 2 arguments, and at most 4, but 1 were passed in.
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfCP" : [1]} }');
ERROR:  Expression $indexOfCP takes at least 2 arguments, and at most 4, but 1 were passed in.
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfCP" : ["a",1]} }');
ERROR:  $indexOfCP requires a string as the second argument, found: int
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfCP" : ["a",null]} }');
ERROR:  $indexOfCP requires a string as the second argument, found: null
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfCP" : ["a","$x"]} }');
ERROR:  $indexOfCP requires a string as the second argument, found: missing
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfCP" : ["a","b",-1]} }');
ERROR:  $indexOfCP requires a nonnegative start index, found: -1
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfCP" : ["a","b","x"]} }');
ERROR:  $indexOfCP requires an integral starting index, found a value of type: string, with value: "x"
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfCP" : ["a","b",1,-3]} }');
ERROR:  $indexOfCP requires a nonnegative ending index, found: -3
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfCP" : ["a","b",1,"z"]} }');
ERROR:  $indexOfCP requires an integral ending index, found a value of type: string, with value: "z"
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfCP" : ["a","b",1,"$t"]} }');
ERROR:  $indexOfCP requires an integral ending index, found a value of type: missing, with value: MISSING
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfCP" : ["appleple","ple",2147483648,7]} }');
ERROR:  $indexOfCP requires a nonnegative start index, found: -2147483648
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfCP" : ["appleple","ple",1,2147483648]} }');
ERROR:  $indexOfCP requires a nonnegative ending index, found: -2147483648
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfCP" : ["appleple","ple",1.2]} }');
ERROR:  $indexOfCP requires an integral starting index, found a value of type: double, with value: 1.2
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$indexOfCP" : ["appleple","ple",1,1.3]} }');
ERROR:  $indexOfCP requires an integral ending index, found a value of type: double, with value: 1.3
-- $toUpper operator: basic test:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toUpper" : ""} }');
      bson_dollar_project       
---------------------------------------------------------------------
 { "_id" : "1", "result" : "" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toUpper" : null} }');
      bson_dollar_project       
---------------------------------------------------------------------
 { "_id" : "1", "result" : "" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toUpper" : "A"} }');
       bson_dollar_project       
---------------------------------------------------------------------
 { "_id" : "1", "result" : "A" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toUpper" : "Apple"} }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "APPLE" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toUpper" : "🙈"} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : "🙈" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toUpper" : "I use to eat one apple 🍎 a day that became reason of my breakup 💔 as one apple a day keeps doctor away and she👧🏽 was a doctor 🧑🏽‍⚕️"} }');
                                                                          bson_dollar_project                                                                           
---------------------------------------------------------------------
 { "_id" : "1", "result" : "I USE TO EAT ONE APPLE 🍎 A DAY THAT BECAME REASON OF MY BREAKUP 💔 AS ONE APPLE A DAY KEEPS DOCTOR AWAY AND SHE👧🏽 WAS A DOCTOR 🧑🏽‍⚕️" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toUpper" : ["Apple"]} }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "APPLE" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toUpper" : "abcdefghijklmnopqrstuvwxyz"} }');
                   bson_dollar_project                    
---------------------------------------------------------------------
 { "_id" : "1", "result" : "ABCDEFGHIJKLMNOPQRSTUVWXYZ" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toUpper" : "1234567890"} }');
           bson_dollar_project            
---------------------------------------------------------------------
 { "_id" : "1", "result" : "1234567890" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toUpper" : "!@#$%^&*(){}[];:<>?"} }');
                bson_dollar_project                
---------------------------------------------------------------------
 { "_id" : "1", "result" : "!@#$%^&*(){}[];:<>?" }
(1 row)

-- $toUpper operator: Unicode representation and escape sequences  test:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toUpper" : ["I ❤️ documentdb"]} }');
             bson_dollar_project              
---------------------------------------------------------------------
 { "_id" : "1", "result" : "I ❤️ DOCUMENTDB" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toUpper" : "I ❤️ documentdb"} }');
             bson_dollar_project              
---------------------------------------------------------------------
 { "_id" : "1", "result" : "I ❤️ DOCUMENTDB" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toUpper" : "A\u0000B"} }');
          bson_dollar_project           
---------------------------------------------------------------------
 { "_id" : "1", "result" : "A\u0000B" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toUpper" : "a\u0000B\u000d"} }');
           bson_dollar_project            
---------------------------------------------------------------------
 { "_id" : "1", "result" : "A\u0000B\r" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toUpper" : "\uA000Bcd"} }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "ꀀBCD" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toUpper" : "a\u0000B\u0000\u0000z"} }');
                 bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : "A\u0000B\u0000\u0000Z" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toUpper" : "😀😁😂🤣😃😄😅😆😉😊😋😎🥲🙈🤔😪😟"} }');
                       bson_dollar_project                        
---------------------------------------------------------------------
 { "_id" : "1", "result" : "😀😁😂🤣😃😄😅😆😉😊😋😎🥲🙈🤔😪😟" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toUpper" : ["\u0022\u00A9\u0022\u00A9\u0022\u00A9\u0022\u00A9"]} }');
            bson_dollar_project             
---------------------------------------------------------------------
 { "_id" : "1", "result" : "\"©\"©\"©\"©" }
(1 row)

-- $toUpper operator: numbers, integers decimal:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toUpper" : 55.5} }');
        bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "55.5" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toUpper" : 1234567899877345} }');
              bson_dollar_project               
---------------------------------------------------------------------
 { "_id" : "1", "result" : "1234567899877345" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toUpper" : {"$numberInt": "3456"} } }');
        bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "3456" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toUpper" : {"$numberLong": "3456213324342"} } }');
             bson_dollar_project             
---------------------------------------------------------------------
 { "_id" : "1", "result" : "3456213324342" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toUpper" : {"$numberDecimal": "3456213324342.324789234567934"} } }');
                     bson_dollar_project                     
---------------------------------------------------------------------
 { "_id" : "1", "result" : "3456213324342.324789234567934" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toUpper" : {"$numberDecimal": "1e10"} } }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "1E+10" }
(1 row)

-- $toUpper operator: date and timestamps:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toUpper" : {"$date": { "$numberLong" : "0" }} } }');
                  bson_dollar_project                   
---------------------------------------------------------------------
 { "_id" : "1", "result" : "1970-01-01T00:00:00.000Z" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toUpper" : {"$date": { "$numberLong" : "86401" }} } }');
                  bson_dollar_project                   
---------------------------------------------------------------------
 { "_id" : "1", "result" : "1970-01-01T00:01:26.401Z" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toUpper" : {"$date": { "$numberLong" : "-33563519937977" }} } }');
                  bson_dollar_project                   
---------------------------------------------------------------------
 { "_id" : "1", "result" : "0906-06-01T08:01:02.023Z" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toUpper" : {"$timestamp": { "t" : 1671991326 , "i": 0}} } }');
                bson_dollar_project                
---------------------------------------------------------------------
 { "_id" : "1", "result" : "DEC 25 18:02:06:000" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toUpper" : {"$timestamp": { "t" : 0 , "i": 0}} } }');
                bson_dollar_project                
---------------------------------------------------------------------
 { "_id" : "1", "result" : "JAN 01 00:00:00:000" }
(1 row)

-- $toUpper operator: expressions:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toUpper" : {"$toUpper": "abcde" } } }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "ABCDE" }
(1 row)

select bson_dollar_project('{"_id":"2", "test": "this is a test"}', '{"result" : { "$toUpper" : "$test" } }');
             bson_dollar_project              
---------------------------------------------------------------------
 { "_id" : "2", "result" : "THIS IS A TEST" }
(1 row)

select bson_dollar_project('{"_id":"2"}', '{"result" : { "$toUpper" : {"$concat":["a","b","c","1"]} } }');
        bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "2", "result" : "ABC1" }
(1 row)

select bson_dollar_project('{"_id":"2"}', '{"result" : { "$toUpper" : "$test" } }');
      bson_dollar_project       
---------------------------------------------------------------------
 { "_id" : "2", "result" : "" }
(1 row)

-- $toUpper operator: negative test cases :
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toUpper" : ["a","b"] } }');
ERROR:  Expression $toUpper takes exactly 1 arguments. 2 were passed in.
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toUpper" : [1,"b"] } }');
ERROR:  Expression $toUpper takes exactly 1 arguments. 2 were passed in.
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toUpper" : true } }');
ERROR:  can't convert from BSON type bool to String
-- $toLower operator: basic test:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toLower" : ""} }');
      bson_dollar_project       
---------------------------------------------------------------------
 { "_id" : "1", "result" : "" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toLower" : null} }');
      bson_dollar_project       
---------------------------------------------------------------------
 { "_id" : "1", "result" : "" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toLower" : "A"} }');
       bson_dollar_project       
---------------------------------------------------------------------
 { "_id" : "1", "result" : "a" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toLower" : "Apple"} }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "apple" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toLower" : "🙈"} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : "🙈" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toLower" : "I USE To Eat One aPple 🍎 a dAy That Became rEasOn of my breakup 💔 as one apple a day keeps doctor away and she👧🏽 was a doctor 🧑🏽‍⚕️"} }');
                                                                          bson_dollar_project                                                                           
---------------------------------------------------------------------
 { "_id" : "1", "result" : "i use to eat one apple 🍎 a day that became reason of my breakup 💔 as one apple a day keeps doctor away and she👧🏽 was a doctor 🧑🏽‍⚕️" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toLower" : ["aPPLE"]} }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "apple" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toLower" : "abcLHKSFHdefghijklmnopqrstuvwxyz"} }');
                      bson_dollar_project                       
---------------------------------------------------------------------
 { "_id" : "1", "result" : "abclhksfhdefghijklmnopqrstuvwxyz" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toLower" : "1234567890"} }');
           bson_dollar_project            
---------------------------------------------------------------------
 { "_id" : "1", "result" : "1234567890" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toLower" : "!@#$%^&*(){}[];:<>?"} }');
                bson_dollar_project                
---------------------------------------------------------------------
 { "_id" : "1", "result" : "!@#$%^&*(){}[];:<>?" }
(1 row)

-- $toLower operator: Unicode representation and escape sequences  test:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toLower" : ["I ❤️ documentdb"]} }');
             bson_dollar_project              
---------------------------------------------------------------------
 { "_id" : "1", "result" : "i ❤️ documentdb" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toLower" : "I ❤️ documentdb"} }');
             bson_dollar_project              
---------------------------------------------------------------------
 { "_id" : "1", "result" : "i ❤️ documentdb" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toLower" : "A\u0000B"} }');
          bson_dollar_project           
---------------------------------------------------------------------
 { "_id" : "1", "result" : "a\u0000b" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toLower" : "a\u0000B\u000d"} }');
           bson_dollar_project            
---------------------------------------------------------------------
 { "_id" : "1", "result" : "a\u0000b\r" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toLower" : "\uA000Bcd"} }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "ꀀbcd" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toLower" : "a\u0000B\u0000\u0000z"} }');
                 bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : "a\u0000b\u0000\u0000z" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toLower" : "😀😁😂🤣😃😄😅😆😉😊😋😎🥲🙈🤔😪😟"} }');
                       bson_dollar_project                        
---------------------------------------------------------------------
 { "_id" : "1", "result" : "😀😁😂🤣😃😄😅😆😉😊😋😎🥲🙈🤔😪😟" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toLower" : ["\u0022\u00A9\u0022\u00A9\u0022\u00A9\u0022\u00A9"]} }');
            bson_dollar_project             
---------------------------------------------------------------------
 { "_id" : "1", "result" : "\"©\"©\"©\"©" }
(1 row)

-- $toLower operator: numbers, integers decimal:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toLower" : 55.5} }');
        bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "55.5" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toLower" : 1234567899877345} }');
              bson_dollar_project               
---------------------------------------------------------------------
 { "_id" : "1", "result" : "1234567899877345" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toLower" : {"$numberInt": "3456"} } }');
        bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "3456" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toLower" : {"$numberLong": "3456213324342"} } }');
             bson_dollar_project             
---------------------------------------------------------------------
 { "_id" : "1", "result" : "3456213324342" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toLower" : {"$numberDecimal": "3456213324342.324789234567934"} } }');
                     bson_dollar_project                     
---------------------------------------------------------------------
 { "_id" : "1", "result" : "3456213324342.324789234567934" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toLower" : {"$numberDecimal": "1e10"} } }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "1e+10" }
(1 row)

-- $toLower operator: date and timestamps:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toLower" : {"$date": { "$numberLong" : "0" }} } }');
                  bson_dollar_project                   
---------------------------------------------------------------------
 { "_id" : "1", "result" : "1970-01-01t00:00:00.000z" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toLower" : {"$date": { "$numberLong" : "86400" }} } }');
                  bson_dollar_project                   
---------------------------------------------------------------------
 { "_id" : "1", "result" : "1970-01-01t00:01:26.400z" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toLower" : {"$date": { "$numberLong" : "-33563519937977" }} } }');
                  bson_dollar_project                   
---------------------------------------------------------------------
 { "_id" : "1", "result" : "0906-06-01t08:01:02.023z" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toLower" : {"$timestamp": { "t" : 1671991326 , "i": 0}} } }');
                bson_dollar_project                
---------------------------------------------------------------------
 { "_id" : "1", "result" : "dec 25 18:02:06:000" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toLower" : {"$timestamp": { "t" : 0 , "i": 0}} } }');
                bson_dollar_project                
---------------------------------------------------------------------
 { "_id" : "1", "result" : "jan 01 00:00:00:000" }
(1 row)

-- $toLower operator: expressions:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toLower" : {"$toUpper": "abcde" } } }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "abcde" }
(1 row)

select bson_dollar_project('{"_id":"2", "test": "THIS IS a test"}', '{"result" : { "$toLower" : "$test" } }');
             bson_dollar_project              
---------------------------------------------------------------------
 { "_id" : "2", "result" : "this is a test" }
(1 row)

select bson_dollar_project('{"_id":"2"}', '{"result" : { "$toLower" : {"$concat":["A","B","C","1"]} } }');
        bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "2", "result" : "abc1" }
(1 row)

select bson_dollar_project('{"_id":"2"}', '{"result" : { "$toLower" : "$test" } }');
      bson_dollar_project       
---------------------------------------------------------------------
 { "_id" : "2", "result" : "" }
(1 row)

-- $toLower operator: negative test cases :
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toLower" : ["a","b"] } }');
ERROR:  Expression $toLower takes exactly 1 arguments. 2 were passed in.
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toLower" : [1,"b"] } }');
ERROR:  Expression $toLower takes exactly 1 arguments. 2 were passed in.
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$toLower" : true } }');
ERROR:  can't convert from BSON type bool to String
-- $strcasecmp operator: Unicode representation and escape sequences  test:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strcasecmp" : [ "\u0080D\u20ac", "\u0080d\u20ac"] } }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "0" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strcasecmp" : [ "\u0080D\u20ac\u000D", "\u0080d\u20ac\u000d"] } }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "0" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strcasecmp" : [ "I ❤️ documentdb", "I ❤️ documentdb" ] } }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "0" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strcasecmp" : [ "😀😁😂🤣😃😄😅😆😉😊😋😎🥲🙈🤔😪😟", "😀😁😂🤣😃😄😅😆😉😊😋😎🥲🙈🤔😪😟" ] } }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "0" } }
(1 row)

-- $strcasecmp operator: numbers, integers decimal:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strcasecmp" : ["1.2345",1.2345] } }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "0" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strcasecmp" : ["1.234512345566666234324",1.234512345566666234324] } }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "1" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strcasecmp" : [1.234512345566666234324, "1.234512345566666234324"] } }');
                 bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "-1" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strcasecmp" : [{"$numberDecimal": "1.234512345566666234324"}, "1.234512345566666234324"] } }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "0" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strcasecmp" : [{"$numberDecimal": "1.2e10"}, "1e10"] } }');
                 bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "-1" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strcasecmp" : [{"$numberDecimal": "1.2e10"}, "1e10"] } }');
                 bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "-1" } }
(1 row)

-- $strcasecmp operator: date and timestamps:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strcasecmp" : [ "1970-01-01T00:00:00.000Z", {"$date": { "$numberLong" : "0" }} ] } }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "0" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strcasecmp" : [ "1970-01-01T00:00:00.000Z", {"$date": { "$numberLong" : "0" }} ] } }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "0" } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strcasecmp" : [ "0906-06-01T08:01:02.023Z", {"$date": { "$numberLong" : "-33563519937977" }} ] } }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "$numberInt" : "0" } }
(1 row)

-- select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strcasecmp" : [ "DEC 25 18:02:06:000", {"$timestamp": { "t" : 1671991326 , "i": 0}} ] } }');
-- $strcasecmp operator: expressions:
select bson_dollar_project('{"_id":"2", "test": "THIS IS a test"}', '{"result" : { "$strcasecmp" : ["$test", "this is a test"] } }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "2", "result" : { "$numberInt" : "0" } }
(1 row)

select bson_dollar_project('{"_id":"2"}', '{"result" : { "$strcasecmp" : ["$test", ""] } }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "2", "result" : { "$numberInt" : "0" } }
(1 row)

-- $strcasecmp operator: negative test cases :
 select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strcasecmp" : [ "0906-06-01T08:01:02.023Z", true ] } }');
ERROR:  can't convert from BSON type bool to String
 select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strcasecmp" : [ ""] } }');
ERROR:  Expression $strCaseCmp takes exactly 2 arguments. 1 were passed in.
 select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strcasecmp" : ["", ["a"]] } }');
ERROR:  can't convert from BSON type array to String
 select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strcasecmp" : [{"$binary": {"base64": "ww==", "subType": "01"}},"a"] } }');
ERROR:  can't convert from BSON type binData to String
 select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strcasecmp" : ["", {"$regex": "/ab/cdsd/abc", "$options" : ""}] } }');
ERROR:  can't convert from BSON type regex to String
 select bson_dollar_project('{"_id":"1"}', '{"result" : { "$strcasecmp" : [ "" , "a2", 123] } }');
ERROR:  Expression $strCaseCmp takes exactly 2 arguments. 3 were passed in.
-- $substr operator: basic test:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substr" : ["hello", 0 , 0]} }');
      bson_dollar_project       
---------------------------------------------------------------------
 { "_id" : "1", "result" : "" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substr" : ["hello", 0 , 5]} }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "hello" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substr" : ["hello", 2 , 2]} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : "ll" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substr" : ["hello", 2 , -1]} }');
        bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : "llo" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substr" : ["hello", 2, 3]} }');
        bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : "llo" }
(1 row)

-- $substr operator: numbers, integers decimal:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substr" : [55.5, 0, -1]} }');
        bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "55.5" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substr" : [1234567899877345, 0, -1]} }');
              bson_dollar_project               
---------------------------------------------------------------------
 { "_id" : "1", "result" : "1234567899877345" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substr" : [{"$numberInt": "3456"}, 0, -1] } }');
        bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "3456" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substr" : [{"$numberLong": "3456213324342"}, 0, -1] } }');
             bson_dollar_project             
---------------------------------------------------------------------
 { "_id" : "1", "result" : "3456213324342" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substr" : [{"$numberDecimal": "3456213324342.324789234567934"}, 0, -1] } }');
                     bson_dollar_project                     
---------------------------------------------------------------------
 { "_id" : "1", "result" : "3456213324342.324789234567934" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substr" : [{"$numberDecimal": "1e10"}, 0, -1] } }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "1E+10" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substr" : ["This isa test", {"$numberLong": "2342342"}, -1] } }');
      bson_dollar_project       
---------------------------------------------------------------------
 { "_id" : "1", "result" : "" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substr" : ["This isa test", 0, {"$numberLong": "23423423"}] } }');
             bson_dollar_project             
---------------------------------------------------------------------
 { "_id" : "1", "result" : "This isa test" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substr" : ["This isa test", {"$numberLong": "2"}, 1] } }');
       bson_dollar_project       
---------------------------------------------------------------------
 { "_id" : "1", "result" : "i" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substr" : ["This isa test", {"$numberDecimal": "2342342.908123098234"}, -1] } }');
      bson_dollar_project       
---------------------------------------------------------------------
 { "_id" : "1", "result" : "" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substr" : ["This isa test", 3, {"$numberDecimal": "2.9934234"}] } }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : "s " }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substr" : ["This isa test", 2.9, -1] } }');
            bson_dollar_project            
---------------------------------------------------------------------
 { "_id" : "1", "result" : "is isa test" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substr" : ["This isa test", 1, 4.2] } }');
        bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "his " }
(1 row)

-- $substr operator: date and time types
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substr" : [{"$date": { "$numberLong" : "0" }}, 0, -1] } }');
                  bson_dollar_project                   
---------------------------------------------------------------------
 { "_id" : "1", "result" : "1970-01-01T00:00:00.000Z" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substr" : [{"$date": { "$numberLong" : "86400" }}, 0, -1] } }');
                  bson_dollar_project                   
---------------------------------------------------------------------
 { "_id" : "1", "result" : "1970-01-01T00:01:26.400Z" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substr" : [{"$date": { "$numberLong" : "-33563519937977" }}, 0, -1] } }');
                  bson_dollar_project                   
---------------------------------------------------------------------
 { "_id" : "1", "result" : "0906-06-01T08:01:02.023Z" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substr" : [{"$timestamp": { "t" : 1671991326 , "i": 0}}, 0, -1] } }');
                bson_dollar_project                
---------------------------------------------------------------------
 { "_id" : "1", "result" : "Dec 25 18:02:06:000" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substr" : [{"$timestamp": { "t" : 0 , "i": 0}}, 0, -1] } }');
                bson_dollar_project                
---------------------------------------------------------------------
 { "_id" : "1", "result" : "Jan 01 00:00:00:000" }
(1 row)

-- $substr operator: Unicode representation and escape sequences  test:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substr" : ["I ❤️ documentdb", 1, -1]} }');
             bson_dollar_project             
---------------------------------------------------------------------
 { "_id" : "1", "result" : " ❤️ documentdb" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substr" : ["A\u0000B", 1, 2]} }');
          bson_dollar_project          
---------------------------------------------------------------------
 { "_id" : "1", "result" : "\u0000B" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substr" : ["a\u0000B\u000d", 0, -1]} }');
           bson_dollar_project            
---------------------------------------------------------------------
 { "_id" : "1", "result" : "a\u0000B\r" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substr" : ["a\u0000B\u0000\u0000z", 2, 2]} }');
          bson_dollar_project          
---------------------------------------------------------------------
 { "_id" : "1", "result" : "B\u0000" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substr" : ["😀😁😂🤣😃😄😅😆😉😊😋😎🥲🙈🤔😪😟", 40, 16]} }');
          bson_dollar_project           
---------------------------------------------------------------------
 { "_id" : "1", "result" : "😋😎🥲🙈" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substr" : ["\u0022\u00A9\u0022\u00A9\u0022\u00A9\u0022\u00A9", 0, -1]} }');
            bson_dollar_project             
---------------------------------------------------------------------
 { "_id" : "1", "result" : "\"©\"©\"©\"©" }
(1 row)

-- $substr operator: expressions:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substr" : [{"$toUpper": "abcde" }, 0, -1] } }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "ABCDE" }
(1 row)

select bson_dollar_project('{"_id":"2", "test": "THIS IS a test"}', '{"result" : { "$substr" : ["$test", 0, -1] } }');
             bson_dollar_project              
---------------------------------------------------------------------
 { "_id" : "2", "result" : "THIS IS a test" }
(1 row)

select bson_dollar_project('{"_id":"2"}', '{"result" : { "$substr" : [{"$concat":["A","B","C","1"]}, 0, -1] } }');
        bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "2", "result" : "ABC1" }
(1 row)

select bson_dollar_project('{"_id":"2"}', '{"result" : { "$substr" : ["$test", 0, -1] } }');
      bson_dollar_project       
---------------------------------------------------------------------
 { "_id" : "2", "result" : "" }
(1 row)

-- $substr negative test cases:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substr" : ["hello", -1, 1]}}');
ERROR:  $substrBytes: starting index must be non-negative (got: -1)
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substr" : [[1, 2], 1, 1]}}');
ERROR:  can't convert from BSON type array to String
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substr" : [{"a" : "b"}, -1, 1]}}');
ERROR:  can't convert from BSON type object to String
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substr" : [{"$oid" : "639926cee6bda3127f153bf1"}, -1, 1]}}');
ERROR:  can't convert from BSON type objectId to String
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substr" : [NaN, -1, 1]}}');
ERROR:  $substrBytes: starting index must be non-negative (got: -1)
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substr" : ["I ❤️ documentdb", 2, 4]} }');
ERROR:  $substrBytes: Invalid range, ending index is in the middle of a UTF-8 character.
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substr" : ["\uA000Bcd", 1, 2]} }');
ERROR:  $substrBytes:  Invalid range, starting index is a UTF-8 continuation byte.
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substr" : [{"$binary": {"base64": "ww==", "subType": "01"}}, 0, -1] } }');
ERROR:  can't convert from BSON type binData to String
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substr" : [{"$regex": "/ab/cdsd/abc", "$options" : ""}, 0, -1] } }');
ERROR:  can't convert from BSON type regex to String
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substr" : ["hello", null, -1] } }');
ERROR:  $substrBytes: starting index must be a numeric type (is BSON type null)
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substr" : ["hello", 1, null] } }');
ERROR:  $substrBytes: length must be a numeric type (is BSON type null)
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substr" : {"a" : "b"} } }');
ERROR:  Expression $substrBytes takes exactly 3 arguments. 1 were passed in.
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substr" : null } }');
ERROR:  Expression $substrBytes takes exactly 3 arguments. 1 were passed in.
select bson_dollar_project('{"_id":"1", "a" : {"b" : ["hello", 1, 2]}}', '{"result" : { "$substr" : "$a.b" } }');
ERROR:  Expression $substrBytes takes exactly 3 arguments. 1 were passed in.
-- $substrBytes operator: basic test:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrBytes" : ["hello", 0 , 0]} }');
      bson_dollar_project       
---------------------------------------------------------------------
 { "_id" : "1", "result" : "" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrBytes" : ["hello", 0 , 5]} }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "hello" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrBytes" : ["hello", 2 , 2]} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : "ll" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrBytes" : ["hello", 2 , -1]} }');
        bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : "llo" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrBytes" : ["hello", 2, 3]} }');
        bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : "llo" }
(1 row)

-- $substrBytes operator: numbers, integers decimal:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrBytes" : [55.5, 0, -1]} }');
        bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "55.5" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrBytes" : [1234567899877345, 3, 6]} }');
         bson_dollar_project          
---------------------------------------------------------------------
 { "_id" : "1", "result" : "456789" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrBytes" : [{"$numberInt": "3456"}, 0, -1] } }');
        bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "3456" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrBytes" : [{"$numberLong": "3456213324342"}, 6, 15] } }');
          bson_dollar_project          
---------------------------------------------------------------------
 { "_id" : "1", "result" : "3324342" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrBytes" : [{"$numberDecimal": "3456213324342.324789234567934"}, 13, 5] } }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : ".3247" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrBytes" : [{"$numberDecimal": "1e10"}, 2, 2] } }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : "+1" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrBytes" : ["This isa test", {"$numberLong": "2342342"}, -1] } }');
      bson_dollar_project       
---------------------------------------------------------------------
 { "_id" : "1", "result" : "" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrBytes" : ["This isa test", 0, {"$numberLong": "23423423"}] } }');
             bson_dollar_project             
---------------------------------------------------------------------
 { "_id" : "1", "result" : "This isa test" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrBytes" : ["This isa test", {"$numberLong": "2"}, 1] } }');
       bson_dollar_project       
---------------------------------------------------------------------
 { "_id" : "1", "result" : "i" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrBytes" : ["This isa test", {"$numberDecimal": "2342342.908123098234"}, -1] } }');
      bson_dollar_project       
---------------------------------------------------------------------
 { "_id" : "1", "result" : "" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrBytes" : ["This isa test", 3, {"$numberDecimal": "2.9934234"}] } }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : "s " }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrBytes" : ["This isa test", 2.9, -1] } }');
            bson_dollar_project            
---------------------------------------------------------------------
 { "_id" : "1", "result" : "is isa test" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrBytes" : ["This isa test", 1, 4.2] } }');
        bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "his " }
(1 row)

-- $substrBytes operator: date and time types
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrBytes" : [{"$date": { "$numberLong" : "0" }}, 0, -1] } }');
                  bson_dollar_project                   
---------------------------------------------------------------------
 { "_id" : "1", "result" : "1970-01-01T00:00:00.000Z" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrBytes" : [{"$date": { "$numberLong" : "86400" }}, 0, -1] } }');
                  bson_dollar_project                   
---------------------------------------------------------------------
 { "_id" : "1", "result" : "1970-01-01T00:01:26.400Z" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrBytes" : [{"$date": { "$numberLong" : "-33563519937977" }}, 5, 8] } }');
          bson_dollar_project           
---------------------------------------------------------------------
 { "_id" : "1", "result" : "06-01T08" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrBytes" : [{"$timestamp": { "t" : 1671991326 , "i": 0}}, 4, 12] } }');
            bson_dollar_project             
---------------------------------------------------------------------
 { "_id" : "1", "result" : "25 18:02:06:" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrBytes" : [{"$timestamp": { "t" : 0 , "i": 0}}, 0, -1] } }');
                bson_dollar_project                
---------------------------------------------------------------------
 { "_id" : "1", "result" : "Jan 01 00:00:00:000" }
(1 row)

-- $substrBytes operator: Unicode representation and escape sequences  test:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrBytes" : ["I ❤️ documentdb", 1, -1]} }');
             bson_dollar_project             
---------------------------------------------------------------------
 { "_id" : "1", "result" : " ❤️ documentdb" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrBytes" : ["A\u0000B", 1, 2]} }');
          bson_dollar_project          
---------------------------------------------------------------------
 { "_id" : "1", "result" : "\u0000B" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrBytes" : ["a\u0000B\u000d", 0, -1]} }');
           bson_dollar_project            
---------------------------------------------------------------------
 { "_id" : "1", "result" : "a\u0000B\r" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrBytes" : ["a\u0000B\u0000\u0000z", 2, 2]} }');
          bson_dollar_project          
---------------------------------------------------------------------
 { "_id" : "1", "result" : "B\u0000" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrBytes" : ["😀😁😂🤣😃😄😅😆😉😊😋😎🥲🙈🤔😪😟", 40, 16]} }');
          bson_dollar_project           
---------------------------------------------------------------------
 { "_id" : "1", "result" : "😋😎🥲🙈" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrBytes" : ["\u0022\u00A9\u0022\u00A9\u0022\u00A9\u0022\u00A9", 0, -1]} }');
            bson_dollar_project             
---------------------------------------------------------------------
 { "_id" : "1", "result" : "\"©\"©\"©\"©" }
(1 row)

-- $substrBytes operator: expressions:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrBytes" : [{"$toUpper": "abcde" }, 0, -1] } }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "ABCDE" }
(1 row)

select bson_dollar_project('{"_id":"2", "test": "THIS IS a test"}', '{"result" : { "$substrBytes" : ["$test", 0, -1] } }');
             bson_dollar_project              
---------------------------------------------------------------------
 { "_id" : "2", "result" : "THIS IS a test" }
(1 row)

select bson_dollar_project('{"_id":"2"}', '{"result" : { "$substrBytes" : [{"$concat":["A","B","C","1"]}, 0, -1] } }');
        bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "2", "result" : "ABC1" }
(1 row)

select bson_dollar_project('{"_id":"2"}', '{"result" : { "$substrBytes" : ["$test", 0, -1] } }');
      bson_dollar_project       
---------------------------------------------------------------------
 { "_id" : "2", "result" : "" }
(1 row)

-- $substrBytes negative test cases:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrBytes" : ["hello", -1, 1]}}');
ERROR:  $substrBytes: starting index must be non-negative (got: -1)
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrBytes" : [[1, 2], 1, 1]}}');
ERROR:  can't convert from BSON type array to String
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrBytes" : [{"a" : "b"}, -1, 1]}}');
ERROR:  can't convert from BSON type object to String
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrBytes" : [{"$oid" : "639926cee6bda3127f153bf1"}, -1, 1]}}');
ERROR:  can't convert from BSON type objectId to String
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrBytes" : [NaN, -1, 1]}}');
ERROR:  $substrBytes: starting index must be non-negative (got: -1)
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrBytes" : ["I ❤️ documentdb", 2, 4]} }');
ERROR:  $substrBytes: Invalid range, ending index is in the middle of a UTF-8 character.
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrBytes" : ["\uA000Bcd", 1, 2]} }');
ERROR:  $substrBytes:  Invalid range, starting index is a UTF-8 continuation byte.
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrBytes" : [{"$binary": {"base64": "ww==", "subType": "01"}}, 0, -1] } }');
ERROR:  can't convert from BSON type binData to String
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrBytes" : [{"$regex": "/ab/cdsd/abc", "$options" : ""}, 0, -1] } }');
ERROR:  can't convert from BSON type regex to String
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrBytes" : ["hello", null, -1] } }');
ERROR:  $substrBytes: starting index must be a numeric type (is BSON type null)
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrBytes" : ["hello", 1, null] } }');
ERROR:  $substrBytes: length must be a numeric type (is BSON type null)
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrBytes" : {"a" : "b"} } }');
ERROR:  Expression $substrBytes takes exactly 3 arguments. 1 were passed in.
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrBytes" : null } }');
ERROR:  Expression $substrBytes takes exactly 3 arguments. 1 were passed in.
select bson_dollar_project('{"_id":"1", "a" : {"b" : ["hello", 1, 2]}}', '{"result" : { "$substrBytes" : "$a.b" } }');
ERROR:  Expression $substrBytes takes exactly 3 arguments. 1 were passed in.
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrBytes" : [null, 1, null] } }');
ERROR:  $substrBytes: length must be a numeric type (is BSON type null)
-- $substrCP operator: basic test:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : ["hello", 0 , 0]} }');
      bson_dollar_project       
---------------------------------------------------------------------
 { "_id" : "1", "result" : "" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : ["hello", 0 , 5]} }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "hello" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : ["hello", 2 , 2]} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : "ll" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : ["hello", 2 , 51]} }');
        bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : "llo" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : ["hello", 2, 3]} }');
        bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : "llo" }
(1 row)

-- $substrCP operator: numbers, integers decimal:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : [55.5, 0, 3]} }');
        bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : "55." }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : [1234567899877345, 0, 9]} }');
           bson_dollar_project           
---------------------------------------------------------------------
 { "_id" : "1", "result" : "123456789" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : [{"$numberInt": "3456"}, 0, 4] } }');
        bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "3456" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : [{"$numberLong": "3456213324342"}, 0, 10] } }');
           bson_dollar_project            
---------------------------------------------------------------------
 { "_id" : "1", "result" : "3456213324" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : [{"$numberDecimal": "3456213324342.324789234567934"}, 0, 25] } }');
                   bson_dollar_project                   
---------------------------------------------------------------------
 { "_id" : "1", "result" : "3456213324342.32478923456" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : [{"$numberDecimal": "1e10"}, 0, 5] } }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "1E+10" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : ["This isa test", {"$numberLong": "2342342"}, 5] } }');
      bson_dollar_project       
---------------------------------------------------------------------
 { "_id" : "1", "result" : "" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : ["This isa test", 0, {"$numberLong": "23423423"}] } }');
             bson_dollar_project             
---------------------------------------------------------------------
 { "_id" : "1", "result" : "This isa test" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : ["This isa test", {"$numberLong": "2"}, 1] } }');
       bson_dollar_project       
---------------------------------------------------------------------
 { "_id" : "1", "result" : "i" }
(1 row)

-- $substrCP operator: date and time types
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : [{"$date": { "$numberLong" : "0" }}, 0, 20] } }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : "1970-01-01T00:00:00." }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : [{"$date": { "$numberLong" : "86400" }}, 0, 20] } }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : "1970-01-01T00:01:26." }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : [{"$date": { "$numberLong" : "-33563519937977" }}, 0, 20] } }');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : "0906-06-01T08:01:02." }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : [{"$timestamp": { "t" : 1671991326 , "i": 0}}, 0, 20] } }');
                bson_dollar_project                
---------------------------------------------------------------------
 { "_id" : "1", "result" : "Dec 25 18:02:06:000" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : [{"$timestamp": { "t" : 0 , "i": 0}}, 0, 20] } }');
                bson_dollar_project                
---------------------------------------------------------------------
 { "_id" : "1", "result" : "Jan 01 00:00:00:000" }
(1 row)

-- $substrCP operator: special characters and escape sequences  test:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : ["jalapeño", 4, 3]} }');
        bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : "peñ" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : ["jalapeño", 6, 2]} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : "ño" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : [ "cafétéria", 5, 4]} }');
        bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "éria" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : [ "cafétéria", 7, 3]} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : "ia" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : [ "寿司sushi", 0, 3]} }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "寿司s" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : ["I ❤️ documentdb", 2, 1]} }');
       bson_dollar_project       
---------------------------------------------------------------------
 { "_id" : "1", "result" : "❤" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : ["I ❤️ documentdb", 1, 5]} }');
        bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : " ❤️ d" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : ["A\u0000B", 1, 2]} }');
          bson_dollar_project          
---------------------------------------------------------------------
 { "_id" : "1", "result" : "\u0000B" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : ["a\u0000B\u000d", 0, 2]} }');
          bson_dollar_project          
---------------------------------------------------------------------
 { "_id" : "1", "result" : "a\u0000" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : ["\uA000Bcd", 1, 2]} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : "Bc" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$susbtrCP" : ["a\u0000B\u0000\u0000z", 2, 2]} }');
ERROR:  Unknown expression $susbtrCP
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : ["😀😁😂🤣😃😄😅😆😉😊😋😎🥲🙈🤔😪😟", 40, 13]} }');
      bson_dollar_project       
---------------------------------------------------------------------
 { "_id" : "1", "result" : "" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : ["\u0022\u00A9\u0022\u00A9\u0022\u00A9\u0022\u00A9", 1, 2]} }');
        bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : "©\"" }
(1 row)

-- $substrCP operator: expressions:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : [{"$toUpper": "abcde" }, 0, 5] } }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "ABCDE" }
(1 row)

select bson_dollar_project('{"_id":"2", "test": "THIS IS a test"}', '{"result" : { "$substrCP" : ["$test", 0, 5] } }');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "2", "result" : "THIS " }
(1 row)

select bson_dollar_project('{"_id":"2"}', '{"result" : { "$substrCP" : [{"$concat":["A","B","C","1"]}, 0, 5] } }');
        bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "2", "result" : "ABC1" }
(1 row)

select bson_dollar_project('{"_id":"2"}', '{"result" : { "$substrCP" : ["$test", 0, 5] } }');
      bson_dollar_project       
---------------------------------------------------------------------
 { "_id" : "2", "result" : "" }
(1 row)

select bson_dollar_project('{"_id":"2"}', '{"output":{"$substrCP" : ["∫aƒ",0,{"$subtract" : [{"$strLenCP" : "∫aƒ"},0]}]}}');
        bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "2", "output" : "∫aƒ" }
(1 row)

-- $substrCP negative test cases:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : ["hello", -1, 1]}}');
ERROR:  $substrCP: the starting index must be nonnegative integer.
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : [[1, 2], 1, 1]}}');
ERROR:  can't convert from BSON type array to String
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : [{"a" : "b"}, -1, 1]}}');
ERROR:  can't convert from BSON type object to String
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : [{"$oid" : "639926cee6bda3127f153bf1"}, -1, 1]}}');
ERROR:  can't convert from BSON type objectId to String
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : [NaN, -1, 1]}}');
ERROR:  $substrCP: the starting index must be nonnegative integer.
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : [{"$binary": {"base64": "ww==", "subType": "01"}}, 0, -1] } }');
ERROR:  can't convert from BSON type binData to String
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : [{"$regex": "/ab/cdsd/abc", "$options" : ""}, 0, -1] } }');
ERROR:  can't convert from BSON type regex to String
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : ["hello", null, -1] } }');
ERROR:  $substrCP: starting index must be a numeric type (is BSON type null)
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : ["hello", 1, null] } }');
ERROR:  $substrCP: length must be a numeric type (is BSON type null)
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : {"a" : "b"} } }');
ERROR:  Expression $substrCP takes exactly 3 arguments. 1 were passed in.
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : null } }');
ERROR:  Expression $substrCP takes exactly 3 arguments. 1 were passed in.
select bson_dollar_project('{"_id":"1", "a" : {"b" : ["hello", 1, 2]}}', '{"result" : { "$substrCP" : "$a.b" } }');
ERROR:  Expression $substrCP takes exactly 3 arguments. 1 were passed in.
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : [null, 1, null] } }');
ERROR:  $substrCP: length must be a numeric type (is BSON type null)
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : ["hello", 1.1, 1] } }');
ERROR:  $substrCP: starting index cannot be represented as a 32-bit integral value
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : ["hello", 1, 1.1] } }');
ERROR:  $substrCP: length cannot be represented as a 32-bit integral value
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : ["hello", -1, 1] } }');
ERROR:  $substrCP: the starting index must be nonnegative integer.
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : ["hello", 1, -1] } }');
ERROR:  $substrCP: length must be a nonnegative integer.
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : ["hello", 1, NaN] } }');
ERROR:  $substrCP: length cannot be represented as a 32-bit integral value
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : ["hello", NaN, 1] } }');
ERROR:  $substrCP: starting index cannot be represented as a 32-bit integral value
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : ["This isa test", {"$numberDecimal": "2342342.908123098234"}, -1] } }');
ERROR:  $substrCP: starting index cannot be represented as a 32-bit integral value
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : ["This isa test", 3, {"$numberDecimal": "2.9934234"}] } }');
ERROR:  $substrCP: length cannot be represented as a 32-bit integral value
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : ["This isa test", 2.9, -1] } }');
ERROR:  $substrCP: starting index cannot be represented as a 32-bit integral value
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$substrCP" : ["This isa test", 1, 4.2] } }');
ERROR:  $substrCP: length cannot be represented as a 32-bit integral value
-- $regexMatch operator: basic test:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexMatch" : {"input":"", "regex" : "" }} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : true }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexMatch" : {"input":"a", "regex" : "a" }} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : true }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexMatch" : {"input":"a", "regex" : "b" }} }');
        bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : false }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexMatch" : {"input":"vcore", "regex" : "Ru-Based" }} }');
        bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : false }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexMatch" : {"input":"apple", "regex" : "apple" }} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : true }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexMatch" : {"input":"apple is a fruit", "regex" : "is" }} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : true }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexMatch" : {"input":"apple is a fruit", "regex" : "fruit" }} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : true }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexMatch" : {"input":"APPLE", "regex" : "apple" }} }');
        bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : false }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexMatch" : {"input":"APPLE", "regex" : "apple", "options": "i" }} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : true }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexMatch" : {"input":"APPLE","regex" : {"$regex" : "apple", "$options" : "i"} }} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : true }
(1 row)

select bson_dollar_project('{"_id":"2"}', '{"result" : { "$regexMatch" : {"input":"Banana","regex" : {"$regex" : "banana", "$options" : "i"} }} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "2", "result" : true }
(1 row)

-- $regexMatch operator: complex regex pattern test:
select bson_dollar_project('{"_id":"4"}', '{"result" : { "$regexMatch" : {"input":"1234567890","regex" : "\\d{3}", "options" : "" }} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "4", "result" : true }
(1 row)

select bson_dollar_project('{"_id":"3"}', '{"result" : { "$regexMatch" : {"input":"Hello World","regex" : "\\bworld\\b", "options" : "i" }} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "3", "result" : true }
(1 row)

select bson_dollar_project('{"_id":"5"}', '{"result" : { "$regexMatch" : {"input":"Microsoft IDC","regex" : "id", "options" : "i" }} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "5", "result" : true }
(1 row)

select bson_dollar_project('{"_id":"6"}', '{"result" : { "$regexMatch" : {"input":"Hello, World!","regex" : "[,!]", "options" : "i" }} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "6", "result" : true }
(1 row)

select bson_dollar_project('{"_id":"7"}', '{"result" : { "$regexMatch" : {"input":"Lorem ipsum dolor sit amet, consectetur adipiscing elit.","regex" : "\\b\\w{5}\\b", "options" : "i" }} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "7", "result" : true }
(1 row)

select bson_dollar_project('{"_id":"8"}', '{"result" : { "$regexMatch" : {"input":"Email me at john@example.com or call 555-123-4567 for more information.","regex" : "\\b[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}\\b|\\b\\d{3}-\\d{3}-\\d{4}\\b", "options" : "i" }} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "8", "result" : true }
(1 row)

select bson_dollar_project('{"_id":"9"}', '{"result" : { "$regexMatch" : {"input":"<h1>Hello</h1><p>Paragraph 1</p><p>Paragraph 2</p>","regex" : "<p>(.*?)</p>", "options" : "i" }} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "9", "result" : true }
(1 row)

-- $regexMatch operator: complex regex pattern with BSON_TYPE_REGEX:
select bson_dollar_project('{"_id":"4"}', '{"result" : { "$regexMatch" : {"input":"1234567890","regex" : {"$regex" : "\\d{3}", "$options" : ""} }} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "4", "result" : true }
(1 row)

select bson_dollar_project('{"_id":"3"}', '{"result" : { "$regexMatch" : {"input":"Hello World","regex" : {"$regex" : "\\bworld\\b", "$options" : "i"} }} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "3", "result" : true }
(1 row)

select bson_dollar_project('{"_id":"5"}', '{"result" : { "$regexMatch" : {"input":"Microsoft IDC","regex" : {"$regex" : "id", "$options" : "i"} }} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "5", "result" : true }
(1 row)

select bson_dollar_project('{"_id":"6"}', '{"result" : { "$regexMatch" : {"input":"Hello, World!","regex" : {"$regex" : "[,!]", "$options" : "i"} }} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "6", "result" : true }
(1 row)

select bson_dollar_project('{"_id":"7"}', '{"result" : { "$regexMatch" : {"input":"Lorem ipsum dolor sit amet, consectetur adipiscing elit.","regex" : {"$regex" : "\\b\\w{5}\\b", "$options" : "i"} }} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "7", "result" : true }
(1 row)

select bson_dollar_project('{"_id":"8"}', '{"result" : { "$regexMatch" : {"input":"Email me at john@example.com or call 555-123-4567 for more information.","regex" : {"$regex" : "\\b[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}\\b|\\b\\d{3}-\\d{3}-\\d{4}\\b", "$options" : "i"} }} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "8", "result" : true }
(1 row)

select bson_dollar_project('{"_id":"9"}', '{"result" : { "$regexMatch" : {"input":"<h1>Hello</h1><p>Paragraph 1</p><p>Paragraph 2</p>","regex" : {"$regex" : "<p>(.*?)</p>", "$options" : "i"} }} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "9", "result" : true }
(1 row)

-- $regexMatch operator: captures in output:
select bson_dollar_project('{"_id":"10"}', '{"result" : { "$regexMatch" : {"input":"John Doe, 25 years old","regex" : {"$regex" : "(\\w+) (\\w+), (\\d+) years old", "$options" : "i"} }} }');
        bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "10", "result" : true }
(1 row)

select bson_dollar_project('{"_id":"11"}', '{"result" : { "$regexMatch" : {"input":"Date: 2023-07-14","regex" : {"$regex" : "Date: (\\d{4}-\\d{2}-\\d{2})", "$options" : ""} }} }');
        bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "11", "result" : true }
(1 row)

select bson_dollar_project('{"_id":"12"}', '{"result" : { "$regexMatch" : {"input":"Product: Apple iPhone 12","regex" : {"$regex" : "Product: (\\w+) (\\w+) (\\d+)", "$options" : "i"} }} }');
        bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "12", "result" : true }
(1 row)

select bson_dollar_project('{"_id":"13"}', '{"result" : { "$regexMatch" : {"input":"Email: john@example.com","regex" : {"$regex" : "Email: ([a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,})", "$options" : "i"} }} }');
        bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "13", "result" : true }
(1 row)

select bson_dollar_project('{"_id":"14"}', '{"result" : { "$regexMatch" : {"input":"Lorem ipsum dolor sit amet, consectetur adipiscing elit.","regex" : {"$regex" : "(\\b\\w{5}\\b)", "$options" : ""} }} }');
        bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "14", "result" : true }
(1 row)

-- $regexMatch operator: different options:
select bson_dollar_project('{"_id":"15"}', '{"result" : { "$regexMatch" : {"input":"Hello\nworld","regex" : {"$regex" : "^world", "$options" : "m"} }} }');
        bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "15", "result" : true }
(1 row)

select bson_dollar_project('{"_id":"16"}', '{"result" : { "$regexMatch" : {"input":"The quick brown FOX","regex" : {"$regex" : "\\bfox\\b", "$options" : "i"} }} }');
        bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "16", "result" : true }
(1 row)

select bson_dollar_project('{"_id":"17"}', '{"result" : { "$regexMatch" : {"input":"123\n456\n789","regex" : {"$regex" : "\\d+", "$options" : "g"}}}}');
        bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "17", "result" : true }
(1 row)

select bson_dollar_project('{"_id":"18"}', '{"result" : { "$regexMatch" : {"input":"This is a long text","regex" : {"$regex" : "long text", "$options" : "is"} }} }');
        bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "18", "result" : true }
(1 row)

select bson_dollar_project('{"_id":"20"}', '{"result" : { "$regexMatch" : {"input":"Hello there","regex" : {"$regex" : "Hello\\s there", "$options" : "x"} }} }');
        bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "20", "result" : true }
(1 row)

-- $regexMatch operator: false cases:
select bson_dollar_project('{"_id":"16"}', '{"result" : { "$regexMatch" : {"input":null,"regex" : {"$regex" : "", "$options" : ""} }
} }');
        bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "16", "result" : false }
(1 row)

select bson_dollar_project('{"_id":"16"}', '{"result" : { "$regexMatch" : {"input":"a","regex" : null }} }');
        bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "16", "result" : false }
(1 row)

select bson_dollar_project('{"_id":"16"}', '{"result" : { "$regexMatch" : {"input":"$z","regex" : {"$regex" : "", "$options" : ""} }
} }');
        bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "16", "result" : false }
(1 row)

select bson_dollar_project('{"_id":"16"}', '{"result" : { "$regexMatch" : {"input":"a","regex" : "$z" }} }');
        bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "16", "result" : false }
(1 row)

select bson_dollar_project('{"_id":"16"}', '{"result" : { "$regexMatch" : {"input":"apple","regex" : "boy" }} }');
        bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "16", "result" : false }
(1 row)

select bson_dollar_project('{"_id":"16"}', '{"result" : { "$regexMatch" : {"input":"The quick brown FOX","regex" : {"$regex" : "\\bfox\\b", "$options" : ""} }} }');
        bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "16", "result" : false }
(1 row)

select bson_dollar_project('{"_id":"19"}', '{"result" : { "$regexMatch" : {"input":"This is a\nmultiline\nstring","regex" : {"$regex" : "multiline string", "$options" : "ix"} }} }');
        bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "19", "result" : false }
(1 row)

-- $regexMatch operator: expression cases:
select bson_dollar_project('{"_id":"1","a":"apple", "b":"app"}', '{"result" : { "$regexMatch" : {"input":"$a", "regex" : "$b" }} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : true }
(1 row)

select bson_dollar_project('{"_id":"1","a":"APPLE", "b":"app", "c" : "i"}', '{"result" : { "$regexMatch" : {"input":"$a", "regex" : "$b", "options" :"$c" }} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : true }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexMatch" : {"input": {"$concat" : ["APPLE", "IS", "FRUIT"]}, "regex" : {"$toLower" : "APPLE"}, "options": {"$concat" : "i"} }} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : true }
(1 row)

-- $regexMatch operator: negative test cases :
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexMatch" : {"input":"", "regex" : "", "extra" : "" }} }');
ERROR:  $regexMatch found an unknown argument: extra
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexMatch" : { "regex" : ""}} }');
ERROR:  $regexMatch requires 'input' parameter
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexMatch" : { "input" : ""}} }');
ERROR:  $regexMatch requires 'regex' parameter
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexMatch" : {"input": 1, "regex" : "", "options" : "" }} }');
ERROR:  $regexMatch needs 'input' to be of type string
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexMatch" : {"input": "a", "regex" : 1, "options" : "" }} }');
ERROR:  $regexMatch needs 'regex' to be of type string or regex
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexMatch" : {"input": "a", "regex" : "a", "options" : 1 }} }');
ERROR:  $regexMatch needs 'options' to be of type string
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexMatch" : {"input": "a", "regex" : {"$regex" : "", "$options": "i"}, "options" : "i" }} }');
ERROR:  $regexMatch found regex option(s) specified in both 'regex' and 'option' fields
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexMatch" : {"input": "a", "regex" : "a", "options" : "g" }} }');
ERROR:  $regexMatch invalid flag in regex options: g
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexMatch" : null} }');
ERROR:  $regexMatch expects an object of named arguments but found: null
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexMatch" : 1} }');
ERROR:  $regexMatch expects an object of named arguments but found: int
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexMatch" : {"input": "string", "regex" :"", "options" : "\u0000"} } }');
ERROR:  $regexMatch:  regular expression options cannot contain an embedded null byte
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexMatch" : {"input": "string", "regex" :"\u0000", "options" : "i"} } }');
ERROR:  $regexMatch: regular expression cannot contain an embedded null byte
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexMatch" : {"input": "string", "regex" :"(m(p)"} } }');
ERROR:  Invalid Regex in $regexMatch: missing closing parenthesis
-- $regexFind operator: basic test:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexFind" : {"input":"", "regex" : "" }} }');
                                       bson_dollar_project                                       
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "match" : "", "idx" : { "$numberInt" : "0" }, "captures" : [  ] } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexFind" : {"input":"a", "regex" : "a" }} }');
                                       bson_dollar_project                                        
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "match" : "a", "idx" : { "$numberInt" : "0" }, "captures" : [  ] } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexFind" : {"input":"apple", "regex" : "apple" }} }');
                                         bson_dollar_project                                          
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "match" : "apple", "idx" : { "$numberInt" : "0" }, "captures" : [  ] } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexFind" : {"input":"apple is a fruit", "regex" : "is" }} }');
                                        bson_dollar_project                                        
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "match" : "is", "idx" : { "$numberInt" : "6" }, "captures" : [  ] } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexFind" : {"input":"apple is a fruit", "regex" : "fruit" }} }');
                                          bson_dollar_project                                          
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "match" : "fruit", "idx" : { "$numberInt" : "11" }, "captures" : [  ] } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexFind" : {"input":"APPLE", "regex" : "apple" }} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexFind" : {"input":"APPLE", "regex" : "apple", "options": "i" }} }');
                                         bson_dollar_project                                          
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "match" : "APPLE", "idx" : { "$numberInt" : "0" }, "captures" : [  ] } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexFind" : {"input":"APPLE","regex" : {"$regex" : "apple", "$options" : "i"} }} }');
                                         bson_dollar_project                                          
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "match" : "APPLE", "idx" : { "$numberInt" : "0" }, "captures" : [  ] } }
(1 row)

select bson_dollar_project('{"_id":"2"}', '{"result" : { "$regexFind" : {"input":"Banana","regex" : {"$regex" : "banana", "$options" : "i"} }} }');
                                          bson_dollar_project                                          
---------------------------------------------------------------------
 { "_id" : "2", "result" : { "match" : "Banana", "idx" : { "$numberInt" : "0" }, "captures" : [  ] } }
(1 row)

-- $regexFind operator: complex regex pattern test:
select bson_dollar_project('{"_id":"4"}', '{"result" : { "$regexFind" : {"input":"1234567890","regex" : "\\d{3}", "options" : "" }} }');
                                        bson_dollar_project                                         
---------------------------------------------------------------------
 { "_id" : "4", "result" : { "match" : "123", "idx" : { "$numberInt" : "0" }, "captures" : [  ] } }
(1 row)

select bson_dollar_project('{"_id":"3"}', '{"result" : { "$regexFind" : {"input":"Hello World","regex" : "\\bworld\\b", "options" : "i" }} }');
                                         bson_dollar_project                                          
---------------------------------------------------------------------
 { "_id" : "3", "result" : { "match" : "World", "idx" : { "$numberInt" : "6" }, "captures" : [  ] } }
(1 row)

select bson_dollar_project('{"_id":"5"}', '{"result" : { "$regexFind" : {"input":"Microsoft IDC","regex" : "id", "options" : "i" }} }');
                                        bson_dollar_project                                         
---------------------------------------------------------------------
 { "_id" : "5", "result" : { "match" : "ID", "idx" : { "$numberInt" : "10" }, "captures" : [  ] } }
(1 row)

select bson_dollar_project('{"_id":"6"}', '{"result" : { "$regexFind" : {"input":"Hello, World!","regex" : "[,!]", "options" : "i" }} }');
                                       bson_dollar_project                                        
---------------------------------------------------------------------
 { "_id" : "6", "result" : { "match" : ",", "idx" : { "$numberInt" : "5" }, "captures" : [  ] } }
(1 row)

select bson_dollar_project('{"_id":"7"}', '{"result" : { "$regexFind" : {"input":"Lorem ipsum dolor sit amet, consectetur adipiscing elit.","regex" : "\\b\\w{5}\\b", "options" : "i" }} }');
                                         bson_dollar_project                                          
---------------------------------------------------------------------
 { "_id" : "7", "result" : { "match" : "Lorem", "idx" : { "$numberInt" : "0" }, "captures" : [  ] } }
(1 row)

select bson_dollar_project('{"_id":"8"}', '{"result" : { "$regexFind" : {"input":"Email me at john@example.com or call 555-123-4567 for more information.","regex" : "\\b[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}\\b|\\b\\d{3}-\\d{3}-\\d{4}\\b", "options" : "i" }} }');
                                               bson_dollar_project                                                
---------------------------------------------------------------------
 { "_id" : "8", "result" : { "match" : "john@example.com", "idx" : { "$numberInt" : "12" }, "captures" : [  ] } }
(1 row)

select bson_dollar_project('{"_id":"9"}', '{"result" : { "$regexFind" : {"input":"<h1>Hello</h1><p>Paragraph 1</p><p>Paragraph 2</p>","regex" : "<p>(.*?)</p>", "options" : "i" }} }');
                                                       bson_dollar_project                                                       
---------------------------------------------------------------------
 { "_id" : "9", "result" : { "match" : "<p>Paragraph 1</p>", "idx" : { "$numberInt" : "14" }, "captures" : [ "Paragraph 1" ] } }
(1 row)

-- $regexFind operator: complex regex pattern with BSON_TYPE_REGEX:
select bson_dollar_project('{"_id":"4"}', '{"result" : { "$regexFind" : {"input":"1234567890","regex" : {"$regex" : "\\d{3}", "$options" : ""} }} }');
                                        bson_dollar_project                                         
---------------------------------------------------------------------
 { "_id" : "4", "result" : { "match" : "123", "idx" : { "$numberInt" : "0" }, "captures" : [  ] } }
(1 row)

select bson_dollar_project('{"_id":"3"}', '{"result" : { "$regexFind" : {"input":"Hello World","regex" : {"$regex" : "\\bworld\\b", "$options" : "i"} }} }');
                                         bson_dollar_project                                          
---------------------------------------------------------------------
 { "_id" : "3", "result" : { "match" : "World", "idx" : { "$numberInt" : "6" }, "captures" : [  ] } }
(1 row)

select bson_dollar_project('{"_id":"5"}', '{"result" : { "$regexFind" : {"input":"Microsoft IDC","regex" : {"$regex" : "id", "$options" : "i"} }} }');
                                        bson_dollar_project                                         
---------------------------------------------------------------------
 { "_id" : "5", "result" : { "match" : "ID", "idx" : { "$numberInt" : "10" }, "captures" : [  ] } }
(1 row)

select bson_dollar_project('{"_id":"6"}', '{"result" : { "$regexFind" : {"input":"Hello, World!","regex" : {"$regex" : "[,!]", "$options" : "i"} }} }');
                                       bson_dollar_project                                        
---------------------------------------------------------------------
 { "_id" : "6", "result" : { "match" : ",", "idx" : { "$numberInt" : "5" }, "captures" : [  ] } }
(1 row)

select bson_dollar_project('{"_id":"7"}', '{"result" : { "$regexFind" : {"input":"Lorem ipsum dolor sit amet, consectetur adipiscing elit.","regex" : {"$regex" : "\\b\\w{5}\\b", "$options" : "i"} }} }');
                                         bson_dollar_project                                          
---------------------------------------------------------------------
 { "_id" : "7", "result" : { "match" : "Lorem", "idx" : { "$numberInt" : "0" }, "captures" : [  ] } }
(1 row)

select bson_dollar_project('{"_id":"8"}', '{"result" : { "$regexFind" : {"input":"Email me at john@example.com or call 555-123-4567 for more information.","regex" : {"$regex" : "\\b[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}\\b|\\b\\d{3}-\\d{3}-\\d{4}\\b", "$options" : "i"} }} }');
                                               bson_dollar_project                                                
---------------------------------------------------------------------
 { "_id" : "8", "result" : { "match" : "john@example.com", "idx" : { "$numberInt" : "12" }, "captures" : [  ] } }
(1 row)

select bson_dollar_project('{"_id":"9"}', '{"result" : { "$regexFind" : {"input":"<h1>Hello</h1><p>Paragraph 1</p><p>Paragraph 2</p>","regex" : {"$regex" : "<p>(.*?)</p>", "$options" : "i"} }} }');
                                                       bson_dollar_project                                                       
---------------------------------------------------------------------
 { "_id" : "9", "result" : { "match" : "<p>Paragraph 1</p>", "idx" : { "$numberInt" : "14" }, "captures" : [ "Paragraph 1" ] } }
(1 row)

-- $regexFind operator: captures in output:
select bson_dollar_project('{"_id":"10"}', '{"result" : { "$regexFind" : {"input":"John Doe, 25 years old","regex" : {"$regex" : "(\\w+) (\\w+), (\\d+) years old", "$options" : "i"} }} }');
                                                            bson_dollar_project                                                            
---------------------------------------------------------------------
 { "_id" : "10", "result" : { "match" : "John Doe, 25 years old", "idx" : { "$numberInt" : "0" }, "captures" : [ "John", "Doe", "25" ] } }
(1 row)

select bson_dollar_project('{"_id":"11"}', '{"result" : { "$regexFind" : {"input":"Date: 2023-07-14","regex" : {"$regex" : "Date: (\\d{4}-\\d{2}-\\d{2})", "$options" : ""} }} }');
                                                     bson_dollar_project                                                      
---------------------------------------------------------------------
 { "_id" : "11", "result" : { "match" : "Date: 2023-07-14", "idx" : { "$numberInt" : "0" }, "captures" : [ "2023-07-14" ] } }
(1 row)

select bson_dollar_project('{"_id":"12"}', '{"result" : { "$regexFind" : {"input":"Product: Apple iPhone 12","regex" : {"$regex" : "Product: (\\w+) (\\w+) (\\d+)", "$options" : "i"} }} }');
                                                               bson_dollar_project                                                               
---------------------------------------------------------------------
 { "_id" : "12", "result" : { "match" : "Product: Apple iPhone 12", "idx" : { "$numberInt" : "0" }, "captures" : [ "Apple", "iPhone", "12" ] } }
(1 row)

select bson_dollar_project('{"_id":"13"}', '{"result" : { "$regexFind" : {"input":"Email: john@example.com","regex" : {"$regex" : "Email: ([a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,})", "$options" : "i"} }} }');
                                                            bson_dollar_project                                                            
---------------------------------------------------------------------
 { "_id" : "13", "result" : { "match" : "Email: john@example.com", "idx" : { "$numberInt" : "0" }, "captures" : [ "john@example.com" ] } }
(1 row)

select bson_dollar_project('{"_id":"14"}', '{"result" : { "$regexFind" : {"input":"Lorem ipsum dolor sit amet, consectetur adipiscing elit.","regex" : {"$regex" : "(\\b\\w{5}\\b)", "$options" : ""} }} }');
                                             bson_dollar_project                                              
---------------------------------------------------------------------
 { "_id" : "14", "result" : { "match" : "Lorem", "idx" : { "$numberInt" : "0" }, "captures" : [ "Lorem" ] } }
(1 row)

-- $regexFind operator: different options:
select bson_dollar_project('{"_id":"15"}', '{"result" : { "$regexFind" : {"input":"Hello\nworld","regex" : {"$regex" : "^world", "$options" : "m"} }} }');
                                          bson_dollar_project                                          
---------------------------------------------------------------------
 { "_id" : "15", "result" : { "match" : "world", "idx" : { "$numberInt" : "6" }, "captures" : [  ] } }
(1 row)

select bson_dollar_project('{"_id":"16"}', '{"result" : { "$regexFind" : {"input":"The quick brown FOX","regex" : {"$regex" : "\\bfox\\b", "$options" : "i"} }} }');
                                         bson_dollar_project                                          
---------------------------------------------------------------------
 { "_id" : "16", "result" : { "match" : "FOX", "idx" : { "$numberInt" : "16" }, "captures" : [  ] } }
(1 row)

select bson_dollar_project('{"_id":"17"}', '{"result" : { "$regexFind" : {"input":"123\n456\n789","regex" : {"$regex" : "\\d+", "$options" : "g"}}}}');
                                         bson_dollar_project                                         
---------------------------------------------------------------------
 { "_id" : "17", "result" : { "match" : "123", "idx" : { "$numberInt" : "0" }, "captures" : [  ] } }
(1 row)

select bson_dollar_project('{"_id":"18"}', '{"result" : { "$regexFind" : {"input":"This is a long text","regex" : {"$regex" : "long text", "$options" : "is"} }} }');
                                            bson_dollar_project                                             
---------------------------------------------------------------------
 { "_id" : "18", "result" : { "match" : "long text", "idx" : { "$numberInt" : "10" }, "captures" : [  ] } }
(1 row)

select bson_dollar_project('{"_id":"20"}', '{"result" : { "$regexFind" : {"input":"Hello there","regex" : {"$regex" : "Hello\\s there", "$options" : "x"} }} }');
                                             bson_dollar_project                                             
---------------------------------------------------------------------
 { "_id" : "20", "result" : { "match" : "Hello there", "idx" : { "$numberInt" : "0" }, "captures" : [  ] } }
(1 row)

-- $regexFind operator: null cases:
select bson_dollar_project('{"_id":"16"}', '{"result" : { "$regexFind" : {"input":null,"regex" : {"$regex" : "", "$options" : ""} }
} }');
        bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "16", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"16"}', '{"result" : { "$regexFind" : {"input":"a","regex" : null }} }');
        bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "16", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"16"}', '{"result" : { "$regexFind" : {"input":"$z","regex" : {"$regex" : "", "$options" : ""} }
} }');
        bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "16", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"16"}', '{"result" : { "$regexFind" : {"input":"a","regex" : "$z" }} }');
        bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "16", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"16"}', '{"result" : { "$regexFind" : {"input":"apple","regex" : "boy" }} }');
        bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "16", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"16"}', '{"result" : { "$regexFind" : {"input":"The quick brown FOX","regex" : {"$regex" : "\\bfox\\b", "$options" : ""} }} }');
        bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "16", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"19"}', '{"result" : { "$regexFind" : {"input":"This is a\nmultiline\nstring","regex" : {"$regex" : "multiline string", "$options" : "ix"} }} }');
        bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "19", "result" : null }
(1 row)

-- $regexFind operator: expression cases:
select bson_dollar_project('{"_id":"1","a":"apple", "b":"app"}', '{"result" : { "$regexFind" : {"input":"$a", "regex" : "$b" }} }');
                                        bson_dollar_project                                         
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "match" : "app", "idx" : { "$numberInt" : "0" }, "captures" : [  ] } }
(1 row)

select bson_dollar_project('{"_id":"1","a":"APPLE", "b":"app", "c" : "i"}', '{"result" : { "$regexFind" : {"input":"$a", "regex" : "$b", "options" :"$c" }} }');
                                        bson_dollar_project                                         
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "match" : "APP", "idx" : { "$numberInt" : "0" }, "captures" : [  ] } }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexFind" : {"input": {"$concat" : ["APPLE", "IS", "FRUIT"]}, "regex" : {"$toLower" : "APPLE"}, "options": {"$concat" : "i"} }} }');
                                         bson_dollar_project                                          
---------------------------------------------------------------------
 { "_id" : "1", "result" : { "match" : "APPLE", "idx" : { "$numberInt" : "0" }, "captures" : [  ] } }
(1 row)

-- $regexFind operator: negative test cases :
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexFind" : {"input":"", "regex" : "", "extra" : "" }} }');
ERROR:  $regexFind found an unknown argument: extra
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexFind" : { "regex" : ""}} }');
ERROR:  $regexFind requires 'input' parameter
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexFind" : { "input" : ""}} }');
ERROR:  $regexFind requires 'regex' parameter
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexFind" : {"input": 1, "regex" : "", "options" : "" }} }');
ERROR:  $regexFind needs 'input' to be of type string
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexFind" : {"input": "a", "regex" : 1, "options" : "" }} }');
ERROR:  $regexFind needs 'regex' to be of type string or regex
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexFind" : {"input": "a", "regex" : "a", "options" : 1 }} }');
ERROR:  $regexFind needs 'options' to be of type string
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexFind" : {"input": "a", "regex" : {"$regex" : "", "$options": "i"}, "options" : "i" }} }');
ERROR:  $regexFind found regex option(s) specified in both 'regex' and 'option' fields
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexFind" : {"input": "a", "regex" : "a", "options" : "g" }} }');
ERROR:  $regexFind invalid flag in regex options: g
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexFind" : null} }');
ERROR:  $regexFind expects an object of named arguments but found: null
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexFind" : 1} }');
ERROR:  $regexFind expects an object of named arguments but found: int
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexFind" : {"input": "string", "regex" :"", "options" : "\u0000"} } }');
ERROR:  $regexFind:  regular expression options cannot contain an embedded null byte
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexFind" : {"input": "string", "regex" :"\u0000", "options" : "i"} } }');
ERROR:  $regexFind: regular expression cannot contain an embedded null byte
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexFind" : {"input": "string", "regex" :"(m(p)"} } }');
ERROR:  Invalid Regex in $regexFind: missing closing parenthesis
-- $regexFindAll operator: basic test:
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexFindAll" : {"input":"", "regex" : "" }} }');
                                         bson_dollar_project                                         
---------------------------------------------------------------------
 { "_id" : "1", "result" : [ { "match" : "", "idx" : { "$numberInt" : "0" }, "captures" : [  ] } ] }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexFindAll" : {"input":"a", "regex" : "a" }} }');
                                         bson_dollar_project                                          
---------------------------------------------------------------------
 { "_id" : "1", "result" : [ { "match" : "a", "idx" : { "$numberInt" : "0" }, "captures" : [  ] } ] }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexFindAll" : {"input":"apple", "regex" : "apple" }} }');
                                           bson_dollar_project                                            
---------------------------------------------------------------------
 { "_id" : "1", "result" : [ { "match" : "apple", "idx" : { "$numberInt" : "0" }, "captures" : [  ] } ] }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexFindAll" : {"input":"apple is a fruit", "regex" : "is" }} }');
                                          bson_dollar_project                                          
---------------------------------------------------------------------
 { "_id" : "1", "result" : [ { "match" : "is", "idx" : { "$numberInt" : "6" }, "captures" : [  ] } ] }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexFindAll" : {"input":"apple is a fruit", "regex" : "fruit" }} }');
                                            bson_dollar_project                                            
---------------------------------------------------------------------
 { "_id" : "1", "result" : [ { "match" : "fruit", "idx" : { "$numberInt" : "11" }, "captures" : [  ] } ] }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexFindAll" : {"input":"APPLE", "regex" : "apple" }} }');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : [  ] }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexFindAll" : {"input":"APPLE", "regex" : "apple", "options": "i" }} }');
                                           bson_dollar_project                                            
---------------------------------------------------------------------
 { "_id" : "1", "result" : [ { "match" : "APPLE", "idx" : { "$numberInt" : "0" }, "captures" : [  ] } ] }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexFindAll" : {"input":"APPLE","regex" : {"$regex" : "apple", "$options" : "i"} }} }');
                                           bson_dollar_project                                            
---------------------------------------------------------------------
 { "_id" : "1", "result" : [ { "match" : "APPLE", "idx" : { "$numberInt" : "0" }, "captures" : [  ] } ] }
(1 row)

select bson_dollar_project('{"_id":"2"}', '{"result" : { "$regexFindAll" : {"input":"Banana","regex" : {"$regex" : "banana", "$options" : "i"} }} }');
                                            bson_dollar_project                                            
---------------------------------------------------------------------
 { "_id" : "2", "result" : [ { "match" : "Banana", "idx" : { "$numberInt" : "0" }, "captures" : [  ] } ] }
(1 row)

-- $regexFindAll operator: complex regex pattern test:
select bson_dollar_project('{"_id":"4"}', '{"result" : { "$regexFindAll" : {"input":"1234567890","regex" : "\\d{3}", "options" : "" }} }');
                                                                                                                  bson_dollar_project                                                                                                                   
---------------------------------------------------------------------
 { "_id" : "4", "result" : [ { "match" : "123", "idx" : { "$numberInt" : "0" }, "captures" : [  ] }, { "match" : "456", "idx" : { "$numberInt" : "3" }, "captures" : [  ] }, { "match" : "789", "idx" : { "$numberInt" : "6" }, "captures" : [  ] } ] }
(1 row)

select bson_dollar_project('{"_id":"3"}', '{"result" : { "$regexFindAll" : {"input":"Hello World","regex" : "\\bworld\\b", "options" : "i" }} }');
                                           bson_dollar_project                                            
---------------------------------------------------------------------
 { "_id" : "3", "result" : [ { "match" : "World", "idx" : { "$numberInt" : "6" }, "captures" : [  ] } ] }
(1 row)

select bson_dollar_project('{"_id":"5"}', '{"result" : { "$regexFindAll" : {"input":"Microsoft IDC","regex" : "id", "options" : "i" }} }');
                                          bson_dollar_project                                           
---------------------------------------------------------------------
 { "_id" : "5", "result" : [ { "match" : "ID", "idx" : { "$numberInt" : "10" }, "captures" : [  ] } ] }
(1 row)

select bson_dollar_project('{"_id":"6"}', '{"result" : { "$regexFindAll" : {"input":"Hello, World!","regex" : "[,!]", "options" : "i" }} }');
                                                                             bson_dollar_project                                                                             
---------------------------------------------------------------------
 { "_id" : "6", "result" : [ { "match" : ",", "idx" : { "$numberInt" : "5" }, "captures" : [  ] }, { "match" : "!", "idx" : { "$numberInt" : "12" }, "captures" : [  ] } ] }
(1 row)

select bson_dollar_project('{"_id":"7"}', '{"result" : { "$regexFindAll" : {"input":"Lorem ipsum dolor sit amet, consectetur adipiscing elit.","regex" : "\\b\\w{5}\\b", "options" : "i" }} }');
                                                                                                                      bson_dollar_project                                                                                                                      
---------------------------------------------------------------------
 { "_id" : "7", "result" : [ { "match" : "Lorem", "idx" : { "$numberInt" : "0" }, "captures" : [  ] }, { "match" : "ipsum", "idx" : { "$numberInt" : "6" }, "captures" : [  ] }, { "match" : "dolor", "idx" : { "$numberInt" : "12" }, "captures" : [  ] } ] }
(1 row)

select bson_dollar_project('{"_id":"8"}', '{"result" : { "$regexFindAll" : {"input":"Email me at john@example.com or call 555-123-4567 for more information.","regex" : "\\b[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}\\b|\\b\\d{3}-\\d{3}-\\d{4}\\b", "options" : "i" }} }');
                                                                                          bson_dollar_project                                                                                           
---------------------------------------------------------------------
 { "_id" : "8", "result" : [ { "match" : "john@example.com", "idx" : { "$numberInt" : "12" }, "captures" : [  ] }, { "match" : "555-123-4567", "idx" : { "$numberInt" : "37" }, "captures" : [  ] } ] }
(1 row)

select bson_dollar_project('{"_id":"9"}', '{"result" : { "$regexFindAll" : {"input":"<h1>Hello</h1><p>Paragraph 1</p><p>Paragraph 2</p>","regex" : "<p>(.*?)</p>", "options" : "i" }} }');
                                                                                                           bson_dollar_project                                                                                                            
---------------------------------------------------------------------
 { "_id" : "9", "result" : [ { "match" : "<p>Paragraph 1</p>", "idx" : { "$numberInt" : "14" }, "captures" : [ "Paragraph 1" ] }, { "match" : "<p>Paragraph 2</p>", "idx" : { "$numberInt" : "32" }, "captures" : [ "Paragraph 2" ] } ] }
(1 row)

select bson_dollar_project('{"_id":"1"}', ('{"result" : { "$regexFindAll" : {"input" : "' || LPAD('', 100, 'a') || '", "regex": "((((((((((((((()))))))))))))))"}} }')::bson);
bson_dollar_project
---------------------------------------------------------------------
 { "_id" : "1", "result" : [ { "match" : "", "idx" : { "$numberInt" : "0" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "1" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "2" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "3" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "4" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "5" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "6" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "7" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "8" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "9" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "10" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "11" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "12" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "13" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "14" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "15" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "16" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "17" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "18" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "19" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "20" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "21" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "22" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "23" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "24" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "25" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "26" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "27" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "28" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "29" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "30" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "31" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "32" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "33" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "34" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "35" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "36" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "37" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "38" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "39" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "40" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "41" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "42" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "43" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "44" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "45" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "46" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "47" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "48" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "49" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "50" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "51" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "52" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "53" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "54" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "55" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "56" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "57" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "58" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "59" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "60" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "61" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "62" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "63" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "64" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "65" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "66" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "67" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "68" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "69" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "70" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "71" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "72" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "73" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "74" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "75" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "76" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "77" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "78" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "79" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "80" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "81" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "82" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "83" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "84" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "85" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "86" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "87" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "88" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "89" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "90" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "91" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "92" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "93" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "94" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "95" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "96" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "97" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "98" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] }, { "match" : "", "idx" : { "$numberInt" : "99" }, "captures" : [ "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" ] } ] }
(1 row)

select bson_dollar_project('{"_id":"1"}', ('{"result" : { "$regexFindAll" : {"input" : "' || LPAD('', 50000, 'c') || LPAD('', 50000, 'd') ||  'e", "regex": "' || LPAD('',2500*3,'(d)') || 'e"}} }')::bson);
bson_dollar_project
---------------------------------------------------------------------
 { "_id" : "1", "result" : [ { "match" : "dddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddde", "idx" : { "$numberInt" : "97500" }, "captures" : [ "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d", "d" ] } ] }
(1 row)

-- $regexFindAll operator: complex regex pattern with BSON_TYPE_REGEX:
select bson_dollar_project('{"_id":"4"}', '{"result" : { "$regexFindAll" : {"input":"1234567890","regex" : {"$regex" : "\\d{3}", "$options" : ""} }} }');
                                                                                                                  bson_dollar_project                                                                                                                   
---------------------------------------------------------------------
 { "_id" : "4", "result" : [ { "match" : "123", "idx" : { "$numberInt" : "0" }, "captures" : [  ] }, { "match" : "456", "idx" : { "$numberInt" : "3" }, "captures" : [  ] }, { "match" : "789", "idx" : { "$numberInt" : "6" }, "captures" : [  ] } ] }
(1 row)

select bson_dollar_project('{"_id":"3"}', '{"result" : { "$regexFindAll" : {"input":"Hello World","regex" : {"$regex" : "\\bworld\\b", "$options" : "i"} }} }');
                                           bson_dollar_project                                            
---------------------------------------------------------------------
 { "_id" : "3", "result" : [ { "match" : "World", "idx" : { "$numberInt" : "6" }, "captures" : [  ] } ] }
(1 row)

select bson_dollar_project('{"_id":"5"}', '{"result" : { "$regexFindAll" : {"input":"Microsoft IDC","regex" : {"$regex" : "id", "$options" : "i"} }} }');
                                          bson_dollar_project                                           
---------------------------------------------------------------------
 { "_id" : "5", "result" : [ { "match" : "ID", "idx" : { "$numberInt" : "10" }, "captures" : [  ] } ] }
(1 row)

select bson_dollar_project('{"_id":"6"}', '{"result" : { "$regexFindAll" : {"input":"Hello, World!","regex" : {"$regex" : "[,!]", "$options" : "i"} }} }');
                                                                             bson_dollar_project                                                                             
---------------------------------------------------------------------
 { "_id" : "6", "result" : [ { "match" : ",", "idx" : { "$numberInt" : "5" }, "captures" : [  ] }, { "match" : "!", "idx" : { "$numberInt" : "12" }, "captures" : [  ] } ] }
(1 row)

select bson_dollar_project('{"_id":"7"}', '{"result" : { "$regexFindAll" : {"input":"Lorem ipsum dolor sit amet, consectetur adipiscing elit.","regex" : {"$regex" : "\\b\\w{5}\\b", "$options" : "i"} }} }');
                                                                                                                      bson_dollar_project                                                                                                                      
---------------------------------------------------------------------
 { "_id" : "7", "result" : [ { "match" : "Lorem", "idx" : { "$numberInt" : "0" }, "captures" : [  ] }, { "match" : "ipsum", "idx" : { "$numberInt" : "6" }, "captures" : [  ] }, { "match" : "dolor", "idx" : { "$numberInt" : "12" }, "captures" : [  ] } ] }
(1 row)

select bson_dollar_project('{"_id":"8"}', '{"result" : { "$regexFindAll" : {"input":"Email me at john@example.com or call 555-123-4567 for more information.","regex" : {"$regex" : "\\b[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}\\b|\\b\\d{3}-\\d{3}-\\d{4}\\b", "$options" : "i"} }} }');
                                                                                          bson_dollar_project                                                                                           
---------------------------------------------------------------------
 { "_id" : "8", "result" : [ { "match" : "john@example.com", "idx" : { "$numberInt" : "12" }, "captures" : [  ] }, { "match" : "555-123-4567", "idx" : { "$numberInt" : "37" }, "captures" : [  ] } ] }
(1 row)

select bson_dollar_project('{"_id":"9"}', '{"result" : { "$regexFindAll" : {"input":"<h1>Hello</h1><p>Paragraph 1</p><p>Paragraph 2</p>","regex" : {"$regex" : "<p>(.*?)</p>", "$options" : "i"} }} }');
                                                                                                           bson_dollar_project                                                                                                            
---------------------------------------------------------------------
 { "_id" : "9", "result" : [ { "match" : "<p>Paragraph 1</p>", "idx" : { "$numberInt" : "14" }, "captures" : [ "Paragraph 1" ] }, { "match" : "<p>Paragraph 2</p>", "idx" : { "$numberInt" : "32" }, "captures" : [ "Paragraph 2" ] } ] }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexFindAll" : {"input": "ABCDXYZABCDXYZABCDXYZ", "regex" : "BC(P(DE)?)?"} } }');
                                                                                                                                bson_dollar_project                                                                                                                                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : [ { "match" : "BC", "idx" : { "$numberInt" : "1" }, "captures" : [ null, null ] }, { "match" : "BC", "idx" : { "$numberInt" : "8" }, "captures" : [ null, null ] }, { "match" : "BC", "idx" : { "$numberInt" : "15" }, "captures" : [ null, null ] } ] }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexFindAll" : {"input": "aaa aa", "regex" : "(a*?)"} } }');
                                                                                                                                                                                                                           bson_dollar_project                                                                                                                                                                                                                            
---------------------------------------------------------------------
 { "_id" : "1", "result" : [ { "match" : "", "idx" : { "$numberInt" : "0" }, "captures" : [ "" ] }, { "match" : "", "idx" : { "$numberInt" : "1" }, "captures" : [ "" ] }, { "match" : "", "idx" : { "$numberInt" : "2" }, "captures" : [ "" ] }, { "match" : "", "idx" : { "$numberInt" : "3" }, "captures" : [ "" ] }, { "match" : "", "idx" : { "$numberInt" : "4" }, "captures" : [ "" ] }, { "match" : "", "idx" : { "$numberInt" : "5" }, "captures" : [ "" ] } ] }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexFindAll" : {"input": "aaaaa aaaa", "regex" : "(aa)"} } }');
                                                                                                                                                            bson_dollar_project                                                                                                                                                             
---------------------------------------------------------------------
 { "_id" : "1", "result" : [ { "match" : "aa", "idx" : { "$numberInt" : "0" }, "captures" : [ "aa" ] }, { "match" : "aa", "idx" : { "$numberInt" : "2" }, "captures" : [ "aa" ] }, { "match" : "aa", "idx" : { "$numberInt" : "6" }, "captures" : [ "aa" ] }, { "match" : "aa", "idx" : { "$numberInt" : "8" }, "captures" : [ "aa" ] } ] }
(1 row)

-- $regexFindAll operator: captures in output:
select bson_dollar_project('{"_id":"10"}', '{"result" : { "$regexFindAll" : {"input":"John Doe, 25 years old","regex" : {"$regex" : "(\\w+) (\\w+), (\\d+) years old", "$options" : "i"} }} }');
                                                              bson_dollar_project                                                              
---------------------------------------------------------------------
 { "_id" : "10", "result" : [ { "match" : "John Doe, 25 years old", "idx" : { "$numberInt" : "0" }, "captures" : [ "John", "Doe", "25" ] } ] }
(1 row)

select bson_dollar_project('{"_id":"11"}', '{"result" : { "$regexFindAll" : {"input":"Date: 2023-07-14","regex" : {"$regex" : "Date: (\\d{4}-\\d{2}-\\d{2})", "$options" : ""} }} }');
                                                       bson_dollar_project                                                        
---------------------------------------------------------------------
 { "_id" : "11", "result" : [ { "match" : "Date: 2023-07-14", "idx" : { "$numberInt" : "0" }, "captures" : [ "2023-07-14" ] } ] }
(1 row)

select bson_dollar_project('{"_id":"12"}', '{"result" : { "$regexFindAll" : {"input":"Product: Apple iPhone 12","regex" : {"$regex" : "Product: (\\w+) (\\w+) (\\d+)", "$options" : "i"} }} }');
                                                                 bson_dollar_project                                                                 
---------------------------------------------------------------------
 { "_id" : "12", "result" : [ { "match" : "Product: Apple iPhone 12", "idx" : { "$numberInt" : "0" }, "captures" : [ "Apple", "iPhone", "12" ] } ] }
(1 row)

select bson_dollar_project('{"_id":"13"}', '{"result" : { "$regexFindAll" : {"input":"Email: john@example.com","regex" : {"$regex" : "Email: ([a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,})", "$options" : "i"} }} }');
                                                              bson_dollar_project                                                              
---------------------------------------------------------------------
 { "_id" : "13", "result" : [ { "match" : "Email: john@example.com", "idx" : { "$numberInt" : "0" }, "captures" : [ "john@example.com" ] } ] }
(1 row)

select bson_dollar_project('{"_id":"14"}', '{"result" : { "$regexFindAll" : {"input":"Lorem ipsum dolor sit amet, consectetur adipiscing elit.","regex" : {"$regex" : "(\\b\\w{5}\\b)", "$options" : ""} }} }');
                                                                                                                                 bson_dollar_project                                                                                                                                 
---------------------------------------------------------------------
 { "_id" : "14", "result" : [ { "match" : "Lorem", "idx" : { "$numberInt" : "0" }, "captures" : [ "Lorem" ] }, { "match" : "ipsum", "idx" : { "$numberInt" : "6" }, "captures" : [ "ipsum" ] }, { "match" : "dolor", "idx" : { "$numberInt" : "12" }, "captures" : [ "dolor" ] } ] }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexFindAll" : {"input": "", "regex" : "(missing)|()"} } }');
                                             bson_dollar_project                                             
---------------------------------------------------------------------
 { "_id" : "1", "result" : [ { "match" : "", "idx" : { "$numberInt" : "0" }, "captures" : [ null, "" ] } ] }
(1 row)

-- $regexFindAll operator: different options:
select bson_dollar_project('{"_id":"15"}', '{"result" : { "$regexFindAll" : {"input":"Hello\nworld","regex" : {"$regex" : "^world", "$options" : "m"} }} }');
                                            bson_dollar_project                                            
---------------------------------------------------------------------
 { "_id" : "15", "result" : [ { "match" : "world", "idx" : { "$numberInt" : "6" }, "captures" : [  ] } ] }
(1 row)

select bson_dollar_project('{"_id":"16"}', '{"result" : { "$regexFindAll" : {"input":"The quick brown FOX","regex" : {"$regex" : "\\bfox\\b", "$options" : "i"} }} }');
                                           bson_dollar_project                                            
---------------------------------------------------------------------
 { "_id" : "16", "result" : [ { "match" : "FOX", "idx" : { "$numberInt" : "16" }, "captures" : [  ] } ] }
(1 row)

select bson_dollar_project('{"_id":"17"}', '{"result" : { "$regexFindAll" : {"input":"123\n456\n789","regex" : {"$regex" : "\\d+", "$options" : "g"}}}}');
                                                                                                                   bson_dollar_project                                                                                                                   
---------------------------------------------------------------------
 { "_id" : "17", "result" : [ { "match" : "123", "idx" : { "$numberInt" : "0" }, "captures" : [  ] }, { "match" : "456", "idx" : { "$numberInt" : "4" }, "captures" : [  ] }, { "match" : "789", "idx" : { "$numberInt" : "8" }, "captures" : [  ] } ] }
(1 row)

select bson_dollar_project('{"_id":"18"}', '{"result" : { "$regexFindAll" : {"input":"This is a long text","regex" : {"$regex" : "long text", "$options" : "is"} }} }');
                                              bson_dollar_project                                               
---------------------------------------------------------------------
 { "_id" : "18", "result" : [ { "match" : "long text", "idx" : { "$numberInt" : "10" }, "captures" : [  ] } ] }
(1 row)

select bson_dollar_project('{"_id":"20"}', '{"result" : { "$regexFindAll" : {"input":"Hello there","regex" : {"$regex" : "Hello\\s there", "$options" : "x"} }} }');
                                               bson_dollar_project                                               
---------------------------------------------------------------------
 { "_id" : "20", "result" : [ { "match" : "Hello there", "idx" : { "$numberInt" : "0" }, "captures" : [  ] } ] }
(1 row)

-- $regexFindAll operator: empty cases:
select bson_dollar_project('{"_id":"16"}', '{"result" : { "$regexFindAll" : {"input":null,"regex" : {"$regex" : "", "$options" : ""} }
} }');
        bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "16", "result" : [  ] }
(1 row)

select bson_dollar_project('{"_id":"16"}', '{"result" : { "$regexFindAll" : {"input":"a","regex" : null }} }');
        bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "16", "result" : [  ] }
(1 row)

select bson_dollar_project('{"_id":"16"}', '{"result" : { "$regexFindAll" : {"input":"$z","regex" : {"$regex" : "", "$options" : ""} }
} }');
        bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "16", "result" : [  ] }
(1 row)

select bson_dollar_project('{"_id":"16"}', '{"result" : { "$regexFindAll" : {"input":"a","regex" : "$z" }} }');
        bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "16", "result" : [  ] }
(1 row)

select bson_dollar_project('{"_id":"16"}', '{"result" : { "$regexFindAll" : {"input":"apple","regex" : "boy" }} }');
        bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "16", "result" : [  ] }
(1 row)

select bson_dollar_project('{"_id":"16"}', '{"result" : { "$regexFindAll" : {"input":"The quick brown FOX","regex" : {"$regex" : "\\bfox\\b", "$options" : ""} }} }');
        bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "16", "result" : [  ] }
(1 row)

select bson_dollar_project('{"_id":"19"}', '{"result" : { "$regexFindAll" : {"input":"This is a\nmultiline\nstring","regex" : {"$regex" : "multiline string", "$options" : "ix"} }} }');
        bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "19", "result" : [  ] }
(1 row)

-- $regexFindAll operator: expression cases:
select bson_dollar_project('{"_id":"1","a":"apple", "b":"app"}', '{"result" : { "$regexFindAll" : {"input":"$a", "regex" : "$b" }} }');
                                          bson_dollar_project                                           
---------------------------------------------------------------------
 { "_id" : "1", "result" : [ { "match" : "app", "idx" : { "$numberInt" : "0" }, "captures" : [  ] } ] }
(1 row)

select bson_dollar_project('{"_id":"1","a":"APPLE", "b":"app", "c" : "i"}', '{"result" : { "$regexFindAll" : {"input":"$a", "regex" : "$b", "options" :"$c" }} }');
                                          bson_dollar_project                                           
---------------------------------------------------------------------
 { "_id" : "1", "result" : [ { "match" : "APP", "idx" : { "$numberInt" : "0" }, "captures" : [  ] } ] }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexFindAll" : {"input": {"$concat" : ["APPLE", "IS", "FRUIT"]}, "regex" : {"$toLower" : "APPLE"}, "options": {"$concat" : "i"} }} }');
                                           bson_dollar_project                                            
---------------------------------------------------------------------
 { "_id" : "1", "result" : [ { "match" : "APPLE", "idx" : { "$numberInt" : "0" }, "captures" : [  ] } ] }
(1 row)

-- $regexFindAll operator: negative test cases :
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexFindAll" : {"input":"", "regex" : "", "extra" : "" }} }');
ERROR:  $regexFindAll found an unknown argument: extra
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexFindAll" : { "regex" : ""}} }');
ERROR:  $regexFindAll requires 'input' parameter
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexFindAll" : { "input" : ""}} }');
ERROR:  $regexFindAll requires 'regex' parameter
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexFindAll" : {"input": 1, "regex" : "", "options" : "" }} }');
ERROR:  $regexFindAll needs 'input' to be of type string
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexFindAll" : {"input": "a", "regex" : 1, "options" : "" }} }');
ERROR:  $regexFindAll needs 'regex' to be of type string or regex
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexFindAll" : {"input": "a", "regex" : "a", "options" : 1 }} }');
ERROR:  $regexFindAll needs 'options' to be of type string
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexFindAll" : {"input": "a", "regex" : {"$regex" : "", "$options": "i"}, "options" : "i" }} }');
ERROR:  $regexFindAll found regex option(s) specified in both 'regex' and 'option' fields
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexFindAll" : {"input": "a", "regex" : "a", "options" : "g" }} }');
ERROR:  $regexFindAll invalid flag in regex options: g
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexFindAll" : null} }');
ERROR:  $regexFindAll expects an object of named arguments but found: null
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexFindAll" : 1} }');
ERROR:  $regexFindAll expects an object of named arguments but found: int
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexFindAll" : {"input": "string", "regex" :"", "options" : "\u0000"} } }');
ERROR:  $regexFindAll:  regular expression options cannot contain an embedded null byte
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexFindAll" : {"input": "string", "regex" :"\u0000", "options" : "i"} } }');
ERROR:  $regexFindAll: regular expression cannot contain an embedded null byte
select bson_dollar_project('{"_id":"1"}', '{"result" : { "$regexFindAll" : {"input": "string", "regex" :"(m(p)"} } }');
ERROR:  Invalid Regex in $regexFindAll: missing closing parenthesis
select bson_dollar_project('{"_id":"1"}', ('{"result" : { "$regexFindAll" : {"input" : "' || LPAD('',100000, 'a') || '", "regex": "(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((())))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))"}} }')::bson);
ERROR:  $regexFindAll: the size of buffer to store output exceeded the 64MB limit
select bson_dollar_project('{"_id":"1"}', ('{"result" : { "$regexFindAll" : {"input" : "' || LPAD('', 50000, 'c') || LPAD('', 50000, 'd') ||  'e", "regex": "' || LPAD('',2728*3,'(d)') || 'e"}} }')::bson);
ERROR:  There isn't enough available memory to perform the evaluation of the regular expression.
--regex Operators : with multiple document in collection
--creating collection
SELECT create_collection('db','regexMultiDocumentTest');
NOTICE:  creating collection
 create_collection 
---------------------------------------------------------------------
 t
(1 row)

--inserting data
SELECT documentdb_api.insert_one('db','regexMultiDocumentTest','{"_id":1, "input" : "apple", "regex" : "apple", "option" : "i"}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','regexMultiDocumentTest','{"_id":2, "input" : "apple is sweet", "regex" : "apple", "option" : "i"}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','regexMultiDocumentTest','{"_id":3, "input" : "apple is lime", "regex" : "apple", "option" : "i"}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','regexMultiDocumentTest','{"_id":4, "input" : "lime is blue", "regex" : "apple", "option" : "i"}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','regexMultiDocumentTest','{"_id":5, "input" : "blue is berry", "regex" : "apple", "option" : "i"}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','regexMultiDocumentTest','{"_id":6, "input" : "need apple for nothing", "regex" : "apple", "option" : "i"}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','regexMultiDocumentTest','{"_id":7, "input" : "One apple a day keeps doctor away", "regex" : "apple", "option" : "i"}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','regexMultiDocumentTest','{"_id":8, "input" : "red apple is red ?", "regex" : "apple", "option" : "i"}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

--case 1: when regex and options are constant  we compile regex only once
SELECT bson_dollar_project(document, '{"result" : { "$regexMatch" : {"input" : "$input", "regex": "apple", "options" : "i"} }}') from documentdb_api.collection('db','regexMultiDocumentTest');
                 bson_dollar_project                  
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "result" : true }
 { "_id" : { "$numberInt" : "2" }, "result" : true }
 { "_id" : { "$numberInt" : "3" }, "result" : true }
 { "_id" : { "$numberInt" : "4" }, "result" : false }
 { "_id" : { "$numberInt" : "5" }, "result" : false }
 { "_id" : { "$numberInt" : "6" }, "result" : true }
 { "_id" : { "$numberInt" : "7" }, "result" : true }
 { "_id" : { "$numberInt" : "8" }, "result" : true }
(8 rows)

SELECT bson_dollar_project(document, '{"result" : { "$regexFind" : {"input" : "$input", "regex": "apple", "options" : "i"} }}') from documentdb_api.collection('db','regexMultiDocumentTest');
                                                   bson_dollar_project                                                   
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "result" : { "match" : "apple", "idx" : { "$numberInt" : "0" }, "captures" : [  ] } }
 { "_id" : { "$numberInt" : "2" }, "result" : { "match" : "apple", "idx" : { "$numberInt" : "0" }, "captures" : [  ] } }
 { "_id" : { "$numberInt" : "3" }, "result" : { "match" : "apple", "idx" : { "$numberInt" : "0" }, "captures" : [  ] } }
 { "_id" : { "$numberInt" : "4" }, "result" : null }
 { "_id" : { "$numberInt" : "5" }, "result" : null }
 { "_id" : { "$numberInt" : "6" }, "result" : { "match" : "apple", "idx" : { "$numberInt" : "5" }, "captures" : [  ] } }
 { "_id" : { "$numberInt" : "7" }, "result" : { "match" : "apple", "idx" : { "$numberInt" : "4" }, "captures" : [  ] } }
 { "_id" : { "$numberInt" : "8" }, "result" : { "match" : "apple", "idx" : { "$numberInt" : "4" }, "captures" : [  ] } }
(8 rows)

SELECT bson_dollar_project(document, '{"result" : { "$regexFindAll" : {"input" : "$input", "regex": "apple", "options" : "i"} }}') from documentdb_api.collection('db','regexMultiDocumentTest');
                                                     bson_dollar_project                                                     
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "result" : [ { "match" : "apple", "idx" : { "$numberInt" : "0" }, "captures" : [  ] } ] }
 { "_id" : { "$numberInt" : "2" }, "result" : [ { "match" : "apple", "idx" : { "$numberInt" : "0" }, "captures" : [  ] } ] }
 { "_id" : { "$numberInt" : "3" }, "result" : [ { "match" : "apple", "idx" : { "$numberInt" : "0" }, "captures" : [  ] } ] }
 { "_id" : { "$numberInt" : "4" }, "result" : [  ] }
 { "_id" : { "$numberInt" : "5" }, "result" : [  ] }
 { "_id" : { "$numberInt" : "6" }, "result" : [ { "match" : "apple", "idx" : { "$numberInt" : "5" }, "captures" : [  ] } ] }
 { "_id" : { "$numberInt" : "7" }, "result" : [ { "match" : "apple", "idx" : { "$numberInt" : "4" }, "captures" : [  ] } ] }
 { "_id" : { "$numberInt" : "8" }, "result" : [ { "match" : "apple", "idx" : { "$numberInt" : "4" }, "captures" : [  ] } ] }
(8 rows)

--case 2: when regex and options are not constant  we compile regex every document
SELECT bson_dollar_project(document, '{"result" : { "$regexMatch" : {"input" : "$input", "regex": "$regex", "options" : "$option"} }}') from documentdb_api.collection('db','regexMultiDocumentTest');
                 bson_dollar_project                  
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "result" : true }
 { "_id" : { "$numberInt" : "2" }, "result" : true }
 { "_id" : { "$numberInt" : "3" }, "result" : true }
 { "_id" : { "$numberInt" : "4" }, "result" : false }
 { "_id" : { "$numberInt" : "5" }, "result" : false }
 { "_id" : { "$numberInt" : "6" }, "result" : true }
 { "_id" : { "$numberInt" : "7" }, "result" : true }
 { "_id" : { "$numberInt" : "8" }, "result" : true }
(8 rows)

SELECT bson_dollar_project(document, '{"result" : { "$regexFind" : {"input" : "$input", "regex": "$regex", "options" : "$option"} }}') from documentdb_api.collection('db','regexMultiDocumentTest');
                                                   bson_dollar_project                                                   
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "result" : { "match" : "apple", "idx" : { "$numberInt" : "0" }, "captures" : [  ] } }
 { "_id" : { "$numberInt" : "2" }, "result" : { "match" : "apple", "idx" : { "$numberInt" : "0" }, "captures" : [  ] } }
 { "_id" : { "$numberInt" : "3" }, "result" : { "match" : "apple", "idx" : { "$numberInt" : "0" }, "captures" : [  ] } }
 { "_id" : { "$numberInt" : "4" }, "result" : null }
 { "_id" : { "$numberInt" : "5" }, "result" : null }
 { "_id" : { "$numberInt" : "6" }, "result" : { "match" : "apple", "idx" : { "$numberInt" : "5" }, "captures" : [  ] } }
 { "_id" : { "$numberInt" : "7" }, "result" : { "match" : "apple", "idx" : { "$numberInt" : "4" }, "captures" : [  ] } }
 { "_id" : { "$numberInt" : "8" }, "result" : { "match" : "apple", "idx" : { "$numberInt" : "4" }, "captures" : [  ] } }
(8 rows)

SELECT bson_dollar_project(document, '{"result" : { "$regexFindAll" : {"input" : "$input", "regex": "$regex", "options" : "$option"} }}') from documentdb_api.collection('db','regexMultiDocumentTest');
                                                     bson_dollar_project                                                     
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "result" : [ { "match" : "apple", "idx" : { "$numberInt" : "0" }, "captures" : [  ] } ] }
 { "_id" : { "$numberInt" : "2" }, "result" : [ { "match" : "apple", "idx" : { "$numberInt" : "0" }, "captures" : [  ] } ] }
 { "_id" : { "$numberInt" : "3" }, "result" : [ { "match" : "apple", "idx" : { "$numberInt" : "0" }, "captures" : [  ] } ] }
 { "_id" : { "$numberInt" : "4" }, "result" : [  ] }
 { "_id" : { "$numberInt" : "5" }, "result" : [  ] }
 { "_id" : { "$numberInt" : "6" }, "result" : [ { "match" : "apple", "idx" : { "$numberInt" : "5" }, "captures" : [  ] } ] }
 { "_id" : { "$numberInt" : "7" }, "result" : [ { "match" : "apple", "idx" : { "$numberInt" : "4" }, "captures" : [  ] } ] }
 { "_id" : { "$numberInt" : "8" }, "result" : [ { "match" : "apple", "idx" : { "$numberInt" : "4" }, "captures" : [  ] } ] }
(8 rows)

--dropping collection
SELECT drop_collection('db','regexMultiDocumentTest');
 drop_collection 
---------------------------------------------------------------------
 t
(1 row)

-- $replaceOne basic tests
select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceOne": {"input": "blue paint", "find": "blue paint", "replacement": "red paint"}}}');
           bson_dollar_project           
---------------------------------------------------------------------
 { "_id" : "1", "result" : "red paint" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceOne": {"input": "blue paint", "find": "blue and green paint", "replacement": "red paint"}}}');
           bson_dollar_project            
---------------------------------------------------------------------
 { "_id" : "1", "result" : "blue paint" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceOne": {"input": "blue paint with blue paintbrush", "find": "blue paint", "replacement": "red paint"}}}');
                     bson_dollar_project                      
---------------------------------------------------------------------
 { "_id" : "1", "result" : "red paint with blue paintbrush" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceOne": {"input": "blue paint with green paintbrush", "find": "blue paint", "replacement": "red paint"}}}');
                      bson_dollar_project                      
---------------------------------------------------------------------
 { "_id" : "1", "result" : "red paint with green paintbrush" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceOne": {"input": "albatross", "find": "ross", "replacement": "rachel"}}}');
            bson_dollar_project            
---------------------------------------------------------------------
 { "_id" : "1", "result" : "albatrachel" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceOne": {"input": "albatross", "find": "", "replacement": "one"}}}');
            bson_dollar_project             
---------------------------------------------------------------------
 { "_id" : "1", "result" : "onealbatross" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceOne": {"input": "albatross", "find": "", "replacement": ""}}}');
           bson_dollar_project           
---------------------------------------------------------------------
 { "_id" : "1", "result" : "albatross" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceOne": {"input": "", "find": "", "replacement": "foo"}}}');
        bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : "foo" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceOne": {"input": "albatross", "find": "rachel", "replacement": "ross"}}}');
           bson_dollar_project           
---------------------------------------------------------------------
 { "_id" : "1", "result" : "albatross" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceOne": {"input": "", "find": "rachel", "replacement": "ross"}}}');
      bson_dollar_project       
---------------------------------------------------------------------
 { "_id" : "1", "result" : "" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceOne": {"input": "", "find": "rachel", "replacement": ""}}}');
      bson_dollar_project       
---------------------------------------------------------------------
 { "_id" : "1", "result" : "" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceOne": {"input": "albatross", "find": "", "replacement": ""}}}');
           bson_dollar_project           
---------------------------------------------------------------------
 { "_id" : "1", "result" : "albatross" }
(1 row)

-- $replaceOne null tests
select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceOne": {"input": null, "find": "ross", "replacement": "rachel"}}}');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceOne": {"input": "albatross", "find": null, "replacement": "yelo"}}}');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceOne": {"input": "albatross", "find": "", "replacement": null}}}');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceOne": {"input": "albatross", "find": null, "replacement": null}}}');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceOne": {"input": null, "find": "f", "replacement": null}}}');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceOne": {"input": null, "find": null, "replacement": "chandler"}}}');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

-- $replaceOne with path
select bson_dollar_project('{"_id":"1", "test": "hello"}', '{"result": {"$replaceOne": {"input": "$test", "find": "el", "replacement": "chandler"}}}');
            bson_dollar_project            
---------------------------------------------------------------------
 { "_id" : "1", "result" : "hchandlerlo" }
(1 row)

select bson_dollar_project('{"_id":"1", "test": {"nest": "hello"}}', '{"result": {"$replaceOne": {"input": "$test.nest", "find": "el", "replacement": "chandler"}}}');
            bson_dollar_project            
---------------------------------------------------------------------
 { "_id" : "1", "result" : "hchandlerlo" }
(1 row)

select bson_dollar_project('{"_id":"1", "test": {"nest": "hello"}}', '{"result": {"$replaceOne": {"input": "wandering hellostater", "find": "$test.nest", "replacement": "phoebe"}}}');
                 bson_dollar_project                  
---------------------------------------------------------------------
 { "_id" : "1", "result" : "wandering phoebestater" }
(1 row)

select bson_dollar_project('{"_id":"1", "test": {"nest": "hello"}}', '{"result": {"$replaceOne": {"input": "wandering cheapskate", "find": "cheap", "replacement": "$test.nest"}}}');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : "wandering helloskate" }
(1 row)

select bson_dollar_project('{"_id":"1", "test": {"input": "hello", "find": "ello", replacement: "atred"}}', '{"result": {"$replaceOne": {"input": "$input", "find": "$find", "replacement": "$replacement"}}}');
ERROR:  invalid input syntax JSON for BSON: Code: '1', Message 'Got parse error at "r", position 55: "SPECIAL_EXPECTED"'
LINE 1: select bson_dollar_project('{"_id":"1", "test": {"input": "h...
                                   ^
-- $replaceOne with missing path
select bson_dollar_project('{"_id":"1", "test": {"nest": "hello"}}', '{"result": {"$replaceOne": {"input": "$test.nesty", "find": "el", "replacement": "chandler"}}}');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"1", "test": {"nest": "hello"}}', '{"result": {"$replaceOne": {"input": "Present monsieur", "find": "$madame", "replacement": "non"}}}');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"1", "test": {"nest": "hello"}}', '{"result": {"$replaceOne": {"input": "Present monsieur", "find": "si", "replacement": "$non"}}}');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

-- $replaceOne unsupported data types
select bson_dollar_project('{"_id":"1", "test": "hello"}', '{"result": {"$replaceOne": {"input": 1, "find": "el", "replacement": "chandler"}}}');
ERROR:  $replaceOne requires that 'input' be a string, found: 1
select bson_dollar_project('{"_id":"1", "test": "hello"}', '{"result": {"$replaceOne": {"input": "$test", "find": 2, "replacement": "chandler"}}}');
ERROR:  $replaceOne requires that 'find' be a string, found: 2
select bson_dollar_project('{"_id":"1", "test": "hello"}', '{"result": {"$replaceOne": {"input": "yellow", "find": "el", "replacement": 3}}}');
ERROR:  $replaceOne requires that 'replacement' be a string, found: 3
select bson_dollar_project('{"_id":"1", "test": "hello"}', '{"result": {"$replaceOne": {"input": ["\u0022\u00A9\u0022\u00A9\u0022\u00A9\u0022\u00A9", 1, 2], "find": "el", "replacement": 3}}}');
ERROR:  $replaceOne requires that 'input' be a string, found: [ "\"©\"©\"©\"©", 1, 2 ]
select bson_dollar_project('{"_id":"1", "test": "hello"}', '{"result": {"$replaceOne": {"input": "yellow", "find": {"$binary": {"base64": "ww==", "subType": "01"}}, "replacement": 3}}}');
ERROR:  $replaceOne requires that 'find' be a string, found: { "$binary" : { "base64" : "ww==", "subType" : "01" } }
select bson_dollar_project('{"_id":"1", "test": "hello"}', '{"result": {"$replaceOne": {"input": "yellow", "find": "el", "replacement": {"$regex": "/ab/cdsd/abc", "$options" : ""}}}}');
ERROR:  $replaceOne requires that 'replacement' be a string, found: { "$regularExpression" : { "pattern" : "/ab/cdsd/abc", "options" : "" } }
select bson_dollar_project('{"_id":"1", "test": "hello"}', '{"result": {"$replaceOne": {"input": "$test", "find": NaN, "replacement": "chandler"}}}');
ERROR:  $replaceOne requires that 'find' be a string, found: NaN
select bson_dollar_project('{"_id":"1", "test": {"a": "this is a string"}}', '{"result": {"$replaceOne": {"input": "$test", "find": "is", "replacement": "chandler"}}}');
ERROR:  $replaceOne requires that 'input' be a string, found: { "a" : "this is a string" }
-- $replaceOne missing/additional argument
select bson_dollar_project('{"_id":"1", "test": "hello"}', '{"result": {"$replaceOne": {"find": NaN, "replacement": "chandler"}}}');
ERROR:  $replaceOne requires 'input' to be specified
select bson_dollar_project('{"_id":"1", "test": "hello"}', '{"result": {"$replaceOne": {"input": "$test", "replacement": "chandler"}}}');
ERROR:  $replaceOne requires 'find' to be specified
select bson_dollar_project('{"_id":"1", "test": "hello"}', '{"result": {"$replaceOne": {"input": "$test", "find": "asdf"}}}');
ERROR:  $replaceOne requires 'replacement' to be specified
select bson_dollar_project('{"_id":"1", "test": "hello"}', '{"result": {"$replaceOne": {"input": "$test"}}}');
ERROR:  $replaceOne requires 'find' to be specified
select bson_dollar_project('{"_id":"1", "test": "hello"}', '{"result": {"$replaceOne": {"replacement": "chandler"}}}');
ERROR:  $replaceOne requires 'input' to be specified
select bson_dollar_project('{"_id":"1", "test": "hello"}', '{"result": {"$replaceOne": {"find": NaN}}}');
ERROR:  $replaceOne requires 'input' to be specified
select bson_dollar_project('{"_id":"1", "test": {"nest": "hello"}}', '{"result": {"$replaceOne": {"input": "Present monsieur", "find": "si", "replacement": "$non", "newField": "he"}}}');
ERROR:  $replaceOne found an unknown argument: newField
select bson_dollar_project('{"_id":"1", "test": {"nest": "hello"}}', '{"result": {"$replaceOne": {"input": "Present monsieur", "find": "si", "newField": "he"}}}');
ERROR:  $replaceOne found an unknown argument: newField
-- $replaceOne operator: special characters and escape sequences test:
select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceOne": {"input": "I ❤️ documentdb", "find": "❤️", "replacement": "\u0000B"}}}');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : "I \u0000B documentdb" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceOne": {"input": "jalapeño", "find": "peñ", "replacement": "寿司"}}}');
           bson_dollar_project           
---------------------------------------------------------------------
 { "_id" : "1", "result" : "jala寿司o" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceOne": {"input": "a\u0000B\u000d", "find": "\u000d", "replacement": "🥲"}}}');
           bson_dollar_project            
---------------------------------------------------------------------
 { "_id" : "1", "result" : "a\u0000B🥲" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceOne": {"input": "cafétéria", "find": "caf", "replacement": "é"}}}');
          bson_dollar_project          
---------------------------------------------------------------------
 { "_id" : "1", "result" : "éétéria" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceOne": {"input": "cafe\u0301", "find": "café", "replacement": "CAFE" }}}');
        bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "café" }
(1 row)

-- $replaceAll basic tests
select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceAll": {"input": "blue paint", "find": "blue paint", "replacement": "red paint"}}}');
           bson_dollar_project           
---------------------------------------------------------------------
 { "_id" : "1", "result" : "red paint" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceAll": {"input": "foo bar", "find": "o", "replacement": ""}}}');
         bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "f bar" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceAll": {"input": "foo bar", "find": "o", "replacement": "O"}}}');
          bson_dollar_project          
---------------------------------------------------------------------
 { "_id" : "1", "result" : "fOO bar" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceAll": {"input": "foo bar", "find": "o", "replacement": "OO"}}}');
           bson_dollar_project           
---------------------------------------------------------------------
 { "_id" : "1", "result" : "fOOOO bar" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceAll": {"input": "foooo bar", "find": "o", "replacement": "O"}}}');
           bson_dollar_project           
---------------------------------------------------------------------
 { "_id" : "1", "result" : "fOOOO bar" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceAll": {"input": "blue paint", "find": "blue and green paint", "replacement": "red paint"}}}');
           bson_dollar_project            
---------------------------------------------------------------------
 { "_id" : "1", "result" : "blue paint" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceAll": {"input": "blue paint with blue paintbrush", "find": "blue paint", "replacement": "red paint"}}}');
                     bson_dollar_project                     
---------------------------------------------------------------------
 { "_id" : "1", "result" : "red paint with red paintbrush" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceAll": {"input": "blue paint with green paintbrush", "find": "blue paint", "replacement": "red paint"}}}');
                      bson_dollar_project                      
---------------------------------------------------------------------
 { "_id" : "1", "result" : "red paint with green paintbrush" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceAll": {"input": "albatross", "find": "ross", "replacement": "rachel"}}}');
            bson_dollar_project            
---------------------------------------------------------------------
 { "_id" : "1", "result" : "albatrachel" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceAll": {"input": "albatross", "find": "", "replacement": "one"}}}');
                          bson_dollar_project                          
---------------------------------------------------------------------
 { "_id" : "1", "result" : "oneaoneloneboneaonetoneroneoonesonesone" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceAll": {"input": "albatross", "find": "", "replacement": ""}}}');
           bson_dollar_project           
---------------------------------------------------------------------
 { "_id" : "1", "result" : "albatross" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceAll": {"input": "", "find": "", "replacement": "foo"}}}');
        bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : "foo" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceAll": {"input": "albatross", "find": "rachel", "replacement": "ross"}}}');
           bson_dollar_project           
---------------------------------------------------------------------
 { "_id" : "1", "result" : "albatross" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceAll": {"input": "", "find": "rachel", "replacement": "ross"}}}');
      bson_dollar_project       
---------------------------------------------------------------------
 { "_id" : "1", "result" : "" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceAll": {"input": "", "find": "rachel", "replacement": ""}}}');
      bson_dollar_project       
---------------------------------------------------------------------
 { "_id" : "1", "result" : "" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceAll": {"input": "albatross", "find": "", "replacement": ""}}}');
           bson_dollar_project           
---------------------------------------------------------------------
 { "_id" : "1", "result" : "albatross" }
(1 row)

-- $replaceAll null tests
select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceAll": {"input": null, "find": "ross", "replacement": "rachel"}}}');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceAll": {"input": "albatross", "find": null, "replacement": "yelo"}}}');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceAll": {"input": "albatross", "find": "", "replacement": null}}}');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceAll": {"input": "albatross", "find": null, "replacement": null}}}');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceAll": {"input": null, "find": "f", "replacement": null}}}');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceAll": {"input": null, "find": null, "replacement": "chandler"}}}');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

-- $replaceAll with path
select bson_dollar_project('{"_id":"1", "test": "hello"}', '{"result": {"$replaceAll": {"input": "$test", "find": "el", "replacement": "chandler"}}}');
            bson_dollar_project            
---------------------------------------------------------------------
 { "_id" : "1", "result" : "hchandlerlo" }
(1 row)

select bson_dollar_project('{"_id":"1", "test": {"nest": "hello"}}', '{"result": {"$replaceAll": {"input": "$test.nest", "find": "el", "replacement": "chandler"}}}');
            bson_dollar_project            
---------------------------------------------------------------------
 { "_id" : "1", "result" : "hchandlerlo" }
(1 row)

select bson_dollar_project('{"_id":"1", "test": {"nest": "hello"}}', '{"result": {"$replaceAll": {"input": "wandering hellostater", "find": "$test.nest", "replacement": "phoebe"}}}');
                 bson_dollar_project                  
---------------------------------------------------------------------
 { "_id" : "1", "result" : "wandering phoebestater" }
(1 row)

select bson_dollar_project('{"_id":"1", "test": {"nest": "hello"}}', '{"result": {"$replaceAll": {"input": "wandering cheapskate", "find": "cheap", "replacement": "$test.nest"}}}');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : "wandering helloskate" }
(1 row)

-- $replaceAll with missing path
select bson_dollar_project('{"_id":"1", "test": {"nest": "hello"}}', '{"result": {"$replaceAll": {"input": "$test.nesty", "find": "el", "replacement": "chandler"}}}');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"1", "test": {"nest": "hello"}}', '{"result": {"$replaceAll": {"input": "Present monsieur", "find": "$madame", "replacement": "non"}}}');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

select bson_dollar_project('{"_id":"1", "test": {"nest": "hello"}}', '{"result": {"$replaceAll": {"input": "Present monsieur", "find": "si", "replacement": "$non"}}}');
       bson_dollar_project        
---------------------------------------------------------------------
 { "_id" : "1", "result" : null }
(1 row)

-- $replaceAll unsupported data types
select bson_dollar_project('{"_id":"1", "test": "hello"}', '{"result": {"$replaceAll": {"input": 1, "find": "el", "replacement": "chandler"}}}');
ERROR:  $replaceAll requires that 'input' be a string, found: 1
select bson_dollar_project('{"_id":"1", "test": "hello"}', '{"result": {"$replaceAll": {"input": "$test", "find": 2, "replacement": "chandler"}}}');
ERROR:  $replaceAll requires that 'find' be a string, found: 2
select bson_dollar_project('{"_id":"1", "test": "hello"}', '{"result": {"$replaceAll": {"input": "yellow", "find": "el", "replacement": 3}}}');
ERROR:  $replaceAll requires that 'replacement' be a string, found: 3
select bson_dollar_project('{"_id":"1", "test": "hello"}', '{"result": {"$replaceAll": {"input": ["\u0022\u00A9\u0022\u00A9\u0022\u00A9\u0022\u00A9", 1, 2], "find": "el", "replacement": 3}}}');
ERROR:  $replaceAll requires that 'input' be a string, found: [ "\"©\"©\"©\"©", 1, 2 ]
select bson_dollar_project('{"_id":"1", "test": "hello"}', '{"result": {"$replaceAll": {"input": "yellow", "find": {"$binary": {"base64": "ww==", "subType": "01"}}, "replacement": 3}}}');
ERROR:  $replaceAll requires that 'find' be a string, found: { "$binary" : { "base64" : "ww==", "subType" : "01" } }
select bson_dollar_project('{"_id":"1", "test": "hello"}', '{"result": {"$replaceAll": {"input": "yellow", "find": "el", "replacement": {"$regex": "/ab/cdsd/abc", "$options" : ""}}}}');
ERROR:  $replaceAll requires that 'replacement' be a string, found: { "$regularExpression" : { "pattern" : "/ab/cdsd/abc", "options" : "" } }
select bson_dollar_project('{"_id":"1", "test": "hello"}', '{"result": {"$replaceAll": {"input": "$test", "find": NaN, "replacement": "chandler"}}}');
ERROR:  $replaceAll requires that 'find' be a string, found: NaN
select bson_dollar_project('{"_id":"1", "test": {"a": "this is a string"}}', '{"result": {"$replaceAll": {"input": "$test", "find": "is", "replacement": "chandler"}}}');
ERROR:  $replaceAll requires that 'input' be a string, found: { "a" : "this is a string" }
-- $replaceAll missing/additional argument
select bson_dollar_project('{"_id":"1", "test": "hello"}', '{"result": {"$replaceAll": {"find": NaN, "replacement": "chandler"}}}');
ERROR:  $replaceAll requires 'input' to be specified
select bson_dollar_project('{"_id":"1", "test": "hello"}', '{"result": {"$replaceAll": {"input": "$test", "replacement": "chandler"}}}');
ERROR:  $replaceAll requires 'find' to be specified
select bson_dollar_project('{"_id":"1", "test": "hello"}', '{"result": {"$replaceAll": {"input": "$test", "find": "asdf"}}}');
ERROR:  $replaceAll requires 'replacement' to be specified
select bson_dollar_project('{"_id":"1", "test": "hello"}', '{"result": {"$replaceAll": {"input": "$test"}}}');
ERROR:  $replaceAll requires 'find' to be specified
select bson_dollar_project('{"_id":"1", "test": "hello"}', '{"result": {"$replaceAll": {"replacement": "chandler"}}}');
ERROR:  $replaceAll requires 'input' to be specified
select bson_dollar_project('{"_id":"1", "test": "hello"}', '{"result": {"$replaceAll": {"find": NaN}}}');
ERROR:  $replaceAll requires 'input' to be specified
select bson_dollar_project('{"_id":"1", "test": {"nest": "hello"}}', '{"result": {"$replaceAll": {"input": "Present monsieur", "find": "si", "replacement": "$non", "newField": "he"}}}');
ERROR:  $replaceAll found an unknown argument: newField
select bson_dollar_project('{"_id":"1", "test": {"nest": "hello"}}', '{"result": {"$replaceAll": {"input": "Present monsieur", "find": "si", "newField": "he"}}}');
ERROR:  $replaceAll found an unknown argument: newField
-- $replaceAll operator: special characters and escape sequences test:
select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceAll": {"input": "I ❤️ documentdb", "find": "❤️", "replacement": "\u0000B"}}}');
                bson_dollar_project                 
---------------------------------------------------------------------
 { "_id" : "1", "result" : "I \u0000B documentdb" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceAll": {"input": "jalapeño", "find": "peñ", "replacement": "寿司"}}}');
           bson_dollar_project           
---------------------------------------------------------------------
 { "_id" : "1", "result" : "jala寿司o" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceAll": {"input": "a\u0000B\u000d", "find": "\u000d", "replacement": "🥲"}}}');
           bson_dollar_project            
---------------------------------------------------------------------
 { "_id" : "1", "result" : "a\u0000B🥲" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceAll": {"input": "cafétéria", "find": "caf", "replacement": "é"}}}');
          bson_dollar_project          
---------------------------------------------------------------------
 { "_id" : "1", "result" : "éétéria" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceAll": {"input": "cafe\u0301", "find": "café", "replacement": "CAFE" }}}');
        bson_dollar_project         
---------------------------------------------------------------------
 { "_id" : "1", "result" : "café" }
(1 row)

-- $replaceAll multiple replacements
select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceAll": {"input": "The quick fox jumped over the laze dog", "find": "d", "replacement": "cat" }}}');
                           bson_dollar_project                            
---------------------------------------------------------------------
 { "_id" : "1", "result" : "The quick fox jumpecat over the laze catog" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceAll": {"input": "albatross and its wings", "find": " ", "replacement": "huge" }}}');
                      bson_dollar_project                       
---------------------------------------------------------------------
 { "_id" : "1", "result" : "albatrosshugeandhugeitshugewings" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceAll": {"input": "blue paint with blue paintbrush", "find": "blue paint", "replacement": "green paint" }}}');
                       bson_dollar_project                       
---------------------------------------------------------------------
 { "_id" : "1", "result" : "green paint with green paintbrush" }
(1 row)

select bson_dollar_project('{"_id":"1"}', '{"result": {"$replaceAll": {"input": "yellow", "find": "", "replacement": "z" }}}');
             bson_dollar_project             
---------------------------------------------------------------------
 { "_id" : "1", "result" : "zyzezlzlzozwz" }
(1 row)

