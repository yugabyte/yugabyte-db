SET search_path TO documentdb_core,documentdb_api,documentdb_api_catalog,documentdb_api_internal;
SET citus.next_shard_id TO 314000;
SET documentdb.next_collection_id TO 3140;
SET documentdb.next_collection_index_id TO 3140;
-- collection agnostic with no pipeline should work and return 0 rows.
SELECT document from bson_aggregation_pipeline('db', '{ "aggregate" : 1.0, "pipeline" : [  ], "cursor" : {  }, "txnNumber" : 0, "lsid" : { "id" : { "$binary" : { "base64": "H+W3J//vSn6obaefeJ6j/g==", "subType" : "04" } } }, "$db" : "admin" }');
 document 
---------------------------------------------------------------------
(0 rows)

-- $document tests
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": 1, "pipeline": [ { "$documents": [] } ], "cursor": {}}');
 documents_aggregate 
---------------------------------------------------------------------
(0 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": 1, "pipeline": [ { "$documents": [ { "a": 1 }, { "b": 2 } ] }], "cursor": {} }');
       documents_aggregate        
---------------------------------------------------------------------
 { "a" : { "$numberInt" : "1" } }
 { "b" : { "$numberInt" : "2" } }
(2 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": 1, "pipeline": [ { "$documents": [ { "a": { "$isArray": "a" } }, { "b": 2 } ] }], "cursor": {}}');
       documents_aggregate        
---------------------------------------------------------------------
 { "a" : false }
 { "b" : { "$numberInt" : "2" } }
(2 rows)

EXPLAIN (COSTS OFF, VERBOSE ON) SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": 1, "pipeline": [ { "$documents": [ { "a": 1 }, { "b": 2 } ] }], "cursor": {} }');
                                                                         QUERY PLAN                                                                         
---------------------------------------------------------------------
 Function Scan on documentdb_api_catalog.bson_lookup_unwind documents
   Output: documents
   Function Call: bson_lookup_unwind('{ "$documents" : [ { "a" : { "$numberInt" : "1" } }, { "b" : { "$numberInt" : "2" } } ] }'::bson, '$documents'::text)
(3 rows)

EXPLAIN (COSTS OFF, VERBOSE ON) SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": 1, "pipeline": [ { "$documents": [ { "a": 1 }, { "b": 2 } ] }, { "$addFields": { "b": 1 } } ], "cursor": {} }');
                                                                                                     QUERY PLAN                                                                                                      
---------------------------------------------------------------------
 Function Scan on documentdb_api_catalog.bson_lookup_unwind documents
   Output: bson_dollar_add_fields(documents.documents, '{ "b" : { "$numberInt" : "1" } }'::bson, '{ "now" : NOW_SYS_VARIABLE }'::bson)
   Function Call: bson_lookup_unwind('{ "$documents" : [ { "a" : { "$numberInt" : "1" } }, { "b" : { "$numberInt" : "2" } } ] }'::bson, '$documents'::text)
(3 rows)

-- error cases
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": 1, "pipeline": [ { "$documents": null }], "cursor": {} }');
ERROR:  error during aggregation :: caused by :: an array is expected
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": 1, "pipeline": [ { "$documents": "String Value" }], "cursor": {} }');
ERROR:  error during aggregation :: caused by :: an array is expected
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": 1, "pipeline": [ { "$documents": {} }], "cursor": {}}');
ERROR:  error during aggregation :: caused by :: an array is expected
-- bugfix scenario:
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": 1, "pipeline": [{ "$documents": [ { "playerId": "PlayerA", "gameId": "G1", "score": 1 } ] }, { "$group": { "_id": "$gameId", "firstFiveScores": { "$firstN": { "input": "$score", "n": 5 } } } } ] }');
                       documents_aggregate                        
---------------------------------------------------------------------
 { "_id" : "G1", "firstFiveScores" : [ { "$numberInt" : "1" } ] }
(1 row)

