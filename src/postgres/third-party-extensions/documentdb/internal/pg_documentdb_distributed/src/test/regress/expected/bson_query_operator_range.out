SET citus.next_shard_id TO 492000;
SET documentdb.next_collection_id TO 49200;
SET documentdb.next_collection_index_id TO 49200;
SET search_path TO documentdb_api_catalog;
DO $$
BEGIN
    FOR i IN 1..10000 LOOP
        PERFORM documentdb_api.insert_one('db', 'range_query', '{ "a": 1 }');
    END LOOP;
END;
$$ LANGUAGE plpgsql;
NOTICE:  creating collection
SELECT documentdb_api.insert_one('db', 'range_query', '{ "_id": 1, "a": 1 }', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'range_query', '{ "_id": 2, "a": [1, 2, 3] }', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'range_query', '{ "_id": 3, "a": [{ "b" : 1}, 2, [4, 5]] }', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

BEGIN;
SET local client_min_messages TO ERROR;
set local citus.enable_local_execution to off; -- Simulate remote exection with a single nodes
Set local citus.log_remote_commands to on; -- Will print Citus rewrites of the queries
Set local citus.log_local_commands to on; -- Will print the local queries 
Set local log_statement to 'all'; -- Verbose logging
-- if there is no index we don't optimize the  a > 1 & a < 5 to  a <> {1, 5} (aka the range operator) 
SELECT document FROM bson_aggregation_find('db', '{ "find": "range_query", "filter": { "a": { "$gt": 1 }, "a" : {"$lt" : 5} }, "collation" : {"locale" : "en", "strength" : 1} }');
                                                                          document                                                                          
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "2" }, "a" : [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ] }
 { "_id" : { "$numberInt" : "3" }, "a" : [ { "b" : { "$numberInt" : "1" } }, { "$numberInt" : "2" }, [ { "$numberInt" : "4" }, { "$numberInt" : "5" } ] ] }
(2 rows)

EXPLAIN(costs off) SELECT document FROM bson_aggregation_find('db', '{ "find": "range_query", "filter": { "a": { "$gt": 1 }, "a" : {"$lt" : 5} }, "collation" : {"locale" : "en", "strength" : 1}  }');
                                                                                                       QUERY PLAN                                                                                                        
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Node: host=localhost port=58070 dbname=regression
         ->  Bitmap Heap Scan on documents_49200_492007 collection
               Recheck Cond: (shard_key_value = '49200'::bigint)
               Filter: ((document OPERATOR(documentdb_api_catalog.@>) '{ "a" : { "$numberInt" : "1" } }'::documentdb_core.bson) AND (document OPERATOR(documentdb_api_catalog.@<) '{ "a" : { "$numberInt" : "5" } }'::documentdb_core.bson))
               ->  Bitmap Index Scan on _id_
                     Index Cond: (shard_key_value = '49200'::bigint)
(10 rows)

END;
SELECT documentdb_api_internal.create_indexes_non_concurrently(
  'db',
  '{
     "createIndexes": "range_query",
     "indexes": [
       {"key": {"a": 1}, "name": "a_range"}
     ]
   }',
   true
);
                                                                                                   create_indexes_non_concurrently                                                                                                    
---------------------------------------------------------------------
 { "raw" : { "defaultShard" : { "numIndexesBefore" : { "$numberInt" : "1" }, "numIndexesAfter" : { "$numberInt" : "2" }, "createdCollectionAutomatically" : false, "ok" : { "$numberInt" : "1" } } }, "ok" : { "$numberInt" : "1" } }
(1 row)

BEGIN;
SET local client_min_messages TO ERROR;
set local citus.enable_local_execution to off; -- Simulate remote exection with a single nodes
Set local citus.log_remote_commands to on; -- Will print Citus rewrites of the queries
Set local citus.log_local_commands to on; -- Will print the local queries 
Set local log_statement to 'all'; -- Verbose logging
SELECT document FROM bson_aggregation_find('db', '{ "find": "range_query", "filter": { "a": { "$gt": 1 }, "a" : {"$lt" : 5} } }');
                                                                          document                                                                          
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "2" }, "a" : [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ] }
 { "_id" : { "$numberInt" : "3" }, "a" : [ { "b" : { "$numberInt" : "1" } }, { "$numberInt" : "2" }, [ { "$numberInt" : "4" }, { "$numberInt" : "5" } ] ] }
(2 rows)

EXPLAIN(costs off) SELECT document FROM bson_aggregation_find('db', '{ "find": "range_query", "filter": { "a": { "$gt": 1 }, "a" : {"$lt" : 5} } }');
                                                                                                         QUERY PLAN                                                                                                         
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Node: host=localhost port=58070 dbname=regression
         ->  Bitmap Heap Scan on documents_49200_492007 collection
               Recheck Cond: (document OPERATOR(documentdb_api_catalog.@<>) '{ "a" : { "min" : { "$numberInt" : "1" }, "max" : { "$numberInt" : "5" }, "minInclusive" : false, "maxInclusive" : false } }'::documentdb_core.bson)
               ->  Bitmap Index Scan on a_range
                     Index Cond: (document OPERATOR(documentdb_api_catalog.@<>) '{ "a" : { "min" : { "$numberInt" : "1" }, "max" : { "$numberInt" : "5" }, "minInclusive" : false, "maxInclusive" : false } }'::documentdb_core.bson)
(9 rows)

-- when collation is present $push down of $range query is not done, and we use the unoptimized version (workitem=3423305)
SELECT document FROM bson_aggregation_find('db', '{ "find": "range_query", "filter": { "a": { "$gt": 1 }, "a" : {"$lt" : 5} }, "collation" : {"locale" : "en", "strength" : 1} }');
                                                                          document                                                                          
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "2" }, "a" : [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ] }
 { "_id" : { "$numberInt" : "3" }, "a" : [ { "b" : { "$numberInt" : "1" } }, { "$numberInt" : "2" }, [ { "$numberInt" : "4" }, { "$numberInt" : "5" } ] ] }
(2 rows)

EXPLAIN(costs off) SELECT document FROM bson_aggregation_find('db', '{ "find": "range_query", "filter": { "a": { "$gt": 1 }, "a" : {"$lt" : 5} } ,"collation" : {"locale" : "en", "strength" : 1} }');
                                                                                                         QUERY PLAN                                                                                                         
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Node: host=localhost port=58070 dbname=regression
         ->  Bitmap Heap Scan on documents_49200_492007 collection
               Recheck Cond: (document OPERATOR(documentdb_api_catalog.@<>) '{ "a" : { "min" : { "$numberInt" : "1" }, "max" : { "$numberInt" : "5" }, "minInclusive" : false, "maxInclusive" : false } }'::documentdb_core.bson)
               ->  Bitmap Index Scan on a_range
                     Index Cond: (document OPERATOR(documentdb_api_catalog.@<>) '{ "a" : { "min" : { "$numberInt" : "1" }, "max" : { "$numberInt" : "5" }, "minInclusive" : false, "maxInclusive" : false } }'::documentdb_core.bson)
(9 rows)

END;
BEGIN;
SET local client_min_messages TO ERROR;
set local citus.enable_local_execution to off; -- Simulate remote exection with a single nodes
Set local citus.log_remote_commands to on; -- Will print Citus rewrites of the queries
Set local citus.log_local_commands to on; -- Will print the local queries 
Set local log_statement to 'all'; -- Verbose logging
EXPLAIN(costs off) SELECT document FROM bson_aggregation_find('db', '{ "find": "range_query", "filter": { "a": { "$in": [ 5, 6, 7] }, "a": { "$gt": 1 }, "a" : {"$lt" : 5} } }');
                                                                                                                                                                                     QUERY PLAN                                                                                                                                                                                      
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Node: host=localhost port=58070 dbname=regression
         ->  Bitmap Heap Scan on documents_49200_492007 collection
               Recheck Cond: ((document OPERATOR(documentdb_api_catalog.@*=) '{ "a" : [ { "$numberInt" : "5" }, { "$numberInt" : "6" }, { "$numberInt" : "7" } ] }'::documentdb_core.bson) AND (document OPERATOR(documentdb_api_catalog.@<>) '{ "a" : { "min" : { "$numberInt" : "1" }, "max" : { "$numberInt" : "5" }, "minInclusive" : false, "maxInclusive" : false } }'::documentdb_core.bson))
               ->  Bitmap Index Scan on a_range
                     Index Cond: ((document OPERATOR(documentdb_api_catalog.@*=) '{ "a" : [ { "$numberInt" : "5" }, { "$numberInt" : "6" }, { "$numberInt" : "7" } ] }'::documentdb_core.bson) AND (document OPERATOR(documentdb_api_catalog.@<>) '{ "a" : { "min" : { "$numberInt" : "1" }, "max" : { "$numberInt" : "5" }, "minInclusive" : false, "maxInclusive" : false } }'::documentdb_core.bson))
(9 rows)

EXPLAIN(costs off) SELECT document FROM bson_aggregation_find('db', '{ "find": "range_query", "filter": { "b": { "$in": [ 5, 6, 7] }, "a": { "$gt": 1 }, "a" : {"$lt" : 5} } }');
                                                                                                         QUERY PLAN                                                                                                         
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Node: host=localhost port=58070 dbname=regression
         ->  Bitmap Heap Scan on documents_49200_492007 collection
               Recheck Cond: (document OPERATOR(documentdb_api_catalog.@<>) '{ "a" : { "min" : { "$numberInt" : "1" }, "max" : { "$numberInt" : "5" }, "minInclusive" : false, "maxInclusive" : false } }'::documentdb_core.bson)
               Filter: (document OPERATOR(documentdb_api_catalog.@*=) '{ "b" : [ { "$numberInt" : "5" }, { "$numberInt" : "6" }, { "$numberInt" : "7" } ] }'::documentdb_core.bson)
               ->  Bitmap Index Scan on a_range
                     Index Cond: (document OPERATOR(documentdb_api_catalog.@<>) '{ "a" : { "min" : { "$numberInt" : "1" }, "max" : { "$numberInt" : "5" }, "minInclusive" : false, "maxInclusive" : false } }'::documentdb_core.bson)
(10 rows)

END;
-- Shard orders collection on item 
SELECT documentdb_api.shard_collection('db','range_query', '{"_id":"hashed"}', false);
 shard_collection 
---------------------------------------------------------------------
 
(1 row)

BEGIN;
SET local client_min_messages TO ERROR;
set local citus.enable_local_execution to off; -- Simulate remote exection with a single nodes
Set local citus.log_remote_commands to on; -- Will print Citus rewrites of the queries
Set local citus.log_local_commands to on; -- Will print the local queries 
Set local log_statement to 'all'; -- Verbose logging
SELECT document FROM bson_aggregation_find('db', '{ "find": "range_query", "filter": { "a": { "$gt": 1 }, "a" : {"$lt" : 5} } }');
                                                                          document                                                                          
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "2" }, "a" : [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ] }
 { "_id" : { "$numberInt" : "3" }, "a" : [ { "b" : { "$numberInt" : "1" } }, { "$numberInt" : "2" }, [ { "$numberInt" : "4" }, { "$numberInt" : "5" } ] ] }
(2 rows)

EXPLAIN(costs off) SELECT document FROM bson_aggregation_find('db', '{ "find": "range_query", "filter": { "a": { "$gt": 1 }, "a" : {"$lt" : 5} } }');
                                                                                                         QUERY PLAN                                                                                                         
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Task Count: 8
   Tasks Shown: One of 8
   ->  Task
         Node: host=localhost port=58070 dbname=regression
         ->  Bitmap Heap Scan on documents_49200_492016 collection
               Recheck Cond: (document OPERATOR(documentdb_api_catalog.@<>) '{ "a" : { "min" : { "$numberInt" : "1" }, "max" : { "$numberInt" : "5" }, "minInclusive" : false, "maxInclusive" : false } }'::documentdb_core.bson)
               ->  Bitmap Index Scan on a_range
                     Index Cond: (document OPERATOR(documentdb_api_catalog.@<>) '{ "a" : { "min" : { "$numberInt" : "1" }, "max" : { "$numberInt" : "5" }, "minInclusive" : false, "maxInclusive" : false } }'::documentdb_core.bson)
(9 rows)

END;
SELECT documentdb_api.insert_one('db', 'range_js_tests', '{"val": [1, 2]}', NULL);
NOTICE:  creating collection
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'range_js_tests', '{"val": [3, 4]}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'range_js_tests', '{"val": [3, 1]}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'range_js_tests', '{"val": {"test": 5}}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'range_js_tests', '{"val": [{"test": 7}]}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'range_js_tests', '{"val": [true, false]}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'range_js_tests', '{"val": 2}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'range_js_tests', '{"val": 3}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'range_js_tests', '{"val": 4}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'range_js_tests', '{"val": [2]}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'range_js_tests', '{"val": [3]}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'range_js_tests', '{"val": [4]}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'range_js_tests', '{"val": [1, true]}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'range_js_tests', '{"val": [true, 1]}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'range_js_tests', '{"val": [1, 4]}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'range_js_tests', '{"val": [null]}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'range_js_tests', '{"val": null}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'range_js_tests', '{"val": { "$minKey": 1 }}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'range_js_tests', '{"val": [{ "$minKey": 1 }]}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'range_js_tests', '{"val": [{ "$minKey": 1 }, 3]}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'range_js_tests', '{"val": [3, { "$minKey": 1 }]}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'range_js_tests', '{"val": { "$maxKey": 1 }}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'range_js_tests', '{"val": [{ "$maxKey": 1 }]}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'range_js_tests', '{"val": [{ "$maxKey": 1 }, 3]}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'range_js_tests', '{"val": [3, { "$maxKey": 1 }]}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'range_js_tests', '{"val": []}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT document FROM bson_aggregation_find('db', '{ "find": "range_js_tests", "filter": { "val": { "$gt": 1 }, "val" : {"$lt" : 3} }, "projection": { "_id": 0, "val": 1 }, "sort": { "val": 1 } }');
                            document                            
---------------------------------------------------------------------
 { "val" : [ { "$numberInt" : "1" }, { "$numberInt" : "2" } ] }
 { "val" : [ { "$numberInt" : "3" }, { "$numberInt" : "1" } ] }
 { "val" : [ { "$numberInt" : "1" }, { "$numberInt" : "4" } ] }
 { "val" : { "$numberInt" : "2" } }
 { "val" : [ { "$numberInt" : "2" } ] }
(5 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "range_js_tests", "filter": { "val": { "$gt": 1, "$lt" : 3} }, "projection": { "_id": 0, "val": 1 }, "sort": { "val": 1 } }');
                            document                            
---------------------------------------------------------------------
 { "val" : [ { "$numberInt" : "1" }, { "$numberInt" : "2" } ] }
 { "val" : [ { "$numberInt" : "3" }, { "$numberInt" : "1" } ] }
 { "val" : [ { "$numberInt" : "1" }, { "$numberInt" : "4" } ] }
 { "val" : { "$numberInt" : "2" } }
 { "val" : [ { "$numberInt" : "2" } ] }
(5 rows)

SELECT documentdb_api_internal.create_indexes_non_concurrently(
  'db',
  '{
     "createIndexes": "range_js_tests",
     "indexes": [
       {"key": {"val": 1}, "name": "a_range"}
     ]
   }',
   true
);
                                                                                                   create_indexes_non_concurrently                                                                                                    
---------------------------------------------------------------------
 { "raw" : { "defaultShard" : { "numIndexesBefore" : { "$numberInt" : "1" }, "numIndexesAfter" : { "$numberInt" : "2" }, "createdCollectionAutomatically" : false, "ok" : { "$numberInt" : "1" } } }, "ok" : { "$numberInt" : "1" } }
(1 row)

SELECT document FROM bson_aggregation_find('db', '{ "find": "range_js_tests", "filter": { "val": { "$gt": 1 }, "val" : {"$lt" : 3} }, "projection": { "_id": 0, "val": 1 }, "sort": { "val": 1 } }');
                            document                            
---------------------------------------------------------------------
 { "val" : [ { "$numberInt" : "1" }, { "$numberInt" : "2" } ] }
 { "val" : [ { "$numberInt" : "3" }, { "$numberInt" : "1" } ] }
 { "val" : [ { "$numberInt" : "1" }, { "$numberInt" : "4" } ] }
 { "val" : { "$numberInt" : "2" } }
 { "val" : [ { "$numberInt" : "2" } ] }
(5 rows)

BEGIN;
SET LOCAL enable_seqscan TO OFF;
SET LOCAL seq_page_cost TO 9999999;
SELECT document FROM bson_aggregation_find('db', '{ "find": "range_js_tests", "filter": { "val": { "$gt": 1 }, "val" : {"$lt" : 3} }, "projection": { "_id": 0, "val": 1 }, "sort": { "val": 1 } }');
                            document                            
---------------------------------------------------------------------
 { "val" : [ { "$numberInt" : "1" }, { "$numberInt" : "2" } ] }
 { "val" : [ { "$numberInt" : "3" }, { "$numberInt" : "1" } ] }
 { "val" : [ { "$numberInt" : "1" }, { "$numberInt" : "4" } ] }
 { "val" : { "$numberInt" : "2" } }
 { "val" : [ { "$numberInt" : "2" } ] }
(5 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "range_js_tests", "filter": { "val": { "$gt": 1, "$lt" : 3} }, "projection": { "_id": 0, "val": 1 }, "sort": { "val": 1 } }');
                            document                            
---------------------------------------------------------------------
 { "val" : [ { "$numberInt" : "1" }, { "$numberInt" : "2" } ] }
 { "val" : [ { "$numberInt" : "3" }, { "$numberInt" : "1" } ] }
 { "val" : [ { "$numberInt" : "1" }, { "$numberInt" : "4" } ] }
 { "val" : { "$numberInt" : "2" } }
 { "val" : [ { "$numberInt" : "2" } ] }
(5 rows)

EXPLAIN(costs off) SELECT document FROM bson_aggregation_find('db', '{ "find": "range_js_tests", "filter": { "val": { "$gt": 1 }, "val" : {"$lt" : 3} }, "projection": { "_id": 0, "val": 1 }, "sort": { "val": 1 } }');
                                                                                                             QUERY PLAN                                                                                                             
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Node: host=localhost port=58070 dbname=regression
         ->  Sort
               Sort Key: (documentdb_api_catalog.bson_orderby(document, '{ "val" : { "$numberInt" : "1" } }'::documentdb_core.bson)) NULLS FIRST
               ->  Bitmap Heap Scan on documents_49201_492025 collection
                     Recheck Cond: (document OPERATOR(documentdb_api_catalog.@<>) '{ "val" : { "min" : { "$numberInt" : "1" }, "max" : { "$numberInt" : "3" }, "minInclusive" : false, "maxInclusive" : false } }'::documentdb_core.bson)
                     ->  Bitmap Index Scan on a_range
                           Index Cond: (document OPERATOR(documentdb_api_catalog.@<>) '{ "val" : { "min" : { "$numberInt" : "1" }, "max" : { "$numberInt" : "3" }, "minInclusive" : false, "maxInclusive" : false } }'::documentdb_core.bson)
(11 rows)

EXPLAIN(costs off) SELECT document FROM bson_aggregation_find('db', '{ "find": "range_js_tests", "filter": { "val": { "$gt": 1, "$lt" : 3} }, "projection": { "_id": 0, "val": 1 }, "sort": { "val": 1 } }');
                                                                                                             QUERY PLAN                                                                                                             
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Node: host=localhost port=58070 dbname=regression
         ->  Sort
               Sort Key: (documentdb_api_catalog.bson_orderby(document, '{ "val" : { "$numberInt" : "1" } }'::documentdb_core.bson)) NULLS FIRST
               ->  Bitmap Heap Scan on documents_49201_492025 collection
                     Recheck Cond: (document OPERATOR(documentdb_api_catalog.@<>) '{ "val" : { "min" : { "$numberInt" : "1" }, "max" : { "$numberInt" : "3" }, "minInclusive" : false, "maxInclusive" : false } }'::documentdb_core.bson)
                     ->  Bitmap Index Scan on a_range
                           Index Cond: (document OPERATOR(documentdb_api_catalog.@<>) '{ "val" : { "min" : { "$numberInt" : "1" }, "max" : { "$numberInt" : "3" }, "minInclusive" : false, "maxInclusive" : false } }'::documentdb_core.bson)
(11 rows)

END;
-- tests For Minkey() and MaxKey() along with numbers
SELECT documentdb_api.insert_one('db', 'range_js_tests2', '{"val": { "$maxKey": 1 }}', NULL);
NOTICE:  creating collection
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'range_js_tests2', '{"val": { "$minKey": 1 }}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'range_js_tests2', '{"val": [{ "$minKey": 1 }]}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'range_js_tests2', '{"val": [{ "$minKey": 1 }, 3]}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'range_js_tests2', '{"val": [3, { "$minKey": 1 }]}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'range_js_tests2', '{"val": [{ "$maxKey": 1 }]}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'range_js_tests2', '{"val": [{ "$maxKey": 1 }, 3]}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'range_js_tests2', '{"val": [3, { "$maxKey": 1 }]}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'range_js_tests2', '{"val": [3]}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'range_js_tests2', '{"val": 3}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

--      Runtime tests
SELECT document FROM bson_aggregation_find('db', '{ "find": "range_js_tests2", "filter": { "val": { "$gte": {"$minKey" : 1}, "$lte": {"$minKey" : 1}} }, "projection": { "_id": 0, "val": 1 }, "sort": { "val": 1 } }');
                         document                          
---------------------------------------------------------------------
 { "val" : { "$minKey" : 1 } }
 { "val" : [ { "$minKey" : 1 } ] }
 { "val" : [ { "$minKey" : 1 }, { "$numberInt" : "3" } ] }
 { "val" : [ { "$numberInt" : "3" }, { "$minKey" : 1 } ] }
(4 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "range_js_tests2", "filter": { "val": { "$gte": {"$minKey" : 1}, "$lte": {"$maxKey" : 1}} }, "projection": { "_id": 0, "val": 1 }, "sort": { "val": 1 } }');
                         document                          
---------------------------------------------------------------------
 { "val" : [ { "$numberInt" : "3" }, { "$minKey" : 1 } ] }
 { "val" : { "$minKey" : 1 } }
 { "val" : [ { "$minKey" : 1 } ] }
 { "val" : [ { "$minKey" : 1 }, { "$numberInt" : "3" } ] }
 { "val" : [ { "$numberInt" : "3" }, { "$maxKey" : 1 } ] }
 { "val" : { "$numberInt" : "3" } }
 { "val" : [ { "$maxKey" : 1 }, { "$numberInt" : "3" } ] }
 { "val" : [ { "$numberInt" : "3" } ] }
 { "val" : [ { "$maxKey" : 1 } ] }
 { "val" : { "$maxKey" : 1 } }
(10 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "range_js_tests2", "filter": { "val": { "$gte": {"$minKey" : 1}, "$lt": {"$minKey" : 1}} }, "projection": { "_id": 0, "val": 1 }, "sort": { "val": 1 } }');
 document 
---------------------------------------------------------------------
(0 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "range_js_tests2", "filter": { "val": { "$gte": 1, "$lte": {"$maxKey" : 1}} }, "projection": { "_id": 0, "val": 1 }, "sort": { "val": 1 } }');
                         document                          
---------------------------------------------------------------------
 { "val" : [ { "$minKey" : 1 }, { "$numberInt" : "3" } ] }
 { "val" : [ { "$numberInt" : "3" }, { "$minKey" : 1 } ] }
 { "val" : [ { "$maxKey" : 1 }, { "$numberInt" : "3" } ] }
 { "val" : [ { "$numberInt" : "3" }, { "$maxKey" : 1 } ] }
 { "val" : [ { "$numberInt" : "3" } ] }
 { "val" : { "$numberInt" : "3" } }
(6 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "range_js_tests2", "filter": { "val": { "$gte": {"$minKey" : 1}, "$lte": 100} }, "projection": { "_id": 0, "val": 1 }, "sort": { "val": 1 } }');
                         document                          
---------------------------------------------------------------------
 { "val" : [ { "$minKey" : 1 }, { "$numberInt" : "3" } ] }
 { "val" : [ { "$numberInt" : "3" }, { "$minKey" : 1 } ] }
 { "val" : [ { "$maxKey" : 1 }, { "$numberInt" : "3" } ] }
 { "val" : [ { "$numberInt" : "3" }, { "$maxKey" : 1 } ] }
 { "val" : [ { "$numberInt" : "3" } ] }
 { "val" : { "$numberInt" : "3" } }
(6 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "range_js_tests2", "filter": { "val": { "$gte": 1, "$lt": 3} }, "projection": { "_id": 0, "val": 1 }, "sort": { "val": 1 } }');
 document 
---------------------------------------------------------------------
(0 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "range_js_tests2", "filter": { "val": { "$gte": 3, "$lte": 3} }, "projection": { "_id": 0, "val": 1 }, "sort": { "val": 1 } }');
                         document                          
---------------------------------------------------------------------
 { "val" : [ { "$minKey" : 1 }, { "$numberInt" : "3" } ] }
 { "val" : [ { "$numberInt" : "3" }, { "$minKey" : 1 } ] }
 { "val" : [ { "$maxKey" : 1 }, { "$numberInt" : "3" } ] }
 { "val" : [ { "$numberInt" : "3" }, { "$maxKey" : 1 } ] }
 { "val" : [ { "$numberInt" : "3" } ] }
 { "val" : { "$numberInt" : "3" } }
(6 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "range_js_tests2", "filter": { "val": { "$gt": 3, "$lt": 5} }, "projection": { "_id": 0, "val": 1 }, "sort": { "val": 1 } }');
 document 
---------------------------------------------------------------------
(0 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "range_js_tests2", "filter": { "val": { "$gte": 3, "$lt": 5} }, "projection": { "_id": 0, "val": 1 }, "sort": { "val": 1 } }');
                         document                          
---------------------------------------------------------------------
 { "val" : [ { "$minKey" : 1 }, { "$numberInt" : "3" } ] }
 { "val" : [ { "$numberInt" : "3" }, { "$minKey" : 1 } ] }
 { "val" : [ { "$maxKey" : 1 }, { "$numberInt" : "3" } ] }
 { "val" : [ { "$numberInt" : "3" }, { "$maxKey" : 1 } ] }
 { "val" : [ { "$numberInt" : "3" } ] }
 { "val" : { "$numberInt" : "3" } }
(6 rows)

--      Index tests
SELECT documentdb_api_internal.create_indexes_non_concurrently(
  'db',
  '{
     "createIndexes": "range_js_tests2",
     "indexes": [
       {"key": {"val": 1}, "name": "a_range"}
     ]
   }',
   true
);
                                                                                                   create_indexes_non_concurrently                                                                                                    
---------------------------------------------------------------------
 { "raw" : { "defaultShard" : { "numIndexesBefore" : { "$numberInt" : "1" }, "numIndexesAfter" : { "$numberInt" : "2" }, "createdCollectionAutomatically" : false, "ok" : { "$numberInt" : "1" } } }, "ok" : { "$numberInt" : "1" } }
(1 row)

BEGIN;
SET LOCAL enable_seqscan TO OFF;
SET LOCAL seq_page_cost TO 9999999;
SELECT document FROM bson_aggregation_find('db', '{ "find": "range_js_tests2", "filter": { "val": { "$gte": {"$minKey" : 1}, "$lte": {"$minKey" : 1}} }, "projection": { "_id": 0, "val": 1 }, "sort": { "val": 1 } }');
                         document                          
---------------------------------------------------------------------
 { "val" : { "$minKey" : 1 } }
 { "val" : [ { "$minKey" : 1 } ] }
 { "val" : [ { "$minKey" : 1 }, { "$numberInt" : "3" } ] }
 { "val" : [ { "$numberInt" : "3" }, { "$minKey" : 1 } ] }
(4 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "range_js_tests2", "filter": { "val": { "$gte": {"$minKey" : 1}, "$lte": {"$maxKey" : 1}} }, "projection": { "_id": 0, "val": 1 }, "sort": { "val": 1 } }');
                         document                          
---------------------------------------------------------------------
 { "val" : [ { "$numberInt" : "3" }, { "$minKey" : 1 } ] }
 { "val" : { "$minKey" : 1 } }
 { "val" : [ { "$minKey" : 1 } ] }
 { "val" : [ { "$minKey" : 1 }, { "$numberInt" : "3" } ] }
 { "val" : [ { "$numberInt" : "3" }, { "$maxKey" : 1 } ] }
 { "val" : { "$numberInt" : "3" } }
 { "val" : [ { "$maxKey" : 1 }, { "$numberInt" : "3" } ] }
 { "val" : [ { "$numberInt" : "3" } ] }
 { "val" : [ { "$maxKey" : 1 } ] }
 { "val" : { "$maxKey" : 1 } }
(10 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "range_js_tests2", "filter": { "val": { "$gte": {"$minKey" : 1}, "$lt": {"$minKey" : 1}} }, "projection": { "_id": 0, "val": 1 }, "sort": { "val": 1 } }');
 document 
---------------------------------------------------------------------
(0 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "range_js_tests2", "filter": { "val": { "$gte": 1, "$lte": {"$maxKey" : 1}} }, "projection": { "_id": 0, "val": 1 }, "sort": { "val": 1 } }');
                         document                          
---------------------------------------------------------------------
 { "val" : [ { "$minKey" : 1 }, { "$numberInt" : "3" } ] }
 { "val" : [ { "$numberInt" : "3" }, { "$minKey" : 1 } ] }
 { "val" : [ { "$maxKey" : 1 }, { "$numberInt" : "3" } ] }
 { "val" : [ { "$numberInt" : "3" }, { "$maxKey" : 1 } ] }
 { "val" : [ { "$numberInt" : "3" } ] }
 { "val" : { "$numberInt" : "3" } }
(6 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "range_js_tests2", "filter": { "val": { "$gte": {"$minKey" : 1}, "$lte": 100} }, "projection": { "_id": 0, "val": 1 }, "sort": { "val": 1 } }');
                         document                          
---------------------------------------------------------------------
 { "val" : [ { "$minKey" : 1 }, { "$numberInt" : "3" } ] }
 { "val" : [ { "$numberInt" : "3" }, { "$minKey" : 1 } ] }
 { "val" : [ { "$maxKey" : 1 }, { "$numberInt" : "3" } ] }
 { "val" : [ { "$numberInt" : "3" }, { "$maxKey" : 1 } ] }
 { "val" : [ { "$numberInt" : "3" } ] }
 { "val" : { "$numberInt" : "3" } }
(6 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "range_js_tests2", "filter": { "val": { "$gte": 1, "$lt": 3} }, "projection": { "_id": 0, "val": 1 }, "sort": { "val": 1 } }');
 document 
---------------------------------------------------------------------
(0 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "range_js_tests2", "filter": { "val": { "$gte": 3, "$lte": 3} }, "projection": { "_id": 0, "val": 1 }, "sort": { "val": 1 } }');
                         document                          
---------------------------------------------------------------------
 { "val" : [ { "$minKey" : 1 }, { "$numberInt" : "3" } ] }
 { "val" : [ { "$numberInt" : "3" }, { "$minKey" : 1 } ] }
 { "val" : [ { "$maxKey" : 1 }, { "$numberInt" : "3" } ] }
 { "val" : [ { "$numberInt" : "3" }, { "$maxKey" : 1 } ] }
 { "val" : [ { "$numberInt" : "3" } ] }
 { "val" : { "$numberInt" : "3" } }
(6 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "range_js_tests2", "filter": { "val": { "$gt": 3, "$lt": 5} }, "projection": { "_id": 0, "val": 1 }, "sort": { "val": 1 } }');
 document 
---------------------------------------------------------------------
(0 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "range_js_tests2", "filter": { "val": { "$gte": 3, "$lt": 5} }, "projection": { "_id": 0, "val": 1 }, "sort": { "val": 1 } }');
                         document                          
---------------------------------------------------------------------
 { "val" : [ { "$minKey" : 1 }, { "$numberInt" : "3" } ] }
 { "val" : [ { "$numberInt" : "3" }, { "$minKey" : 1 } ] }
 { "val" : [ { "$maxKey" : 1 }, { "$numberInt" : "3" } ] }
 { "val" : [ { "$numberInt" : "3" }, { "$maxKey" : 1 } ] }
 { "val" : [ { "$numberInt" : "3" } ] }
 { "val" : { "$numberInt" : "3" } }
(6 rows)

EXPLAIN(costs off) SELECT document FROM bson_aggregation_find('db', '{ "find": "range_js_tests2", "filter": { "val": { "$gte": {"$minKey" : 1}, "$lte": {"$maxKey" : 1}} }, "projection": { "_id": 0, "val": 1 }, "sort": { "val": 1 } }');
                                                                                                             QUERY PLAN                                                                                                              
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Node: host=localhost port=58070 dbname=regression
         ->  Sort
               Sort Key: (documentdb_api_catalog.bson_orderby(document, '{ "val" : { "$numberInt" : "1" } }'::documentdb_core.bson)) NULLS FIRST
               ->  Bitmap Heap Scan on documents_49202_492043 collection
                     Recheck Cond: ((document OPERATOR(documentdb_api_catalog.@>=) '{ "val" : { "$minKey" : 1 } }'::documentdb_core.bson) AND (document OPERATOR(documentdb_api_catalog.@<=) '{ "val" : { "$maxKey" : 1 } }'::documentdb_core.bson))
                     ->  Bitmap Index Scan on a_range
                           Index Cond: ((document OPERATOR(documentdb_api_catalog.@>=) '{ "val" : { "$minKey" : 1 } }'::documentdb_core.bson) AND (document OPERATOR(documentdb_api_catalog.@<=) '{ "val" : { "$maxKey" : 1 } }'::documentdb_core.bson))
(11 rows)

END;
SELECT documentdb_api.insert_one('db','daterangecoll', '{ "createdAt" : { "$date": { "$numberLong": "2657899731608" }} }', NULL);
NOTICE:  creating collection
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','daterangecoll', '{ "createdAt" : { "$date": { "$numberLong": "2657899831608" }} }', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','daterangecoll', '{ "createdAt" : { "$date": { "$numberLong": "2657899931608" }} }', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','daterangecoll', '{ "createdAt" : { "$date": { "$numberLong": "2657991031608" }} }', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT document FROM bson_aggregation_find('db', '{ "find": "daterangecoll", "filter": { "createdAt": { "$gte": { "$date": { "$numberLong": "2657899731608" }}, "$lte": { "$date": { "$numberLong": "2657991031608" }} } }, "projection": { "_id": 0, "createdAt": 1 }, "sort": { "createdAt": 1 } }');
                              document                               
---------------------------------------------------------------------
 { "createdAt" : { "$date" : { "$numberLong" : "2657899731608" } } }
 { "createdAt" : { "$date" : { "$numberLong" : "2657899831608" } } }
 { "createdAt" : { "$date" : { "$numberLong" : "2657899931608" } } }
 { "createdAt" : { "$date" : { "$numberLong" : "2657991031608" } } }
(4 rows)

SELECT documentdb_api_internal.create_indexes_non_concurrently('db', '{"createIndexes": "daterangecoll", "indexes": [{"key": {"createdAt": 1}, "name": "created_at_index"}]}', true);
                                                                                                   create_indexes_non_concurrently                                                                                                    
---------------------------------------------------------------------
 { "raw" : { "defaultShard" : { "numIndexesBefore" : { "$numberInt" : "1" }, "numIndexesAfter" : { "$numberInt" : "2" }, "createdCollectionAutomatically" : false, "ok" : { "$numberInt" : "1" } } }, "ok" : { "$numberInt" : "1" } }
(1 row)

BEGIN;
SET LOCAL enable_seqscan TO OFF;
SET LOCAL seq_page_cost TO 9999999;
SELECT document FROM bson_aggregation_find('db', '{ "find": "daterangecoll", "filter": { "createdAt": { "$gte": { "$date": { "$numberLong": "2657899731608" }}, "$lte": { "$date": { "$numberLong": "2657991031608" }} } }, "projection": { "_id": 0, "createdAt": 1 }, "sort": { "createdAt": 1 } }');
                              document                               
---------------------------------------------------------------------
 { "createdAt" : { "$date" : { "$numberLong" : "2657899731608" } } }
 { "createdAt" : { "$date" : { "$numberLong" : "2657899831608" } } }
 { "createdAt" : { "$date" : { "$numberLong" : "2657899931608" } } }
 { "createdAt" : { "$date" : { "$numberLong" : "2657991031608" } } }
(4 rows)

EXPLAIN(costs off) SELECT document FROM bson_aggregation_find('db', '{ "find": "daterangecoll", "filter": { "createdAt": { "$gte": { "$date": { "$numberLong": "2657899731608" }}, "$lte": { "$date": { "$numberLong": "2657991031608" }} } }, "projection": { "_id": 0, "createdAt": 1 }, "sort": { "createdAt": 1 } }');
                                                                                                                                          QUERY PLAN                                                                                                                                          
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Node: host=localhost port=58070 dbname=regression
         ->  Sort
               Sort Key: (documentdb_api_catalog.bson_orderby(document, '{ "createdAt" : { "$numberInt" : "1" } }'::documentdb_core.bson)) NULLS FIRST
               ->  Bitmap Heap Scan on documents_49203_492063 collection
                     Recheck Cond: (document OPERATOR(documentdb_api_catalog.@<>) '{ "createdAt" : { "min" : { "$date" : { "$numberLong" : "2657899731608" } }, "max" : { "$date" : { "$numberLong" : "2657991031608" } }, "minInclusive" : true, "maxInclusive" : true } }'::documentdb_core.bson)
                     ->  Bitmap Index Scan on created_at_index
                           Index Cond: (document OPERATOR(documentdb_api_catalog.@<>) '{ "createdAt" : { "min" : { "$date" : { "$numberLong" : "2657899731608" } }, "max" : { "$date" : { "$numberLong" : "2657991031608" } }, "minInclusive" : true, "maxInclusive" : true } }'::documentdb_core.bson)
(11 rows)

END;
-- do not convert $gte/$lte null
BEGIN;
SET LOCAL enable_seqscan TO OFF;
EXPLAIN(costs off) SELECT document FROM bson_aggregation_find('db', '{ "find": "daterangecoll", "filter": { "createdAt": { "$gte": null, "$lte": { "$date": { "$numberLong": "2657991031608" }} } }, "projection": { "_id": 0, "createdAt": 1 }, "sort": { "createdAt": 1 } }');
                                                                                                                             QUERY PLAN                                                                                                                             
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Node: host=localhost port=58070 dbname=regression
         ->  Sort
               Sort Key: (documentdb_api_catalog.bson_orderby(document, '{ "createdAt" : { "$numberInt" : "1" } }'::documentdb_core.bson)) NULLS FIRST
               ->  Bitmap Heap Scan on documents_49203_492063 collection
                     Recheck Cond: ((document OPERATOR(documentdb_api_catalog.@>=) '{ "createdAt" : null }'::documentdb_core.bson) AND (document OPERATOR(documentdb_api_catalog.@<=) '{ "createdAt" : { "$date" : { "$numberLong" : "2657991031608" } } }'::documentdb_core.bson))
                     ->  Bitmap Index Scan on created_at_index
                           Index Cond: ((document OPERATOR(documentdb_api_catalog.@>=) '{ "createdAt" : null }'::documentdb_core.bson) AND (document OPERATOR(documentdb_api_catalog.@<=) '{ "createdAt" : { "$date" : { "$numberLong" : "2657991031608" } } }'::documentdb_core.bson))
(11 rows)

EXPLAIN(costs off) SELECT document FROM bson_aggregation_find('db', '{ "find": "daterangecoll", "filter": { "createdAt": { "$gte": { "$date": { "$numberLong": "2657899731608" }}, "$lte": null } }, "projection": { "_id": 0, "createdAt": 1 }, "sort": { "createdAt": 1 } }');
                                                                                                                             QUERY PLAN                                                                                                                             
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Node: host=localhost port=58070 dbname=regression
         ->  Sort
               Sort Key: (documentdb_api_catalog.bson_orderby(document, '{ "createdAt" : { "$numberInt" : "1" } }'::documentdb_core.bson)) NULLS FIRST
               ->  Bitmap Heap Scan on documents_49203_492063 collection
                     Recheck Cond: ((document OPERATOR(documentdb_api_catalog.@>=) '{ "createdAt" : { "$date" : { "$numberLong" : "2657899731608" } } }'::documentdb_core.bson) AND (document OPERATOR(documentdb_api_catalog.@<=) '{ "createdAt" : null }'::documentdb_core.bson))
                     ->  Bitmap Index Scan on created_at_index
                           Index Cond: ((document OPERATOR(documentdb_api_catalog.@>=) '{ "createdAt" : { "$date" : { "$numberLong" : "2657899731608" } } }'::documentdb_core.bson) AND (document OPERATOR(documentdb_api_catalog.@<=) '{ "createdAt" : null }'::documentdb_core.bson))
(11 rows)

END;
-- A local repro that had run into segfault
SELECT documentdb_api_internal.create_indexes_non_concurrently(
  'db',
  '{
     "createIndexes": "range_and_aggregation",
     "indexes": [
       {"key": {"idLinea": 1}, "name": "idLinea_1"}
     ]
   }',
   true
);
NOTICE:  creating collection
                                                                                                   create_indexes_non_concurrently                                                                                                   
---------------------------------------------------------------------
 { "raw" : { "defaultShard" : { "numIndexesBefore" : { "$numberInt" : "1" }, "numIndexesAfter" : { "$numberInt" : "2" }, "createdCollectionAutomatically" : true, "ok" : { "$numberInt" : "1" } } }, "ok" : { "$numberInt" : "1" } }
(1 row)

SELECT documentdb_api_internal.create_indexes_non_concurrently(
  'db',
  '{
     "createIndexes": "range_and_aggregation",
     "indexes": [
       {"key": {"f_insercion": 1}, "name": "f_insercion_1"}
     ]
   }',
   true
);
                                                                                                   create_indexes_non_concurrently                                                                                                    
---------------------------------------------------------------------
 { "raw" : { "defaultShard" : { "numIndexesBefore" : { "$numberInt" : "2" }, "numIndexesAfter" : { "$numberInt" : "3" }, "createdCollectionAutomatically" : false, "ok" : { "$numberInt" : "1" } } }, "ok" : { "$numberInt" : "1" } }
(1 row)

SELECT documentdb_api_internal.create_indexes_non_concurrently(
  'db',
  '{
     "createIndexes": "range_and_aggregation",
     "indexes": [
       {"key": {"idLinea": 1, "f_insercion": 1}, "name": "idLinea_1_f_insercion_1", "unique": true}     ]
   }',
   true
);
                                                                                                   create_indexes_non_concurrently                                                                                                    
---------------------------------------------------------------------
 { "raw" : { "defaultShard" : { "numIndexesBefore" : { "$numberInt" : "3" }, "numIndexesAfter" : { "$numberInt" : "4" }, "createdCollectionAutomatically" : false, "ok" : { "$numberInt" : "1" } } }, "ok" : { "$numberInt" : "1" } }
(1 row)

DO $$
BEGIN
    FOR i IN 1..1000 LOOP
        PERFORM documentdb_api.insert_one('db', 'range_and_aggregation', FORMAT('{ "f_insercion": { "$date" : { "$numberLong" : "%s" } }, "idLinea": 1, "n_18_velocidad": %s }',  i, i)::documentdb_core.bson);
    END LOOP;
END;
$$ LANGUAGE plpgsql;
BEGIN;
ALTER FUNCTION documentdb_api_catalog.bson_dollar_project COST 20000;
ANALYZE;
-- full query 500K
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "range_and_aggregation", "pipeline": [ { "$match" : { "$and" : [ { "f_insercion" : { "$gte" : { "$date" : { "$numberLong" : "0" } }}, "f_insercion" : { "$lt" : { "$date" : { "$numberLong" : "500000" } }} } ] }}, {"$project" : { "f_insercion" : 1, "n_18_velocidad": 1, "_id": 0, "date" : { "$dateToParts" : { "date" : "$f_insercion" } }} }, { "$group" : { "_id" : { "year" : "$date.year", "month" : "$date.month", "day" : "$date.day", "hour" : "$date.hour" }, "speed_avg" : { "$avg" : "$n_18_velocidad" } , "speed_max" : { "$max" : "$n_18_velocidad" } , "speed_min" : { "$min" : "$n_18_velocidad" }} }], "cursor": {} }');
                                                                                                                                     document                                                                                                                                      
---------------------------------------------------------------------
 { "_id" : { "year" : { "$numberInt" : "1970" }, "month" : { "$numberInt" : "1" }, "day" : { "$numberInt" : "1" }, "hour" : { "$numberInt" : "0" } }, "speed_avg" : { "$numberDouble" : "500.5" }, "speed_max" : { "$numberInt" : "1000" }, "speed_min" : { "$numberInt" : "1" } }
(1 row)

-- full query 500K ( "idLinea": 1 filter ) 
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "range_and_aggregation", "pipeline": [ { "$match" : { "idLinea": 1, "$and" : [ { "f_insercion" : { "$gte" : { "$date" : { "$numberLong" : "0" } }}, "f_insercion" : { "$lt" : { "$date" : { "$numberLong" : "500000" } }} } ] }}, {"$project" : { "f_insercion" : 1, "n_18_velocidad": 1, "_id": 0, "date" : { "$dateToParts" : { "date" : "$f_insercion" } }} }, { "$group" : { "_id" : { "year" : "$date.year", "month" : "$date.month", "day" : "$date.day", "hour" : "$date.hour" }, "speed_avg" : { "$avg" : "$n_18_velocidad" } , "speed_max" : { "$max" : "$n_18_velocidad" } , "speed_min" : { "$min" : "$n_18_velocidad" }} }], "cursor": {} }');
                                                                                                                                     document                                                                                                                                      
---------------------------------------------------------------------
 { "_id" : { "year" : { "$numberInt" : "1970" }, "month" : { "$numberInt" : "1" }, "day" : { "$numberInt" : "1" }, "hour" : { "$numberInt" : "0" } }, "speed_avg" : { "$numberDouble" : "500.5" }, "speed_max" : { "$numberInt" : "1000" }, "speed_min" : { "$numberInt" : "1" } }
(1 row)

ROLLBACK;
