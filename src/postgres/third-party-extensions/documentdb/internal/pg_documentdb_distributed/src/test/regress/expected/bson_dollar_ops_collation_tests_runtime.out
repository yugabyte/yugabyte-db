SET search_path to documentdb_core,documentdb_api,documentdb_api_catalog,pg_catalog;
SET citus.next_shard_id TO 7990000;
SET documentdb.next_collection_id TO 7990;
SET documentdb.next_collection_index_id TO 7990;
SET documentdb_core.enablecollation TO on;
-- (1) insert some docs
SELECT documentdb_api.insert_one('db', 'ci_search', '{ "_id": 1, "a": "Cat" }');
NOTICE:  creating collection
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'ci_search', '{ "_id": 2, "a": "dog" }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'ci_search', '{ "_id": 3, "a": "cat" }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'ci_search', '{ "_id": 4, "a": "Dog" }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'ci_search', '{ "_id": 5, "a": "caT" }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'ci_search', '{ "_id": 6, "a": "doG" }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'ci_search', '{ "_id": 7, "a": "goat" }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'ci_search', '{ "_id": 8, "a": "Goat" }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'ci_search', '{ "_id": 9, "b": "Cat" }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'ci_search', '{ "_id": 10, "b": "dog" }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'ci_search', '{ "_id": 11, "b": "cat" }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'ci_search', '{ "_id": 12, "b": "Dog" }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'ci_search', '{ "_id": 13, "b": "caT", "a" : "raBbIt" }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'ci_search', '{ "_id": 14, "b": "doG" }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'ci_search', '{ "_id": 15, "b": "goat" }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'ci_search', '{ "_id": 16, "b": "Goat" }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'ci_search', '{ "_id": 17, "a": ["Cat", "CAT", "dog"] }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'ci_search', '{ "_id": 18, "a": ["dog", "cat", "CAT"] }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'ci_search', '{ "_id": 19, "a": ["cat", "rabbit", "bAt"] }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'ci_search', '{ "_id": 20, "a": ["Cat"] }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'ci_search', '{ "_id": 21, "a": ["dog"] }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'ci_search', '{ "_id": 22, "a": ["cat"] }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'ci_search', '{ "_id": 23, "a": ["CAT"] }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'ci_search', '{ "_id": 24, "a": ["cAt"] }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'ci_search', '{ "_id": 25, "a": { "b" : "cAt"} }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'ci_search', '{ "_id": 26, "a": [{ "b": "CAT"}] }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

-- (2) Find query unsharded collection
SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search", "filter": { "a": { "$eq": "cat" } }, "sort": { "_id": 1 }, "skip": 0, "limit": 5, "collation": { "locale": "en", "strength" : 1} }');
                              document                              
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "Cat" }
 { "_id" : { "$numberInt" : "3" }, "a" : "cat" }
 { "_id" : { "$numberInt" : "5" }, "a" : "caT" }
 { "_id" : { "$numberInt" : "17" }, "a" : [ "Cat", "CAT", "dog" ] }
 { "_id" : { "$numberInt" : "18" }, "a" : [ "dog", "cat", "CAT" ] }
(5 rows)

EXPLAIN(VERBOSE ON, COSTS OFF) SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search", "filter": { "a": { "$eq": "cat" } }, "sort": { "_id": 1 }, "skip": 0, "limit": 5, "collation": { "locale": "en", "strength" : 1} }');
                                                                                                                                                         QUERY PLAN                                                                                                                                                         
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Output: remote_scan.document
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Query: SELECT document FROM documentdb_data.documents_7990_7990004 collection WHERE ((document OPERATOR(documentdb_api_catalog.#=) '{ "a" : "cat", "collation" : "en-u-ks-level1" }'::documentdb_core.bsonquery) AND (shard_key_value OPERATOR(pg_catalog.=) '7990'::bigint)) ORDER BY object_id LIMIT '5'::bigint
         Node: host=localhost port=58070 dbname=regression
         ->  Limit
               Output: document, object_id
               ->  Sort
                     Output: document, object_id
                     Sort Key: collection.object_id
                     ->  Bitmap Heap Scan on documentdb_data.documents_7990_7990004 collection
                           Output: document, object_id
                           Recheck Cond: (collection.shard_key_value = '7990'::bigint)
                           Filter: (collection.document OPERATOR(documentdb_api_catalog.@=) '{ "a" : "cat", "collation" : "en-u-ks-level1" }'::documentdb_core.bson)
                           ->  Bitmap Index Scan on _id_
                                 Index Cond: (collection.shard_key_value = '7990'::bigint)
(18 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search", "filter": { "b": { "$eq": "cat" } }, "sort": { "_id": 1 }, "skip": 0, "limit": 5, "collation": { "locale": "en", "strength" : 1} }');
                             document                             
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "9" }, "b" : "Cat" }
 { "_id" : { "$numberInt" : "11" }, "b" : "cat" }
 { "_id" : { "$numberInt" : "13" }, "b" : "caT", "a" : "raBbIt" }
(3 rows)

EXPLAIN(VERBOSE ON, COSTS OFF) SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search", "filter": { "b": { "$eq": "cat" } }, "sort": { "_id": 1 }, "skip": 0, "limit": 5, "collation": { "locale": "en", "strength" : 1} }');
                                                                                                                                                         QUERY PLAN                                                                                                                                                         
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Output: remote_scan.document
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Query: SELECT document FROM documentdb_data.documents_7990_7990004 collection WHERE ((document OPERATOR(documentdb_api_catalog.#=) '{ "b" : "cat", "collation" : "en-u-ks-level1" }'::documentdb_core.bsonquery) AND (shard_key_value OPERATOR(pg_catalog.=) '7990'::bigint)) ORDER BY object_id LIMIT '5'::bigint
         Node: host=localhost port=58070 dbname=regression
         ->  Limit
               Output: document, object_id
               ->  Sort
                     Output: document, object_id
                     Sort Key: collection.object_id
                     ->  Bitmap Heap Scan on documentdb_data.documents_7990_7990004 collection
                           Output: document, object_id
                           Recheck Cond: (collection.shard_key_value = '7990'::bigint)
                           Filter: (collection.document OPERATOR(documentdb_api_catalog.@=) '{ "b" : "cat", "collation" : "en-u-ks-level1" }'::documentdb_core.bson)
                           ->  Bitmap Index Scan on _id_
                                 Index Cond: (collection.shard_key_value = '7990'::bigint)
(18 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search", "filter": { "$or" : [{ "a": { "$eq": "cat" } }, { "a": { "$eq": "DOG" } }] }, "sort": { "_id": 1 }, "skip": 0, "limit": 5, "collation": { "locale": "en", "strength" : 1} }');
                    document                     
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "Cat" }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog" }
 { "_id" : { "$numberInt" : "3" }, "a" : "cat" }
 { "_id" : { "$numberInt" : "4" }, "a" : "Dog" }
 { "_id" : { "$numberInt" : "5" }, "a" : "caT" }
(5 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search", "filter": { "$or" : [{ "a": { "$eq": "cat" } }, { "b": { "$eq": "DOG" } }] }, "sort": { "_id": 1 }, "skip": 0, "limit": 10, "collation": { "locale": "en", "strength" : 1 } }');
                               document                                
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "Cat" }
 { "_id" : { "$numberInt" : "3" }, "a" : "cat" }
 { "_id" : { "$numberInt" : "5" }, "a" : "caT" }
 { "_id" : { "$numberInt" : "10" }, "b" : "dog" }
 { "_id" : { "$numberInt" : "12" }, "b" : "Dog" }
 { "_id" : { "$numberInt" : "14" }, "b" : "doG" }
 { "_id" : { "$numberInt" : "17" }, "a" : [ "Cat", "CAT", "dog" ] }
 { "_id" : { "$numberInt" : "18" }, "a" : [ "dog", "cat", "CAT" ] }
 { "_id" : { "$numberInt" : "19" }, "a" : [ "cat", "rabbit", "bAt" ] }
 { "_id" : { "$numberInt" : "20" }, "a" : [ "Cat" ] }
(10 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search", "filter": { "a": { "$all": ["cAt", "DOG"] } }, "skip": 0, "limit":
 5, "collation": { "locale": "en", "strength": 1} }');
                              document                              
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "17" }, "a" : [ "Cat", "CAT", "dog" ] }
 { "_id" : { "$numberInt" : "18" }, "a" : [ "dog", "cat", "CAT" ] }
(2 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search", "filter": { "a" : {"$in" : ["cat", "DOG" ] }}, "sort": { "_id": 1 }, "skip": 0, "limit": 100, "collation": { "locale": "en", "strength" : 5} }');
                               document                                
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "3" }, "a" : "cat" }
 { "_id" : { "$numberInt" : "18" }, "a" : [ "dog", "cat", "CAT" ] }
 { "_id" : { "$numberInt" : "19" }, "a" : [ "cat", "rabbit", "bAt" ] }
 { "_id" : { "$numberInt" : "22" }, "a" : [ "cat" ] }
(4 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search", "filter": { "a" : {"$in" : ["cat", "DOG" ] }}, "sort": { "_id": 1 }, "skip": 0, "limit": 100, "collation": { "locale": "en", "strength" : 1} }');
                               document                                
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "Cat" }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog" }
 { "_id" : { "$numberInt" : "3" }, "a" : "cat" }
 { "_id" : { "$numberInt" : "4" }, "a" : "Dog" }
 { "_id" : { "$numberInt" : "5" }, "a" : "caT" }
 { "_id" : { "$numberInt" : "6" }, "a" : "doG" }
 { "_id" : { "$numberInt" : "17" }, "a" : [ "Cat", "CAT", "dog" ] }
 { "_id" : { "$numberInt" : "18" }, "a" : [ "dog", "cat", "CAT" ] }
 { "_id" : { "$numberInt" : "19" }, "a" : [ "cat", "rabbit", "bAt" ] }
 { "_id" : { "$numberInt" : "20" }, "a" : [ "Cat" ] }
 { "_id" : { "$numberInt" : "21" }, "a" : [ "dog" ] }
 { "_id" : { "$numberInt" : "22" }, "a" : [ "cat" ] }
 { "_id" : { "$numberInt" : "23" }, "a" : [ "CAT" ] }
 { "_id" : { "$numberInt" : "24" }, "a" : [ "cAt" ] }
(14 rows)

-- range query without index on path "a"
SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search", "filter": { "a": { "$gt": "CAT" }, "a" : {"$lt" : "RABBIT"} }, "collation": { "locale": "en", "strength" : 1.93 } }');
                               document                                
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "2" }, "a" : "dog" }
 { "_id" : { "$numberInt" : "4" }, "a" : "Dog" }
 { "_id" : { "$numberInt" : "6" }, "a" : "doG" }
 { "_id" : { "$numberInt" : "7" }, "a" : "goat" }
 { "_id" : { "$numberInt" : "8" }, "a" : "Goat" }
 { "_id" : { "$numberInt" : "17" }, "a" : [ "Cat", "CAT", "dog" ] }
 { "_id" : { "$numberInt" : "18" }, "a" : [ "dog", "cat", "CAT" ] }
 { "_id" : { "$numberInt" : "19" }, "a" : [ "cat", "rabbit", "bAt" ] }
 { "_id" : { "$numberInt" : "21" }, "a" : [ "dog" ] }
(9 rows)

EXPLAIN(VERBOSE ON, COSTS OFF) SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search", "filter": { "a": { "$gt": "CAT" }, "a" : {"$lt" : "RABBIT"} }, "collation": { "locale": "en", "strength" : 1.93 } }');
                                                                                                                                                                                                        QUERY PLAN                                                                                                                                                                                                        
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Output: remote_scan.document
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Query: SELECT document FROM documentdb_data.documents_7990_7990004 collection WHERE ((document OPERATOR(documentdb_api_catalog.#>) '{ "a" : "CAT", "collation" : "en-u-ks-level1" }'::documentdb_core.bsonquery) AND (document OPERATOR(documentdb_api_catalog.#<) '{ "a" : "RABBIT", "collation" : "en-u-ks-level1" }'::documentdb_core.bsonquery) AND (shard_key_value OPERATOR(pg_catalog.=) '7990'::bigint))
         Node: host=localhost port=58070 dbname=regression
         ->  Bitmap Heap Scan on documentdb_data.documents_7990_7990004 collection
               Output: document
               Recheck Cond: (collection.shard_key_value = '7990'::bigint)
               Filter: ((collection.document OPERATOR(documentdb_api_catalog.@>) '{ "a" : "CAT", "collation" : "en-u-ks-level1" }'::documentdb_core.bson) AND (collection.document OPERATOR(documentdb_api_catalog.@<) '{ "a" : "RABBIT", "collation" : "en-u-ks-level1" }'::documentdb_core.bson))
               ->  Bitmap Index Scan on _id_
                     Index Cond: (collection.shard_key_value = '7990'::bigint)
(13 rows)

-- (3) Shard collection
SELECT documentdb_api.shard_collection('db', 'ci_search', '{ "_id": "hashed" }', false);
 shard_collection 
---------------------------------------------------------------------
 
(1 row)

-- (4) Find query sharded collection
BEGIN;
SET LOCAL documentdb_core.enablecollation TO on;
SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search", "filter": { "a": { "$eq": "cat" } }, "sort": { "_id": 1 }, "skip": 0, "limit": 5, "collation": { "locale": "en", "strength" : 1} }');
                              document                              
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "Cat" }
 { "_id" : { "$numberInt" : "3" }, "a" : "cat" }
 { "_id" : { "$numberInt" : "5" }, "a" : "caT" }
 { "_id" : { "$numberInt" : "17" }, "a" : [ "Cat", "CAT", "dog" ] }
 { "_id" : { "$numberInt" : "18" }, "a" : [ "dog", "cat", "CAT" ] }
(5 rows)

END; 
BEGIN;
SET LOCAL documentdb_core.enablecollation TO on;
EXPLAIN(VERBOSE ON, COSTS OFF) SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search", "filter": { "a": { "$eq": "cat" } }, "sort": { "_id": 1 }, "skip": 0, "limit": 5, "collation": { "locale": "en", "strength" : 1} }');
                                                                                                                                                                                                                                                  QUERY PLAN                                                                                                                                                                                                                                                   
---------------------------------------------------------------------
 Limit
   Output: remote_scan.document, remote_scan."?sort?"
   ->  Sort
         Output: remote_scan.document, remote_scan."?sort?"
         Sort Key: remote_scan."?sort?" NULLS FIRST
         ->  Custom Scan (Citus Adaptive)
               Output: remote_scan.document, remote_scan."?sort?"
               Task Count: 8
               Tasks Shown: One of 8
               ->  Task
                     Query: SELECT document, documentdb_api_catalog.bson_orderby(document, '{ "_id" : { "$numberInt" : "1" } }'::documentdb_core.bson) AS "?sort?" FROM documentdb_data.documents_7990_7990016 collection WHERE (document OPERATOR(documentdb_api_catalog.#=) '{ "a" : "cat", "collation" : "en-u-ks-level1" }'::documentdb_core.bsonquery) ORDER BY (documentdb_api_catalog.bson_orderby(document, '{ "_id" : { "$numberInt" : "1" } }'::documentdb_core.bson)) NULLS FIRST LIMIT '5'::bigint
                     Node: host=localhost port=58070 dbname=regression
                     ->  Limit
                           Output: document, (documentdb_api_catalog.bson_orderby(document, '{ "_id" : { "$numberInt" : "1" } }'::documentdb_core.bson))
                           ->  Sort
                                 Output: document, (documentdb_api_catalog.bson_orderby(document, '{ "_id" : { "$numberInt" : "1" } }'::documentdb_core.bson))
                                 Sort Key: (documentdb_api_catalog.bson_orderby(collection.document, '{ "_id" : { "$numberInt" : "1" } }'::documentdb_core.bson)) NULLS FIRST
                                 ->  Seq Scan on documentdb_data.documents_7990_7990016 collection
                                       Output: document, documentdb_api_catalog.bson_orderby(document, '{ "_id" : { "$numberInt" : "1" } }'::documentdb_core.bson)
                                       Filter: (collection.document OPERATOR(documentdb_api_catalog.@=) '{ "a" : "cat", "collation" : "en-u-ks-level1" }'::documentdb_core.bson)
(20 rows)

END;
BEGIN;
SET LOCAL documentdb_core.enablecollation TO on;
SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search", "filter": { "b": { "$eq": "cat" } }, "sort": { "_id": 1 }, "skip": 0, "limit": 5, "collation": { "locale": "en", "strength" : 1} }');
                             document                             
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "9" }, "b" : "Cat" }
 { "_id" : { "$numberInt" : "11" }, "b" : "cat" }
 { "_id" : { "$numberInt" : "13" }, "b" : "caT", "a" : "raBbIt" }
(3 rows)

END;
BEGIN;
SET LOCAL documentdb_core.enablecollation TO on;
EXPLAIN(VERBOSE ON, COSTS OFF) SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search", "filter": { "b": { "$eq": "cat" } }, "sort": { "_id": 1 }, "skip": 0, "limit": 5, "collation": { "locale": "en", "strength" : 1} }');
                                                                                                                                                                                                                                                  QUERY PLAN                                                                                                                                                                                                                                                   
---------------------------------------------------------------------
 Limit
   Output: remote_scan.document, remote_scan."?sort?"
   ->  Sort
         Output: remote_scan.document, remote_scan."?sort?"
         Sort Key: remote_scan."?sort?" NULLS FIRST
         ->  Custom Scan (Citus Adaptive)
               Output: remote_scan.document, remote_scan."?sort?"
               Task Count: 8
               Tasks Shown: One of 8
               ->  Task
                     Query: SELECT document, documentdb_api_catalog.bson_orderby(document, '{ "_id" : { "$numberInt" : "1" } }'::documentdb_core.bson) AS "?sort?" FROM documentdb_data.documents_7990_7990016 collection WHERE (document OPERATOR(documentdb_api_catalog.#=) '{ "b" : "cat", "collation" : "en-u-ks-level1" }'::documentdb_core.bsonquery) ORDER BY (documentdb_api_catalog.bson_orderby(document, '{ "_id" : { "$numberInt" : "1" } }'::documentdb_core.bson)) NULLS FIRST LIMIT '5'::bigint
                     Node: host=localhost port=58070 dbname=regression
                     ->  Limit
                           Output: document, (documentdb_api_catalog.bson_orderby(document, '{ "_id" : { "$numberInt" : "1" } }'::documentdb_core.bson))
                           ->  Sort
                                 Output: document, (documentdb_api_catalog.bson_orderby(document, '{ "_id" : { "$numberInt" : "1" } }'::documentdb_core.bson))
                                 Sort Key: (documentdb_api_catalog.bson_orderby(collection.document, '{ "_id" : { "$numberInt" : "1" } }'::documentdb_core.bson)) NULLS FIRST
                                 ->  Seq Scan on documentdb_data.documents_7990_7990016 collection
                                       Output: document, documentdb_api_catalog.bson_orderby(document, '{ "_id" : { "$numberInt" : "1" } }'::documentdb_core.bson)
                                       Filter: (collection.document OPERATOR(documentdb_api_catalog.@=) '{ "b" : "cat", "collation" : "en-u-ks-level1" }'::documentdb_core.bson)
(20 rows)

END;
-- elemMatch with collation
BEGIN;
SET LOCAL documentdb_core.enablecollation TO on;
SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search", "filter": { "a": { "$elemMatch": {"$eq": "cAt"} } }, "skip": 0, "limit": 7, "collation": { "locale": "en", "strength" : 1} }');
                               document                                
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "22" }, "a" : [ "cat" ] }
 { "_id" : { "$numberInt" : "20" }, "a" : [ "Cat" ] }
 { "_id" : { "$numberInt" : "23" }, "a" : [ "CAT" ] }
 { "_id" : { "$numberInt" : "19" }, "a" : [ "cat", "rabbit", "bAt" ] }
 { "_id" : { "$numberInt" : "24" }, "a" : [ "cAt" ] }
 { "_id" : { "$numberInt" : "17" }, "a" : [ "Cat", "CAT", "dog" ] }
 { "_id" : { "$numberInt" : "18" }, "a" : [ "dog", "cat", "CAT" ] }
(7 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search", "filter": { "a": { "$elemMatch": {"$gt": "cAt"} } }, "skip": 0, "limit": 7, "collation": { "locale": "en", "strength" : 1} }');
                               document                                
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "21" }, "a" : [ "dog" ] }
 { "_id" : { "$numberInt" : "19" }, "a" : [ "cat", "rabbit", "bAt" ] }
 { "_id" : { "$numberInt" : "17" }, "a" : [ "Cat", "CAT", "dog" ] }
 { "_id" : { "$numberInt" : "18" }, "a" : [ "dog", "cat", "CAT" ] }
(4 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search", "filter": { "a": { "$elemMatch": {"$lt": "cAt"} } }, "skip": 0, "limit": 7, "collation": { "locale": "en", "strength" : 1} }');
                               document                                
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "19" }, "a" : [ "cat", "rabbit", "bAt" ] }
(1 row)

SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search", "filter": { "a": { "$elemMatch": {"$eq": "cAt", "gte" : "BAT"} } }, "skip": 0, "limit": 7, "collation": { "locale": "en", "strength" : 1} }');
 document 
---------------------------------------------------------------------
(0 rows)

END;
-- (5) Aggregation queries sharded collection
BEGIN;
SET LOCAL documentdb_core.enablecollation TO on;
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "ci_search", "pipeline": [ { "$sort": { "_id": 1 } }, { "$match": { "a": { "$eq": "cat" } } } ], "cursor": {}, "collation": { "locale": "en", "strength" : 1}  }');
                               document                                
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "Cat" }
 { "_id" : { "$numberInt" : "3" }, "a" : "cat" }
 { "_id" : { "$numberInt" : "5" }, "a" : "caT" }
 { "_id" : { "$numberInt" : "17" }, "a" : [ "Cat", "CAT", "dog" ] }
 { "_id" : { "$numberInt" : "18" }, "a" : [ "dog", "cat", "CAT" ] }
 { "_id" : { "$numberInt" : "19" }, "a" : [ "cat", "rabbit", "bAt" ] }
 { "_id" : { "$numberInt" : "20" }, "a" : [ "Cat" ] }
 { "_id" : { "$numberInt" : "22" }, "a" : [ "cat" ] }
 { "_id" : { "$numberInt" : "23" }, "a" : [ "CAT" ] }
 { "_id" : { "$numberInt" : "24" }, "a" : [ "cAt" ] }
(10 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "ci_search", "pipeline": [ { "$match": { "a": { "$gt": "DOG" } } }], "cursor": {}, "collation": { "locale": "en", "strength" : 1} }');
                               document                                
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "8" }, "a" : "Goat" }
 { "_id" : { "$numberInt" : "19" }, "a" : [ "cat", "rabbit", "bAt" ] }
 { "_id" : { "$numberInt" : "7" }, "a" : "goat" }
 { "_id" : { "$numberInt" : "13" }, "b" : "caT", "a" : "raBbIt" }
(4 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "ci_search", "pipeline": [ { "$match": { "a": { "$eq": "RABBIT" } } }, { "$project": { "b": 1 } }], "cursor": {}, "collation": { "locale": "en", "strength" : 1} }');
                     document                     
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "19" } }
 { "_id" : { "$numberInt" : "13" }, "b" : "caT" }
(2 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "ci_search", "pipeline": [ { "$match": { "_id": { "$gt": 1 } } }, { "$project": { "b": 1, "c": "$a", "_id": 0 } }, { "$match": { "c": { "$eq": "rAbBiT" } } }], "cursor": {}, "collation": { "locale": "en", "strength" : 1} }');
               document               
---------------------------------------------------------------------
 { "c" : [ "cat", "rabbit", "bAt" ] }
 { "b" : "caT", "c" : "raBbIt" }
(2 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "ci_search", "pipeline": [ { "$unwind": "$a" },  {"$match": { "a": { "$gt": "POP", "$lt": "TOP" } } } ], "cursor": {}, "collation": { "locale": "en", "strength" : 1} }');
                             document                             
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "19" }, "a" : "rabbit" }
 { "_id" : { "$numberInt" : "13" }, "b" : "caT", "a" : "raBbIt" }
(2 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "ci_search", "pipeline": [ { "$match": { "a": { "$gte": "hobbit" } } }, { "$unwind": "$a" } ], "cursor": {}, "collation": { "locale": "en", "strength" : 1} }');
                             document                             
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "19" }, "a" : "cat" }
 { "_id" : { "$numberInt" : "19" }, "a" : "rabbit" }
 { "_id" : { "$numberInt" : "19" }, "a" : "bAt" }
 { "_id" : { "$numberInt" : "13" }, "b" : "caT", "a" : "raBbIt" }
(4 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "ci_search", "pipeline": [ { "$addFields": { "x": "mANgO" } }, { "$addFields": { "Y": "TANGO" } }, { "$match": { "$and" : [{ "a": { "$gte": "POMELO" }}, { "x": { "$eq": "MANGO" }}]}} ], "cursor": {}, "collation": { "locale": "en", "strength" : 1} }');
                                              document                                               
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "19" }, "a" : [ "cat", "rabbit", "bAt" ], "x" : "mANgO", "Y" : "TANGO" }
 { "_id" : { "$numberInt" : "13" }, "b" : "caT", "a" : "raBbIt", "x" : "mANgO", "Y" : "TANGO" }
(2 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "ci_search", "pipeline": [ { "$addFields": { "e": {  "f": "$a" } } }, { "$replaceRoot": { "newRoot": "$e" } }, { "$match" : { "f": { "$elemMatch": {"$eq": "cAt"} } } } ],
 "cursor": {}, "collation": { "locale": "en", "strength" : 1} }');
               document               
---------------------------------------------------------------------
 { "f" : [ "cat" ] }
 { "f" : [ "Cat" ] }
 { "f" : [ "CAT" ] }
 { "f" : [ "cat", "rabbit", "bAt" ] }
 { "f" : [ "cAt" ] }
 { "f" : [ "Cat", "CAT", "dog" ] }
 { "f" : [ "dog", "cat", "CAT" ] }
(7 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search", "filter": { "a" : {"$in" : ["cat", "DOG" ] }}, "sort": { "_id": 1 }, "skip": 0, "limit": 100, "collation": { "locale": "en", "strength" : 5} }');
                               document                                
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "3" }, "a" : "cat" }
 { "_id" : { "$numberInt" : "18" }, "a" : [ "dog", "cat", "CAT" ] }
 { "_id" : { "$numberInt" : "19" }, "a" : [ "cat", "rabbit", "bAt" ] }
 { "_id" : { "$numberInt" : "22" }, "a" : [ "cat" ] }
(4 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search", "filter": { "a" : {"$in" : ["cat", "DOG" ] }}, "sort": { "_id": 1 }, "skip": 0, "limit": 100, "collation": { "locale": "en", "strength" : 1} }');
                               document                                
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "Cat" }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog" }
 { "_id" : { "$numberInt" : "3" }, "a" : "cat" }
 { "_id" : { "$numberInt" : "4" }, "a" : "Dog" }
 { "_id" : { "$numberInt" : "5" }, "a" : "caT" }
 { "_id" : { "$numberInt" : "6" }, "a" : "doG" }
 { "_id" : { "$numberInt" : "17" }, "a" : [ "Cat", "CAT", "dog" ] }
 { "_id" : { "$numberInt" : "18" }, "a" : [ "dog", "cat", "CAT" ] }
 { "_id" : { "$numberInt" : "19" }, "a" : [ "cat", "rabbit", "bAt" ] }
 { "_id" : { "$numberInt" : "20" }, "a" : [ "Cat" ] }
 { "_id" : { "$numberInt" : "21" }, "a" : [ "dog" ] }
 { "_id" : { "$numberInt" : "22" }, "a" : [ "cat" ] }
 { "_id" : { "$numberInt" : "23" }, "a" : [ "CAT" ] }
 { "_id" : { "$numberInt" : "24" }, "a" : [ "cAt" ] }
(14 rows)

END;
BEGIN;
SET LOCAL documentdb_core.enablecollation TO on;
EXPLAIN(VERBOSE ON, COSTS OFF)SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search", "filter": { "a" : {"$in" : [[{ "b" : "caT"}], [{ "c" : "caT"}]] }}, "sort": { "_id": 1 }, "skip": 0, "limit": 100, "collation": { "locale": "en", "strength" : 1} }');

---------------------------------------------------------------------
 Limit
   Output: remote_scan.document, remote_scan."?sort?"
   ->  Sort
         Output: remote_scan.document, remote_scan."?sort?"
         Sort Key: remote_scan."?sort?" NULLS FIRST
         ->  Custom Scan (Citus Adaptive)
               Output: remote_scan.document, remote_scan."?sort?"
               Task Count: 8
               Tasks Shown: One of 8
               ->  Task
                     Query: SELECT document, documentdb_api_catalog.bson_orderby(document, '{ "_id" : { "$numberInt" : "1" } }'::documentdb_core.bson) AS "?sort?" FROM documentdb_data.documents_7990_7990016 collection WHERE (documentdb_api_catalog.bson_dollar_in(document, '{ "a" : [ [ { "b" : "caT" } ], [ { "c" : "caT" } ] ], "collation" : "en-u-ks-level1" }'::documentdb_core.bson) AND (document OPERATOR(documentdb_api_internal.##=) ANY ('{"{ \"a\" : [ { \"b\" : \"caT\" } ], \"collation\" : \"en-u-ks-level1\" }","{ \"a\" : [ { \"c\" : \"caT\" } ], \"collation\" : \"en-u-ks-level1\" }"}'::documentdb_api_internal.bsonindexbounds[]))) ORDER BY (documentdb_api_catalog.bson_orderby(document, '{ "_id" : { "$numberInt" : "1" } }'::documentdb_core.bson)) NULLS FIRST LIMIT '100'::bigint
                     Node: host=localhost port=58070 dbname=regression
                     ->  Limit
                           Output: document, (documentdb_api_catalog.bson_orderby(document, '{ "_id" : { "$numberInt" : "1" } }'::documentdb_core.bson))
                           ->  Sort
                                 Output: document, (documentdb_api_catalog.bson_orderby(document, '{ "_id" : { "$numberInt" : "1" } }'::documentdb_core.bson))
                                 Sort Key: (documentdb_api_catalog.bson_orderby(collection.document, '{ "_id" : { "$numberInt" : "1" } }'::documentdb_core.bson)) NULLS FIRST
                                 ->  Seq Scan on documentdb_data.documents_7990_7990016 collection
                                       Output: document, documentdb_api_catalog.bson_orderby(document, '{ "_id" : { "$numberInt" : "1" } }'::documentdb_core.bson)
                                       Filter: (collection.document OPERATOR(documentdb_api_catalog.@*=) '{ "a" : [ [ { "b" : "caT" } ], [ { "c" : "caT" } ] ], "collation" : "en-u-ks-level1" }'::documentdb_core.bson)
(20 rows)

END;
-- (6) currently unsupported scenarions: 
-- (6.A) $in with nested objects
BEGIN;
SET LOCAL documentdb_core.enablecollation TO on;
SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search", "filter": { "a" : {"$in" : [{ "B" : "caT"}, { "c" : "caT"}] }}, "sort": { "_id": 1 }, "skip": 0, "limit": 100, "collation": { "locale": "en", "strength" : 1} }');
ERROR:  operator $in or operators that can be optimized to $in is not supported with collation, when $in contains nested objects
END;
BEGIN;
SET LOCAL documentdb_core.enablecollation TO on;
SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search", "filter": { "a" : {"$in" : [[{ "B" : "caT"}], [{ "c" : "caT"}]] }}, "sort": { "_id": 1 }, "skip": 0, "limit": 100, "collation": { "locale": "en", "strength" : 1} }');
ERROR:  operator $in or operators that can be optimized to $in is not supported with collation, when $in contains nested objects
END;
-- (6.B)
BEGIN;
SET LOCAL documentdb_core.enablecollation TO on;
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "ci_search", "pipeline": [ { "$sort": { "_id": 1 } }, { "$addFields": { "e": {  "f": "$a" } } }, { "$replaceRoot": { "newRoot": "$e" } }, { "$match" : { "f": { "$elemMatch": {"$eq": "cAt"} } } }, {"$project": { "items" : { "$filter" : { "input" : "$f", "as" : "animal", "cond" : { "$eq" : ["$$animal", "CAT"] } }} }} ],
 "cursor": {}, "collation": { "locale": "en", "strength" : 1} }');
            document            
---------------------------------------------------------------------
 { "items" : [ "Cat", "CAT" ] }
 { "items" : [ "cat", "CAT" ] }
 { "items" : [ "cat" ] }
 { "items" : [ "Cat" ] }
 { "items" : [ "cat" ] }
 { "items" : [ "CAT" ] }
 { "items" : [ "cAt" ] }
(7 rows)

END;
-- (7) Insert More docs
SELECT documentdb_api.insert_one('db', 'ci_search2', '{ "_id": 1, "a": "Cat" }');
NOTICE:  creating collection
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'ci_search2', '{ "_id": 2, "a": "dog" }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'ci_search2', '{ "_id": 3, "a": "cat" }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'ci_search2', '{ "_id": 4, "a": "CaT" }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'ci_search2', '{ "_id": 5, "b": "Dog" }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'ci_search2', '{ "_id": 6, "b": "DoG" }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

-- (8) Query results with different collations
SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search2", "filter": { "a": { "$eq": "cat" } }, "sort": { "_id": 1 }, "skip": 0, "limit": 5, "collation": { "locale": "en", "strength" : 1} }');
                    document                     
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "Cat" }
 { "_id" : { "$numberInt" : "3" }, "a" : "cat" }
 { "_id" : { "$numberInt" : "4" }, "a" : "CaT" }
(3 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search2", "filter": { "$or" : [{ "a": { "$eq": "cat" } }, { "b": { "$eq": "DOG" } }] }, "sort": { "_id": 1 }, "skip": 0, "limit": 5, "collation": { "locale": "en", "strength" : 1} }');
                    document                     
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "Cat" }
 { "_id" : { "$numberInt" : "3" }, "a" : "cat" }
 { "_id" : { "$numberInt" : "4" }, "a" : "CaT" }
 { "_id" : { "$numberInt" : "5" }, "b" : "Dog" }
 { "_id" : { "$numberInt" : "6" }, "b" : "DoG" }
(5 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search2", "filter": { "$or" : [{ "a": { "$eq": "cat" } }, { "b": { "$eq": "DOG" } }] }, "sort": { "_id": 1 }, "skip": 0, "limit": 5, "collation": { "locale": "en", "strength" : 3, "caseLevel": true, "caseFirst": "off", "numericOrdering": true } }');
                    document                     
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "3" }, "a" : "cat" }
(1 row)

SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search2", "filter": { "$or" : [{ "a": { "$eq": "cat" } }, { "b": { "$eq": "DOG" } }] }, "sort": { "_id": 1 }, "skip": 0, "limit": 5, "collation": { "locale": "en", "strength" : 1.93 } }');
                    document                     
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "Cat" }
 { "_id" : { "$numberInt" : "3" }, "a" : "cat" }
 { "_id" : { "$numberInt" : "4" }, "a" : "CaT" }
 { "_id" : { "$numberInt" : "5" }, "b" : "Dog" }
 { "_id" : { "$numberInt" : "6" }, "b" : "DoG" }
(5 rows)

-- (8) a. collation has no effect on $regex
SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search2", "filter": { "a": { "$regex": "^c", "$options": "" } }, "sort": { "_id": 1 }, "skip": 0, "limit": 5, "collation": { "locale": "en", "strength" : 1 } }');
                    document                     
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "3" }, "a" : "cat" }
(1 row)

-- (9) Native Mongo error message compatibility, 
SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search2", "filter": { "$or" : [{ "a": { "$eq": "cat" } }, { "b": { "$eq": "DOG" } }] }, "sort": { "_id": 1 }, "skip": 0, "limit": 5, "collation": { "locale": "en", "strength" : 1, "caseLevel": true, "caseFirst": "upper", "numericOrdering": true, "alternate": "none"} }');
ERROR:  unable to parse collation :: caused by :: Enumeration value 'none' for field 'collation.alternate' is not a valid value.
SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search2", "filter": { "$or" : [{ "a": { "$eq": "cat" } }, { "b": { "$eq": "DOG" } }] }, "sort": { "_id": 1 }, "skip": 0, "limit": 5, "collation": { "locale": "en_DB", "strength" : 1, "caseLevel": true, "caseFirst": "upper", "numericOrdering": true, "alternate": "shifted"} }');
ERROR:  unable to parse collation :: caused by :: Field 'locale' is invalid in: { locale: "en_DB", strength: 1 }.
SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search2", "filter": { "$or" : [{ "a": { "$eq": "cat" } }, { "b": { "$eq": "DOG" } }] }, "sort": { "_id": 1 }, "skip": 0, "limit": 5, "collation": { "locale": "en", "strength" : 1, "caseLevel": true, "caseFirst": "bad", "numericOrdering": true} }');
ERROR:  unable to parse collation :: caused by :: Enumeration value 'bad' for field 'collation.caseFirst' is not a valid value.
SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search2", "filter": { "$or" : [{ "a": { "$eq": "cat" } }, { "b": { "$eq": "DOG" } }] }, "sort": { "_id": 1 }, "skip": 0, "limit": 5, "collation": { "locale": "en", "strength" : 0, "caseLevel": true, "caseFirst": "bad", "numericOrdering": true} }');
ERROR:  unable to parse collation :: caused by :: Enumeration value '0' for field 'collation.strength' is not a valid value
SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search2", "filter": { "$or" : [{ "a": { "$eq": "cat" } }, { "b": { "$eq": "DOG" } }] }, "sort": { "_id": 1 }, "skip": 0, "limit": 5, "collation": { "locale": "en", "strength" : -1, "caseLevel": true, "caseFirst": "bad", "numericOrdering": true} }');
ERROR:  unable to parse collation :: caused by :: BSON field 'strength' value must be >= 0, actual value '-1'
SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search2", "filter": { "$or" : [{ "a": { "$eq": "cat" } }, { "b": { "$eq": "DOG" } }] }, "sort": { "_id": 1 }, "skip": 0, "limit": 5, "collation": { "locale": "en", "strength" : 6, "caseLevel": true, "caseFirst": "bad", "numericOrdering": true} }');
ERROR:  unable to parse collation :: caused by :: BSON field 'strength' value must be <= 5, actual value '6'
SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search2", "filter": { "$or" : [{ "a": { "$eq": "cat" } }, { "b": { "$eq": "DOG" } }] }, "sort": { "_id": 1 }, "skip": 0, "limit": 5, "collation": { "locale": "abcd", "strength" : 1, "caseLevel": true, "caseFirst": "upper", "numericOrdering": true} }');
ERROR:  unable to parse collation :: caused by :: Field 'locale' is invalid in: { locale: "abcd", strength: 1 }.
SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search2", "filter": { "$or" : [{ "a": { "$eq": "cat" } }, { "b": { "$eq": "DOG" } }] }, "sort": { "_id": 1 }, "skip": 0, "limit": 5, "collation": { "locale": "fr_FR", "strength" : 1, "caseLevel": true, "caseFirst": "lower", "numericOrdering": true} }');
ERROR:  unable to parse collation :: caused by :: Field 'locale' is invalid in: { locale: "fr_FR", strength: 1 }.
SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search2", "filter": { "$or" : [{ "a": { "$eq": "cat" } }, { "b": { "$eq": "DOG" } }] }, "sort": { "_id": 1 }, "skip": 0, "limit": 5, "collation": { "locale": "en", "strength" : 1, "caseLevel": true, "caseFirst": "upper", "numericOrdering": true, "alternate": "shifted", "backwards" : "0"} }');
ERROR:  unable to parse collation :: caused by :: BSON field 'collation.backwards' is the wrong type 'string', expected type 'bool'
SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search2", "filter": { "$or" : [{ "a": { "$eq": "cat" } }, { "b": { "$eq": "DOG" } }] }, "sort": { "_id": 1 }, "skip": 0, "limit": 5, "collation": { "locale": "en", "strength" : 1, "caseLevel": true, "caseFirst": "lower", "numericOrdering": true, "alternate": "non-ignorable", "backwards" : true, "normalization" : 1} }');
ERROR:  unable to parse collation :: caused by :: BSON field 'collation.normalization' is the wrong type 'int', expected type 'bool'
SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search2", "filter": { "$or" : [{ "a": { "$eq": "cat" } }, { "b": { "$eq": "DOG" } }] }, "sort": { "_id": 1 }, "skip": 0, "limit": 5, "collation": { "locale": "en", "strength" : 1, "caseLevel": true, "caseFirst": "lower", "numericOrdering": true, "alternate": "non-ignorable", "backwards" : true, "normalization" : true} }');
                    document                     
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "3" }, "a" : "cat" }
(1 row)

SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search2", "filter": { "$or" : [{ "a": { "$eq": "cat" } }, { "b": { "$eq": "DOG" } }] }, "sort": { "_id": 1 }, "skip": 0, "limit": 5, "collation": { "locale": "en", "strength" : 0.9 } }');
ERROR:  unable to parse collation :: caused by :: Enumeration value '0' for field 'collation.strength' is not a valid value
-- (10) collation variations
SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search2", "filter": { "$or" : [{ "a": { "$eq": "cat" } }, { "b": { "$eq": "DOG" } }] }, "sort": { "_id": 1 }, "skip": 0, "limit": 5, "collation": { "locale": "en", "strength" : 2, "caseLevel": false, "caseFirst": "lower", "numericOrdering": true } }');
                    document                     
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "Cat" }
 { "_id" : { "$numberInt" : "3" }, "a" : "cat" }
 { "_id" : { "$numberInt" : "4" }, "a" : "CaT" }
 { "_id" : { "$numberInt" : "5" }, "b" : "Dog" }
 { "_id" : { "$numberInt" : "6" }, "b" : "DoG" }
(5 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search2", "filter": { "$or" : [{ "a": { "$eq": "cat" } }, { "b": { "$eq": "DOG" } }] }, "sort": { "_id": 1 }, "skip": 0, "limit": 5, "collation": { "locale": "en", "strength" : 1, "caseLevel": true, "caseFirst": "lower", "numericOrdering": true} }');
                    document                     
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "3" }, "a" : "cat" }
(1 row)

SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search2", "filter": { "$or" : [{ "a": { "$eq": "cat" } }, { "b": { "$eq": "DOG" } }] }, "sort": { "_id": 1 }, "skip": 0, "limit": 5, "collation": { "locale": "fr", "strength" : 1, "caseLevel": false, "caseFirst": "lower", "numericOrdering": true} }');
                    document                     
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "Cat" }
 { "_id" : { "$numberInt" : "3" }, "a" : "cat" }
 { "_id" : { "$numberInt" : "4" }, "a" : "CaT" }
 { "_id" : { "$numberInt" : "5" }, "b" : "Dog" }
 { "_id" : { "$numberInt" : "6" }, "b" : "DoG" }
(5 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search2", "filter": { "$or" : [{ "a": { "$eq": "cat" } }, { "b": { "$eq": "DOG" } }] }, "sort": { "_id": 1 }, "skip": 0, "limit": 5, "collation": { "locale": "de", "strength" : 1, "caseLevel": false, "caseFirst": "lower", "numericOrdering": true} }');
                    document                     
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "Cat" }
 { "_id" : { "$numberInt" : "3" }, "a" : "cat" }
 { "_id" : { "$numberInt" : "4" }, "a" : "CaT" }
 { "_id" : { "$numberInt" : "5" }, "b" : "Dog" }
 { "_id" : { "$numberInt" : "6" }, "b" : "DoG" }
(5 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search2", "filter": { "$or" : [{ "a": { "$eq": "cat" } }, { "b": { "$eq": "DOG" } }] }, "sort": { "_id": 1 }, "skip": 0, "limit": 5, "collation": { "locale": "bn", "strength" : 1, "caseLevel": false, "caseFirst": "lower", "numericOrdering": true} }');
                    document                     
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "Cat" }
 { "_id" : { "$numberInt" : "3" }, "a" : "cat" }
 { "_id" : { "$numberInt" : "4" }, "a" : "CaT" }
 { "_id" : { "$numberInt" : "5" }, "b" : "Dog" }
 { "_id" : { "$numberInt" : "6" }, "b" : "DoG" }
(5 rows)

-- (11) Unsupported scenarios
SELECT documentdb_api.find_and_modify('fam', '{"findAndModify": "ci_search2", "query": {"a": 1}, "update": {"_id": 1, "b": 1}, "collation" : {"locale" : "en", "strength": 1} }');
ERROR:  findAndModify.collation is not implemented yet
SELECT documentdb_api.update('update', '{"update":"ci_search2", "updates":[{"q":{"_id": 134111, "b": [ 5, 2, 4 ] },"u":{"$set" : {"b.$[a]":3} },"upsert":true, "collation" : {"locale" : "en", "strength": 1}, "arrayFilters": [ { "a": 2 } ]}]}');
ERROR:  BSON field 'update.updates.collation' is not yet supported
SELECT documentdb_api_internal.create_indexes_non_concurrently('db', '{"createIndexes": "ci_search2", "indexes": [{"key": {"asparse": 1}, "name": "my_sparse_idx1", "sparse": true, "collation" : {"locale" : "en", "strength": 1}}]}', TRUE);
ERROR:  Error in specification { "key" : { "asparse" : 1 }, "name" : "my_sparse_idx1", "sparse" : true, "collation" : { "locale" : "en", "strength" : 1 } } :: caused by :: createIndex.collation is not implemented yet
-- (12) Test Id filters respect collation
SELECT documentdb_api.insert_one('db', 'ci_search3', '{ "_id": "Cat" }');
NOTICE:  creating collection
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'ci_search3', '{ "_id": "dog" }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'ci_search3', '{ "_id": "cat" }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'ci_search3', '{ "_id": "CaT" }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'ci_search3', '{ "_id": "Dog" }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'ci_search3', '{ "_id": "DoG" }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'ci_search3', '{ "_id": { "a" : "cat" } }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'ci_search3',' { "_id": { "a": "CAT"} }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'ci_search3', '{ "a": { "a": "Dog" } } ');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'ci_search3', '{ "_id": [ "cat", "CAT "] }');
                                                                                                          insert_one                                                                                                          
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "0" }, "ok" : { "$numberDouble" : "1.0" }, "writeErrors" : [ { "index" : { "$numberInt" : "0" }, "code" : { "$numberInt" : "16777245" }, "errmsg" : "The '_id' value cannot be of type array" } ] }
(1 row)

SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search3", "filter": { "$or" : [{ "_id": { "$eq": "cat" } }, { "_id": { "$eq": "DOG" } }] }, "sort": { "_id": 1 }, "skip": 0, "limit": 5, "collation": { "locale": "en", "strength" : 1} }');
     document      
---------------------------------------------------------------------
 { "_id" : "CaT" }
 { "_id" : "Cat" }
 { "_id" : "DoG" }
 { "_id" : "Dog" }
 { "_id" : "cat" }
(5 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search3", "filter": { "$or" : [{ "_id.a": { "$eq": "cat" } }, { "_id.a": { "$eq": "DOG" } }] }, "sort": { "_id": 1 }, "skip": 0, "limit": 5, "collation": { "locale": "en", "strength" : 1} }');
          document           
---------------------------------------------------------------------
 { "_id" : { "a" : "CAT" } }
 { "_id" : { "a" : "cat" } }
(2 rows)

EXPLAIN(VERBOSE ON, COSTS OFF)SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search3", "filter": { "$or" : [{ "_id.a": { "$eq": "cat" } }, { "_id.a": { "$eq": "DOG" } }] }, "sort": { "_id": 1 }, "skip": 0, "limit": 5, "collation": { "locale": "en", "strength" : 1} }');
                                                                                                                                                               QUERY PLAN                                                                                                                                                               
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Output: remote_scan.document
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Query: SELECT document FROM documentdb_data.documents_7992_7990047 collection WHERE (documentdb_api_catalog.bson_dollar_in(document, '{ "_id.a" : [ "cat", "DOG" ], "collation" : "en-u-ks-level1" }'::documentdb_core.bson) AND (shard_key_value OPERATOR(pg_catalog.=) '7992'::bigint)) ORDER BY object_id LIMIT '5'::bigint
         Node: host=localhost port=58070 dbname=regression
         ->  Limit
               Output: document, object_id
               ->  Sort
                     Output: document, object_id
                     Sort Key: collection.object_id
                     ->  Bitmap Heap Scan on documentdb_data.documents_7992_7990047 collection
                           Output: document, object_id
                           Recheck Cond: (collection.shard_key_value = '7992'::bigint)
                           Filter: (collection.document OPERATOR(documentdb_api_catalog.@*=) '{ "_id.a" : [ "cat", "DOG" ], "collation" : "en-u-ks-level1" }'::documentdb_core.bson)
                           ->  Bitmap Index Scan on _id_
                                 Index Cond: (collection.shard_key_value = '7992'::bigint)
(18 rows)

SELECT documentdb_api.shard_collection('db', 'ci_search', '{ "_id": "hashed" }', false);
NOTICE:  Skipping Sharding for collection db.ci_search as the same options were passed in.
 shard_collection 
---------------------------------------------------------------------
 
(1 row)

BEGIN;
SET LOCAL documentdb_core.enablecollation TO on;
SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search3", "filter": { "$or" : [{ "_id": { "$eq": "cat" } }, { "_id": { "$eq": "DOG" } }] }, "sort": { "_id": 1 }, "skip": 0, "limit": 5, "collation": { "locale": "en", "strength" : 1} }');
     document      
---------------------------------------------------------------------
 { "_id" : "CaT" }
 { "_id" : "Cat" }
 { "_id" : "DoG" }
 { "_id" : "Dog" }
 { "_id" : "cat" }
(5 rows)

EXPLAIN (VERBOSE ON, COSTS OFF)SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search3", "filter": { "$or" : [{ "_id": { "$eq": "cat" } }, { "_id": { "$eq": "DOG" } }] }, "sort": { "_id": 1 }, "skip": 0, "limit": 5, "collation": { "locale": "en", "strength" : 1} }');
                                                                                                                                                              QUERY PLAN                                                                                                                                                              
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Output: remote_scan.document
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Query: SELECT document FROM documentdb_data.documents_7992_7990047 collection WHERE (documentdb_api_catalog.bson_dollar_in(document, '{ "_id" : [ "cat", "DOG" ], "collation" : "en-u-ks-level1" }'::documentdb_core.bson) AND (shard_key_value OPERATOR(pg_catalog.=) '7992'::bigint)) ORDER BY object_id LIMIT '5'::bigint
         Node: host=localhost port=58070 dbname=regression
         ->  Limit
               Output: document, object_id
               ->  Sort
                     Output: document, object_id
                     Sort Key: collection.object_id
                     ->  Bitmap Heap Scan on documentdb_data.documents_7992_7990047 collection
                           Output: document, object_id
                           Recheck Cond: (collection.shard_key_value = '7992'::bigint)
                           Filter: (collection.document OPERATOR(documentdb_api_catalog.@*=) '{ "_id" : [ "cat", "DOG" ], "collation" : "en-u-ks-level1" }'::documentdb_core.bson)
                           ->  Bitmap Index Scan on _id_
                                 Index Cond: (collection.shard_key_value = '7992'::bigint)
(18 rows)

END;
BEGIN;
SET LOCAL documentdb_core.enablecollation TO on;
SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search3", "filter": { "$or" : [{ "_id.a": { "$eq": "cat" } }, { "_id.a": { "$eq": "DOG" } }] }, "sort": { "_id": 1 }, "skip": 0, "limit": 5, "collation": { "locale": "en", "strength" : 1} }');
          document           
---------------------------------------------------------------------
 { "_id" : { "a" : "CAT" } }
 { "_id" : { "a" : "cat" } }
(2 rows)

END;
EXPLAIN(VERBOSE ON, COSTS OFF)SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search3", "filter": { "$or" : [{ "_id.a": { "$eq": "cat" } }, { "_id.a": { "$eq": "DOG" } }] }, "sort": { "_id": 1 }, "skip": 0, "limit": 5, "collation": { "locale": "en", "strength" : 1} }');
                                                                                                                                                               QUERY PLAN                                                                                                                                                               
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Output: remote_scan.document
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Query: SELECT document FROM documentdb_data.documents_7992_7990047 collection WHERE (documentdb_api_catalog.bson_dollar_in(document, '{ "_id.a" : [ "cat", "DOG" ], "collation" : "en-u-ks-level1" }'::documentdb_core.bson) AND (shard_key_value OPERATOR(pg_catalog.=) '7992'::bigint)) ORDER BY object_id LIMIT '5'::bigint
         Node: host=localhost port=58070 dbname=regression
         ->  Limit
               Output: document, object_id
               ->  Sort
                     Output: document, object_id
                     Sort Key: collection.object_id
                     ->  Bitmap Heap Scan on documentdb_data.documents_7992_7990047 collection
                           Output: document, object_id
                           Recheck Cond: (collection.shard_key_value = '7992'::bigint)
                           Filter: (collection.document OPERATOR(documentdb_api_catalog.@*=) '{ "_id.a" : [ "cat", "DOG" ], "collation" : "en-u-ks-level1" }'::documentdb_core.bson)
                           ->  Bitmap Index Scan on _id_
                                 Index Cond: (collection.shard_key_value = '7992'::bigint)
(18 rows)

-- (12) Check index with partial filter expression with collation
SELECT documentdb_api.insert_one('db','ci_search4', '{"_id": 1, "a" : { "b" : "DOG" }}', NULL);
NOTICE:  creating collection
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','ci_search4', '{"_id": 2, "a" : { "b" : "dog" }}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','ci_search4', '{"_id": 3, "a" : { "b" : "Cat" }}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','ci_search4', '{"_id": 4, "a" : { "b" : "Dog" }}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','ci_search4', '{"_id": 5, "a" : { "b" : "cAT" }}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','ci_search4', '{"_id": 6, "a" : { "b" : "DoG" }}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','ci_search4', '{"_id": 7, "a" : { "b" : "DOG" }}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api_internal.create_indexes_non_concurrently(
  'db',
  '{
     "createIndexes": "ci_search4",
     "indexes": [
       {
         "key": {"a.b": 1}, "name": "my_idx_1",
         "partialFilterExpression":
         {
           "a.b": {"$eq": "dog" }
         },
         "collation" : {"locale" : "en", "strength" : 2}
       }
     ]
   }',
   TRUE
);
ERROR:  Error in specification { "key" : { "a.b" : 1 }, "name" : "my_idx_1", "partialFilterExpression" : { "a.b" : { "$eq" : "dog" } }, "collation" : { "locale" : "en", "strength" : 2 } } :: caused by :: createIndex.collation is not implemented yet
SELECT documentdb_api_internal.create_indexes_non_concurrently(
  'db',
  '{
     "createIndexes": "ci_search4",
     "indexes": [
       {
         "key": {"a.b": 1}, "name": "my_idx_1",
         "partialFilterExpression":
         {
           "a.b": {"$eq": "dog" }
         }
       }
     ]
   }',
   TRUE
);
                                                                                                   create_indexes_non_concurrently                                                                                                    
---------------------------------------------------------------------
 { "raw" : { "defaultShard" : { "numIndexesBefore" : { "$numberInt" : "1" }, "numIndexesAfter" : { "$numberInt" : "2" }, "createdCollectionAutomatically" : false, "ok" : { "$numberInt" : "1" } } }, "ok" : { "$numberInt" : "1" } }
(1 row)

BEGIN;
SET LOCAL seq_page_cost TO 100;
SET LOCAL documentdb.forceUseIndexIfAvailable to true;
-- query pushed to the index when no collattion
SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search4", "filter": { "a.b": { "$eq": "dog" }, "a": { "$ne" :  null } } }');
                         document                          
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "2" }, "a" : { "b" : "dog" } }
(1 row)

EXPLAIN (VERBOSE ON, COSTS OFF) SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search4", "filter": { "a.b": { "$eq": "dog" }, "a": { "$ne" :  null } } }');
                                                                                                                                                                     QUERY PLAN                                                                                                                                                                      
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Output: remote_scan.document
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Query: SELECT document FROM documentdb_data.documents_7993_7990058 collection WHERE ((document OPERATOR(documentdb_api_catalog.#=) '{ "a.b" : "dog" }'::documentdb_core.bsonquery) AND documentdb_api_catalog.bson_dollar_ne(document, '{ "a" : null }'::documentdb_core.bson) AND (shard_key_value OPERATOR(pg_catalog.=) '7993'::bigint))
         Node: host=localhost port=58070 dbname=regression
         ->  Bitmap Heap Scan on documentdb_data.documents_7993_7990058 collection
               Output: document
               Recheck Cond: (collection.document OPERATOR(documentdb_api_catalog.#=) '{ "a.b" : "dog" }'::documentdb_core.bsonquery)
               Filter: ((collection.document OPERATOR(documentdb_api_catalog.@=) '{ "a.b" : "dog" }'::documentdb_core.bson) AND (collection.document OPERATOR(documentdb_api_catalog.@!=) '{ "a" : null }'::documentdb_core.bson))
               ->  Bitmap Index Scan on my_idx_1
(12 rows)

ROLLBACK;
BEGIN;
SET LOCAL documentdb_core.enablecollation TO on;
SET LOCAL seq_page_cost TO 100;
SET LOCAL documentdb.forceUseIndexIfAvailable to true;
-- query not pushed to the index when collattion is specified
SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search4", "filter": { "a.b": { "$eq": "dog" }, "a": { "$ne" :  null } }, "collation": { "locale": "en", "strength" : 1}  }');
                         document                          
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : { "b" : "DOG" } }
 { "_id" : { "$numberInt" : "2" }, "a" : { "b" : "dog" } }
 { "_id" : { "$numberInt" : "4" }, "a" : { "b" : "Dog" } }
 { "_id" : { "$numberInt" : "6" }, "a" : { "b" : "DoG" } }
 { "_id" : { "$numberInt" : "7" }, "a" : { "b" : "DOG" } }
(5 rows)

EXPLAIN (VERBOSE ON, COSTS OFF) SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search4", "filter": { "a.b": { "$eq": "dog" }, "a": { "$ne" :  null } }, "collation": { "locale": "en", "strength" : 1}  }');
                                                                                                                                                                                                     QUERY PLAN                                                                                                                                                                                                      
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Output: remote_scan.document
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Query: SELECT document FROM documentdb_data.documents_7993_7990058 collection WHERE ((document OPERATOR(documentdb_api_catalog.#=) '{ "a.b" : "dog", "collation" : "en-u-ks-level1" }'::documentdb_core.bsonquery) AND documentdb_api_catalog.bson_dollar_ne(document, '{ "a" : null, "collation" : "en-u-ks-level1" }'::documentdb_core.bson) AND (shard_key_value OPERATOR(pg_catalog.=) '7993'::bigint))
         Node: host=localhost port=58070 dbname=regression
         ->  Index Scan using _id_ on documentdb_data.documents_7993_7990058 collection
               Output: document
               Index Cond: (collection.shard_key_value = '7993'::bigint)
               Filter: ((collection.document OPERATOR(documentdb_api_catalog.@=) '{ "a.b" : "dog", "collation" : "en-u-ks-level1" }'::documentdb_core.bson) AND (collection.document OPERATOR(documentdb_api_catalog.@!=) '{ "a" : null, "collation" : "en-u-ks-level1" }'::documentdb_core.bson))
(11 rows)

END;
SELECT documentdb_api.shard_collection('db', 'ci_search4', '{ "_id": "hashed" }', false);
 shard_collection 
---------------------------------------------------------------------
 
(1 row)

BEGIN;
SET LOCAL documentdb_core.enablecollation TO on;
SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search4", "filter": { "$or" : [{ "a.b": { "$eq": "cat" } }, { "a.b": { "$eq": "DOG" } }] }, "sort": { "_id": 1 }, "skip": 0, "limit": 5, "collation": { "locale": "en", "strength" : 1} }');
                         document                          
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : { "b" : "DOG" } }
 { "_id" : { "$numberInt" : "2" }, "a" : { "b" : "dog" } }
 { "_id" : { "$numberInt" : "3" }, "a" : { "b" : "Cat" } }
 { "_id" : { "$numberInt" : "4" }, "a" : { "b" : "Dog" } }
 { "_id" : { "$numberInt" : "5" }, "a" : { "b" : "cAT" } }
(5 rows)

EXPLAIN (VERBOSE ON, COSTS OFF) SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search4", "filter": { "$or" : [{ "a.b": { "$eq": "cat" } }, { "a.b": { "$eq": "DOG" } }] }, "sort": { "_id": 1 }, "skip": 0, "limit": 5, "collation": { "locale": "en", "strength" : 1} }');

---------------------------------------------------------------------
 Limit
   Output: remote_scan.document, remote_scan."?sort?"
   ->  Sort
         Output: remote_scan.document, remote_scan."?sort?"
         Sort Key: remote_scan."?sort?" NULLS FIRST
         ->  Custom Scan (Citus Adaptive)
               Output: remote_scan.document, remote_scan."?sort?"
               Task Count: 8
               Tasks Shown: One of 8
               ->  Task
                     Query: SELECT document, documentdb_api_catalog.bson_orderby(document, '{ "_id" : { "$numberInt" : "1" } }'::documentdb_core.bson) AS "?sort?" FROM documentdb_data.documents_7993_7990072 collection WHERE documentdb_api_catalog.bson_dollar_in(document, '{ "a.b" : [ "cat", "DOG" ], "collation" : "en-u-ks-level1" }'::documentdb_core.bson) ORDER BY (documentdb_api_catalog.bson_orderby(document, '{ "_id" : { "$numberInt" : "1" } }'::documentdb_core.bson)) NULLS FIRST LIMIT '5'::bigint
                     Node: host=localhost port=58070 dbname=regression
                     ->  Limit
                           Output: document, (documentdb_api_catalog.bson_orderby(document, '{ "_id" : { "$numberInt" : "1" } }'::documentdb_core.bson))
                           ->  Sort
                                 Output: document, (documentdb_api_catalog.bson_orderby(document, '{ "_id" : { "$numberInt" : "1" } }'::documentdb_core.bson))
                                 Sort Key: (documentdb_api_catalog.bson_orderby(collection.document, '{ "_id" : { "$numberInt" : "1" } }'::documentdb_core.bson)) NULLS FIRST
                                 ->  Seq Scan on documentdb_data.documents_7993_7990072 collection
                                       Output: document, documentdb_api_catalog.bson_orderby(document, '{ "_id" : { "$numberInt" : "1" } }'::documentdb_core.bson)
                                       Filter: (collection.document OPERATOR(documentdb_api_catalog.@*=) '{ "a.b" : [ "cat", "DOG" ], "collation" : "en-u-ks-level1" }'::documentdb_core.bson)
(20 rows)

END;
-- (13) Check index behavior with collation (TODO: update when index pushdown of collation is supported)
SELECT documentdb_api.insert_one('db','ci_search5', '{"_id": 1, "a" : { "b" : "DOG" }}', NULL);
NOTICE:  creating collection
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','ci_search5', '{"_id": 2, "a" : { "b" : "dog" }}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','ci_search5', '{"_id": 3, "a" : { "b" : "Cat" }}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','ci_search5', '{"_id": 4, "a" : { "b" : "Dog" }}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','ci_search5', '{"_id": 5, "a" : { "b" : "cAT" }}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','ci_search5', '{"_id": 6, "a" : { "b" : "DoG" }}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','ci_search5', '{"_id": 7, "a" : { "b" : "DOG" }}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api_internal.create_indexes_non_concurrently(
  'db',
  '{
     "createIndexes": "ci_search5",
     "indexes": [
       {
         "key": {"a.b": 1}, "name": "my_idx_1",
         "collation" : {"locale" : "en", "strength" : 2}
       }
     ]
   }',
   TRUE
);
ERROR:  Error in specification { "key" : { "a.b" : 1 }, "name" : "my_idx_1", "collation" : { "locale" : "en", "strength" : 2 } } :: caused by :: createIndex.collation is not implemented yet
SELECT documentdb_api_internal.create_indexes_non_concurrently(
  'db',
  '{
     "createIndexes": "ci_search5",
     "indexes": [
       {
         "key": {"a.b": 1}, "name": "my_idx_1"
       }
     ]
   }',
   TRUE
);
                                                                                                   create_indexes_non_concurrently                                                                                                    
---------------------------------------------------------------------
 { "raw" : { "defaultShard" : { "numIndexesBefore" : { "$numberInt" : "1" }, "numIndexesAfter" : { "$numberInt" : "2" }, "createdCollectionAutomatically" : false, "ok" : { "$numberInt" : "1" } } }, "ok" : { "$numberInt" : "1" } }
(1 row)

BEGIN;
SET LOCAL seq_page_cost TO 100;
SET LOCAL documentdb.forceUseIndexIfAvailable to true;
-- query pushed to the index when no collattion
SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search5", "filter": { "$or" : [{ "a.b": { "$eq": "cat" } }, { "a.b": { "$eq": "DOG" } }] }, "sort": { "_id": 1 }, "skip": 0, "limit": 5 }');
                         document                          
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : { "b" : "DOG" } }
 { "_id" : { "$numberInt" : "7" }, "a" : { "b" : "DOG" } }
(2 rows)

EXPLAIN (VERBOSE ON, COSTS OFF) SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search5", "filter": { "$or" : [{ "a.b": { "$eq": "cat" } }, { "a.b": { "$eq": "DOG" } }] }, "sort": { "_id": 1 }, "skip": 0, "limit": 5 }');
                                                                                                                                              QUERY PLAN                                                                                                                                              
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Output: remote_scan.document
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Query: SELECT document FROM documentdb_data.documents_7994_7990080 collection WHERE (documentdb_api_catalog.bson_dollar_in(document, '{ "a.b" : [ "cat", "DOG" ] }'::documentdb_core.bson) AND (shard_key_value OPERATOR(pg_catalog.=) '7994'::bigint)) ORDER BY object_id LIMIT '5'::bigint
         Node: host=localhost port=58070 dbname=regression
         ->  Limit
               Output: document, object_id
               ->  Sort
                     Output: document, object_id
                     Sort Key: collection.object_id
                     ->  Bitmap Heap Scan on documentdb_data.documents_7994_7990080 collection
                           Output: document, object_id
                           Recheck Cond: (collection.document OPERATOR(documentdb_api_catalog.@*=) '{ "a.b" : [ "cat", "DOG" ] }'::documentdb_core.bson)
                           ->  Bitmap Index Scan on my_idx_1
                                 Index Cond: (collection.document OPERATOR(documentdb_api_catalog.@*=) '{ "a.b" : [ "cat", "DOG" ] }'::documentdb_core.bson)
(17 rows)

ROLLBACK;
BEGIN;
SET LOCAL documentdb_core.enablecollation TO on;
SET LOCAL seq_page_cost TO 100;
SET LOCAL documentdb.forceUseIndexIfAvailable to true;
-- query not pushed to the index when collation is specified
SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search5", "filter": { "$or" : [{ "a.b": { "$eq": "cat" } }, { "a.b": { "$eq": "DOG" } }] }, "sort": { "_id": 1 }, "skip": 0, "limit": 5, "collation": { "locale": "en", "strength" : 1} }');
                         document                          
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : { "b" : "DOG" } }
 { "_id" : { "$numberInt" : "2" }, "a" : { "b" : "dog" } }
 { "_id" : { "$numberInt" : "3" }, "a" : { "b" : "Cat" } }
 { "_id" : { "$numberInt" : "4" }, "a" : { "b" : "Dog" } }
 { "_id" : { "$numberInt" : "5" }, "a" : { "b" : "cAT" } }
(5 rows)

EXPLAIN (VERBOSE ON, COSTS OFF) SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search5", "filter": { "$or" : [{ "a.b": { "$eq": "cat" } }, { "a.b": { "$eq": "DOG" } }] }, "sort": { "_id": 1 }, "skip": 0, "limit": 5, "collation": { "locale": "en", "strength" : 1} }');
                                                                                                                                                              QUERY PLAN                                                                                                                                                              
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Output: remote_scan.document
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Query: SELECT document FROM documentdb_data.documents_7994_7990080 collection WHERE (documentdb_api_catalog.bson_dollar_in(document, '{ "a.b" : [ "cat", "DOG" ], "collation" : "en-u-ks-level1" }'::documentdb_core.bson) AND (shard_key_value OPERATOR(pg_catalog.=) '7994'::bigint)) ORDER BY object_id LIMIT '5'::bigint
         Node: host=localhost port=58070 dbname=regression
         ->  Limit
               Output: document, object_id
               ->  Index Scan using _id_ on documentdb_data.documents_7994_7990080 collection
                     Output: document, object_id
                     Index Cond: (collection.shard_key_value = '7994'::bigint)
                     Filter: (collection.document OPERATOR(documentdb_api_catalog.@*=) '{ "a.b" : [ "cat", "DOG" ], "collation" : "en-u-ks-level1" }'::documentdb_core.bson)
(13 rows)

END;
-- range query with index on path "a.b"
SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search5", "filter": { "a.b": { "$gt": "CAT" }, "a.b" : {"$lte" : "DOG"} }, "collation": { "locale": "en", "strength" : 1.93 } }');
                         document                          
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : { "b" : "DOG" } }
 { "_id" : { "$numberInt" : "2" }, "a" : { "b" : "dog" } }
 { "_id" : { "$numberInt" : "4" }, "a" : { "b" : "Dog" } }
 { "_id" : { "$numberInt" : "6" }, "a" : { "b" : "DoG" } }
 { "_id" : { "$numberInt" : "7" }, "a" : { "b" : "DOG" } }
(5 rows)

BEGIN;
SET LOCAL documentdb_core.enablecollation TO on;
EXPLAIN(VERBOSE ON, COSTS OFF)SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search5", "filter": { "a.b": { "$gt": "CAT" }, "a.b" : {"$lte" : "DOG"} }, "collation": { "locale": "en", "strength" : 1.93 } }');
                                                                                                                                                                                                         QUERY PLAN                                                                                                                                                                                                         
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Output: remote_scan.document
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Query: SELECT document FROM documentdb_data.documents_7994_7990080 collection WHERE ((document OPERATOR(documentdb_api_catalog.#>) '{ "a.b" : "CAT", "collation" : "en-u-ks-level1" }'::documentdb_core.bsonquery) AND (document OPERATOR(documentdb_api_catalog.#<=) '{ "a.b" : "DOG", "collation" : "en-u-ks-level1" }'::documentdb_core.bsonquery) AND (shard_key_value OPERATOR(pg_catalog.=) '7994'::bigint))
         Node: host=localhost port=58070 dbname=regression
         ->  Seq Scan on documentdb_data.documents_7994_7990080 collection
               Output: document
               Filter: ((collection.document OPERATOR(documentdb_api_catalog.@>) '{ "a.b" : "CAT", "collation" : "en-u-ks-level1" }'::documentdb_core.bson) AND (collection.document OPERATOR(documentdb_api_catalog.@<=) '{ "a.b" : "DOG", "collation" : "en-u-ks-level1" }'::documentdb_core.bson))
(10 rows)

END;
SELECT documentdb_api.shard_collection('db', 'ci_search5', '{ "_id": "hashed" }', false);
 shard_collection 
---------------------------------------------------------------------
 
(1 row)

BEGIN;
SET LOCAL documentdb_core.enablecollation TO on;
SET LOCAL seq_page_cost TO 100;
SET LOCAL documentdb.forceUseIndexIfAvailable to true;
SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search5", "filter": { "$or" : [{ "a.b": { "$eq": "cat" } }, { "a.b": { "$eq": "DOG" } }] }, "sort": { "_id": 1 }, "skip": 0, "limit": 5, "collation": { "locale": "en", "strength" : 1} }');
                         document                          
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : { "b" : "DOG" } }
 { "_id" : { "$numberInt" : "2" }, "a" : { "b" : "dog" } }
 { "_id" : { "$numberInt" : "3" }, "a" : { "b" : "Cat" } }
 { "_id" : { "$numberInt" : "4" }, "a" : { "b" : "Dog" } }
 { "_id" : { "$numberInt" : "5" }, "a" : { "b" : "cAT" } }
(5 rows)

EXPLAIN (VERBOSE ON, COSTS OFF) SELECT document FROM bson_aggregation_find('db', '{ "find": "ci_search5", "filter": { "$or" : [{ "a.b": { "$eq": "cat" } }, { "a.b": { "$eq": "DOG" } }] }, "sort": { "_id": 1 }, "skip": 0, "limit": 5, "collation": { "locale": "en", "strength" : 1} }');

---------------------------------------------------------------------
 Limit
   Output: remote_scan.document, remote_scan."?sort?"
   ->  Sort
         Output: remote_scan.document, remote_scan."?sort?"
         Sort Key: remote_scan."?sort?" NULLS FIRST
         ->  Custom Scan (Citus Adaptive)
               Output: remote_scan.document, remote_scan."?sort?"
               Task Count: 8
               Tasks Shown: One of 8
               ->  Task
                     Query: SELECT document, documentdb_api_catalog.bson_orderby(document, '{ "_id" : { "$numberInt" : "1" } }'::documentdb_core.bson) AS "?sort?" FROM documentdb_data.documents_7994_7990096 collection WHERE documentdb_api_catalog.bson_dollar_in(document, '{ "a.b" : [ "cat", "DOG" ], "collation" : "en-u-ks-level1" }'::documentdb_core.bson) ORDER BY (documentdb_api_catalog.bson_orderby(document, '{ "_id" : { "$numberInt" : "1" } }'::documentdb_core.bson)) NULLS FIRST LIMIT '5'::bigint
                     Node: host=localhost port=58070 dbname=regression
                     ->  Limit
                           Output: document, (documentdb_api_catalog.bson_orderby(document, '{ "_id" : { "$numberInt" : "1" } }'::documentdb_core.bson))
                           ->  Sort
                                 Output: document, (documentdb_api_catalog.bson_orderby(document, '{ "_id" : { "$numberInt" : "1" } }'::documentdb_core.bson))
                                 Sort Key: (documentdb_api_catalog.bson_orderby(collection.document, '{ "_id" : { "$numberInt" : "1" } }'::documentdb_core.bson)) NULLS FIRST
                                 ->  Seq Scan on documentdb_data.documents_7994_7990096 collection
                                       Output: document, documentdb_api_catalog.bson_orderby(document, '{ "_id" : { "$numberInt" : "1" } }'::documentdb_core.bson)
                                       Filter: (collection.document OPERATOR(documentdb_api_catalog.@*=) '{ "a.b" : [ "cat", "DOG" ], "collation" : "en-u-ks-level1" }'::documentdb_core.bson)
(20 rows)

END;
-- nested pipleline tests
SELECT documentdb_api.insert_one('db','ci_search6', '{"_id": "DOG", "a" : { "b" : "DOG" }}', NULL);
NOTICE:  creating collection
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','ci_search6', '{"_id": "dog", "a" : { "b" : "dog" }}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','ci_search6', '{"_id": "Cat", "a" : { "b" : "Cat" }}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','ci_search6', '{"_id": "Dog", "a" : { "b" : "Dog" }}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','ci_search6', '{"_id": "cAT", "a" : { "b" : "cAT" }}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','ci_search6', '{"_id": "DoG", "a" : { "b" : "DoG" }}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','ci_search6', '{"_id": "dOg", "a" : { "b" : "dOg" }}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

-- lookup with id join (collation aware)
SELECT document FROM bson_aggregation_pipeline('db', 
    '{ "aggregate": "ci_search6", "pipeline": [ { "$lookup": { "from": "ci_search6", "as": "matched_docs", "localField": "_id", "foreignField": "_id", "pipeline": [ { "$match": { "$or" : [ { "a.b": "cat" }, { "a.b": "dog" } ] } } ] } } ], "cursor": {}, "collation": { "locale": "en", "strength" : 1}  }');
                                                                                                                                    document                                                                                                                                     
---------------------------------------------------------------------
 { "_id" : "DOG", "a" : { "b" : "DOG" }, "matched_docs" : [ { "_id" : "DOG", "a" : { "b" : "DOG" } }, { "_id" : "dog", "a" : { "b" : "dog" } }, { "_id" : "Dog", "a" : { "b" : "Dog" } }, { "_id" : "DoG", "a" : { "b" : "DoG" } }, { "_id" : "dOg", "a" : { "b" : "dOg" } } ] }
 { "_id" : "dog", "a" : { "b" : "dog" }, "matched_docs" : [ { "_id" : "DOG", "a" : { "b" : "DOG" } }, { "_id" : "dog", "a" : { "b" : "dog" } }, { "_id" : "Dog", "a" : { "b" : "Dog" } }, { "_id" : "DoG", "a" : { "b" : "DoG" } }, { "_id" : "dOg", "a" : { "b" : "dOg" } } ] }
 { "_id" : "Cat", "a" : { "b" : "Cat" }, "matched_docs" : [ { "_id" : "Cat", "a" : { "b" : "Cat" } }, { "_id" : "cAT", "a" : { "b" : "cAT" } } ] }
 { "_id" : "Dog", "a" : { "b" : "Dog" }, "matched_docs" : [ { "_id" : "DOG", "a" : { "b" : "DOG" } }, { "_id" : "dog", "a" : { "b" : "dog" } }, { "_id" : "Dog", "a" : { "b" : "Dog" } }, { "_id" : "DoG", "a" : { "b" : "DoG" } }, { "_id" : "dOg", "a" : { "b" : "dOg" } } ] }
 { "_id" : "cAT", "a" : { "b" : "cAT" }, "matched_docs" : [ { "_id" : "Cat", "a" : { "b" : "Cat" } }, { "_id" : "cAT", "a" : { "b" : "cAT" } } ] }
 { "_id" : "DoG", "a" : { "b" : "DoG" }, "matched_docs" : [ { "_id" : "DOG", "a" : { "b" : "DOG" } }, { "_id" : "dog", "a" : { "b" : "dog" } }, { "_id" : "Dog", "a" : { "b" : "Dog" } }, { "_id" : "DoG", "a" : { "b" : "DoG" } }, { "_id" : "dOg", "a" : { "b" : "dOg" } } ] }
 { "_id" : "dOg", "a" : { "b" : "dOg" }, "matched_docs" : [ { "_id" : "DOG", "a" : { "b" : "DOG" } }, { "_id" : "dog", "a" : { "b" : "dog" } }, { "_id" : "Dog", "a" : { "b" : "Dog" } }, { "_id" : "DoG", "a" : { "b" : "DoG" } }, { "_id" : "dOg", "a" : { "b" : "dOg" } } ] }
(7 rows)

BEGIN;
SET LOCAL documentdb_core.enablecollation TO on;
EXPLAIN (VERBOSE ON, COSTS OFF) SELECT document FROM bson_aggregation_pipeline('db', 
    '{ "aggregate": "ci_search6", "pipeline": [ { "$lookup": { "from": "ci_search6", "as": "matched_docs", "localField": "_id", "foreignField": "_id", "pipeline": [ { "$match": { "$or" : [ { "a.b": "cat" }, { "a.b": "dog" } ] } } ] } } ], "cursor": {}, "collation": { "locale": "en", "strength" : 1}  }');

---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Output: remote_scan.document
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Query: SELECT documentdb_api_internal.bson_dollar_merge_documents(lookup_stage_1.document, "lookupRight_stage_1".document) AS document FROM ((SELECT collection.document, documentdb_api_internal.bson_dollar_lookup_extract_filter_expression(collection.document, '{ "_id" : "_id", "collation" : "en-u-ks-level1" }'::documentdb_core.bson) AS lookup_filter FROM documentdb_data.documents_7995_7990111 collection WHERE (collection.shard_key_value OPERATOR(pg_catalog.=) '7995'::bigint)) lookup_stage_1 LEFT JOIN LATERAL (SELECT COALESCE(documentdb_api_catalog.bson_array_agg(lookup_right_query_stage_0.document, 'matched_docs'::text), '{ "matched_docs" : [  ] }'::documentdb_core.bson) AS document FROM (SELECT collection_0_1.document FROM documentdb_data.documents_7995_7990111 collection_0_1 WHERE (documentdb_api_catalog.bson_dollar_in(collection_0_1.document, '{ "a.b" : [ "cat", "dog" ], "collation" : "en-u-ks-level1" }'::documentdb_core.bson) AND (collection_0_1.shard_key_value OPERATOR(pg_catalog.=) '7995'::bigint))) lookup_right_query_stage_0 WHERE documentdb_api_internal.bson_dollar_lookup_join_filter(lookup_right_query_stage_0.document, lookup_stage_1.lookup_filter, '_id'::text)) "lookupRight_stage_1" ON (true))
         Node: host=localhost port=58070 dbname=regression
         ->  Nested Loop Left Join
               Output: documentdb_api_internal.bson_dollar_merge_documents(collection.document, (COALESCE(documentdb_api_catalog.bson_array_agg(collection_0_1.document, 'matched_docs'::text), '{ "matched_docs" : [  ] }'::documentdb_core.bson)))
               ->  Bitmap Heap Scan on documentdb_data.documents_7995_7990111 collection
                     Output: collection.shard_key_value, collection.object_id, collection.document, collection.creation_time
                     Recheck Cond: (collection.shard_key_value = '7995'::bigint)
                     ->  Bitmap Index Scan on _id_
                           Index Cond: (collection.shard_key_value = '7995'::bigint)
               ->  Aggregate
                     Output: COALESCE(documentdb_api_catalog.bson_array_agg(collection_0_1.document, 'matched_docs'::text), '{ "matched_docs" : [  ] }'::documentdb_core.bson)
                     ->  Bitmap Heap Scan on documentdb_data.documents_7995_7990111 collection_0_1
                           Output: collection_0_1.shard_key_value, collection_0_1.object_id, collection_0_1.document, collection_0_1.creation_time
                           Recheck Cond: (collection_0_1.shard_key_value = '7995'::bigint)
                           Filter: ((collection_0_1.document OPERATOR(documentdb_api_catalog.@*=) '{ "a.b" : [ "cat", "dog" ], "collation" : "en-u-ks-level1" }'::documentdb_core.bson) AND documentdb_api_internal.bson_dollar_lookup_join_filter(collection_0_1.document, documentdb_api_internal.bson_dollar_lookup_extract_filter_expression(collection.document, '{ "_id" : "_id", "collation" : "en-u-ks-level1" }'::documentdb_core.bson), '_id'::text))
                           ->  Bitmap Index Scan on _id_
                                 Index Cond: (collection_0_1.shard_key_value = '7995'::bigint)
(22 rows)

END;
-- lookup with id join optimized (explicitly asked to make _id join collation agnostic)
BEGIN;
SET LOCAL documentdb.enableLookupIdJoinOptimizationOnCollation to true;
SET LOCAL documentdb_core.enablecollation TO on;
SELECT document FROM bson_aggregation_pipeline('db', 
    '{ "aggregate": "ci_search6", "pipeline": [ { "$lookup": { "from": "ci_search6", "as": "matched_docs", "localField": "_id", "foreignField": "_id", "pipeline": [ { "$match": { "$or" : [ { "a.b": "cat" }, { "a.b": "dog" } ] } } ] } } ], "cursor": {}, "collation": { "locale": "en", "strength" : 1}  }');
                                                document                                                 
---------------------------------------------------------------------
 { "_id" : "DOG", "a" : { "b" : "DOG" }, "matched_docs" : [ { "_id" : "DOG", "a" : { "b" : "DOG" } } ] }
 { "_id" : "dog", "a" : { "b" : "dog" }, "matched_docs" : [ { "_id" : "dog", "a" : { "b" : "dog" } } ] }
 { "_id" : "Cat", "a" : { "b" : "Cat" }, "matched_docs" : [ { "_id" : "Cat", "a" : { "b" : "Cat" } } ] }
 { "_id" : "Dog", "a" : { "b" : "Dog" }, "matched_docs" : [ { "_id" : "Dog", "a" : { "b" : "Dog" } } ] }
 { "_id" : "cAT", "a" : { "b" : "cAT" }, "matched_docs" : [ { "_id" : "cAT", "a" : { "b" : "cAT" } } ] }
 { "_id" : "DoG", "a" : { "b" : "DoG" }, "matched_docs" : [ { "_id" : "DoG", "a" : { "b" : "DoG" } } ] }
 { "_id" : "dOg", "a" : { "b" : "dOg" }, "matched_docs" : [ { "_id" : "dOg", "a" : { "b" : "dOg" } } ] }
(7 rows)

EXPLAIN (VERBOSE ON, COSTS OFF) SELECT document FROM bson_aggregation_pipeline('db', 
    '{ "aggregate": "ci_search6", "pipeline": [ { "$lookup": { "from": "ci_search6", "as": "matched_docs", "localField": "_id", "foreignField": "_id", "pipeline": [ { "$match": { "$or" : [ { "a.b": "cat" }, { "a.b": "dog" } ] } } ] } } ], "cursor": {}, "collation": { "locale": "en", "strength" : 1}  }');

---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Output: remote_scan.document
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Query: SELECT documentdb_api_internal.bson_dollar_merge_documents("left", (SELECT COALESCE(documentdb_api_catalog.bson_array_agg(lookup_subpipeline_substage_0.lookup_unwind, 'matched_docs'::text), '{ "matched_docs" : [  ] }'::documentdb_core.bson) AS "funcName" FROM documentdb_api_catalog.bson_lookup_unwind(lookup_non_inlined_stage_1."right", 'matched_docs'::text) lookup_subpipeline_substage_0(lookup_unwind) WHERE documentdb_api_catalog.bson_dollar_in(lookup_subpipeline_substage_0.lookup_unwind, '{ "a.b" : [ "cat", "dog" ], "collation" : "en-u-ks-level1" }'::documentdb_core.bson))) AS document FROM (SELECT lookup_stage_1.document AS "left", "lookupRight_stage_1".document AS "right" FROM ((SELECT collection.document, collection.object_id AS lookup_filter FROM documentdb_data.documents_7995_7990111 collection WHERE (collection.shard_key_value OPERATOR(pg_catalog.=) '7995'::bigint)) lookup_stage_1 LEFT JOIN LATERAL (SELECT COALESCE(documentdb_api_catalog.bson_array_agg(lookup_right_query_stage_0.document, 'matched_docs'::text), '{ "matched_docs" : [  ] }'::documentdb_core.bson) AS document FROM (SELECT collection_0_1.document, collection_0_1.object_id AS "objectId" FROM documentdb_data.documents_7995_7990111 collection_0_1 WHERE (collection_0_1.shard_key_value OPERATOR(pg_catalog.=) '7995'::bigint)) lookup_right_query_stage_0 WHERE (lookup_right_query_stage_0."objectId" OPERATOR(documentdb_core.=) lookup_stage_1.lookup_filter)) "lookupRight_stage_1" ON (true))) lookup_non_inlined_stage_1
         Node: host=localhost port=58070 dbname=regression
         ->  Nested Loop Left Join
               Output: documentdb_api_internal.bson_dollar_merge_documents(collection.document, (SubPlan 1))
               ->  Bitmap Heap Scan on documentdb_data.documents_7995_7990111 collection
                     Output: collection.shard_key_value, collection.object_id, collection.document, collection.creation_time
                     Recheck Cond: (collection.shard_key_value = '7995'::bigint)
                     ->  Bitmap Index Scan on _id_
                           Index Cond: (collection.shard_key_value = '7995'::bigint)
               ->  Aggregate
                     Output: COALESCE(documentdb_api_catalog.bson_array_agg(collection_0_1.document, 'matched_docs'::text), '{ "matched_docs" : [  ] }'::documentdb_core.bson)
                     ->  Index Scan using _id_ on documentdb_data.documents_7995_7990111 collection_0_1
                           Output: collection_0_1.shard_key_value, collection_0_1.object_id, collection_0_1.document, collection_0_1.creation_time
                           Index Cond: ((collection_0_1.shard_key_value = '7995'::bigint) AND (collection_0_1.object_id OPERATOR(documentdb_core.=) collection.object_id))
               SubPlan 1
                 ->  Aggregate
                       Output: COALESCE(documentdb_api_catalog.bson_array_agg(lookup_subpipeline_substage_0.lookup_unwind, 'matched_docs'::text), '{ "matched_docs" : [  ] }'::documentdb_core.bson)
                       ->  Function Scan on documentdb_api_catalog.bson_lookup_unwind lookup_subpipeline_substage_0
                             Output: lookup_subpipeline_substage_0.lookup_unwind
                             Function Call: documentdb_api_catalog.bson_lookup_unwind((COALESCE(documentdb_api_catalog.bson_array_agg(collection_0_1.document, 'matched_docs'::text), '{ "matched_docs" : [  ] }'::documentdb_core.bson)), 'matched_docs'::text)
                             Filter: documentdb_api_catalog.bson_dollar_in(lookup_subpipeline_substage_0.lookup_unwind, '{ "a.b" : [ "cat", "dog" ], "collation" : "en-u-ks-level1" }'::documentdb_core.bson)
(26 rows)

END;
-- lookup with non-id join (collation aware)
SELECT document FROM bson_aggregation_pipeline('db', 
    '{ "aggregate": "ci_search6", "pipeline": [ { "$lookup": { "from": "ci_search6", "as": "matched_docs", "localField": "a.b", "foreignField": "a.b", "pipeline": [ { "$match": { "$or" : [ { "a.b": "cat" }, { "a.b": "dog" } ] } } ] } } ], "cursor": {}, "collation": { "locale": "en", "strength" : 1}  }');
                                                                                                                                    document                                                                                                                                     
---------------------------------------------------------------------
 { "_id" : "DOG", "a" : { "b" : "DOG" }, "matched_docs" : [ { "_id" : "DOG", "a" : { "b" : "DOG" } }, { "_id" : "dog", "a" : { "b" : "dog" } }, { "_id" : "Dog", "a" : { "b" : "Dog" } }, { "_id" : "DoG", "a" : { "b" : "DoG" } }, { "_id" : "dOg", "a" : { "b" : "dOg" } } ] }
 { "_id" : "dog", "a" : { "b" : "dog" }, "matched_docs" : [ { "_id" : "DOG", "a" : { "b" : "DOG" } }, { "_id" : "dog", "a" : { "b" : "dog" } }, { "_id" : "Dog", "a" : { "b" : "Dog" } }, { "_id" : "DoG", "a" : { "b" : "DoG" } }, { "_id" : "dOg", "a" : { "b" : "dOg" } } ] }
 { "_id" : "Cat", "a" : { "b" : "Cat" }, "matched_docs" : [ { "_id" : "Cat", "a" : { "b" : "Cat" } }, { "_id" : "cAT", "a" : { "b" : "cAT" } } ] }
 { "_id" : "Dog", "a" : { "b" : "Dog" }, "matched_docs" : [ { "_id" : "DOG", "a" : { "b" : "DOG" } }, { "_id" : "dog", "a" : { "b" : "dog" } }, { "_id" : "Dog", "a" : { "b" : "Dog" } }, { "_id" : "DoG", "a" : { "b" : "DoG" } }, { "_id" : "dOg", "a" : { "b" : "dOg" } } ] }
 { "_id" : "cAT", "a" : { "b" : "cAT" }, "matched_docs" : [ { "_id" : "Cat", "a" : { "b" : "Cat" } }, { "_id" : "cAT", "a" : { "b" : "cAT" } } ] }
 { "_id" : "DoG", "a" : { "b" : "DoG" }, "matched_docs" : [ { "_id" : "DOG", "a" : { "b" : "DOG" } }, { "_id" : "dog", "a" : { "b" : "dog" } }, { "_id" : "Dog", "a" : { "b" : "Dog" } }, { "_id" : "DoG", "a" : { "b" : "DoG" } }, { "_id" : "dOg", "a" : { "b" : "dOg" } } ] }
 { "_id" : "dOg", "a" : { "b" : "dOg" }, "matched_docs" : [ { "_id" : "DOG", "a" : { "b" : "DOG" } }, { "_id" : "dog", "a" : { "b" : "dog" } }, { "_id" : "Dog", "a" : { "b" : "Dog" } }, { "_id" : "DoG", "a" : { "b" : "DoG" } }, { "_id" : "dOg", "a" : { "b" : "dOg" } } ] }
(7 rows)

-- lookup with non-id join (collation aware - explain)
BEGIN;
SET LOCAL documentdb_core.enablecollation TO on;
EXPLAIN (VERBOSE ON, COSTS OFF) SELECT document FROM bson_aggregation_pipeline('db', 
    '{ "aggregate": "ci_search6", "pipeline": [ { "$lookup": { "from": "ci_search6", "as": "matched_docs", "localField": "a.b", "foreignField": "a.b", "pipeline": [ { "$match": { "$or" : [ { "a.b": "cat" }, { "a.b": "dog" } ] } } ] } } ], "cursor": {}, "collation": { "locale": "en", "strength" : 1}  }');

---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Output: remote_scan.document
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Query: SELECT documentdb_api_internal.bson_dollar_merge_documents(lookup_stage_1.document, "lookupRight_stage_1".document) AS document FROM ((SELECT collection.document, documentdb_api_internal.bson_dollar_lookup_extract_filter_expression(collection.document, '{ "a.b" : "a.b", "collation" : "en-u-ks-level1" }'::documentdb_core.bson) AS lookup_filter FROM documentdb_data.documents_7995_7990111 collection WHERE (collection.shard_key_value OPERATOR(pg_catalog.=) '7995'::bigint)) lookup_stage_1 LEFT JOIN LATERAL (SELECT COALESCE(documentdb_api_catalog.bson_array_agg(lookup_right_query_stage_0.document, 'matched_docs'::text), '{ "matched_docs" : [  ] }'::documentdb_core.bson) AS document FROM (SELECT collection_0_1.document FROM documentdb_data.documents_7995_7990111 collection_0_1 WHERE (documentdb_api_catalog.bson_dollar_in(collection_0_1.document, '{ "a.b" : [ "cat", "dog" ], "collation" : "en-u-ks-level1" }'::documentdb_core.bson) AND (collection_0_1.shard_key_value OPERATOR(pg_catalog.=) '7995'::bigint))) lookup_right_query_stage_0 WHERE documentdb_api_internal.bson_dollar_lookup_join_filter(lookup_right_query_stage_0.document, lookup_stage_1.lookup_filter, 'a.b'::text)) "lookupRight_stage_1" ON (true))
         Node: host=localhost port=58070 dbname=regression
         ->  Nested Loop Left Join
               Output: documentdb_api_internal.bson_dollar_merge_documents(collection.document, (COALESCE(documentdb_api_catalog.bson_array_agg(collection_0_1.document, 'matched_docs'::text), '{ "matched_docs" : [  ] }'::documentdb_core.bson)))
               ->  Bitmap Heap Scan on documentdb_data.documents_7995_7990111 collection
                     Output: collection.shard_key_value, collection.object_id, collection.document, collection.creation_time
                     Recheck Cond: (collection.shard_key_value = '7995'::bigint)
                     ->  Bitmap Index Scan on _id_
                           Index Cond: (collection.shard_key_value = '7995'::bigint)
               ->  Aggregate
                     Output: COALESCE(documentdb_api_catalog.bson_array_agg(collection_0_1.document, 'matched_docs'::text), '{ "matched_docs" : [  ] }'::documentdb_core.bson)
                     ->  Bitmap Heap Scan on documentdb_data.documents_7995_7990111 collection_0_1
                           Output: collection_0_1.shard_key_value, collection_0_1.object_id, collection_0_1.document, collection_0_1.creation_time
                           Recheck Cond: (collection_0_1.shard_key_value = '7995'::bigint)
                           Filter: ((collection_0_1.document OPERATOR(documentdb_api_catalog.@*=) '{ "a.b" : [ "cat", "dog" ], "collation" : "en-u-ks-level1" }'::documentdb_core.bson) AND documentdb_api_internal.bson_dollar_lookup_join_filter(collection_0_1.document, documentdb_api_internal.bson_dollar_lookup_extract_filter_expression(collection.document, '{ "a.b" : "a.b", "collation" : "en-u-ks-level1" }'::documentdb_core.bson), 'a.b'::text))
                           ->  Bitmap Index Scan on _id_
                                 Index Cond: (collection_0_1.shard_key_value = '7995'::bigint)
(22 rows)

END;
-- $facet and $unionwith
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "ci_search6", "pipeline": [ { "$facet": { "a" : [ { "$match": { "a.b": "cat" } }, { "$count": "catCount" } ], "b" : [ { "$match": { "a.b": "dog" } }, { "$count": "dogCount" } ]  } } ], "cursor": {}, "collation": { "locale": "en", "strength" : 1}}');
                                                 document                                                 
---------------------------------------------------------------------
 { "a" : [ { "catCount" : { "$numberInt" : "2" } } ], "b" : [ { "dogCount" : { "$numberInt" : "5" } } ] }
(1 row)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "ci_search6", "pipeline": [ { "$unionWith": { "coll": "ci_search6", "pipeline" : [ { "$match": { "a.b": "cat" }}] } }], "cursor": {}, "collation": { "locale": "en", "strength" : 1} }');
                 document                 
---------------------------------------------------------------------
 { "_id" : "DOG", "a" : { "b" : "DOG" } }
 { "_id" : "dog", "a" : { "b" : "dog" } }
 { "_id" : "Cat", "a" : { "b" : "Cat" } }
 { "_id" : "Dog", "a" : { "b" : "Dog" } }
 { "_id" : "cAT", "a" : { "b" : "cAT" } }
 { "_id" : "DoG", "a" : { "b" : "DoG" } }
 { "_id" : "dOg", "a" : { "b" : "dOg" } }
 { "_id" : "Cat", "a" : { "b" : "Cat" } }
 { "_id" : "cAT", "a" : { "b" : "cAT" } }
(9 rows)

-- $graphLookup 
SELECT documentdb_api.insert_one('db','ci_search7', '{"_id": "alice", "pet" : "dog" }', NULL);
NOTICE:  creating collection
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','ci_search7', '{"_id": "bob", "pet" : "cat" }', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','ci_search8', '{"_id": "DOG", "name" : "DOG" }', NULL);
NOTICE:  creating collection
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','ci_search8', '{"_id": "dog", "name" : "dog" }', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','ci_search8', '{"_id": "CAT", "name" : "CAT" }', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','ci_search8', '{"_id": "cAT", "name" : "cAT" }', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

BEGIN;
SET LOCAL documentdb_core.enablecollation TO on;
EXPLAIN (VERBOSE ON, COSTS OFF) SELECT document FROM bson_aggregation_pipeline('db',
    '{ "aggregate": "ci_search7", "pipeline": [ { "$graphLookup": { "from": "ci_search8", "startWith": "$pet", "connectFromField": "name", "connectToField": "_id", "as": "destinations", "depthField": "depth" } } ],  "collation": { "locale": "en", "strength" : 3} }');

---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Output: remote_scan.document
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Query: SELECT documentdb_api_internal.bson_dollar_merge_documents(document, "addFields") AS document FROM (SELECT "graphLookupBase_stage_1".document, COALESCE((SELECT COALESCE(documentdb_api_catalog.bson_array_agg(agg_stage_sub_1_0.document, 'destinations'::text), '{ "destinations" : [  ] }'::documentdb_core.bson) AS document FROM (WITH RECURSIVE "graphLookupRecurseStage" AS (SELECT "*TLOCRN*".document, "*TLOCRN*".depth, "*TLOCRN*"."baseDocId", false AS is_cycle, ARRAY[ROW("*TLOCRN*"."baseDocId")] AS path FROM (SELECT collection_0_2.document, '{ "depth" : { "$numberInt" : "0" } }'::documentdb_core.bson AS depth, documentdb_api_catalog.bson_expression_get(collection_0_2.document, '{ "_id" : "$_id" }'::documentdb_core.bson) AS "baseDocId" FROM documentdb_data.documents_7997_7990140 collection_0_2 WHERE ((collection_0_2.shard_key_value OPERATOR(pg_catalog.=) '7997'::bigint) AND documentdb_api_internal.bson_dollar_lookup_join_filter(collection_0_2.document, "graphLookupBase_stage_1"."inputExpr", '_id'::text))) "*TLOCRN*"(document, depth, "baseDocId") UNION ALL SELECT "*TROCRN*".document, "*TROCRN*".depth, "*TROCRN*"."baseDocId", CASE WHEN (ROW("*TROCRN*"."baseDocId") OPERATOR(pg_catalog.=) ANY ("*TROCRN*".path)) THEN true ELSE false END AS is_cycle, array_cat("*TROCRN*".path, ARRAY[ROW("*TROCRN*"."baseDocId")]) AS path FROM (SELECT collection_0_2.document, documentdb_api_catalog.bson_dollar_add_fields("lookupRecursive_stage_1".depth, '{ "depth" : { "$add" : [ "$depth", { "$numberInt" : "1" } ] } }'::documentdb_core.bson) AS depth, documentdb_api_catalog.bson_expression_get(collection_0_2.document, '{ "_id" : "$_id" }'::documentdb_core.bson) AS "baseDocId", "lookupRecursive_stage_1".is_cycle, "lookupRecursive_stage_1".path FROM documentdb_data.documents_7997_7990140 collection_0_2, "graphLookupRecurseStage" "lookupRecursive_stage_1" WHERE ((collection_0_2.shard_key_value OPERATOR(pg_catalog.=) '7997'::bigint) AND documentdb_api_internal.bson_dollar_lookup_join_filter(collection_0_2.document, documentdb_api_internal.bson_expression_get("lookupRecursive_stage_1".document, '{ "_id" : { "$makeArray" : "$name" }, "collation" : "en-u-ks-level3" }'::documentdb_core.bson, false, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson), '_id'::text))) "*TROCRN*"(document, depth, "baseDocId", is_cycle, path) WHERE ("*TROCRN*".is_cycle OPERATOR(pg_catalog.<>) true)) SELECT DISTINCT ON ("graphLookup_stage_2"."baseDocId") documentdb_api_internal.bson_dollar_merge_documents("graphLookup_stage_2".document, "graphLookup_stage_2".depth) AS document FROM "graphLookupRecurseStage" "graphLookup_stage_2" ORDER BY "graphLookup_stage_2"."baseDocId", "graphLookup_stage_2".depth) agg_stage_sub_1_0), '{ "destinations" : [  ] }'::documentdb_core.bson) AS "addFields" FROM (SELECT collection.document, documentdb_api_internal.bson_expression_get(collection.document, '{ "_id" : { "$makeArray" : "$pet" }, "collation" : "en-u-ks-level3" }'::documentdb_core.bson, false, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson) AS "inputExpr" FROM documentdb_data.documents_7996_7990122 collection WHERE (collection.shard_key_value OPERATOR(pg_catalog.=) '7996'::bigint)) "graphLookupBase_stage_1") "graphLookup_stage_1"
         Node: host=localhost port=58070 dbname=regression
         ->  Bitmap Heap Scan on documentdb_data.documents_7996_7990122 collection
               Output: documentdb_api_internal.bson_dollar_merge_documents(collection.document, COALESCE((SubPlan 2), '{ "destinations" : [  ] }'::documentdb_core.bson))
               Recheck Cond: (collection.shard_key_value = '7996'::bigint)
               ->  Bitmap Index Scan on _id_
                     Index Cond: (collection.shard_key_value = '7996'::bigint)
               SubPlan 2
                 ->  Aggregate
                       Output: COALESCE(documentdb_api_catalog.bson_array_agg((documentdb_api_internal.bson_dollar_merge_documents("graphLookup_stage_2".document, "graphLookup_stage_2".depth)), 'destinations'::text), '{ "destinations" : [  ] }'::documentdb_core.bson)
                       ->  Unique
                             Output: (documentdb_api_internal.bson_dollar_merge_documents("graphLookup_stage_2".document, "graphLookup_stage_2".depth)), "graphLookup_stage_2"."baseDocId", "graphLookup_stage_2".depth
                             CTE graphLookupRecurseStage
                               ->  Recursive Union
                                     ->  Bitmap Heap Scan on documentdb_data.documents_7997_7990140 collection_0_2
                                           Output: collection_0_2.document, '{ "depth" : { "$numberInt" : "0" } }'::documentdb_core.bson, documentdb_api_catalog.bson_expression_get(collection_0_2.document, '{ "_id" : "$_id" }'::documentdb_core.bson, false), false, ARRAY[ROW(documentdb_api_catalog.bson_expression_get(collection_0_2.document, '{ "_id" : "$_id" }'::documentdb_core.bson, false))]
                                           Recheck Cond: (collection_0_2.shard_key_value = '7997'::bigint)
                                           Filter: documentdb_api_internal.bson_dollar_lookup_join_filter(collection_0_2.document, documentdb_api_internal.bson_expression_get(collection.document, '{ "_id" : { "$makeArray" : "$pet" }, "collation" : "en-u-ks-level3" }'::documentdb_core.bson, false, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson), '_id'::text)
                                           ->  Bitmap Index Scan on _id_
                                                 Index Cond: (collection_0_2.shard_key_value = '7997'::bigint)
                                     ->  Nested Loop
                                           Output: collection_0_2_1.document, documentdb_api_catalog.bson_dollar_add_fields("lookupRecursive_stage_1".depth, '{ "depth" : { "$add" : [ "$depth", { "$numberInt" : "1" } ] } }'::documentdb_core.bson), documentdb_api_catalog.bson_expression_get(collection_0_2_1.document, '{ "_id" : "$_id" }'::documentdb_core.bson, false), CASE WHEN (ROW(documentdb_api_catalog.bson_expression_get(collection_0_2_1.document, '{ "_id" : "$_id" }'::documentdb_core.bson, false)) = ANY ("lookupRecursive_stage_1".path)) THEN true ELSE false END, array_cat("lookupRecursive_stage_1".path, ARRAY[ROW(documentdb_api_catalog.bson_expression_get(collection_0_2_1.document, '{ "_id" : "$_id" }'::documentdb_core.bson, false))])
                                           Join Filter: documentdb_api_internal.bson_dollar_lookup_join_filter(collection_0_2_1.document, documentdb_api_internal.bson_expression_get("lookupRecursive_stage_1".document, '{ "_id" : { "$makeArray" : "$name" }, "collation" : "en-u-ks-level3" }'::documentdb_core.bson, false, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson), '_id'::text)
                                           ->  WorkTable Scan on "graphLookupRecurseStage" "lookupRecursive_stage_1"
                                                 Output: "lookupRecursive_stage_1".document, "lookupRecursive_stage_1".depth, "lookupRecursive_stage_1"."baseDocId", "lookupRecursive_stage_1".is_cycle, "lookupRecursive_stage_1".path
                                                 Filter: (NOT "lookupRecursive_stage_1".is_cycle)
                                           ->  Materialize
                                                 Output: collection_0_2_1.document
                                                 ->  Bitmap Heap Scan on documentdb_data.documents_7997_7990140 collection_0_2_1
                                                       Output: collection_0_2_1.document
                                                       Recheck Cond: (collection_0_2_1.shard_key_value = '7997'::bigint)
                                                       ->  Bitmap Index Scan on _id_
                                                             Index Cond: (collection_0_2_1.shard_key_value = '7997'::bigint)
                             ->  Sort
                                   Output: (documentdb_api_internal.bson_dollar_merge_documents("graphLookup_stage_2".document, "graphLookup_stage_2".depth)), "graphLookup_stage_2"."baseDocId", "graphLookup_stage_2".depth
                                   Sort Key: "graphLookup_stage_2"."baseDocId", "graphLookup_stage_2".depth
                                   ->  CTE Scan on "graphLookupRecurseStage" "graphLookup_stage_2"
                                         Output: documentdb_api_internal.bson_dollar_merge_documents("graphLookup_stage_2".document, "graphLookup_stage_2".depth), "graphLookup_stage_2"."baseDocId", "graphLookup_stage_2".depth
(43 rows)

SELECT document FROM bson_aggregation_pipeline('db',
    '{ "aggregate": "ci_search7", "pipeline": [ { "$graphLookup": { "from": "ci_search8", "startWith": "$pet", "connectFromField": "name", "connectToField": "_id", "as": "destinations", "depthField": "depth" } } ],  "collation": { "locale": "en", "strength" : 3} }');
                                                           document                                                           
---------------------------------------------------------------------
 { "_id" : "alice", "pet" : "dog", "destinations" : [ { "_id" : "dog", "name" : "dog", "depth" : { "$numberInt" : "0" } } ] }
 { "_id" : "bob", "pet" : "cat", "destinations" : [  ] }
(2 rows)

END;
SELECT document FROM bson_aggregation_pipeline('db',
    '{ "aggregate": "ci_search6", "pipeline": [ { "$graphLookup": { "from": "ci_search6", "startWith": "$a.b", "connectFromField": "a.b", "connectToField": "a.b", "as": "destinations", "depthField": "depth" } } ],  "collation": { "locale": "en", "strength" : 1} }');
                                                                                                                                                                                                                         document                                                                                                                                                                                                                          
---------------------------------------------------------------------
 { "_id" : "DOG", "a" : { "b" : "DOG" }, "destinations" : [ { "_id" : "DOG", "a" : { "b" : "DOG" }, "depth" : { "$numberInt" : "0" } }, { "_id" : "DoG", "a" : { "b" : "DoG" }, "depth" : { "$numberInt" : "0" } }, { "_id" : "Dog", "a" : { "b" : "Dog" }, "depth" : { "$numberInt" : "0" } }, { "_id" : "dOg", "a" : { "b" : "dOg" }, "depth" : { "$numberInt" : "0" } }, { "_id" : "dog", "a" : { "b" : "dog" }, "depth" : { "$numberInt" : "0" } } ] }
 { "_id" : "dog", "a" : { "b" : "dog" }, "destinations" : [ { "_id" : "DOG", "a" : { "b" : "DOG" }, "depth" : { "$numberInt" : "0" } }, { "_id" : "DoG", "a" : { "b" : "DoG" }, "depth" : { "$numberInt" : "0" } }, { "_id" : "Dog", "a" : { "b" : "Dog" }, "depth" : { "$numberInt" : "0" } }, { "_id" : "dOg", "a" : { "b" : "dOg" }, "depth" : { "$numberInt" : "0" } }, { "_id" : "dog", "a" : { "b" : "dog" }, "depth" : { "$numberInt" : "0" } } ] }
 { "_id" : "Cat", "a" : { "b" : "Cat" }, "destinations" : [ { "_id" : "Cat", "a" : { "b" : "Cat" }, "depth" : { "$numberInt" : "0" } }, { "_id" : "cAT", "a" : { "b" : "cAT" }, "depth" : { "$numberInt" : "0" } } ] }
 { "_id" : "Dog", "a" : { "b" : "Dog" }, "destinations" : [ { "_id" : "DOG", "a" : { "b" : "DOG" }, "depth" : { "$numberInt" : "0" } }, { "_id" : "DoG", "a" : { "b" : "DoG" }, "depth" : { "$numberInt" : "0" } }, { "_id" : "Dog", "a" : { "b" : "Dog" }, "depth" : { "$numberInt" : "0" } }, { "_id" : "dOg", "a" : { "b" : "dOg" }, "depth" : { "$numberInt" : "0" } }, { "_id" : "dog", "a" : { "b" : "dog" }, "depth" : { "$numberInt" : "0" } } ] }
 { "_id" : "cAT", "a" : { "b" : "cAT" }, "destinations" : [ { "_id" : "Cat", "a" : { "b" : "Cat" }, "depth" : { "$numberInt" : "0" } }, { "_id" : "cAT", "a" : { "b" : "cAT" }, "depth" : { "$numberInt" : "0" } } ] }
 { "_id" : "DoG", "a" : { "b" : "DoG" }, "destinations" : [ { "_id" : "DOG", "a" : { "b" : "DOG" }, "depth" : { "$numberInt" : "0" } }, { "_id" : "DoG", "a" : { "b" : "DoG" }, "depth" : { "$numberInt" : "0" } }, { "_id" : "Dog", "a" : { "b" : "Dog" }, "depth" : { "$numberInt" : "0" } }, { "_id" : "dOg", "a" : { "b" : "dOg" }, "depth" : { "$numberInt" : "0" } }, { "_id" : "dog", "a" : { "b" : "dog" }, "depth" : { "$numberInt" : "0" } } ] }
 { "_id" : "dOg", "a" : { "b" : "dOg" }, "destinations" : [ { "_id" : "DOG", "a" : { "b" : "DOG" }, "depth" : { "$numberInt" : "0" } }, { "_id" : "DoG", "a" : { "b" : "DoG" }, "depth" : { "$numberInt" : "0" } }, { "_id" : "Dog", "a" : { "b" : "Dog" }, "depth" : { "$numberInt" : "0" } }, { "_id" : "dOg", "a" : { "b" : "dOg" }, "depth" : { "$numberInt" : "0" } }, { "_id" : "dog", "a" : { "b" : "dog" }, "depth" : { "$numberInt" : "0" } } ] }
(7 rows)

SELECT document FROM bson_aggregation_pipeline('db',
    '{ "aggregate": "ci_search7", "pipeline": [ { "$graphLookup": { "from": "ci_search8", "startWith": "$pet", "connectFromField": "name", "connectToField": "_id", "as": "destinations", "depthField": "depth" } } ],  "collation": { "locale": "en", "strength" : 1} }');
                                                                                             document                                                                                              
---------------------------------------------------------------------
 { "_id" : "alice", "pet" : "dog", "destinations" : [ { "_id" : "DOG", "name" : "DOG", "depth" : { "$numberInt" : "0" } }, { "_id" : "dog", "name" : "dog", "depth" : { "$numberInt" : "0" } } ] }
 { "_id" : "bob", "pet" : "cat", "destinations" : [ { "_id" : "CAT", "name" : "CAT", "depth" : { "$numberInt" : "0" } }, { "_id" : "cAT", "name" : "cAT", "depth" : { "$numberInt" : "0" } } ] }
(2 rows)

SELECT document FROM bson_aggregation_pipeline('db',
    '{ "aggregate": "ci_search7", "pipeline": [ { "$graphLookup": { "from": "ci_search8", "startWith": "$pet", "connectFromField": "name", "connectToField": "_id", "as": "destinations", "depthField": "depth" } } ],  "collation": { "locale": "en", "strength" : 2} }');
                                                                                             document                                                                                              
---------------------------------------------------------------------
 { "_id" : "alice", "pet" : "dog", "destinations" : [ { "_id" : "DOG", "name" : "DOG", "depth" : { "$numberInt" : "0" } }, { "_id" : "dog", "name" : "dog", "depth" : { "$numberInt" : "0" } } ] }
 { "_id" : "bob", "pet" : "cat", "destinations" : [ { "_id" : "CAT", "name" : "CAT", "depth" : { "$numberInt" : "0" } }, { "_id" : "cAT", "name" : "cAT", "depth" : { "$numberInt" : "0" } } ] }
(2 rows)

SELECT document FROM bson_aggregation_pipeline('db',
    '{ "aggregate": "ci_search7", "pipeline": [ { "$graphLookup": { "from": "ci_search8", "startWith": "$pet", "connectFromField": "name", "connectToField": "_id", "as": "destinations", "depthField": "depth" } } ],  "collation": { "locale": "fr", "strength" : 1, "alternate": "shifted" } }');
                                                                                             document                                                                                              
---------------------------------------------------------------------
 { "_id" : "alice", "pet" : "dog", "destinations" : [ { "_id" : "DOG", "name" : "DOG", "depth" : { "$numberInt" : "0" } }, { "_id" : "dog", "name" : "dog", "depth" : { "$numberInt" : "0" } } ] }
 { "_id" : "bob", "pet" : "cat", "destinations" : [ { "_id" : "CAT", "name" : "CAT", "depth" : { "$numberInt" : "0" } }, { "_id" : "cAT", "name" : "cAT", "depth" : { "$numberInt" : "0" } } ] }
(2 rows)

SELECT document FROM bson_aggregation_pipeline('db',
    '{ "aggregate": "ci_search7", "pipeline": [ { "$graphLookup": { "from": "ci_search8", "startWith": "$pet", "connectFromField": "name", "connectToField": "_id", "as": "destinations", "depthField": "depth" } } ],  "collation": { "locale": "hi", "strength" : 2, "caseFirst": "lower" } }');
                                                                                             document                                                                                              
---------------------------------------------------------------------
 { "_id" : "alice", "pet" : "dog", "destinations" : [ { "_id" : "DOG", "name" : "DOG", "depth" : { "$numberInt" : "0" } }, { "_id" : "dog", "name" : "dog", "depth" : { "$numberInt" : "0" } } ] }
 { "_id" : "bob", "pet" : "cat", "destinations" : [ { "_id" : "CAT", "name" : "CAT", "depth" : { "$numberInt" : "0" } }, { "_id" : "cAT", "name" : "cAT", "depth" : { "$numberInt" : "0" } } ] }
(2 rows)

--- $graphLookup on sharded collection: unsupported
SELECT documentdb_api.shard_collection('db', 'ci_search7', '{ "_id": "hashed" }', false);
 shard_collection 
---------------------------------------------------------------------
 
(1 row)

SELECT documentdb_api.shard_collection('db', 'ci_search8', '{ "_id": "hashed" }', false);
 shard_collection 
---------------------------------------------------------------------
 
(1 row)

SELECT document FROM bson_aggregation_pipeline('db',
    '{ "aggregate": "ci_search7", "pipeline": [ { "$graphLookup": { "from": "ci_search8", "startWith": "$pet", "connectFromField": "name", "connectToField": "_id", "as": "destinations", "depthField": "depth" } } ],  "collation": { "locale": "fr", "strength" : 1, "alternate": "shifted" } }');
ERROR:  $graphLookup with 'from' on a sharded collection is not supported
-- unsupported $merge 
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "ci_search6", "pipeline": [{"$merge" : { "into": "ci_search9", "whenMatched" : "replace" }} ], "collation": { "locale": "en", "strength" : 1} }');
ERROR:  collation is not supported with $merge yet
SELECT documentdb_api.shard_collection('db', 'ci_search6', '{ "_id": "hashed" }', false);
 shard_collection 
---------------------------------------------------------------------
 
(1 row)

-- lookup with id join (collation aware)
SELECT document FROM bson_aggregation_pipeline('db', 
    '{ "aggregate": "ci_search6", "pipeline": [ { "$lookup": { "from": "ci_search6", "as": "matched_docs", "localField": "_id", "foreignField": "_id", "pipeline": [ { "$match": { "$or" : [ { "a.b": "cat" }, { "a.b": "dog" } ] } } ] } } ], "cursor": {}, "collation": { "locale": "en", "strength" : 1}  }');
                                                                                                                                    document                                                                                                                                     
---------------------------------------------------------------------
 { "_id" : "Dog", "a" : { "b" : "Dog" }, "matched_docs" : [ { "_id" : "Dog", "a" : { "b" : "Dog" } }, { "_id" : "DOG", "a" : { "b" : "DOG" } }, { "_id" : "dog", "a" : { "b" : "dog" } }, { "_id" : "DoG", "a" : { "b" : "DoG" } }, { "_id" : "dOg", "a" : { "b" : "dOg" } } ] }
 { "_id" : "DOG", "a" : { "b" : "DOG" }, "matched_docs" : [ { "_id" : "Dog", "a" : { "b" : "Dog" } }, { "_id" : "DOG", "a" : { "b" : "DOG" } }, { "_id" : "dog", "a" : { "b" : "dog" } }, { "_id" : "DoG", "a" : { "b" : "DoG" } }, { "_id" : "dOg", "a" : { "b" : "dOg" } } ] }
 { "_id" : "dog", "a" : { "b" : "dog" }, "matched_docs" : [ { "_id" : "Dog", "a" : { "b" : "Dog" } }, { "_id" : "DOG", "a" : { "b" : "DOG" } }, { "_id" : "dog", "a" : { "b" : "dog" } }, { "_id" : "DoG", "a" : { "b" : "DoG" } }, { "_id" : "dOg", "a" : { "b" : "dOg" } } ] }
 { "_id" : "DoG", "a" : { "b" : "DoG" }, "matched_docs" : [ { "_id" : "Dog", "a" : { "b" : "Dog" } }, { "_id" : "DOG", "a" : { "b" : "DOG" } }, { "_id" : "dog", "a" : { "b" : "dog" } }, { "_id" : "DoG", "a" : { "b" : "DoG" } }, { "_id" : "dOg", "a" : { "b" : "dOg" } } ] }
 { "_id" : "dOg", "a" : { "b" : "dOg" }, "matched_docs" : [ { "_id" : "Dog", "a" : { "b" : "Dog" } }, { "_id" : "DOG", "a" : { "b" : "DOG" } }, { "_id" : "dog", "a" : { "b" : "dog" } }, { "_id" : "DoG", "a" : { "b" : "DoG" } }, { "_id" : "dOg", "a" : { "b" : "dOg" } } ] }
 { "_id" : "Cat", "a" : { "b" : "Cat" }, "matched_docs" : [ { "_id" : "Cat", "a" : { "b" : "Cat" } }, { "_id" : "cAT", "a" : { "b" : "cAT" } } ] }
 { "_id" : "cAT", "a" : { "b" : "cAT" }, "matched_docs" : [ { "_id" : "Cat", "a" : { "b" : "Cat" } }, { "_id" : "cAT", "a" : { "b" : "cAT" } } ] }
(7 rows)

BEGIN;
SET LOCAL documentdb_core.enablecollation TO on;
EXPLAIN (VERBOSE ON, COSTS OFF) SELECT document FROM bson_aggregation_pipeline('db', 
    '{ "aggregate": "ci_search6", "pipeline": [ { "$lookup": { "from": "ci_search6", "as": "matched_docs", "localField": "_id", "foreignField": "_id", "pipeline": [ { "$match": { "$or" : [ { "a.b": "cat" }, { "a.b": "dog" } ] } } ] } } ], "cursor": {}, "collation": { "locale": "en", "strength" : 1}  }');

---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Output: remote_scan.document
   ->  Distributed Subplan 337_1
         ->  Custom Scan (Citus Adaptive)
               Output: remote_scan.document, remote_scan.lookup_filter
               Task Count: 8
               Tasks Shown: One of 8
               ->  Task
                     Query: SELECT document, documentdb_api_internal.bson_dollar_lookup_extract_filter_expression(document, '{ "_id" : "_id", "collation" : "en-u-ks-level1" }'::documentdb_core.bson) AS lookup_filter FROM documentdb_data.documents_7995_7990168 collection WHERE true
                     Node: host=localhost port=58070 dbname=regression
                     ->  Seq Scan on documentdb_data.documents_7995_7990168 collection
                           Output: document, documentdb_api_internal.bson_dollar_lookup_extract_filter_expression(document, '{ "_id" : "_id", "collation" : "en-u-ks-level1" }'::documentdb_core.bson)
   ->  Distributed Subplan 337_2
         ->  Custom Scan (Citus Adaptive)
               Output: remote_scan.document
               Task Count: 8
               Tasks Shown: One of 8
               ->  Task
                     Query: SELECT document FROM documentdb_data.documents_7995_7990168 collection_0_1 WHERE documentdb_api_catalog.bson_dollar_in(document, '{ "a.b" : [ "cat", "dog" ], "collation" : "en-u-ks-level1" }'::documentdb_core.bson)
                     Node: host=localhost port=58070 dbname=regression
                     ->  Seq Scan on documentdb_data.documents_7995_7990168 collection_0_1
                           Output: document
                           Filter: (collection_0_1.document OPERATOR(documentdb_api_catalog.@*=) '{ "a.b" : [ "cat", "dog" ], "collation" : "en-u-ks-level1" }'::documentdb_core.bson)
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Query: SELECT documentdb_api_internal.bson_dollar_merge_documents(lookup_stage_1.document, "lookupRight_stage_1".document) AS document FROM ((SELECT intermediate_result.document, intermediate_result.lookup_filter FROM read_intermediate_result('337_1'::text, 'binary'::citus_copy_format) intermediate_result(document documentdb_core.bson, lookup_filter documentdb_core.bson)) lookup_stage_1 LEFT JOIN LATERAL (SELECT COALESCE(documentdb_api_catalog.bson_array_agg(lookup_right_query_stage_0.document, 'matched_docs'::text), '{ "matched_docs" : [  ] }'::documentdb_core.bson) AS document FROM (SELECT intermediate_result.document FROM read_intermediate_result('337_2'::text, 'binary'::citus_copy_format) intermediate_result(document documentdb_core.bson)) lookup_right_query_stage_0 WHERE documentdb_api_internal.bson_dollar_lookup_join_filter(lookup_right_query_stage_0.document, lookup_stage_1.lookup_filter, '_id'::text)) "lookupRight_stage_1" ON (true))
         Node: host=localhost port=58070 dbname=regression
         ->  Nested Loop Left Join
               Output: documentdb_api_internal.bson_dollar_merge_documents(intermediate_result.document, (COALESCE(documentdb_api_catalog.bson_array_agg(intermediate_result_1.document, 'matched_docs'::text), '{ "matched_docs" : [  ] }'::documentdb_core.bson)))
               ->  Function Scan on pg_catalog.read_intermediate_result intermediate_result
                     Output: intermediate_result.document, intermediate_result.lookup_filter
                     Function Call: read_intermediate_result('337_1'::text, 'binary'::citus_copy_format)
               ->  Aggregate
                     Output: COALESCE(documentdb_api_catalog.bson_array_agg(intermediate_result_1.document, 'matched_docs'::text), '{ "matched_docs" : [  ] }'::documentdb_core.bson)
                     ->  Function Scan on pg_catalog.read_intermediate_result intermediate_result_1
                           Output: intermediate_result_1.document
                           Function Call: read_intermediate_result('337_2'::text, 'binary'::citus_copy_format)
                           Filter: documentdb_api_internal.bson_dollar_lookup_join_filter(intermediate_result_1.document, intermediate_result.lookup_filter, '_id'::text)
(39 rows)

END;
-- lookup with non-id join (collation aware)
SELECT document FROM bson_aggregation_pipeline('db', 
    '{ "aggregate": "ci_search6", "pipeline": [ { "$lookup": { "from": "ci_search6", "as": "matched_docs", "localField": "a.b", "foreignField": "a.b", "pipeline": [ { "$match": { "$or" : [ { "a.b": "cat" }, { "a.b": "dog" } ] } } ] } } ], "cursor": {}, "collation": { "locale": "en", "strength" : 1}  }');
                                                                                                                                    document                                                                                                                                     
---------------------------------------------------------------------
 { "_id" : "Dog", "a" : { "b" : "Dog" }, "matched_docs" : [ { "_id" : "Dog", "a" : { "b" : "Dog" } }, { "_id" : "DOG", "a" : { "b" : "DOG" } }, { "_id" : "dog", "a" : { "b" : "dog" } }, { "_id" : "DoG", "a" : { "b" : "DoG" } }, { "_id" : "dOg", "a" : { "b" : "dOg" } } ] }
 { "_id" : "DOG", "a" : { "b" : "DOG" }, "matched_docs" : [ { "_id" : "Dog", "a" : { "b" : "Dog" } }, { "_id" : "DOG", "a" : { "b" : "DOG" } }, { "_id" : "dog", "a" : { "b" : "dog" } }, { "_id" : "DoG", "a" : { "b" : "DoG" } }, { "_id" : "dOg", "a" : { "b" : "dOg" } } ] }
 { "_id" : "dog", "a" : { "b" : "dog" }, "matched_docs" : [ { "_id" : "Dog", "a" : { "b" : "Dog" } }, { "_id" : "DOG", "a" : { "b" : "DOG" } }, { "_id" : "dog", "a" : { "b" : "dog" } }, { "_id" : "DoG", "a" : { "b" : "DoG" } }, { "_id" : "dOg", "a" : { "b" : "dOg" } } ] }
 { "_id" : "DoG", "a" : { "b" : "DoG" }, "matched_docs" : [ { "_id" : "Dog", "a" : { "b" : "Dog" } }, { "_id" : "DOG", "a" : { "b" : "DOG" } }, { "_id" : "dog", "a" : { "b" : "dog" } }, { "_id" : "DoG", "a" : { "b" : "DoG" } }, { "_id" : "dOg", "a" : { "b" : "dOg" } } ] }
 { "_id" : "dOg", "a" : { "b" : "dOg" }, "matched_docs" : [ { "_id" : "Dog", "a" : { "b" : "Dog" } }, { "_id" : "DOG", "a" : { "b" : "DOG" } }, { "_id" : "dog", "a" : { "b" : "dog" } }, { "_id" : "DoG", "a" : { "b" : "DoG" } }, { "_id" : "dOg", "a" : { "b" : "dOg" } } ] }
 { "_id" : "Cat", "a" : { "b" : "Cat" }, "matched_docs" : [ { "_id" : "Cat", "a" : { "b" : "Cat" } }, { "_id" : "cAT", "a" : { "b" : "cAT" } } ] }
 { "_id" : "cAT", "a" : { "b" : "cAT" }, "matched_docs" : [ { "_id" : "Cat", "a" : { "b" : "Cat" } }, { "_id" : "cAT", "a" : { "b" : "cAT" } } ] }
(7 rows)

BEGIN;
SET LOCAL documentdb_core.enablecollation TO on;
EXPLAIN (VERBOSE ON, COSTS OFF) SELECT document FROM bson_aggregation_pipeline('db', 
    '{ "aggregate": "ci_search6", "pipeline": [ { "$lookup": { "from": "ci_search6", "as": "matched_docs", "localField": "a.b", "foreignField": "a.b", "pipeline": [ { "$match": { "$or" : [ { "a.b": "cat" }, { "a.b": "dog" } ] } } ] } } ], "cursor": {}, "collation": { "locale": "en", "strength" : 1}  }');

---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Output: remote_scan.document
   ->  Distributed Subplan 345_1
         ->  Custom Scan (Citus Adaptive)
               Output: remote_scan.document, remote_scan.lookup_filter
               Task Count: 8
               Tasks Shown: One of 8
               ->  Task
                     Query: SELECT document, documentdb_api_internal.bson_dollar_lookup_extract_filter_expression(document, '{ "a.b" : "a.b", "collation" : "en-u-ks-level1" }'::documentdb_core.bson) AS lookup_filter FROM documentdb_data.documents_7995_7990168 collection WHERE true
                     Node: host=localhost port=58070 dbname=regression
                     ->  Seq Scan on documentdb_data.documents_7995_7990168 collection
                           Output: document, documentdb_api_internal.bson_dollar_lookup_extract_filter_expression(document, '{ "a.b" : "a.b", "collation" : "en-u-ks-level1" }'::documentdb_core.bson)
   ->  Distributed Subplan 345_2
         ->  Custom Scan (Citus Adaptive)
               Output: remote_scan.document
               Task Count: 8
               Tasks Shown: One of 8
               ->  Task
                     Query: SELECT document FROM documentdb_data.documents_7995_7990168 collection_0_1 WHERE documentdb_api_catalog.bson_dollar_in(document, '{ "a.b" : [ "cat", "dog" ], "collation" : "en-u-ks-level1" }'::documentdb_core.bson)
                     Node: host=localhost port=58070 dbname=regression
                     ->  Seq Scan on documentdb_data.documents_7995_7990168 collection_0_1
                           Output: document
                           Filter: (collection_0_1.document OPERATOR(documentdb_api_catalog.@*=) '{ "a.b" : [ "cat", "dog" ], "collation" : "en-u-ks-level1" }'::documentdb_core.bson)
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Query: SELECT documentdb_api_internal.bson_dollar_merge_documents(lookup_stage_1.document, "lookupRight_stage_1".document) AS document FROM ((SELECT intermediate_result.document, intermediate_result.lookup_filter FROM read_intermediate_result('345_1'::text, 'binary'::citus_copy_format) intermediate_result(document documentdb_core.bson, lookup_filter documentdb_core.bson)) lookup_stage_1 LEFT JOIN LATERAL (SELECT COALESCE(documentdb_api_catalog.bson_array_agg(lookup_right_query_stage_0.document, 'matched_docs'::text), '{ "matched_docs" : [  ] }'::documentdb_core.bson) AS document FROM (SELECT intermediate_result.document FROM read_intermediate_result('345_2'::text, 'binary'::citus_copy_format) intermediate_result(document documentdb_core.bson)) lookup_right_query_stage_0 WHERE documentdb_api_internal.bson_dollar_lookup_join_filter(lookup_right_query_stage_0.document, lookup_stage_1.lookup_filter, 'a.b'::text)) "lookupRight_stage_1" ON (true))
         Node: host=localhost port=58070 dbname=regression
         ->  Nested Loop Left Join
               Output: documentdb_api_internal.bson_dollar_merge_documents(intermediate_result.document, (COALESCE(documentdb_api_catalog.bson_array_agg(intermediate_result_1.document, 'matched_docs'::text), '{ "matched_docs" : [  ] }'::documentdb_core.bson)))
               ->  Function Scan on pg_catalog.read_intermediate_result intermediate_result
                     Output: intermediate_result.document, intermediate_result.lookup_filter
                     Function Call: read_intermediate_result('345_1'::text, 'binary'::citus_copy_format)
               ->  Aggregate
                     Output: COALESCE(documentdb_api_catalog.bson_array_agg(intermediate_result_1.document, 'matched_docs'::text), '{ "matched_docs" : [  ] }'::documentdb_core.bson)
                     ->  Function Scan on pg_catalog.read_intermediate_result intermediate_result_1
                           Output: intermediate_result_1.document
                           Function Call: read_intermediate_result('345_2'::text, 'binary'::citus_copy_format)
                           Filter: documentdb_api_internal.bson_dollar_lookup_join_filter(intermediate_result_1.document, intermediate_result.lookup_filter, 'a.b'::text)
(39 rows)

END;
-- $facet and $unionwith
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "ci_search6", "pipeline": [ { "$facet": { "a" : [ { "$match": { "a.b": "cat" } }, { "$count": "catCount" } ], "b" : [ { "$match": { "a.b": "dog" } }, { "$count": "dogCount" } ]  } } ], "cursor": {}, "collation": { "locale": "en", "strength" : 1}}');
                                                 document                                                 
---------------------------------------------------------------------
 { "a" : [ { "catCount" : { "$numberInt" : "2" } } ], "b" : [ { "dogCount" : { "$numberInt" : "5" } } ] }
(1 row)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "ci_search6", "pipeline": [ { "$unionWith": { "coll": "ci_search6", "pipeline" : [ { "$match": { "a.b": "cat" }}] } }], "cursor": {}, "collation": { "locale": "en", "strength" : 1} }');
                 document                 
---------------------------------------------------------------------
 { "_id" : "Dog", "a" : { "b" : "Dog" } }
 { "_id" : "DOG", "a" : { "b" : "DOG" } }
 { "_id" : "dog", "a" : { "b" : "dog" } }
 { "_id" : "DoG", "a" : { "b" : "DoG" } }
 { "_id" : "dOg", "a" : { "b" : "dOg" } }
 { "_id" : "Cat", "a" : { "b" : "Cat" } }
 { "_id" : "cAT", "a" : { "b" : "cAT" } }
 { "_id" : "Cat", "a" : { "b" : "Cat" } }
 { "_id" : "cAT", "a" : { "b" : "cAT" } }
(9 rows)

-- unsupported $merge
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "ci_search6", "pipeline": [{"$merge" : { "into": "ci_search7", "whenMatched" : "replace" }} ], "collation": { "locale": "en", "strength" : 1} }');
ERROR:  collation is not supported with $merge yet
-- $expr
SELECT documentdb_api.insert_one('db', 'coll_agg_proj', '{ "_id": 1, "a": "cat" }');
NOTICE:  creating collection
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'coll_agg_proj', '{ "_id": 2, "a": "dog" }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'coll_agg_proj', '{ "_id": 3, "a": "cAt" }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'coll_agg_proj', '{ "_id": 4, "a": "dOg" }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'coll_agg_proj', '{ "_id": "hen", "a": "hen" }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'coll_agg_proj', '{ "_id": "bat", "a": "bat" }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT document FROM bson_aggregation_find('db', '{ "find": "coll_agg_proj", "filter": { "$expr": {"$eq": ["$a", "CAT"]} }, "sort": { "_id": 1 }, "skip": 0, "collation": { "locale": "en", "strength" : 1 } }');
                    document                     
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat" }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt" }
(2 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "coll_agg_proj", "filter": { "$expr": {"$eq": ["$a", "CAT"]} }, "sort": { "_id": 1 }, "skip": 0, "collation": { "locale": "hi", "strength" : 2 } }');
                    document                     
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat" }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt" }
(2 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "coll_agg_proj", "filter": { "$expr": {"$ne": ["$a", "CAT"]} }, "sort": { "_id": 1 }, "skip": 0, "collation": { "locale": "fr", "strength" : 1 } }');
                    document                     
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "2" }, "a" : "dog" }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg" }
 { "_id" : "bat", "a" : "bat" }
 { "_id" : "hen", "a" : "hen" }
(4 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "coll_agg_proj", "filter": { "$expr": {"$lte": ["$a", "CAT"]} }, "sort": { "_id": 1 }, "skip": 0, "collation": { "locale": "en", "strength" : 1 } }');
                    document                     
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat" }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt" }
 { "_id" : "bat", "a" : "bat" }
(3 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "coll_agg_proj", "filter": { "$expr": {"$gte": ["$a", "CAT"]} }, "sort": { "_id": 1 }, "skip": 0, "collation": { "locale": "fr", "strength" : 3 } }');
                    document                     
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "2" }, "a" : "dog" }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg" }
 { "_id" : "hen", "a" : "hen" }
(3 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "coll_agg_proj", "filter": { "$expr": {"$gt": ["$a", "CAT"]} }, "sort": { "_id": 1 }, "skip": 0, "collation": { "locale": "fr", "strength" : 1 } }');
                    document                     
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "2" }, "a" : "dog" }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg" }
 { "_id" : "hen", "a" : "hen" }
(3 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "coll_agg_proj", "filter": { "$expr": { "$or": [{"$gte": [ "$a", "DOG" ]}, {"$gte": [ "$a", "CAT" ]}] } }, "sort": { "_id": 1 }, "skip": 0, "collation": { "locale": "fr", "strength" : 1 } }');
                    document                     
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat" }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog" }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt" }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg" }
 { "_id" : "hen", "a" : "hen" }
(5 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "coll_agg_proj", "filter": { "$expr": { "$and": [{"$lte": [ "$a", "DOG" ]}, {"$lte": [ "$a", "CAT" ]}] } }, "sort": { "_id": 1 }, "skip": 0, "collation": { "locale": "fr", "strength" : 2 } }');
                    document                     
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat" }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt" }
 { "_id" : "bat", "a" : "bat" }
(3 rows)

-- support for $filter
SELECT document FROM bson_aggregation_find('db', '{ "find": "coll_agg_proj", "filter": { "$expr": { "$eq": [["$a"], { "$filter": { "input": ["$a"], "as": "item", "cond": { "$eq": [ "$$item", "CAT" ] } } } ] } }, "sort": { "_id": 1 }, "collation": { "locale": "en", "strength": 1 } }');
                    document                     
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat" }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt" }
(2 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "coll_agg_proj", "filter": { "$expr": { "$eq": [["$a"], { "$filter": { "input": ["$a"], "as": "item", "cond": { "$eq": [ "$$item", "CAT" ] } } } ] } }, "sort": { "_id": 1 }, "collation": { "locale": "en", "strength": 3 } }');
 document 
---------------------------------------------------------------------
(0 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "coll_agg_proj", "filter": { "$expr": { "$eq": [["$a"], { "$filter": { "input": ["$a"], "as": "item", "cond": { "$ne": [ "$$item", "CAT" ] } } } ] } }, "sort": { "_id": 1 }, "collation": { "locale": "en", "strength": 2 } }');
                    document                     
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "2" }, "a" : "dog" }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg" }
 { "_id" : "bat", "a" : "bat" }
 { "_id" : "hen", "a" : "hen" }
(4 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "coll_agg_proj", "filter": { "$expr": { "$eq": [["$a"], { "$filter": { "input": ["$a"], "as": "item", "cond": { "$or": [{"$gte": [ "$$item", "DOG" ]}, {"$gte": [ "$$item", "CAT" ]}] } } } ] } }, "sort": { "_id": 1 }, "collation": { "locale": "en", "strength": 1 } }');
                    document                     
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat" }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog" }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt" }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg" }
 { "_id" : "hen", "a" : "hen" }
(5 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "coll_agg_proj", "filter": { "$expr": { "$eq": [["$a"], { "$filter": { "input": ["$a"], "as": "item", "cond": { "$and": [{"$gte": [ "$$item", "DOG" ]}, {"$gte": [ "$$item", "CAT" ]}] } } } ] } }, "sort": { "_id": 1 }, "collation": { "locale": "en", "strength": 1 } }');
                    document                     
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "2" }, "a" : "dog" }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg" }
 { "_id" : "hen", "a" : "hen" }
(3 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "coll_agg_proj", "filter": { "$expr": { "$eq": [["$_id"], { "$filter": { "input": ["$_id"], "as": "item", "cond": { "$and": [{"$gte": [ "$$item", "HEN" ]}, {"$gte": [ "$$item", "BAT" ]}] } } } ] } }, "sort": { "_id": 1 }, "collation": { "locale": "en", "strength": 1 } }');
            document            
---------------------------------------------------------------------
 { "_id" : "hen", "a" : "hen" }
(1 row)

-- support for $in
SELECT document FROM bson_aggregation_find('db', '{ "find": "coll_agg_proj", "filter": { "$expr": {"$in": ["$a", ["CAT", "DOG"]]} }, "sort": { "_id": 1 }, "skip": 0, "collation": { "locale": "fr", "strength" : 1 } }');
                    document                     
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat" }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog" }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt" }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg" }
(4 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "coll_agg_proj", "filter": { "$expr": {"$in": ["$a", ["CAT", "DOG"]]} }, "sort": { "_id": 1 }, "skip": 0, "collation": { "locale": "en", "strength" : 2 } }');
                    document                     
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat" }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog" }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt" }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg" }
(4 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "coll_agg_proj", "filter": { "$expr": {"$in": ["$a", ["CAT", "DOG"]]} }, "sort": { "_id": 1 }, "skip": 0, "collation": { "locale": "en", "strength" : 3 } }');
 document 
---------------------------------------------------------------------
(0 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "coll_agg_proj", "filter": { "$expr": {"$in": ["$_id", ["HEN", "BAT"]]} }, "sort": { "_id": 1 }, "skip": 0, "collation": { "locale": "en", "strength" : 1 } }');
            document            
---------------------------------------------------------------------
 { "_id" : "bat", "a" : "bat" }
 { "_id" : "hen", "a" : "hen" }
(2 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "coll_agg_proj", "filter": { "$expr": {"$in": ["$_id", ["HEN", "BAT"]]} }, "sort": { "_id": 1 }, "skip": 0, "collation": { "locale": "en", "strength" : 3 } }');
 document 
---------------------------------------------------------------------
(0 rows)

-- $addFields
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_agg_proj", "pipeline": [ { "$addFields": { "newField": { "$ne": ["$a", "CAT"] } } } ], "cursor": {}, "collation": { "locale": "fr", "strength" : 1} }');
                              document                               
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat", "newField" : false }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog", "newField" : true }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt", "newField" : false }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg", "newField" : true }
 { "_id" : "hen", "a" : "hen", "newField" : true }
 { "_id" : "bat", "a" : "bat", "newField" : true }
(6 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_agg_proj", "pipeline": [ { "$addFields": { "newField": { "$lte": ["$a", "CAT"] } } } ], "cursor": {}, "collation": { "locale": "fr", "strength" : 1} }');
                              document                               
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat", "newField" : true }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog", "newField" : false }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt", "newField" : true }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg", "newField" : false }
 { "_id" : "hen", "a" : "hen", "newField" : false }
 { "_id" : "bat", "a" : "bat", "newField" : true }
(6 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_agg_proj", "pipeline": [ { "$addFields": { "newField": { "$gte": ["$a", "CAT"] } } } ], "cursor": {}, "collation": { "locale": "fr", "strength" : 3} }');
                              document                               
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat", "newField" : false }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog", "newField" : true }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt", "newField" : false }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg", "newField" : true }
 { "_id" : "hen", "a" : "hen", "newField" : true }
 { "_id" : "bat", "a" : "bat", "newField" : false }
(6 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_agg_proj", "pipeline": [ { "$addFields": { "newField": { "$gte": ["$a", "CAT"] } } } ], "cursor": {}, "collation": { "locale": "fr", "strength" : 1} }');
                              document                              
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat", "newField" : true }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog", "newField" : true }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt", "newField" : true }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg", "newField" : true }
 { "_id" : "hen", "a" : "hen", "newField" : true }
 { "_id" : "bat", "a" : "bat", "newField" : false }
(6 rows)

-- $set
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_agg_proj", "pipeline": [ { "$set": { "newField": { "$ne": ["$a", "CAT"] } } } ], "cursor": {}, "collation": { "locale": "fr", "strength" : 1} }');
                              document                               
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat", "newField" : false }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog", "newField" : true }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt", "newField" : false }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg", "newField" : true }
 { "_id" : "hen", "a" : "hen", "newField" : true }
 { "_id" : "bat", "a" : "bat", "newField" : true }
(6 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_agg_proj", "pipeline": [ { "$set": { "newField": { "$lte": ["$a", "CAT"] } } } ], "cursor": {}, "collation": { "locale": "fr", "strength" : 1} }');
                              document                               
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat", "newField" : true }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog", "newField" : false }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt", "newField" : true }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg", "newField" : false }
 { "_id" : "hen", "a" : "hen", "newField" : false }
 { "_id" : "bat", "a" : "bat", "newField" : true }
(6 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_agg_proj", "pipeline": [ { "$set": { "newField": { "$gte": ["$a", "CAT"] } } } ], "cursor": {}, "collation": { "locale": "fr", "strength" : 3} }');
                              document                               
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat", "newField" : false }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog", "newField" : true }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt", "newField" : false }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg", "newField" : true }
 { "_id" : "hen", "a" : "hen", "newField" : true }
 { "_id" : "bat", "a" : "bat", "newField" : false }
(6 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_agg_proj", "pipeline": [ { "$set": { "newField": { "$gte": ["$a", "CAT"] } } } ], "cursor": {}, "collation": { "locale": "fr", "strength" : 1} }');
                              document                              
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat", "newField" : true }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog", "newField" : true }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt", "newField" : true }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg", "newField" : true }
 { "_id" : "hen", "a" : "hen", "newField" : true }
 { "_id" : "bat", "a" : "bat", "newField" : false }
(6 rows)

-- project
SELECT documentdb_api_internal.bson_dollar_project(document, '{ "newField": { "$eq": ["$a", "CAT"] } }', NULL, 'en-u-ks-level1') FROM documentdb_api.collection('db', 'coll_agg_proj');
                  bson_dollar_project                   
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "newField" : true }
 { "_id" : { "$numberInt" : "2" }, "newField" : false }
 { "_id" : { "$numberInt" : "3" }, "newField" : true }
 { "_id" : { "$numberInt" : "4" }, "newField" : false }
 { "_id" : "hen", "newField" : false }
 { "_id" : "bat", "newField" : false }
(6 rows)

SELECT documentdb_api_internal.bson_dollar_project(document, '{ "newField": { "$eq": ["$a", "DOG"] } }', NULL, 'en-u-ks-level1') FROM documentdb_api.collection('db', 'coll_agg_proj');
                  bson_dollar_project                   
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "newField" : false }
 { "_id" : { "$numberInt" : "2" }, "newField" : true }
 { "_id" : { "$numberInt" : "3" }, "newField" : false }
 { "_id" : { "$numberInt" : "4" }, "newField" : true }
 { "_id" : "hen", "newField" : false }
 { "_id" : "bat", "newField" : false }
(6 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_agg_proj", "pipeline": [ { "$project": { "a": 1, "newField": { "$ne": ["$a", "CAT"] } } } ], "cursor": {}, "collation": { "locale": "fr", "strength" : 1} }');
                              document                               
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat", "newField" : false }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog", "newField" : true }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt", "newField" : false }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg", "newField" : true }
 { "_id" : "hen", "a" : "hen", "newField" : true }
 { "_id" : "bat", "a" : "bat", "newField" : true }
(6 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_agg_proj", "pipeline": [ { "$project": { "a": 1, "newField": { "$lte": ["$a", "CAT"] } } } ], "cursor": {}, "collation": { "locale": "fr", "strength" : 1} }');
                              document                               
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat", "newField" : true }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog", "newField" : false }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt", "newField" : true }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg", "newField" : false }
 { "_id" : "hen", "a" : "hen", "newField" : false }
 { "_id" : "bat", "a" : "bat", "newField" : true }
(6 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_agg_proj", "pipeline": [ { "$project": { "a": 1, "newField": { "$gte": ["$a", "CAT"] } } } ], "cursor": {}, "collation": { "locale": "fr", "strength" : 3} }');
                              document                               
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat", "newField" : false }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog", "newField" : true }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt", "newField" : false }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg", "newField" : true }
 { "_id" : "hen", "a" : "hen", "newField" : true }
 { "_id" : "bat", "a" : "bat", "newField" : false }
(6 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_agg_proj", "pipeline": [ { "$project": { "a": 1, "newField": { "$gte": ["$a", "CAT"] } } } ], "cursor": {}, "collation": { "locale": "fr", "strength" : 1} }');
                              document                              
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat", "newField" : true }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog", "newField" : true }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt", "newField" : true }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg", "newField" : true }
 { "_id" : "hen", "a" : "hen", "newField" : true }
 { "_id" : "bat", "a" : "bat", "newField" : false }
(6 rows)

-- replaceRoot
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_agg_proj", "pipeline": [ { "$replaceRoot": { "newRoot": { "a": "$a", "newField": { "$eq": ["$a", "CAT"] } } } } ], "cursor": {}, "collation": { "locale": "en", "strength" : 1} }');
              document               
---------------------------------------------------------------------
 { "a" : "cat", "newField" : true }
 { "a" : "dog", "newField" : false }
 { "a" : "cAt", "newField" : true }
 { "a" : "dOg", "newField" : false }
 { "a" : "hen", "newField" : false }
 { "a" : "bat", "newField" : false }
(6 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_agg_proj", "pipeline": [ { "$replaceRoot": { "newRoot": { "a": "$a", "newField": { "$ne": ["$a", "CAT"] } } } } ], "cursor": {}, "collation": { "locale": "en", "strength" : 3} }');
              document              
---------------------------------------------------------------------
 { "a" : "cat", "newField" : true }
 { "a" : "dog", "newField" : true }
 { "a" : "cAt", "newField" : true }
 { "a" : "dOg", "newField" : true }
 { "a" : "hen", "newField" : true }
 { "a" : "bat", "newField" : true }
(6 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_agg_proj", "pipeline": [ { "$replaceRoot": { "newRoot": { "a": "$a", "newField": { "$lte": ["$a", "DoG"] } } } } ], "cursor": {}, "collation": { "locale": "fr", "strength" : 1} }');
              document               
---------------------------------------------------------------------
 { "a" : "cat", "newField" : true }
 { "a" : "dog", "newField" : true }
 { "a" : "cAt", "newField" : true }
 { "a" : "dOg", "newField" : true }
 { "a" : "hen", "newField" : false }
 { "a" : "bat", "newField" : true }
(6 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_agg_proj", "pipeline": [ { "$replaceRoot": { "newRoot": { "a": "$a", "newField": { "$gte": ["$a", "doG"] } } } } ], "cursor": {}, "collation": { "locale": "en", "strength" : 3} }');
              document               
---------------------------------------------------------------------
 { "a" : "cat", "newField" : false }
 { "a" : "dog", "newField" : false }
 { "a" : "cAt", "newField" : false }
 { "a" : "dOg", "newField" : true }
 { "a" : "hen", "newField" : true }
 { "a" : "bat", "newField" : false }
(6 rows)

-- find
SELECT document FROM bson_aggregation_find('db', '{ "find": "coll_agg_proj", "projection": { "a": 1, "newField": { "$eq": ["$a", "CAT"] } }, "sort": { "_id": 1 }, "skip": 0, "limit": 5, "collation": { "locale": "en", "strength" : 1} }');
                              document                               
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat", "newField" : true }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog", "newField" : false }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt", "newField" : true }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg", "newField" : false }
 { "_id" : "bat", "a" : "bat", "newField" : false }
(5 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "coll_agg_proj", "projection": { "a": 1, "newField": { "$ne": ["$a", "CAT"] } }, "sort": { "_id": 1 }, "skip": 0, "limit": 5, "collation": { "locale": "en", "strength" : 2} }');
                              document                               
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat", "newField" : false }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog", "newField" : true }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt", "newField" : false }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg", "newField" : true }
 { "_id" : "bat", "a" : "bat", "newField" : true }
(5 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "coll_agg_proj", "projection": { "a": 1, "newField": { "$ne": ["$a", "CAT"] } }, "sort": { "_id": 1 }, "skip": 0, "limit": 5, "collation": { "locale": "en", "strength" : 3} }');
                              document                              
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat", "newField" : true }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog", "newField" : true }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt", "newField" : true }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg", "newField" : true }
 { "_id" : "bat", "a" : "bat", "newField" : true }
(5 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "coll_agg_proj", "projection": { "a": 1, "newField": { "$gte": ["$a", "CAT"] } }, "sort": { "_id": 1 }, "skip": 0, "limit": 5, "collation": { "locale": "en", "strength" : 1} }');
                              document                              
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat", "newField" : true }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog", "newField" : true }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt", "newField" : true }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg", "newField" : true }
 { "_id" : "bat", "a" : "bat", "newField" : false }
(5 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "coll_agg_proj", "projection": { "a": 1, "newField": { "$gte": ["$a", "CAT"] } }, "sort": { "_id": 1 }, "skip": 0, "limit": 5, "collation": { "locale": "en", "strength" : 3} }');
                              document                               
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat", "newField" : false }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog", "newField" : true }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt", "newField" : false }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg", "newField" : true }
 { "_id" : "bat", "a" : "bat", "newField" : false }
(5 rows)

-- redact
SELECT documentdb_api.insert_one('db','coll_redact','{ "_id": 1, "level": "public", "content": "content 1", "details": { "level": "public", "value": "content 1.1", "moreDetails": { "level": "restricted", "info": "content 1.1.1" } } }', NULL);
NOTICE:  creating collection
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','coll_redact','{ "_id": 2, "level": "restricted", "content": "content 2", "details": { "level": "public", "value": "content 2.1", "moreDetails": { "level": "restricted", "info": "content 2.1.1" } } }', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','coll_redact','{ "_id": 3, "level": "public", "content": "content 3", "details": { "level": "restricted", "value": "content 3.1", "moreDetails": { "level": "public", "info": "content 3.1.1" } } }', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','coll_redact','{ "_id": 4, "content": "content 4", "details": { "level": "public", "value": "content 4.1" } }', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','coll_redact','{ "_id": 5, "level": "public", "content": "content 5", "details": { "level": "public", "value": "content 5.1", "moreDetails": [{ "level": "restricted", "info": "content 5.1.1" }, { "level": "public", "info": "content 5.1.2" }] } }', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_redact", "pipeline": [ { "$redact": { "$cond": { "if": { "$eq": ["$level", "PUBLIC"] }, "then": "$$KEEP", "else": "$$PRUNE" } } }  ], "cursor": {}, "collation": { "locale": "en", "strength" : 1} }');
                                                                                                                                 document                                                                                                                                 
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "level" : "public", "content" : "content 1", "details" : { "level" : "public", "value" : "content 1.1", "moreDetails" : { "level" : "restricted", "info" : "content 1.1.1" } } }
 
 { "_id" : { "$numberInt" : "3" }, "level" : "public", "content" : "content 3", "details" : { "level" : "restricted", "value" : "content 3.1", "moreDetails" : { "level" : "public", "info" : "content 3.1.1" } } }
 
 { "_id" : { "$numberInt" : "5" }, "level" : "public", "content" : "content 5", "details" : { "level" : "public", "value" : "content 5.1", "moreDetails" : [ { "level" : "restricted", "info" : "content 5.1.1" }, { "level" : "public", "info" : "content 5.1.2" } ] } }
(5 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_redact", "pipeline": [ { "$redact": { "$cond": { "if": { "$eq": ["$level", "puBliC"] }, "then": "$$DESCEND", "else": "$$PRUNE" } } }  ], "cursor": {}, "collation": { "locale": "en", "strength" : 1} }');
                                                                                                      document                                                                                                      
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "level" : "public", "content" : "content 1", "details" : { "level" : "public", "value" : "content 1.1" } }
 
 { "_id" : { "$numberInt" : "3" }, "level" : "public", "content" : "content 3" }
 
 { "_id" : { "$numberInt" : "5" }, "level" : "public", "content" : "content 5", "details" : { "level" : "public", "value" : "content 5.1", "moreDetails" : [ { "level" : "public", "info" : "content 5.1.2" } ] } }
(5 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_redact", "pipeline": [ { "$redact": { "$switch": { "branches": [ { "case": { "$eq": ["$level", "PUBLIC"] }, "then": "$$PRUNE" }, { "case": { "$eq": ["$classification", "RESTRICTED"] }, "then": { "$cond": { "if": { "$eq": ["$content", null] }, "then": "$$KEEP", "else": "$$PRUNE" } } }], "default": "$$KEEP" } }  }], "cursor": {}, "collation": { "locale": "en", "strength" : 1} }');
                                                                                                        document                                                                                                        
---------------------------------------------------------------------
 
 { "_id" : { "$numberInt" : "2" }, "level" : "restricted", "content" : "content 2", "details" : { "level" : "public", "value" : "content 2.1", "moreDetails" : { "level" : "restricted", "info" : "content 2.1.1" } } }
 
 { "_id" : { "$numberInt" : "4" }, "content" : "content 4", "details" : { "level" : "public", "value" : "content 4.1" } }
 
(5 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_redact", "pipeline": [ { "$redact": { "$switch": { "branches": [ { "case": { "$eq": ["$level", "PUBLIC"] }, "then": "$$PRUNE" }, { "case": { "$eq": ["$classification", "RESTRICTED"] }, "then": { "$cond": { "if": { "$eq": ["$content", null] }, "then": "$$KEEP", "else": "$$PRUNE" } } }], "default": "$$KEEP" } }  }], "cursor": {}, "collation": { "locale": "en", "strength" : 1} }');
                                                                                                        document                                                                                                        
---------------------------------------------------------------------
 
 { "_id" : { "$numberInt" : "2" }, "level" : "restricted", "content" : "content 2", "details" : { "level" : "public", "value" : "content 2.1", "moreDetails" : { "level" : "restricted", "info" : "content 2.1.1" } } }
 
 { "_id" : { "$numberInt" : "4" }, "content" : "content 4", "details" : { "level" : "public", "value" : "content 4.1" } }
 
(5 rows)

-- support for $setEquals
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_agg_proj", "pipeline": [ { "$project": { "a": 1, "newField": {"$setEquals": [["$a"], ["CAT"]]} } }], "cursor": {}, "collation": { "locale": "en", "strength" : 1} }');
                              document                               
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat", "newField" : true }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog", "newField" : false }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt", "newField" : true }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg", "newField" : false }
 { "_id" : "hen", "a" : "hen", "newField" : false }
 { "_id" : "bat", "a" : "bat", "newField" : false }
(6 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_agg_proj", "pipeline": [ { "$project": { "a": 1, "newField": {"$setEquals": [["$a"], ["DOG"]]} } }], "cursor": {}, "collation": { "locale": "en", "strength" : 2} }');
                              document                               
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat", "newField" : false }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog", "newField" : true }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt", "newField" : false }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg", "newField" : true }
 { "_id" : "hen", "a" : "hen", "newField" : false }
 { "_id" : "bat", "a" : "bat", "newField" : false }
(6 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_agg_proj", "pipeline": [ { "$project": { "a": 1, "newField": {"$setEquals": [["$a"], ["DOG", "dOg"]]} } }], "cursor": {}, "collation": { "locale": "en", "strength" : 2} }');
                              document                               
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat", "newField" : false }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog", "newField" : true }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt", "newField" : false }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg", "newField" : true }
 { "_id" : "hen", "a" : "hen", "newField" : false }
 { "_id" : "bat", "a" : "bat", "newField" : false }
(6 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_agg_proj", "pipeline": [ { "$project": { "a": 1, "newField": {"$setEquals": [["$a", "dog"], ["CAT", "DOG"]]} } }], "cursor": {}, "collation": { "locale": "en", "strength" : 1} }');
                              document                               
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat", "newField" : true }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog", "newField" : false }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt", "newField" : true }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg", "newField" : false }
 { "_id" : "hen", "a" : "hen", "newField" : false }
 { "_id" : "bat", "a" : "bat", "newField" : false }
(6 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_agg_proj", "pipeline": [ { "$project": { "a": 1, "newField": {"$setEquals": [["$a", "cAT", "dog"], ["CAT", "DOG"]]} } }], "cursor": {}, "collation": { "locale": "en", "strength" : 1} }');
                              document                              
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat", "newField" : true }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog", "newField" : true }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt", "newField" : true }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg", "newField" : true }
 { "_id" : "hen", "a" : "hen", "newField" : false }
 { "_id" : "bat", "a" : "bat", "newField" : false }
(6 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_agg_proj", "pipeline": [ { "$project": { "a": 1, "newField": {"$setEquals": [["$a", "cAT", "dog"], ["CAT", "DOG"]]} } }], "cursor": {}, "collation": { "locale": "en", "strength" : 3} }');
                              document                               
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat", "newField" : false }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog", "newField" : false }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt", "newField" : false }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg", "newField" : false }
 { "_id" : "hen", "a" : "hen", "newField" : false }
 { "_id" : "bat", "a" : "bat", "newField" : false }
(6 rows)

-- support for $setIntersection
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_agg_proj", "pipeline": [ { "$project": { "a": 1, "newField": {"$setIntersection": [["$a"], ["CAT"]]} } }], "cursor": {}, "collation": { "locale": "en", "strength" : 1} }');
                                document                                 
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat", "newField" : [ "cat" ] }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog", "newField" : [  ] }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt", "newField" : [ "cAt" ] }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg", "newField" : [  ] }
 { "_id" : "hen", "a" : "hen", "newField" : [  ] }
 { "_id" : "bat", "a" : "bat", "newField" : [  ] }
(6 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_agg_proj", "pipeline": [ { "$project": { "a": 1, "newField": {"$setIntersection": [["$a"], ["DOG"]]} } }], "cursor": {}, "collation": { "locale": "en", "strength" : 2} }');
                                document                                 
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat", "newField" : [  ] }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog", "newField" : [ "dog" ] }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt", "newField" : [  ] }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg", "newField" : [ "dOg" ] }
 { "_id" : "hen", "a" : "hen", "newField" : [  ] }
 { "_id" : "bat", "a" : "bat", "newField" : [  ] }
(6 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_agg_proj", "pipeline": [ { "$project": { "a": 1, "newField": {"$setIntersection": [["$a"], ["DOG", "dOg"]]} } }], "cursor": {}, "collation": { "locale": "en", "strength" : 2} }');
                                document                                 
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat", "newField" : [  ] }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog", "newField" : [ "dog" ] }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt", "newField" : [  ] }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg", "newField" : [ "dOg" ] }
 { "_id" : "hen", "a" : "hen", "newField" : [  ] }
 { "_id" : "bat", "a" : "bat", "newField" : [  ] }
(6 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_agg_proj", "pipeline": [ { "$project": { "a": 1, "newField": {"$setIntersection": [["$a", "dog"], ["CAT", "DOG"]]} } }], "cursor": {}, "collation": { "locale": "en", "strength" : 1} }');
                                    document                                    
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat", "newField" : [ "cat", "dog" ] }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog", "newField" : [ "dog" ] }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt", "newField" : [ "cAt", "dog" ] }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg", "newField" : [ "dOg" ] }
 { "_id" : "hen", "a" : "hen", "newField" : [ "dog" ] }
 { "_id" : "bat", "a" : "bat", "newField" : [ "dog" ] }
(6 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_agg_proj", "pipeline": [ { "$project": { "a": 1, "newField": {"$setIntersection": [["$a", "cAT", "dog"], ["CAT", "DOG"]]} } }], "cursor": {}, "collation": { "locale": "en", "strength" : 1} }');
                                    document                                    
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat", "newField" : [ "cat", "dog" ] }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog", "newField" : [ "cAT", "dog" ] }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt", "newField" : [ "cAt", "dog" ] }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg", "newField" : [ "cAT", "dOg" ] }
 { "_id" : "hen", "a" : "hen", "newField" : [ "cAT", "dog" ] }
 { "_id" : "bat", "a" : "bat", "newField" : [ "cAT", "dog" ] }
(6 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_agg_proj", "pipeline": [ { "$project": { "a": 1, "newField": {"$setIntersection": [["$a", "cAT", "dog"], ["CAT", "DOG"]]} } }], "cursor": {}, "collation": { "locale": "en", "strength" : 3} }');
                              document                              
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat", "newField" : [  ] }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog", "newField" : [  ] }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt", "newField" : [  ] }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg", "newField" : [  ] }
 { "_id" : "hen", "a" : "hen", "newField" : [  ] }
 { "_id" : "bat", "a" : "bat", "newField" : [  ] }
(6 rows)

-- support for $setUnion
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_agg_proj", "pipeline": [ { "$project": { "a": 1, "newField": {"$setUnion": [["$a"], ["CAT"]]} } }], "cursor": {}, "collation": { "locale": "en", "strength" : 1} }');
                                    document                                    
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat", "newField" : [ "cat" ] }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog", "newField" : [ "CAT", "dog" ] }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt", "newField" : [ "cAt" ] }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg", "newField" : [ "CAT", "dOg" ] }
 { "_id" : "hen", "a" : "hen", "newField" : [ "CAT", "hen" ] }
 { "_id" : "bat", "a" : "bat", "newField" : [ "CAT", "bat" ] }
(6 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_agg_proj", "pipeline": [ { "$project": { "a": 1, "newField": {"$setUnion": [["$a"], ["DOG"]]} } }], "cursor": {}, "collation": { "locale": "en", "strength" : 2} }');
                                    document                                    
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat", "newField" : [ "cat", "DOG" ] }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog", "newField" : [ "dog" ] }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt", "newField" : [ "cAt", "DOG" ] }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg", "newField" : [ "dOg" ] }
 { "_id" : "hen", "a" : "hen", "newField" : [ "hen", "DOG" ] }
 { "_id" : "bat", "a" : "bat", "newField" : [ "DOG", "bat" ] }
(6 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_agg_proj", "pipeline": [ { "$project": { "a": 1, "newField": {"$setUnion": [["$a"], ["DOG", "dOg"]]} } }], "cursor": {}, "collation": { "locale": "en", "strength" : 2} }');
                                    document                                    
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat", "newField" : [ "cat", "DOG" ] }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog", "newField" : [ "dog" ] }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt", "newField" : [ "cAt", "DOG" ] }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg", "newField" : [ "dOg" ] }
 { "_id" : "hen", "a" : "hen", "newField" : [ "hen", "DOG" ] }
 { "_id" : "bat", "a" : "bat", "newField" : [ "DOG", "bat" ] }
(6 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_agg_proj", "pipeline": [ { "$project": { "a": 1, "newField": {"$setUnion": [["$a", "dog"], ["CAT", "DOG"]]} } }], "cursor": {}, "collation": { "locale": "en", "strength" : 1} }');
                                    document                                    
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat", "newField" : [ "cat", "dog" ] }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog", "newField" : [ "CAT", "dog" ] }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt", "newField" : [ "cAt", "dog" ] }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg", "newField" : [ "CAT", "dOg" ] }
 { "_id" : "hen", "a" : "hen", "newField" : [ "CAT", "dog", "hen" ] }
 { "_id" : "bat", "a" : "bat", "newField" : [ "CAT", "bat", "dog" ] }
(6 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_agg_proj", "pipeline": [ { "$project": { "a": 1, "newField": {"$setUnion": [["$a", "cAT", "dog"], ["CAT", "DOG"]]} } }], "cursor": {}, "collation": { "locale": "en", "strength" : 1} }');
                                    document                                    
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat", "newField" : [ "cat", "dog" ] }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog", "newField" : [ "cAT", "dog" ] }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt", "newField" : [ "cAt", "dog" ] }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg", "newField" : [ "cAT", "dOg" ] }
 { "_id" : "hen", "a" : "hen", "newField" : [ "cAT", "dog", "hen" ] }
 { "_id" : "bat", "a" : "bat", "newField" : [ "cAT", "bat", "dog" ] }
(6 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_agg_proj", "pipeline": [ { "$project": { "a": 1, "newField": {"$setUnion": [["$a", "cAT", "dog"], ["CAT", "DOG"]]} } }], "cursor": {}, "collation": { "locale": "en", "strength" : 3} }');
                                              document                                               
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat", "newField" : [ "CAT", "DOG", "dog", "cat", "cAT" ] }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog", "newField" : [ "CAT", "DOG", "dog", "cAT" ] }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt", "newField" : [ "CAT", "DOG", "dog", "cAT", "cAt" ] }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg", "newField" : [ "CAT", "DOG", "dog", "dOg", "cAT" ] }
 { "_id" : "hen", "a" : "hen", "newField" : [ "CAT", "DOG", "dog", "hen", "cAT" ] }
 { "_id" : "bat", "a" : "bat", "newField" : [ "CAT", "DOG", "bat", "dog", "cAT" ] }
(6 rows)

-- support for $setDifference
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_agg_proj", "pipeline": [ { "$project": { "a": 1, "newField": {"$setDifference": [["$a"], ["CAT"]]} } }], "cursor": {}, "collation": { "locale": "en", "strength" : 1} }');
                                document                                 
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat", "newField" : [  ] }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog", "newField" : [ "dog" ] }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt", "newField" : [  ] }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg", "newField" : [ "dOg" ] }
 { "_id" : "hen", "a" : "hen", "newField" : [ "hen" ] }
 { "_id" : "bat", "a" : "bat", "newField" : [ "bat" ] }
(6 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_agg_proj", "pipeline": [ { "$project": { "a": 1, "newField": {"$setDifference": [["$a"], ["DOG"]]} } }], "cursor": {}, "collation": { "locale": "en", "strength" : 2} }');
                                document                                 
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat", "newField" : [ "cat" ] }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog", "newField" : [  ] }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt", "newField" : [ "cAt" ] }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg", "newField" : [  ] }
 { "_id" : "hen", "a" : "hen", "newField" : [ "hen" ] }
 { "_id" : "bat", "a" : "bat", "newField" : [ "bat" ] }
(6 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_agg_proj", "pipeline": [ { "$project": { "a": 1, "newField": {"$setDifference": [["$a"], ["DOG", "dOg"]]} } }], "cursor": {}, "collation": { "locale": "en", "strength" : 2} }');
                                document                                 
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat", "newField" : [ "cat" ] }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog", "newField" : [  ] }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt", "newField" : [ "cAt" ] }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg", "newField" : [  ] }
 { "_id" : "hen", "a" : "hen", "newField" : [ "hen" ] }
 { "_id" : "bat", "a" : "bat", "newField" : [ "bat" ] }
(6 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_agg_proj", "pipeline": [ { "$project": { "a": 1, "newField": {"$setDifference": [["$a", "dog"], ["CAT", "DOG"]]} } }], "cursor": {}, "collation": { "locale": "en", "strength" : 1} }');
                              document                              
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat", "newField" : [  ] }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog", "newField" : [  ] }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt", "newField" : [  ] }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg", "newField" : [  ] }
 { "_id" : "hen", "a" : "hen", "newField" : [ "hen" ] }
 { "_id" : "bat", "a" : "bat", "newField" : [ "bat" ] }
(6 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_agg_proj", "pipeline": [ { "$project": { "a": 1, "newField": {"$setDifference": [["$a", "cAT", "dog"], ["CAT", "DOG"]]} } }], "cursor": {}, "collation": { "locale": "en", "strength" : 1} }');
                              document                              
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat", "newField" : [  ] }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog", "newField" : [  ] }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt", "newField" : [  ] }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg", "newField" : [  ] }
 { "_id" : "hen", "a" : "hen", "newField" : [ "hen" ] }
 { "_id" : "bat", "a" : "bat", "newField" : [ "bat" ] }
(6 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_agg_proj", "pipeline": [ { "$project": { "a": 1, "newField": {"$setDifference": [["$a", "cAT", "dog"], ["CAT", "DOG"]]} } }], "cursor": {}, "collation": { "locale": "en", "strength" : 3} }');
                                       document                                        
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat", "newField" : [ "cat", "cAT", "dog" ] }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog", "newField" : [ "dog", "cAT" ] }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt", "newField" : [ "cAt", "cAT", "dog" ] }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg", "newField" : [ "dOg", "cAT", "dog" ] }
 { "_id" : "hen", "a" : "hen", "newField" : [ "hen", "cAT", "dog" ] }
 { "_id" : "bat", "a" : "bat", "newField" : [ "bat", "cAT", "dog" ] }
(6 rows)

-- support for $setIsSubset
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_agg_proj", "pipeline": [ { "$project": { "a": 1, "newField": {"$setIsSubset": [["$a"], ["CAT"]]} } }], "cursor": {}, "collation": { "locale": "en", "strength" : 1} }');
                              document                               
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat", "newField" : true }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog", "newField" : false }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt", "newField" : true }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg", "newField" : false }
 { "_id" : "hen", "a" : "hen", "newField" : false }
 { "_id" : "bat", "a" : "bat", "newField" : false }
(6 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_agg_proj", "pipeline": [ { "$project": { "a": 1, "newField": {"$setIsSubset": [["$a"], ["DOG"]]} } }], "cursor": {}, "collation": { "locale": "en", "strength" : 2} }');
                              document                               
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat", "newField" : false }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog", "newField" : true }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt", "newField" : false }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg", "newField" : true }
 { "_id" : "hen", "a" : "hen", "newField" : false }
 { "_id" : "bat", "a" : "bat", "newField" : false }
(6 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_agg_proj", "pipeline": [ { "$project": { "a": 1, "newField": {"$setIsSubset": [["$a"], ["DOG", "dOg"]]} } }], "cursor": {}, "collation": { "locale": "en", "strength" : 2} }');
                              document                               
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat", "newField" : false }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog", "newField" : true }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt", "newField" : false }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg", "newField" : true }
 { "_id" : "hen", "a" : "hen", "newField" : false }
 { "_id" : "bat", "a" : "bat", "newField" : false }
(6 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_agg_proj", "pipeline": [ { "$project": { "a": 1, "newField": {"$setIsSubset": [["$a", "dog"], ["CAT", "DOG"]]} } }], "cursor": {}, "collation": { "locale": "en", "strength" : 1} }');
                              document                              
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat", "newField" : true }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog", "newField" : true }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt", "newField" : true }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg", "newField" : true }
 { "_id" : "hen", "a" : "hen", "newField" : false }
 { "_id" : "bat", "a" : "bat", "newField" : false }
(6 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_agg_proj", "pipeline": [ { "$project": { "a": 1, "newField": {"$setIsSubset": [["$a", "cAT", "dog"], ["CAT", "DOG"]]} } }], "cursor": {}, "collation": { "locale": "en", "strength" : 1} }');
                              document                              
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat", "newField" : true }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog", "newField" : true }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt", "newField" : true }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg", "newField" : true }
 { "_id" : "hen", "a" : "hen", "newField" : false }
 { "_id" : "bat", "a" : "bat", "newField" : false }
(6 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "coll_agg_proj", "pipeline": [ { "$project": { "a": 1, "newField": {"$setIsSubset": [["$a", "cAT", "dog"], ["CAT", "DOG"]]} } }], "cursor": {}, "collation": { "locale": "en", "strength" : 3} }');
                              document                               
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "cat", "newField" : false }
 { "_id" : { "$numberInt" : "2" }, "a" : "dog", "newField" : false }
 { "_id" : { "$numberInt" : "3" }, "a" : "cAt", "newField" : false }
 { "_id" : { "$numberInt" : "4" }, "a" : "dOg", "newField" : false }
 { "_id" : "hen", "a" : "hen", "newField" : false }
 { "_id" : "bat", "a" : "bat", "newField" : false }
(6 rows)

-- query match
-- enableLetAndCollationForQueryMatch GUC off: ignore collation
SET documentdb.enableLetAndCollationForQueryMatch TO off;
SELECT documentdb_api_internal.bson_query_match('{"a": "cat"}', '{"a": "CAT"}', NULL, 'en-u-ks-level1');
NOTICE:  using bson_query_match implementation
 bson_query_match 
---------------------------------------------------------------------
 f
(1 row)

-- enableLetAndCollationForQueryMatch GUC on: enforce collation
SET documentdb.enableLetAndCollationForQueryMatch TO on;
-- query match: _id tests
SELECT documentdb_api_internal.bson_query_match('{"_id": "cat"}', '{"_id": "CAT"}', NULL, 'en-u-ks-level1');
 bson_query_match 
---------------------------------------------------------------------
 t
(1 row)

SELECT documentdb_api_internal.bson_query_match('{"_id": "cat"}', '{"_id": "CAT"}', NULL, 'en-u-ks-level2');
 bson_query_match 
---------------------------------------------------------------------
 t
(1 row)

-- query match: $eq
SELECT documentdb_api_internal.bson_query_match('{"a": "cat"}', '{"a": "CAT"}', NULL, 'en-u-ks-level1');
 bson_query_match 
---------------------------------------------------------------------
 t
(1 row)

SELECT documentdb_api_internal.bson_query_match('{"a": "cat"}', '{ "a": {"$eq" : "CAT"} }', NULL, 'de-u-ks-level1');
 bson_query_match 
---------------------------------------------------------------------
 t
(1 row)

SELECT documentdb_api_internal.bson_query_match('{"a": "cat"}', '{ "a": {"$eq" : "càt"} }', NULL, 'fr-u-ks-level3');
 bson_query_match 
---------------------------------------------------------------------
 f
(1 row)

SELECT documentdb_api_internal.bson_query_match('{"a": "cat", "b": "dog"}', '{"a": "CAT", "b": "DOG"}', NULL, 'en-u-ks-level1');
 bson_query_match 
---------------------------------------------------------------------
 t
(1 row)

SELECT documentdb_api_internal.bson_query_match('{"a": "cat", "b": "dog"}', '{"a": "CAT", "b": "DOG"}', NULL, 'sv-u-ks-level1');
 bson_query_match 
---------------------------------------------------------------------
 t
(1 row)

-- query match: $ne
SELECT documentdb_api_internal.bson_query_match('{"a": "cat"}', '{ "a": {"$ne" : "CAT"} }', NULL, 'de-u-ks-level1');
 bson_query_match 
---------------------------------------------------------------------
 f
(1 row)

SELECT documentdb_api_internal.bson_query_match('{"a": "cat"}', '{ "a": {"$ne" : "càt"} }', NULL, 'fr-u-ks-level3');
 bson_query_match 
---------------------------------------------------------------------
 t
(1 row)

SELECT documentdb_api_internal.bson_query_match('{"a": "cat", "b": "dog"}', '{"a": "CAT", "b": "DOG"}', NULL, 'en-u-ks-level1');
 bson_query_match 
---------------------------------------------------------------------
 t
(1 row)

SELECT documentdb_api_internal.bson_query_match('{"a": "cat", "b": "dog"}', '{"a": "CAT", "b": "DOG"}', NULL, 'sv-u-ks-level1');
 bson_query_match 
---------------------------------------------------------------------
 t
(1 row)

-- query match: $gt/$gte
SELECT documentdb_api_internal.bson_query_match('{"a": "cat"}', '{ "a": {"$gt" : "CAT"} }', NULL, 'de-u-ks-level1');
 bson_query_match 
---------------------------------------------------------------------
 f
(1 row)

SELECT documentdb_api_internal.bson_query_match('{"a": "cat"}', '{ "a": {"$gte" : "CAT"} }', NULL, 'en-u-ks-level1');
 bson_query_match 
---------------------------------------------------------------------
 t
(1 row)

-- query match: $lt/$lte
SELECT documentdb_api_internal.bson_query_match('{"a": "cat"}', '{ "a": {"$lte" : "CAT"} }', NULL, 'de-u-ks-level1');
 bson_query_match 
---------------------------------------------------------------------
 t
(1 row)

SELECT documentdb_api_internal.bson_query_match('{"a": "cat"}', '{ "a": {"$lte" : "càt"} }', NULL, 'fr-u-ks-level3');
 bson_query_match 
---------------------------------------------------------------------
 t
(1 row)

-- query match: $in
SELECT documentdb_api_internal.bson_query_match('{"a": "cat"}', '{ "a": {"$in" : ["CAT", "DOG"]} }', NULL, 'de-u-ks-level1');
 bson_query_match 
---------------------------------------------------------------------
 t
(1 row)

SELECT documentdb_api_internal.bson_query_match('{"a": "cat"}', '{ "a": {"$in" : ["càt", "dòg"]} }', NULL, 'fr-u-ks-level3');
 bson_query_match 
---------------------------------------------------------------------
 f
(1 row)

-- query match: $nin
SELECT documentdb_api_internal.bson_query_match('{"a": "cat"}', '{ "a": {"$nin" : ["CAT", "DOG"]} }', NULL, 'en-u-ks-level1');
 bson_query_match 
---------------------------------------------------------------------
 f
(1 row)

SELECT documentdb_api_internal.bson_query_match('{"a": "cat"}', '{ "a": {"$nin" : ["càt", "dòg"]} }', NULL, 'fr-u-ks-level3');
 bson_query_match 
---------------------------------------------------------------------
 t
(1 row)

-- not supported yet
-- query match: sharded collection with collation-aware shard key
SELECT documentdb_api.insert_one('db', 'coll_query_op', '{ "_id": "cat", "a": "cat" }');
NOTICE:  creating collection
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'coll_query_op', '{ "_id": "dog", "a": "dog" }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.shard_collection('db', 'coll_query_op', '{ "_id": "hashed" }', false);
 shard_collection 
---------------------------------------------------------------------
 
(1 row)

SELECT document from documentdb_api.collection('db', 'coll_query_op') WHERE documentdb_api_internal.bson_query_match(document, '{ "_id": "CAT" }', NULL, 'en-u-ks-level1');
 document 
---------------------------------------------------------------------
(0 rows)

RESET documentdb.enableLetAndCollationForQueryMatch;
RESET documentdb_core.enablecollation;
