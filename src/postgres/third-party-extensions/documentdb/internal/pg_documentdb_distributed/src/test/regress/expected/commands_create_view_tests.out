SET citus.next_shard_id TO 111000;
SET documentdb.next_collection_id TO 11100;
SET documentdb.next_collection_index_id TO 11100;
SET search_path TO documentdb_core,documentdb_api,documentdb_api_catalog,documentdb_api_internal;
-- first create a collection (invalid)
SELECT documentdb_api.create_collection_view('db', '{ "create": "create_view_tests", "capped": true }');
ERROR:  Capped collections not supported yet
SELECT documentdb_api.create_collection_view('db', '{ "create": "create_view_tests", "capped": 1}');
ERROR:  Capped collections not supported yet
SELECT documentdb_api.create_collection_view('db', '{ "create": "create_view_tests", "capped": 2.3}');
ERROR:  Capped collections not supported yet
SELECT documentdb_api.create_collection_view('db', '{ "create": "create_view_tests", "capped": "true"}');
ERROR:  BSON field 'create.capped' is the wrong type 'string', expected types '[bool, long, int, decimal, double']
SELECT documentdb_api.create_collection_view('db', '{ "create": "create_view_tests", "capped": "false"}');
ERROR:  BSON field 'create.capped' is the wrong type 'string', expected types '[bool, long, int, decimal, double']
SELECT documentdb_api.create_collection_view('db', '{ "create": "create_view_tests", "timeseries": { "timeField": "a" } }');
ERROR:  time series collections not supported yet
SELECT documentdb_api.create_collection_view('db', '{ "create": "create_view_tests", "clusteredIndex": { } }');
ERROR:  clusteredIndex not supported yet
SELECT documentdb_api.create_collection_view('db', '{ "create": 2 }');
ERROR:  BSON field 'create.create' is the wrong type 'int', expected type 'string'
SELECT documentdb_api.create_collection_view('db', '{ "create": false }');
ERROR:  BSON field 'create.create' is the wrong type 'bool', expected type 'string'
SELECT documentdb_api.create_collection_view('db', '{ "create": null }');
ERROR:  BSON field 'create.create' is the wrong type 'null', expected type 'string'
SELECT documentdb_api.create_collection_view('db', '{ "create": {"$undefined": true} }');
ERROR:  BSON field 'create.create' is the wrong type 'undefined', expected type 'string'
SELECT documentdb_api.create_collection_view('db', '{ "create": "" }');   -- empty string not allowed
ERROR:  Invalid namespace specified 'db.'
-- create valid collections
SELECT documentdb_api.create_collection_view('db', '{ "create": "create_view_tests_not_capped1", "capped": false}');
NOTICE:  creating collection
         create_collection_view         
---------------------------------------------------------------------
 { "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.create_collection_view('db', '{ "create": "create_view_tests_not_capped2", "capped": 0}');
NOTICE:  creating collection
         create_collection_view         
---------------------------------------------------------------------
 { "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.create_collection_view('db', '{ "create": "create_view_tests_emoji_ðŸ‘½" }');
NOTICE:  creating collection
         create_collection_view         
---------------------------------------------------------------------
 { "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.create_collection_view('db', '{ "create": "create_view_tests" }');
NOTICE:  creating collection
         create_collection_view         
---------------------------------------------------------------------
 { "ok" : { "$numberDouble" : "1.0" } }
(1 row)

-- noops
SELECT documentdb_api.create_collection_view('db', '{ "create": "create_view_tests" }');
         create_collection_view         
---------------------------------------------------------------------
 { "ok" : { "$numberDouble" : "1.0" } }
(1 row)

-- Views error out if the viewOn is not a string, or empty string
SELECT documentdb_api.create_collection_view('db', '{ "create": "create_view_tests_view", "viewOn": 2 }');
ERROR:  BSON field 'create.viewOn' is the wrong type 'int', expected type 'string'
SELECT documentdb_api.create_collection_view('db', '{ "create": "create_view_tests_view", "viewOn": false }');
ERROR:  BSON field 'create.viewOn' is the wrong type 'bool', expected type 'string'
SELECT documentdb_api.create_collection_view('db', '{ "create": "create_view_tests_view", "viewOn": "" }');   -- empty string not allowed
ERROR:  'viewOn' cannot be empty
-- viewOn can be null or undefined. It is treated as if it was not specified
SELECT documentdb_api.create_collection_view('db', '{ "create": "create_view_tests_view_n",  "viewOn": null }');
NOTICE:  creating collection
         create_collection_view         
---------------------------------------------------------------------
 { "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.create_collection_view('db', '{ "create": "create_view_tests_view_np", "viewOn": null, "pipeline": [] }');
ERROR:  'pipeline' requires 'viewOn' to also be specified
SELECT documentdb_api.create_collection_view('db', '{ "create": "create_view_tests_view_u",  "viewOn": {"$undefined": true} }');
NOTICE:  creating collection
         create_collection_view         
---------------------------------------------------------------------
 { "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.create_collection_view('db', '{ "create": "create_view_tests_view_up", "viewOn": {"$undefined": true}, "pipeline": [] }');
ERROR:  'pipeline' requires 'viewOn' to also be specified
-- create a view against it (no pipeline): succeeds
SELECT documentdb_api.create_collection_view('db', '{ "create": "create_view_tests_view_1", "viewOn": "create_view_tests" }');
         create_collection_view         
---------------------------------------------------------------------
 { "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.create_collection_view('db', '{ "create": "create_view_tests_view_emoji_ðŸ‘º", "viewOn": "create_view_tests_emoji_ðŸ‘½" }');
         create_collection_view         
---------------------------------------------------------------------
 { "ok" : { "$numberDouble" : "1.0" } }
(1 row)

-- chain the view
SELECT documentdb_api.create_collection_view('db', '{ "create": "create_view_tests_view_2", "viewOn": "create_view_tests_view_1", "pipeline": [ { "$match": { "a": { "$gt": 5 } } } ] }');
         create_collection_view         
---------------------------------------------------------------------
 { "ok" : { "$numberDouble" : "1.0" } }
(1 row)

-- chain one more view
SELECT documentdb_api.create_collection_view('db', '{ "create": "create_view_tests_view_3", "viewOn": "create_view_tests_view_2", "pipeline": [ { "$sort": { "a": 1 } } ] }');
         create_collection_view         
---------------------------------------------------------------------
 { "ok" : { "$numberDouble" : "1.0" } }
(1 row)

-- query all 4
SELECT document FROM bson_aggregation_find('db', '{ "find": "create_view_tests_view_3" }');
 document 
---------------------------------------------------------------------
(0 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "create_view_tests_view_2" }');
 document 
---------------------------------------------------------------------
(0 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "create_view_tests_view_1" }');
 document 
---------------------------------------------------------------------
(0 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "create_view_tests" }');
 document 
---------------------------------------------------------------------
(0 rows)

-- now insert 3 docs in the table 
SELECT documentdb_api.insert_one('db', 'create_view_tests', '{ "_id": 1, "a": 4 }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'create_view_tests', '{ "_id": 2, "a": 1 }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'create_view_tests', '{ "_id": 3, "a": 140 }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db', 'create_view_tests', '{ "_id": 4, "a": 40 }');
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT document FROM bson_aggregation_find('db', '{ "find": "create_view_tests_view_3" }');
                              document                              
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "4" }, "a" : { "$numberInt" : "40" } }
 { "_id" : { "$numberInt" : "3" }, "a" : { "$numberInt" : "140" } }
(2 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "create_view_tests_view_2" }');
                              document                              
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "3" }, "a" : { "$numberInt" : "140" } }
 { "_id" : { "$numberInt" : "4" }, "a" : { "$numberInt" : "40" } }
(2 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "create_view_tests_view_1" }');
                              document                              
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : { "$numberInt" : "4" } }
 { "_id" : { "$numberInt" : "2" }, "a" : { "$numberInt" : "1" } }
 { "_id" : { "$numberInt" : "3" }, "a" : { "$numberInt" : "140" } }
 { "_id" : { "$numberInt" : "4" }, "a" : { "$numberInt" : "40" } }
(4 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "create_view_tests" }');
                              document                              
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : { "$numberInt" : "4" } }
 { "_id" : { "$numberInt" : "2" }, "a" : { "$numberInt" : "1" } }
 { "_id" : { "$numberInt" : "3" }, "a" : { "$numberInt" : "140" } }
 { "_id" : { "$numberInt" : "4" }, "a" : { "$numberInt" : "40" } }
(4 rows)

-- create views with different options
SELECT documentdb_api.create_collection_view('db', '{ "create": "create_view_tests", "viewOn": "create_view_tests_view_5", "pipeline": [ { "$sort": { "a": 1 } } ] }');
ERROR:  ns: db.create_view_tests already exists with different options: {}
-- Can't write to views
SELECT documentdb_api.insert_one('db', 'create_view_tests_view_1', '{ "_id": 5, "a": 60 }');
ERROR:  Namespace db.create_view_tests_view_1 is a view, not a collection
CONTEXT:  SQL statement "SELECT p_result                   FROM documentdb_api.insert(
      p_database_name,
      v_insert,
      p_document::bsonsequence,
      p_transaction_id)"
PL/pgSQL function documentdb_api.insert_one(text,text,bson,text) line 7 at SQL statement
SELECT documentdb_api.update('db', '{ "update": "create_view_tests_view_1", "updates": [ { "q": {}, "u": {} } ] }');
ERROR:  Namespace db.create_view_tests_view_1 is a view, not a collection
SELECT documentdb_api.delete('db', '{ "delete": "create_view_tests_view_1", "deletes": [ { "q": {}, "limit": 1 } ] }');
ERROR:  Namespace db.create_view_tests_view_1 is a view, not a collection
SELECT documentdb_api.shard_collection('db', 'create_view_tests_view_1', '{ "_id": "hashed" }', false);
ERROR:  Namespace db.create_view_tests_view_1 is a view, not a collection
SELECT documentdb_api.shard_collection('db', 'create_view_tests_view_1', '{ "_id": "hashed" }', true);
ERROR:  Namespace db.create_view_tests_view_1 is a view, not a collection
-- can drop/rename a view
SELECT documentdb_api.rename_collection('db', 'create_view_tests_view_1', 'create_view_tests_view_4');
ERROR:  Namespace db.create_view_tests_view_1 is a view, not a collection
SELECT document FROM bson_aggregation_find('db', '{ "find": "create_view_tests_view_1" }');
                              document                              
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : { "$numberInt" : "4" } }
 { "_id" : { "$numberInt" : "2" }, "a" : { "$numberInt" : "1" } }
 { "_id" : { "$numberInt" : "3" }, "a" : { "$numberInt" : "140" } }
 { "_id" : { "$numberInt" : "4" }, "a" : { "$numberInt" : "40" } }
(4 rows)

SELECT documentdb_api.drop_collection('db', 'create_view_tests_view_3');
NOTICE:  table "documents_11109" does not exist, skipping
NOTICE:  table "retry_11109" does not exist, skipping
 drop_collection 
---------------------------------------------------------------------
 t
(1 row)

-- drop the collection (view still works)
SELECT documentdb_api.drop_collection('db', 'create_view_tests');
 drop_collection 
---------------------------------------------------------------------
 t
(1 row)

SELECT document FROM bson_aggregation_find('db', '{ "find": "create_view_tests_view_1" }');
 document 
---------------------------------------------------------------------
(0 rows)

-- create a view cycle (fails)
SELECT documentdb_api.create_collection_view('db', '{ "create": "create_view_tests", "viewOn": "create_view_tests_view_1" }');
ERROR:  View cycle detected: db.create_view_tests -> db.create_view_tests_view_1 ->  db.create_view_tests
-- recreate a collection
SELECT documentdb_api.insert_one('db', 'create_view_tests', '{ "_id": 3, "a": 140 }');
NOTICE:  creating collection
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

-- view works again
SELECT document FROM bson_aggregation_find('db', '{ "find": "create_view_tests_view_1" }');
                              document                              
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "3" }, "a" : { "$numberInt" : "140" } }
(1 row)

-- do a coll_mod
SELECT database_name, collection_name, view_definition FROM documentdb_api_catalog.collections WHERE collection_name = 'create_view_tests_view_1';
 database_name |     collection_name      |          view_definition           
---------------------------------------------------------------------
 db            | create_view_tests_view_1 | { "viewOn" : "create_view_tests" }
(1 row)

SELECT documentdb_api.coll_mod('db', 'create_view_tests_view_1', '{ "collMod": "create_view_tests_view_1", "viewOn": "create_view_tests_view_4", "pipeline": [] }');
             coll_mod              
---------------------------------------------------------------------
 { "ok" : { "$numberInt" : "1" } }
(1 row)

SELECT database_name, collection_name, view_definition FROM documentdb_api_catalog.collections WHERE collection_name = 'create_view_tests_view_1';
 database_name |     collection_name      |                       view_definition                        
---------------------------------------------------------------------
 db            | create_view_tests_view_1 | { "viewOn" : "create_view_tests_view_4", "pipeline" : [  ] }
(1 row)

-- create a much longer cycle
SELECT documentdb_api.create_collection_view('db', '{ "create": "create_view_cycle_1", "viewOn": "create_view_cycle_2" }');
         create_collection_view         
---------------------------------------------------------------------
 { "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.create_collection_view('db', '{ "create": "create_view_cycle_2", "viewOn": "create_view_cycle_3" }');
         create_collection_view         
---------------------------------------------------------------------
 { "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.create_collection_view('db', '{ "create": "create_view_cycle_3", "viewOn": "create_view_cycle_4" }');
         create_collection_view         
---------------------------------------------------------------------
 { "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.create_collection_view('db', '{ "create": "create_view_cycle_4", "viewOn": "create_view_cycle_1" }');
ERROR:  View cycle detected: db.create_view_cycle_4 -> db.create_view_cycle_1 -> db.create_view_cycle_2 -> db.create_view_cycle_3 ->  db.create_view_cycle_4
-- create with long name
SELECT documentdb_api.create_collection_view('db', FORMAT('{ "create": "create_view_cycle_4_%s", "viewOn": "create_view_cycle_1" }', repeat('1bc', 80))::documentdb_core.bson);
ERROR:  Full namespace must not exceed 235 bytes.
