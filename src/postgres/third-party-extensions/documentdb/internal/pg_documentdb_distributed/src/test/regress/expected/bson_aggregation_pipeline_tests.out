SET search_path TO documentdb_core,documentdb_api,documentdb_api_catalog,documentdb_api_internal;
SET citus.next_shard_id TO 411000;
SET documentdb.next_collection_id TO 4110;
SET documentdb.next_collection_index_id TO 4110;
SELECT documentdb_api.insert_one('db','aggregation_pipeline','{"_id":"1", "int": 10, "a" : { "b" : [ "x", 1, 2.0, true ] } }', NULL);
NOTICE:  creating collection
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','aggregation_pipeline','{"_id":"2", "double": 2.0, "a" : { "b" : {"c": 3} } }', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','aggregation_pipeline','{"_id":"3", "boolean": false, "a" : "no", "b": "yes", "c": true }', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

-- fetch all rows
SELECT shard_key_value, object_id, document FROM documentdb_api.collection('db', 'aggregation_pipeline') ORDER BY object_id;
 shard_key_value |  object_id   |                                                               document                                                               
---------------------------------------------------------------------
            4110 | { "" : "1" } | { "_id" : "1", "int" : { "$numberInt" : "10" }, "a" : { "b" : [ "x", { "$numberInt" : "1" }, { "$numberDouble" : "2.0" }, true ] } }
            4110 | { "" : "2" } | { "_id" : "2", "double" : { "$numberDouble" : "2.0" }, "a" : { "b" : { "c" : { "$numberInt" : "3" } } } }
            4110 | { "" : "3" } | { "_id" : "3", "boolean" : false, "a" : "no", "b" : "yes", "c" : true }
(3 rows)

-- add newField
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$addFields": { "newField" : "1", "a.y": ["p", "q"] } } ], "cursor": {} }');
                                                                                  document                                                                                  
---------------------------------------------------------------------
 { "_id" : "1", "int" : { "$numberInt" : "10" }, "a" : { "b" : [ "x", { "$numberInt" : "1" }, { "$numberDouble" : "2.0" }, true ], "y" : [ "p", "q" ] }, "newField" : "1" }
 { "_id" : "2", "double" : { "$numberDouble" : "2.0" }, "a" : { "b" : { "c" : { "$numberInt" : "3" } }, "y" : [ "p", "q" ] }, "newField" : "1" }
 { "_id" : "3", "boolean" : false, "b" : "yes", "c" : true, "newField" : "1", "a" : { "y" : [ "p", "q" ] } }
(3 rows)

-- do 2 addFields
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$addFields": { "newField" : "1", "a.y": ["p", "q"] } }, { "$addFields": { "newField2": "someOtherField" } } ], "cursor": {} }');
                                                                                                  document                                                                                                  
---------------------------------------------------------------------
 { "_id" : "1", "int" : { "$numberInt" : "10" }, "a" : { "b" : [ "x", { "$numberInt" : "1" }, { "$numberDouble" : "2.0" }, true ], "y" : [ "p", "q" ] }, "newField" : "1", "newField2" : "someOtherField" }
 { "_id" : "2", "double" : { "$numberDouble" : "2.0" }, "a" : { "b" : { "c" : { "$numberInt" : "3" } }, "y" : [ "p", "q" ] }, "newField" : "1", "newField2" : "someOtherField" }
 { "_id" : "3", "boolean" : false, "b" : "yes", "c" : true, "newField" : "1", "a" : { "y" : [ "p", "q" ] }, "newField2" : "someOtherField" }
(3 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$addFields": { "newField" : "1", "a.y": ["p", "q"] } }, { "$set": { "newField2": "someOtherField" } } ], "cursor": {} }');
                                                                                                  document                                                                                                  
---------------------------------------------------------------------
 { "_id" : "1", "int" : { "$numberInt" : "10" }, "a" : { "b" : [ "x", { "$numberInt" : "1" }, { "$numberDouble" : "2.0" }, true ], "y" : [ "p", "q" ] }, "newField" : "1", "newField2" : "someOtherField" }
 { "_id" : "2", "double" : { "$numberDouble" : "2.0" }, "a" : { "b" : { "c" : { "$numberInt" : "3" } }, "y" : [ "p", "q" ] }, "newField" : "1", "newField2" : "someOtherField" }
 { "_id" : "3", "boolean" : false, "b" : "yes", "c" : true, "newField" : "1", "a" : { "y" : [ "p", "q" ] }, "newField2" : "someOtherField" }
(3 rows)

EXPLAIN (COSTS OFF, VERBOSE ON) SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$addFields": { "newField" : "1", "a.y": ["p", "q"] } }, { "$addFields": { "newField2": "someOtherField" } } ], "cursor": {} }');

---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Output: remote_scan.document
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Query: SELECT documentdb_api_internal.bson_dollar_add_fields(documentdb_api_internal.bson_dollar_add_fields(document, '{ "newField" : "1", "a.y" : [ "p", "q" ] }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson), '{ "newField2" : "someOtherField" }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson) AS document FROM documentdb_data.documents_4110_411001 collection WHERE (shard_key_value OPERATOR(pg_catalog.=) '4110'::bigint)
         Node: host=localhost port=58070 dbname=regression
         ->  Bitmap Heap Scan on documentdb_data.documents_4110_411001 collection
               Output: documentdb_api_internal.bson_dollar_add_fields(documentdb_api_internal.bson_dollar_add_fields(document, '{ "newField" : "1", "a.y" : [ "p", "q" ] }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson), '{ "newField2" : "someOtherField" }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson)
               Recheck Cond: (collection.shard_key_value = '4110'::bigint)
               ->  Bitmap Index Scan on _id_
                     Index Cond: (collection.shard_key_value = '4110'::bigint)
(12 rows)

EXPLAIN (COSTS OFF, VERBOSE ON) SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$addFields": { "newField" : "1", "a.y": ["p", "q"] } }, { "$set": { "newField2": "someOtherField" } } ], "cursor": {} }');

---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Output: remote_scan.document
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Query: SELECT documentdb_api_internal.bson_dollar_add_fields(documentdb_api_internal.bson_dollar_add_fields(document, '{ "newField" : "1", "a.y" : [ "p", "q" ] }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson), '{ "newField2" : "someOtherField" }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson) AS document FROM documentdb_data.documents_4110_411001 collection WHERE (shard_key_value OPERATOR(pg_catalog.=) '4110'::bigint)
         Node: host=localhost port=58070 dbname=regression
         ->  Bitmap Heap Scan on documentdb_data.documents_4110_411001 collection
               Output: documentdb_api_internal.bson_dollar_add_fields(documentdb_api_internal.bson_dollar_add_fields(document, '{ "newField" : "1", "a.y" : [ "p", "q" ] }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson), '{ "newField2" : "someOtherField" }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson)
               Recheck Cond: (collection.shard_key_value = '4110'::bigint)
               ->  Bitmap Index Scan on _id_
                     Index Cond: (collection.shard_key_value = '4110'::bigint)
(12 rows)

-- add $project
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$project": { "_id" : 1, "a.b": 1 } } ], "cursor": {} }');
                                              document                                               
---------------------------------------------------------------------
 { "_id" : "1", "a" : { "b" : [ "x", { "$numberInt" : "1" }, { "$numberDouble" : "2.0" }, true ] } }
 { "_id" : "2", "a" : { "b" : { "c" : { "$numberInt" : "3" } } } }
 { "_id" : "3" }
(3 rows)

EXPLAIN (COSTS OFF, VERBOSE ON) SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$project": { "_id" : 1, "a.b": 1 } }, { "$set": { "newField2": "someOtherField" } }], "cursor": {} }');

---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Output: remote_scan.document
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Query: SELECT documentdb_api_internal.bson_dollar_add_fields(documentdb_api_internal.bson_dollar_project(document, '{ "_id" : { "$numberInt" : "1" }, "a.b" : { "$numberInt" : "1" } }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson), '{ "newField2" : "someOtherField" }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson) AS document FROM documentdb_data.documents_4110_411001 collection WHERE (shard_key_value OPERATOR(pg_catalog.=) '4110'::bigint)
         Node: host=localhost port=58070 dbname=regression
         ->  Bitmap Heap Scan on documentdb_data.documents_4110_411001 collection
               Output: documentdb_api_internal.bson_dollar_add_fields(documentdb_api_internal.bson_dollar_project(document, '{ "_id" : { "$numberInt" : "1" }, "a.b" : { "$numberInt" : "1" } }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson), '{ "newField2" : "someOtherField" }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson)
               Recheck Cond: (collection.shard_key_value = '4110'::bigint)
               ->  Bitmap Index Scan on _id_
                     Index Cond: (collection.shard_key_value = '4110'::bigint)
(12 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$project": { "_id" : 1, "a.b": 1 } }, { "$set": { "newField2": "someOtherField" } }], "cursor": {} }');
                                                              document                                                               
---------------------------------------------------------------------
 { "_id" : "1", "a" : { "b" : [ "x", { "$numberInt" : "1" }, { "$numberDouble" : "2.0" }, true ] }, "newField2" : "someOtherField" }
 { "_id" : "2", "a" : { "b" : { "c" : { "$numberInt" : "3" } } }, "newField2" : "someOtherField" }
 { "_id" : "3", "newField2" : "someOtherField" }
(3 rows)

-- add $unset
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$unset": "_id" }, { "$set": { "newField2": "someOtherField" } }], "cursor": {} }');
                                                                        document                                                                         
---------------------------------------------------------------------
 { "int" : { "$numberInt" : "10" }, "a" : { "b" : [ "x", { "$numberInt" : "1" }, { "$numberDouble" : "2.0" }, true ] }, "newField2" : "someOtherField" }
 { "double" : { "$numberDouble" : "2.0" }, "a" : { "b" : { "c" : { "$numberInt" : "3" } } }, "newField2" : "someOtherField" }
 { "boolean" : false, "a" : "no", "b" : "yes", "c" : true, "newField2" : "someOtherField" }
(3 rows)

-- add skip
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$project": { "_id" : 1, "a.b": 1 } }, { "$skip": 1 }], "cursor": {} }');
                             document                              
---------------------------------------------------------------------
 { "_id" : "2", "a" : { "b" : { "c" : { "$numberInt" : "3" } } } }
 { "_id" : "3" }
(2 rows)

EXPLAIN (COSTS OFF, VERBOSE ON) SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$project": { "_id" : 1, "a.b": 1 } }, { "$skip": 1 }], "cursor": {} }');
                                                                                                                                                                                                                           QUERY PLAN                                                                                                                                                                                                                           
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Output: remote_scan.document
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Query: SELECT documentdb_api_internal.bson_dollar_project(document, '{ "_id" : { "$numberInt" : "1" }, "a.b" : { "$numberInt" : "1" } }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson) AS document FROM documentdb_data.documents_4110_411001 collection WHERE (shard_key_value OPERATOR(pg_catalog.=) '4110'::bigint) OFFSET '1'::bigint
         Node: host=localhost port=58070 dbname=regression
         ->  Limit
               Output: (documentdb_api_internal.bson_dollar_project(document, '{ "_id" : { "$numberInt" : "1" }, "a.b" : { "$numberInt" : "1" } }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson))
               ->  Bitmap Heap Scan on documentdb_data.documents_4110_411001 collection
                     Output: documentdb_api_internal.bson_dollar_project(document, '{ "_id" : { "$numberInt" : "1" }, "a.b" : { "$numberInt" : "1" } }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson)
                     Recheck Cond: (collection.shard_key_value = '4110'::bigint)
                     ->  Bitmap Index Scan on _id_
                           Index Cond: (collection.shard_key_value = '4110'::bigint)
(14 rows)

-- add limit
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$project": { "_id" : 1, "a.b": 1 } }, { "$limit": 2 }], "cursor": {} }');
                                              document                                               
---------------------------------------------------------------------
 { "_id" : "1", "a" : { "b" : [ "x", { "$numberInt" : "1" }, { "$numberDouble" : "2.0" }, true ] } }
 { "_id" : "2", "a" : { "b" : { "c" : { "$numberInt" : "3" } } } }
(2 rows)

EXPLAIN (COSTS OFF, VERBOSE ON) SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$project": { "_id" : 1, "a.b": 1 } }, { "$limit": 2 }], "cursor": {} }');
                                                                                                                                                                                                                          QUERY PLAN                                                                                                                                                                                                                           
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Output: remote_scan.document
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Query: SELECT documentdb_api_internal.bson_dollar_project(document, '{ "_id" : { "$numberInt" : "1" }, "a.b" : { "$numberInt" : "1" } }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson) AS document FROM documentdb_data.documents_4110_411001 collection WHERE (shard_key_value OPERATOR(pg_catalog.=) '4110'::bigint) LIMIT '2'::bigint
         Node: host=localhost port=58070 dbname=regression
         ->  Limit
               Output: (documentdb_api_internal.bson_dollar_project(document, '{ "_id" : { "$numberInt" : "1" }, "a.b" : { "$numberInt" : "1" } }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson))
               ->  Bitmap Heap Scan on documentdb_data.documents_4110_411001 collection
                     Output: documentdb_api_internal.bson_dollar_project(document, '{ "_id" : { "$numberInt" : "1" }, "a.b" : { "$numberInt" : "1" } }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson)
                     Recheck Cond: (collection.shard_key_value = '4110'::bigint)
                     ->  Bitmap Index Scan on _id_
                           Index Cond: (collection.shard_key_value = '4110'::bigint)
(14 rows)

-- add skip + limit
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$project": { "_id" : 1, "a.b": 1 } }, { "$limit": 1 }, { "$skip": 1 }], "cursor": {} }');
 document 
---------------------------------------------------------------------
(0 rows)

EXPLAIN (COSTS OFF, VERBOSE ON) SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$project": { "_id" : 1, "a.b": 1 } }, { "$limit": 1 }, { "$skip": 1 }], "cursor": {} }');

---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Output: remote_scan.document
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Query: SELECT document FROM (SELECT documentdb_api_internal.bson_dollar_project(collection.document, '{ "_id" : { "$numberInt" : "1" }, "a.b" : { "$numberInt" : "1" } }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson) AS document FROM documentdb_data.documents_4110_411001 collection WHERE (collection.shard_key_value OPERATOR(pg_catalog.=) '4110'::bigint) LIMIT '1'::bigint) agg_stage_2 OFFSET '1'::bigint
         Node: host=localhost port=58070 dbname=regression
         ->  Limit
               Output: (documentdb_api_internal.bson_dollar_project(collection.document, '{ "_id" : { "$numberInt" : "1" }, "a.b" : { "$numberInt" : "1" } }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson))
               ->  Limit
                     Output: (documentdb_api_internal.bson_dollar_project(collection.document, '{ "_id" : { "$numberInt" : "1" }, "a.b" : { "$numberInt" : "1" } }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson))
                     ->  Seq Scan on documentdb_data.documents_4110_411001 collection
                           Output: documentdb_api_internal.bson_dollar_project(collection.document, '{ "_id" : { "$numberInt" : "1" }, "a.b" : { "$numberInt" : "1" } }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson)
(13 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$project": { "_id" : 1, "a.b": 1 } }, { "$skip": 1 }, { "$limit": 1 }], "cursor": {} }');
                             document                              
---------------------------------------------------------------------
 { "_id" : "2", "a" : { "b" : { "c" : { "$numberInt" : "3" } } } }
(1 row)

EXPLAIN (COSTS OFF, VERBOSE ON) SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$project": { "_id" : 1, "a.b": 1 } }, { "$skip": 1 }, { "$limit": 1 }], "cursor": {} }');

---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Output: remote_scan.document
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Query: SELECT document FROM (SELECT documentdb_api_internal.bson_dollar_project(collection.document, '{ "_id" : { "$numberInt" : "1" }, "a.b" : { "$numberInt" : "1" } }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson) AS document FROM documentdb_data.documents_4110_411001 collection WHERE (collection.shard_key_value OPERATOR(pg_catalog.=) '4110'::bigint) OFFSET '1'::bigint) agg_stage_2 LIMIT '1'::bigint
         Node: host=localhost port=58070 dbname=regression
         ->  Limit
               Output: (documentdb_api_internal.bson_dollar_project(collection.document, '{ "_id" : { "$numberInt" : "1" }, "a.b" : { "$numberInt" : "1" } }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson))
               ->  Limit
                     Output: (documentdb_api_internal.bson_dollar_project(collection.document, '{ "_id" : { "$numberInt" : "1" }, "a.b" : { "$numberInt" : "1" } }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson))
                     ->  Bitmap Heap Scan on documentdb_data.documents_4110_411001 collection
                           Output: documentdb_api_internal.bson_dollar_project(collection.document, '{ "_id" : { "$numberInt" : "1" }, "a.b" : { "$numberInt" : "1" } }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson)
                           Recheck Cond: (collection.shard_key_value = '4110'::bigint)
                           ->  Bitmap Index Scan on _id_
                                 Index Cond: (collection.shard_key_value = '4110'::bigint)
(16 rows)

-- try match
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$match": { "_id": { "$gt": "1" } } }], "cursor": {} }');
                                                 document                                                  
---------------------------------------------------------------------
 { "_id" : "2", "double" : { "$numberDouble" : "2.0" }, "a" : { "b" : { "c" : { "$numberInt" : "3" } } } }
 { "_id" : "3", "boolean" : false, "a" : "no", "b" : "yes", "c" : true }
(2 rows)

EXPLAIN (COSTS OFF, VERBOSE ON) SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$match": { "_id": { "$gt": "1" } } }], "cursor": {} }');
                                                                                                                                                              QUERY PLAN                                                                                                                                                               
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Output: remote_scan.document
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Query: SELECT document FROM documentdb_data.documents_4110_411001 collection WHERE ((document OPERATOR(documentdb_api_catalog.#>) '{ "_id" : "1" }'::documentdb_core.bsonquery) AND (object_id OPERATOR(documentdb_core.>) '{ "" : "1" }'::documentdb_core.bson) AND (shard_key_value OPERATOR(pg_catalog.=) '4110'::bigint))
         Node: host=localhost port=58070 dbname=regression
         ->  Index Scan using _id_ on documentdb_data.documents_4110_411001 collection
               Output: document
               Index Cond: ((collection.shard_key_value = '4110'::bigint) AND (collection.object_id OPERATOR(documentdb_core.>) '{ "" : "1" }'::documentdb_core.bson))
               Filter: (collection.document OPERATOR(documentdb_api_catalog.@>) '{ "_id" : "1" }'::documentdb_core.bson)
(11 rows)

-- match + project
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$match": { "_id": { "$gt": "1" } } }, { "$project": { "a.b": 1 } }], "cursor": {} }');
                             document                              
---------------------------------------------------------------------
 { "_id" : "2", "a" : { "b" : { "c" : { "$numberInt" : "3" } } } }
 { "_id" : "3" }
(2 rows)

EXPLAIN (COSTS OFF, VERBOSE ON) SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$match": { "_id": { "$gt": "1" } } }, { "$project": { "a.b": 1 } }], "cursor": {} }');

---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Output: remote_scan.document
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Query: SELECT documentdb_api_internal.bson_dollar_project(document, '{ "a.b" : { "$numberInt" : "1" } }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson) AS document FROM documentdb_data.documents_4110_411001 collection WHERE ((document OPERATOR(documentdb_api_catalog.#>) '{ "_id" : "1" }'::documentdb_core.bsonquery) AND (object_id OPERATOR(documentdb_core.>) '{ "" : "1" }'::documentdb_core.bson) AND (shard_key_value OPERATOR(pg_catalog.=) '4110'::bigint))
         Node: host=localhost port=58070 dbname=regression
         ->  Index Scan using _id_ on documentdb_data.documents_4110_411001 collection
               Output: documentdb_api_internal.bson_dollar_project(document, '{ "a.b" : { "$numberInt" : "1" } }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson)
               Index Cond: ((collection.shard_key_value = '4110'::bigint) AND (collection.object_id OPERATOR(documentdb_core.>) '{ "" : "1" }'::documentdb_core.bson))
               Filter: (collection.document OPERATOR(documentdb_api_catalog.@>) '{ "_id" : "1" }'::documentdb_core.bson)
(11 rows)

-- match + project + match
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$match": { "_id": { "$gt": "1" } } }, { "$project": { "a.b": 1, "c": "$_id", "_id": 0 } }, { "$match": { "c": { "$gt": "2" } } }], "cursor": {} }');
   document    
---------------------------------------------------------------------
 { "c" : "3" }
(1 row)

EXPLAIN (COSTS OFF, VERBOSE ON) SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$match": { "_id": { "$gt": "1" } } }, { "$project": { "a.b": 1, "c": "$_id", "_id": 0 } }, { "$match": { "c": { "$gt": "2" } } }], "cursor": {} }');

---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Output: remote_scan.document
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Query: SELECT documentdb_api_internal.bson_dollar_project(document, '{ "a.b" : { "$numberInt" : "1" }, "c" : "$_id", "_id" : { "$numberInt" : "0" } }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson) AS document FROM documentdb_data.documents_4110_411001 collection WHERE ((documentdb_api_internal.bson_dollar_project(document, '{ "a.b" : { "$numberInt" : "1" }, "c" : "$_id", "_id" : { "$numberInt" : "0" } }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson) OPERATOR(documentdb_api_catalog.#>) '{ "c" : "2" }'::documentdb_core.bsonquery) AND ((document OPERATOR(documentdb_api_catalog.#>) '{ "_id" : "1" }'::documentdb_core.bsonquery) AND (object_id OPERATOR(documentdb_core.>) '{ "" : "1" }'::documentdb_core.bson) AND (shard_key_value OPERATOR(pg_catalog.=) '4110'::bigint)))
         Node: host=localhost port=58070 dbname=regression
         ->  Index Scan using _id_ on documentdb_data.documents_4110_411001 collection
               Output: documentdb_api_internal.bson_dollar_project(document, '{ "a.b" : { "$numberInt" : "1" }, "c" : "$_id", "_id" : { "$numberInt" : "0" } }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson)
               Index Cond: ((collection.shard_key_value = '4110'::bigint) AND (collection.object_id OPERATOR(documentdb_core.>) '{ "" : "1" }'::documentdb_core.bson))
               Filter: ((collection.document OPERATOR(documentdb_api_catalog.@>) '{ "_id" : "1" }'::documentdb_core.bson) AND (documentdb_api_internal.bson_dollar_project(collection.document, '{ "a.b" : { "$numberInt" : "1" }, "c" : "$_id", "_id" : { "$numberInt" : "0" } }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson) OPERATOR(documentdb_api_catalog.@>) '{ "c" : "2" }'::documentdb_core.bson))
(11 rows)

-- unwind
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$unwind": "$a.b" } ], "cursor": {} }');
                                                 document                                                  
---------------------------------------------------------------------
 { "_id" : "1", "int" : { "$numberInt" : "10" }, "a" : { "b" : "x" } }
 { "_id" : "1", "int" : { "$numberInt" : "10" }, "a" : { "b" : { "$numberInt" : "1" } } }
 { "_id" : "1", "int" : { "$numberInt" : "10" }, "a" : { "b" : { "$numberDouble" : "2.0" } } }
 { "_id" : "1", "int" : { "$numberInt" : "10" }, "a" : { "b" : true } }
 { "_id" : "2", "double" : { "$numberDouble" : "2.0" }, "a" : { "b" : { "c" : { "$numberInt" : "3" } } } }
(5 rows)

-- match and then unwind
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$match": { "_id": { "$gt": "1" } } }, { "$unwind": "$a.b" } ], "cursor": {} }');
                                                 document                                                  
---------------------------------------------------------------------
 { "_id" : "2", "double" : { "$numberDouble" : "2.0" }, "a" : { "b" : { "c" : { "$numberInt" : "3" } } } }
(1 row)

-- unwind and then match
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$unwind": "$a.b" }, { "$match": { "$expr": { "$not": { "$isArray": "$a.b" } } } } ], "cursor": {} }');
                                                 document                                                  
---------------------------------------------------------------------
 { "_id" : "1", "int" : { "$numberInt" : "10" }, "a" : { "b" : "x" } }
 { "_id" : "1", "int" : { "$numberInt" : "10" }, "a" : { "b" : { "$numberInt" : "1" } } }
 { "_id" : "1", "int" : { "$numberInt" : "10" }, "a" : { "b" : { "$numberDouble" : "2.0" } } }
 { "_id" : "1", "int" : { "$numberInt" : "10" }, "a" : { "b" : true } }
 { "_id" : "2", "double" : { "$numberDouble" : "2.0" }, "a" : { "b" : { "c" : { "$numberInt" : "3" } } } }
(5 rows)

-- unwind and addfields
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$unwind": "$a.b" }, { "$addFields": { "xyz": "$_id" } } ], "cursor": {} }');
                                                        document                                                        
---------------------------------------------------------------------
 { "_id" : "1", "int" : { "$numberInt" : "10" }, "a" : { "b" : "x" }, "xyz" : "1" }
 { "_id" : "1", "int" : { "$numberInt" : "10" }, "a" : { "b" : { "$numberInt" : "1" } }, "xyz" : "1" }
 { "_id" : "1", "int" : { "$numberInt" : "10" }, "a" : { "b" : { "$numberDouble" : "2.0" } }, "xyz" : "1" }
 { "_id" : "1", "int" : { "$numberInt" : "10" }, "a" : { "b" : true }, "xyz" : "1" }
 { "_id" : "2", "double" : { "$numberDouble" : "2.0" }, "a" : { "b" : { "c" : { "$numberInt" : "3" } } }, "xyz" : "2" }
(5 rows)

-- $addFields then addFields is inlined.
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$addFields": { "x": 1, "y": 2, "xyz": 3 } }, { "$addFields": { "xyz": "$_id" } } ], "cursor": {} }');
                                                                                                   document                                                                                                    
---------------------------------------------------------------------
 { "_id" : "1", "int" : { "$numberInt" : "10" }, "a" : { "b" : [ "x", { "$numberInt" : "1" }, { "$numberDouble" : "2.0" }, true ] }, "x" : { "$numberInt" : "1" }, "y" : { "$numberInt" : "2" }, "xyz" : "1" }
 { "_id" : "2", "double" : { "$numberDouble" : "2.0" }, "a" : { "b" : { "c" : { "$numberInt" : "3" } } }, "x" : { "$numberInt" : "1" }, "y" : { "$numberInt" : "2" }, "xyz" : "2" }
 { "_id" : "3", "boolean" : false, "a" : "no", "b" : "yes", "c" : true, "x" : { "$numberInt" : "1" }, "y" : { "$numberInt" : "2" }, "xyz" : "3" }
(3 rows)

EXPLAIN (COSTS OFF, VERBOSE ON ) SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$addFields": { "x": 1, "y": 2, "xyz": 3 } }, { "$addFields": { "xyz": "$_id" } } ], "cursor": {} }');

---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Output: remote_scan.document
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Query: SELECT documentdb_api_internal.bson_dollar_add_fields(documentdb_api_internal.bson_dollar_add_fields(document, '{ "x" : { "$numberInt" : "1" }, "y" : { "$numberInt" : "2" }, "xyz" : { "$numberInt" : "3" } }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson), '{ "xyz" : "$_id" }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson) AS document FROM documentdb_data.documents_4110_411001 collection WHERE (shard_key_value OPERATOR(pg_catalog.=) '4110'::bigint)
         Node: host=localhost port=58070 dbname=regression
         ->  Bitmap Heap Scan on documentdb_data.documents_4110_411001 collection
               Output: documentdb_api_internal.bson_dollar_add_fields(documentdb_api_internal.bson_dollar_add_fields(document, '{ "x" : { "$numberInt" : "1" }, "y" : { "$numberInt" : "2" }, "xyz" : { "$numberInt" : "3" } }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson), '{ "xyz" : "$_id" }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson)
               Recheck Cond: (collection.shard_key_value = '4110'::bigint)
               ->  Bitmap Index Scan on _id_
                     Index Cond: (collection.shard_key_value = '4110'::bigint)
(12 rows)

-- $project then addFields can be inlined only on exclusion today
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$project": { "a": 0, "boolean": 0 } }, { "$addFields": { "a": 1, "xyz": "$_id" } } ], "cursor": {} }');
                                              document                                              
---------------------------------------------------------------------
 { "_id" : "1", "int" : { "$numberInt" : "10" }, "a" : { "$numberInt" : "1" }, "xyz" : "1" }
 { "_id" : "2", "double" : { "$numberDouble" : "2.0" }, "a" : { "$numberInt" : "1" }, "xyz" : "2" }
 { "_id" : "3", "a" : { "$numberInt" : "1" }, "b" : "yes", "c" : true, "xyz" : "3" }
(3 rows)

EXPLAIN (COSTS OFF, VERBOSE ON ) SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$project": { "a": 0, "boolean": 0 } }, { "$addFields": { "a": 1, "xyz": "$_id" } } ], "cursor": {} }');
                                                                                                                                                                                                                      QUERY PLAN                                                                                                                                                                                                                      
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Output: remote_scan.document
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Query: SELECT documentdb_api_internal.bson_dollar_add_fields(document, '{ "a" : { "$numberInt" : "1" }, "xyz" : "$_id", "boolean" : "$$REMOVE" }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson) AS document FROM documentdb_data.documents_4110_411001 collection WHERE (shard_key_value OPERATOR(pg_catalog.=) '4110'::bigint)
         Node: host=localhost port=58070 dbname=regression
         ->  Bitmap Heap Scan on documentdb_data.documents_4110_411001 collection
               Output: documentdb_api_internal.bson_dollar_add_fields(document, '{ "a" : { "$numberInt" : "1" }, "xyz" : "$_id", "boolean" : "$$REMOVE" }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson)
               Recheck Cond: (collection.shard_key_value = '4110'::bigint)
               ->  Bitmap Index Scan on _id_
                     Index Cond: (collection.shard_key_value = '4110'::bigint)
(12 rows)

-- error scenarios for $project
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$project": { "a": 0, "boolean": 1 } }, { "$addFields": { "a": 1, "xyz": "$_id" } } ], "cursor": {} }');
ERROR:  Cannot do exclusion on field boolean in inclusion projection.
-- replaceRoot
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$addFields": { "e": {  "f": "$a.b" } } }, { "$replaceRoot": { "newRoot": "$e" } } ], "cursor": {} }');
                                   document                                   
---------------------------------------------------------------------
 { "f" : [ "x", { "$numberInt" : "1" }, { "$numberDouble" : "2.0" }, true ] }
 { "f" : { "c" : { "$numberInt" : "3" } } }
 { }
(3 rows)

-- count
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$count": "d" }], "cursor": {} }');
             document             
---------------------------------------------------------------------
 { "d" : { "$numberInt" : "3" } }
(1 row)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$unwind": "$a.b" }, { "$count": "d" }, { "$addFields": { "e": "$d" } }], "cursor": {} }');
                            document                            
---------------------------------------------------------------------
 { "d" : { "$numberInt" : "5" }, "e" : { "$numberInt" : "5" } }
(1 row)

-- replaceWith
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$addFields": { "e": {  "f": "$a.b" } } }, { "$replaceWith": "$e" } ], "cursor": {} }');
                                   document                                   
---------------------------------------------------------------------
 { "f" : [ "x", { "$numberInt" : "1" }, { "$numberDouble" : "2.0" }, true ] }
 { "f" : { "c" : { "$numberInt" : "3" } } }
 { }
(3 rows)

-- sort
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$sort": { "_id": 1 } }], "cursor": {} }');
                                                               document                                                               
---------------------------------------------------------------------
 { "_id" : "1", "int" : { "$numberInt" : "10" }, "a" : { "b" : [ "x", { "$numberInt" : "1" }, { "$numberDouble" : "2.0" }, true ] } }
 { "_id" : "2", "double" : { "$numberDouble" : "2.0" }, "a" : { "b" : { "c" : { "$numberInt" : "3" } } } }
 { "_id" : "3", "boolean" : false, "a" : "no", "b" : "yes", "c" : true }
(3 rows)

-- sort + match
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$sort": { "_id": 1 } }, { "$match": { "_id": { "$gt": "1" } } } ], "cursor": {} }');
                                                 document                                                  
---------------------------------------------------------------------
 { "_id" : "2", "double" : { "$numberDouble" : "2.0" }, "a" : { "b" : { "c" : { "$numberInt" : "3" } } } }
 { "_id" : "3", "boolean" : false, "a" : "no", "b" : "yes", "c" : true }
(2 rows)

-- match + sort
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$match": { "_id": { "$gt": "1" } } }, { "$sort": { "_id": 1 } } ], "cursor": {} }');
                                                 document                                                  
---------------------------------------------------------------------
 { "_id" : "2", "double" : { "$numberDouble" : "2.0" }, "a" : { "b" : { "c" : { "$numberInt" : "3" } } } }
 { "_id" : "3", "boolean" : false, "a" : "no", "b" : "yes", "c" : true }
(2 rows)

-- sortByCount
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$sortByCount": { "$eq": [ { "$mod": [ { "$toInt": "$_id" }, 2 ] }, 0  ] } }, { "$sort": { "_id": 1 } }], "cursor": {} }');
                      document                       
---------------------------------------------------------------------
 { "_id" : false, "count" : { "$numberInt" : "2" } }
 { "_id" : true, "count" : { "$numberInt" : "1" } }
(2 rows)

-- $group
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$group": { "_id": { "$mod": [ { "$toInt": "$_id" }, 2 ] }, "d": { "$max": "$_id" }, "e": { "$count": 1 } } }], "cursor": {} }');
                                  document                                   
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "0" }, "d" : "2", "e" : { "$numberInt" : "1" } }
 { "_id" : { "$numberInt" : "1" }, "d" : "3", "e" : { "$numberInt" : "2" } }
(2 rows)

-- $group with keys having dotted path
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$group": { "_id": { "$mod": [ { "$toInt": "$_id" }, 2 ] }, "d.e": { "$max": "$_id" }, "e": { "$count": 1 } } }], "cursor": {} }');
ERROR:  The field name d.e cannot contain '.'
-- $group with first/last
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$group": { "_id": { "$mod": [ { "$toInt": "$_id" }, 2 ] }, "d": { "$first": "$_id" }, "e": { "$last":  "$_id" } } }], "cursor": {} }');
                         document                         
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "0" }, "d" : "2", "e" : "2" }
 { "_id" : { "$numberInt" : "1" }, "d" : "1", "e" : "3" }
(2 rows)

EXPLAIN (COSTS OFF, VERBOSE ON) SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$group": { "_id": { "$mod": [ { "$toInt": "$_id" }, 2 ] }, "d": { "$first": "$_id" }, "e": { "$last":  "$_id" } } }], "cursor": {} }');

---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Output: remote_scan.document
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Query: SELECT documentdb_core.bson_repath_and_build(c1, c2, c3, c4, c5, c6) AS document FROM (SELECT '_id'::text AS c1, documentdb_api_internal.bson_expression_get(agg_stage_0_1.document, '{ "" : { "$mod" : [ { "$toInt" : "$_id" }, { "$numberInt" : "2" } ] } }'::documentdb_core.bson, true, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson) AS c2, 'd'::text AS c3, documentdb_api_catalog.bsonfirstonsorted(documentdb_api_internal.bson_expression_get(agg_stage_0_1.document, '{ "" : "$_id" }'::documentdb_core.bson, true, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson)) AS c4, 'e'::text AS c5, documentdb_api_catalog.bsonlastonsorted(documentdb_api_internal.bson_expression_get(agg_stage_0_1.document, '{ "" : "$_id" }'::documentdb_core.bson, true, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson)) AS c6 FROM (SELECT collection.document FROM documentdb_data.documents_4110_411001 collection WHERE (collection.shard_key_value OPERATOR(pg_catalog.=) '4110'::bigint)) agg_stage_0_1 GROUP BY (documentdb_api_internal.bson_expression_get(agg_stage_0_1.document, '{ "" : { "$mod" : [ { "$toInt" : "$_id" }, { "$numberInt" : "2" } ] } }'::documentdb_core.bson, true, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson))) agg_stage_0
         Node: host=localhost port=58070 dbname=regression
         ->  Subquery Scan on agg_stage_0
               Output: documentdb_core.bson_repath_and_build(agg_stage_0.c1, agg_stage_0.c2, agg_stage_0.c3, agg_stage_0.c4, agg_stage_0.c5, agg_stage_0.c6)
               ->  GroupAggregate
                     Output: '_id'::text, (documentdb_api_internal.bson_expression_get(collection.document, '{ "" : { "$mod" : [ { "$toInt" : "$_id" }, { "$numberInt" : "2" } ] } }'::documentdb_core.bson, true, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson)), 'd'::text, documentdb_api_catalog.bsonfirstonsorted(documentdb_api_internal.bson_expression_get(collection.document, '{ "" : "$_id" }'::documentdb_core.bson, true, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson)), 'e'::text, documentdb_api_catalog.bsonlastonsorted(documentdb_api_internal.bson_expression_get(collection.document, '{ "" : "$_id" }'::documentdb_core.bson, true, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson))
                     Group Key: (documentdb_api_internal.bson_expression_get(collection.document, '{ "" : { "$mod" : [ { "$toInt" : "$_id" }, { "$numberInt" : "2" } ] } }'::documentdb_core.bson, true, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson))
                     ->  Sort
                           Output: (documentdb_api_internal.bson_expression_get(collection.document, '{ "" : { "$mod" : [ { "$toInt" : "$_id" }, { "$numberInt" : "2" } ] } }'::documentdb_core.bson, true, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson)), collection.document
                           Sort Key: (documentdb_api_internal.bson_expression_get(collection.document, '{ "" : { "$mod" : [ { "$toInt" : "$_id" }, { "$numberInt" : "2" } ] } }'::documentdb_core.bson, true, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson))
                           ->  Bitmap Heap Scan on documentdb_data.documents_4110_411001 collection
                                 Output: documentdb_api_internal.bson_expression_get(collection.document, '{ "" : { "$mod" : [ { "$toInt" : "$_id" }, { "$numberInt" : "2" } ] } }'::documentdb_core.bson, true, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson), collection.document
                                 Recheck Cond: (collection.shard_key_value = '4110'::bigint)
                                 ->  Bitmap Index Scan on _id_
                                       Index Cond: (collection.shard_key_value = '4110'::bigint)
(20 rows)

-- $group with first/last sorted (TODO)
-- add $sample
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$sample": { "size": 2 } }, { "$project": { "_id": "1" } } ], "cursor": {} }');
    document     
---------------------------------------------------------------------
 { "_id" : "1" }
 { "_id" : "1" }
(2 rows)

EXPLAIN (COSTS OFF, VERBOSE ON) SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$sample": { "size": 2 } }, { "$project": { "_id": "1" } } ], "cursor": {} }');

---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Output: remote_scan.document
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Query: SELECT documentdb_api_internal.bson_dollar_project(document, '{ "_id" : "1" }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson) AS document FROM (SELECT collection.document FROM documentdb_data.documents_4110_411001 collection TABLESAMPLE public.system_rows ('2'::bigint) WHERE (collection.shard_key_value OPERATOR(pg_catalog.=) '4110'::bigint) ORDER BY (random()) LIMIT '2'::bigint) agg_stage_1
         Node: host=localhost port=58070 dbname=regression
         ->  Subquery Scan on agg_stage_1
               Output: documentdb_api_internal.bson_dollar_project(agg_stage_1.document, '{ "_id" : "1" }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson)
               ->  Limit
                     Output: collection.document, (random())
                     ->  Sort
                           Output: collection.document, (random())
                           Sort Key: (random())
                           ->  Sample Scan on documentdb_data.documents_4110_411001 collection
                                 Output: collection.document, random()
                                 Sampling: system_rows ('2'::bigint)
(17 rows)

-- Sample after pass-through stages
EXPLAIN (COSTS OFF, VERBOSE ON) SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$project": { "_id": "1" } }, { "$sample": { "size": 2 } }], "cursor": {} }');
                                                                                                                                                                                                                                 QUERY PLAN                                                                                                                                                                                                                                  
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Output: remote_scan.document
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Query: SELECT documentdb_api_internal.bson_dollar_project(document, '{ "_id" : "1" }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson) AS document FROM documentdb_data.documents_4110_411001 collection TABLESAMPLE public.system_rows ('2'::bigint) WHERE (shard_key_value OPERATOR(pg_catalog.=) '4110'::bigint) ORDER BY (random()) LIMIT '2'::bigint
         Node: host=localhost port=58070 dbname=regression
         ->  Limit
               Output: (documentdb_api_internal.bson_dollar_project(document, '{ "_id" : "1" }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson)), (random())
               ->  Sort
                     Output: (documentdb_api_internal.bson_dollar_project(document, '{ "_id" : "1" }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson)), (random())
                     Sort Key: (random())
                     ->  Sample Scan on documentdb_data.documents_4110_411001 collection
                           Output: documentdb_api_internal.bson_dollar_project(document, '{ "_id" : "1" }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson), random()
                           Sampling: system_rows ('2'::bigint)
(15 rows)

-- Sample after sample
EXPLAIN (COSTS OFF, VERBOSE ON) SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$sample": { "size": 3 } }, { "$sample": { "size": 2 } }], "cursor": {} }');
                                                                                                                                                              QUERY PLAN                                                                                                                                                              
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Output: remote_scan.document
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Query: SELECT document FROM (SELECT collection.document FROM documentdb_data.documents_4110_411001 collection TABLESAMPLE public.system_rows ('3'::bigint) WHERE (collection.shard_key_value OPERATOR(pg_catalog.=) '4110'::bigint) ORDER BY (random()) LIMIT '3'::bigint) agg_stage_1 ORDER BY (random()) LIMIT '2'::bigint
         Node: host=localhost port=58070 dbname=regression
         ->  Limit
               Output: agg_stage_1.document, (random())
               ->  Sort
                     Output: agg_stage_1.document, (random())
                     Sort Key: (random())
                     ->  Subquery Scan on agg_stage_1
                           Output: agg_stage_1.document, random()
                           ->  Limit
                                 Output: collection.document, (random())
                                 ->  Sort
                                       Output: collection.document, (random())
                                       Sort Key: (random())
                                       ->  Sample Scan on documentdb_data.documents_4110_411001 collection
                                             Output: collection.document, random()
                                             Sampling: system_rows ('3'::bigint)
(22 rows)

-- Sample after other stage
EXPLAIN (COSTS OFF, VERBOSE ON) SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$unwind": "$a.b" }, { "$sample": { "size": 2 } }], "cursor": {} }');
                                                                                                                                                       QUERY PLAN                                                                                                                                                       
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Output: remote_scan.document
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Query: SELECT document FROM (SELECT documentdb_api_catalog.bson_dollar_unwind(collection.document, '$a.b'::text) AS document FROM documentdb_data.documents_4110_411001 collection WHERE (collection.shard_key_value OPERATOR(pg_catalog.=) '4110'::bigint)) agg_stage_1 ORDER BY (random()) LIMIT '2'::bigint
         Node: host=localhost port=58070 dbname=regression
         ->  Limit
               Output: agg_stage_1.document, (random())
               ->  Sort
                     Output: agg_stage_1.document, (random())
                     Sort Key: (random())
                     ->  Subquery Scan on agg_stage_1
                           Output: agg_stage_1.document, random()
                           ->  ProjectSet
                                 Output: documentdb_api_catalog.bson_dollar_unwind(collection.document, '$a.b'::text)
                                 ->  Bitmap Heap Scan on documentdb_data.documents_4110_411001 collection
                                       Output: collection.shard_key_value, collection.object_id, collection.document, collection.creation_time
                                       Recheck Cond: (collection.shard_key_value = '4110'::bigint)
                                       ->  Bitmap Index Scan on _id_
                                             Index Cond: (collection.shard_key_value = '4110'::bigint)
(21 rows)

-- internalInhibitOptimization
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$addFields": { "newField" : "1", "a.y": ["p", "q"] } }, { "$_internalInhibitOptimization": 1 }, { "$addFields": { "newField2": "someOtherField" } } ], "cursor": {} }');
                                                                                                  document                                                                                                  
---------------------------------------------------------------------
 { "_id" : "1", "int" : { "$numberInt" : "10" }, "a" : { "b" : [ "x", { "$numberInt" : "1" }, { "$numberDouble" : "2.0" }, true ], "y" : [ "p", "q" ] }, "newField" : "1", "newField2" : "someOtherField" }
 { "_id" : "2", "double" : { "$numberDouble" : "2.0" }, "a" : { "b" : { "c" : { "$numberInt" : "3" } }, "y" : [ "p", "q" ] }, "newField" : "1", "newField2" : "someOtherField" }
 { "_id" : "3", "boolean" : false, "b" : "yes", "c" : true, "newField" : "1", "a" : { "y" : [ "p", "q" ] }, "newField2" : "someOtherField" }
(3 rows)

EXPLAIN (COSTS OFF, VERBOSE ON) SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$addFields": { "newField" : "1", "a.y": ["p", "q"] } }, { "$_internalInhibitOptimization": 1 }, { "$addFields": { "newField2": "someOtherField" } } ], "cursor": {} }');

---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Output: remote_scan.document
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Query: WITH internalinhibitoptimization AS MATERIALIZED (SELECT documentdb_api_internal.bson_dollar_add_fields(collection.document, '{ "newField" : "1", "a.y" : [ "p", "q" ] }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson) AS document FROM documentdb_data.documents_4110_411001 collection WHERE (collection.shard_key_value OPERATOR(pg_catalog.=) '4110'::bigint)) SELECT documentdb_api_internal.bson_dollar_add_fields(document, '{ "newField2" : "someOtherField" }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson) AS document FROM internalinhibitoptimization inhibit_stage_1
         Node: host=localhost port=58070 dbname=regression
         ->  CTE Scan on internalinhibitoptimization inhibit_stage_1
               Output: documentdb_api_internal.bson_dollar_add_fields(inhibit_stage_1.document, '{ "newField2" : "someOtherField" }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson)
               CTE internalinhibitoptimization
                 ->  Bitmap Heap Scan on documentdb_data.documents_4110_411001 collection
                       Output: documentdb_api_internal.bson_dollar_add_fields(collection.document, '{ "newField" : "1", "a.y" : [ "p", "q" ] }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson)
                       Recheck Cond: (collection.shard_key_value = '4110'::bigint)
                       ->  Bitmap Index Scan on _id_
                             Index Cond: (collection.shard_key_value = '4110'::bigint)
(15 rows)

-- facet
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$facet": { "a" : [ { "$addFields": { "newField" : "1", "a.y": ["p", "q"] } } ] } } ], "cursor": {} }');
                                                                                                                                                                                                                        document                                                                                                                                                                                                                        
---------------------------------------------------------------------
 { "a" : [ { "_id" : "1", "int" : { "$numberInt" : "10" }, "a" : { "b" : [ "x", { "$numberInt" : "1" }, { "$numberDouble" : "2.0" }, true ], "y" : [ "p", "q" ] }, "newField" : "1" }, { "_id" : "2", "double" : { "$numberDouble" : "2.0" }, "a" : { "b" : { "c" : { "$numberInt" : "3" } }, "y" : [ "p", "q" ] }, "newField" : "1" }, { "_id" : "3", "boolean" : false, "b" : "yes", "c" : true, "newField" : "1", "a" : { "y" : [ "p", "q" ] } } ] }
(1 row)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$facet": { "a" : [ { "$addFields": { "newField" : "1", "a.y": ["p", "q"] } } ],  "b" : [ { "$count": "c" } ] } } ], "cursor": {} }');
                                                                                                                                                                                                                                              document                                                                                                                                                                                                                                              
---------------------------------------------------------------------
 { "a" : [ { "_id" : "1", "int" : { "$numberInt" : "10" }, "a" : { "b" : [ "x", { "$numberInt" : "1" }, { "$numberDouble" : "2.0" }, true ], "y" : [ "p", "q" ] }, "newField" : "1" }, { "_id" : "2", "double" : { "$numberDouble" : "2.0" }, "a" : { "b" : { "c" : { "$numberInt" : "3" } }, "y" : [ "p", "q" ] }, "newField" : "1" }, { "_id" : "3", "boolean" : false, "b" : "yes", "c" : true, "newField" : "1", "a" : { "y" : [ "p", "q" ] } } ], "b" : [ { "c" : { "$numberInt" : "3" } } ] }
(1 row)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$facet": { "a" : [ { "$addFields": { "newField" : "1", "a.y": ["p", "q"] } } ],  "b" : [ { "$count": "d" } ], "c": [ { "$unwind": "$a.b" } ] } } ], "cursor": {} }');
                                                                                                                                                                                                                                                                                                                                                                                                                                                                            document                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
---------------------------------------------------------------------
 { "a" : [ { "_id" : "1", "int" : { "$numberInt" : "10" }, "a" : { "b" : [ "x", { "$numberInt" : "1" }, { "$numberDouble" : "2.0" }, true ], "y" : [ "p", "q" ] }, "newField" : "1" }, { "_id" : "2", "double" : { "$numberDouble" : "2.0" }, "a" : { "b" : { "c" : { "$numberInt" : "3" } }, "y" : [ "p", "q" ] }, "newField" : "1" }, { "_id" : "3", "boolean" : false, "b" : "yes", "c" : true, "newField" : "1", "a" : { "y" : [ "p", "q" ] } } ], "b" : [ { "d" : { "$numberInt" : "3" } } ], "c" : [ { "_id" : "1", "int" : { "$numberInt" : "10" }, "a" : { "b" : "x" } }, { "_id" : "1", "int" : { "$numberInt" : "10" }, "a" : { "b" : { "$numberInt" : "1" } } }, { "_id" : "1", "int" : { "$numberInt" : "10" }, "a" : { "b" : { "$numberDouble" : "2.0" } } }, { "_id" : "1", "int" : { "$numberInt" : "10" }, "a" : { "b" : true } }, { "_id" : "2", "double" : { "$numberDouble" : "2.0" }, "a" : { "b" : { "c" : { "$numberInt" : "3" } } } } ] }
(1 row)

EXPlAIN (COSTS OFF, VERBOSE ON) SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$facet": { "a" : [ { "$addFields": { "newField" : "1", "a.y": ["p", "q"] } } ],  "b" : [ { "$count": "d" } ], "c": [ { "$unwind": "$a.b" } ] } } ], "cursor": {} }');
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        QUERY PLAN                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Output: remote_scan.document
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Query: WITH facet_base_0 AS (SELECT collection.document FROM documentdb_data.documents_4110_411001 collection WHERE (collection.shard_key_value OPERATOR(pg_catalog.=) '4110'::bigint)) SELECT documentdb_api_catalog.bson_object_agg(document) AS document FROM (SELECT COALESCE(documentdb_api_catalog.bson_array_agg(agg_stage_sub_1_1.document, 'a'::text), '{ "a" : [  ] }'::documentdb_core.bson) AS document FROM (SELECT documentdb_api_internal.bson_dollar_add_fields(facetsub_stage_1.document, '{ "newField" : "1", "a.y" : [ "p", "q" ] }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson) AS document FROM facet_base_0 facetsub_stage_1) agg_stage_sub_1_1 UNION ALL (SELECT COALESCE(documentdb_api_catalog.bson_array_agg(agg_stage_sub_1_1.document, 'b'::text), '{ "b" : [  ] }'::documentdb_core.bson) AS document FROM (SELECT documentdb_core.bson_repath_and_build('d'::text, documentdb_api_catalog.bsonsum('{ "" : { "$numberInt" : "1" } }'::documentdb_core.bson)) AS document FROM (SELECT facetsub_stage_2.document FROM facet_base_0 facetsub_stage_2) agg_stage_sub_1_0) agg_stage_sub_1_1 UNION ALL SELECT COALESCE(documentdb_api_catalog.bson_array_agg(agg_stage_sub_1_1.document, 'c'::text), '{ "c" : [  ] }'::documentdb_core.bson) AS document FROM (SELECT documentdb_api_catalog.bson_dollar_unwind(facetsub_stage_3.document, '$a.b'::text) AS document FROM facet_base_0 facetsub_stage_3) agg_stage_sub_1_1)) agg_stage_0
         Node: host=localhost port=58070 dbname=regression
         ->  Aggregate
               Output: documentdb_api_catalog.bson_object_agg((COALESCE(documentdb_api_catalog.bson_array_agg(documentdb_api_internal.bson_dollar_add_fields(facetsub_stage_1.document, '{ "newField" : "1", "a.y" : [ "p", "q" ] }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson), 'a'::text), '{ "a" : [  ] }'::documentdb_core.bson)))
               CTE facet_base_0
                 ->  Bitmap Heap Scan on documentdb_data.documents_4110_411001 collection
                       Output: collection.document
                       Recheck Cond: (collection.shard_key_value = '4110'::bigint)
                       ->  Bitmap Index Scan on _id_
                             Index Cond: (collection.shard_key_value = '4110'::bigint)
               ->  Append
                     ->  Aggregate
                           Output: COALESCE(documentdb_api_catalog.bson_array_agg(documentdb_api_internal.bson_dollar_add_fields(facetsub_stage_1.document, '{ "newField" : "1", "a.y" : [ "p", "q" ] }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson), 'a'::text), '{ "a" : [  ] }'::documentdb_core.bson)
                           ->  CTE Scan on facet_base_0 facetsub_stage_1
                                 Output: facetsub_stage_1.document
                     ->  Aggregate
                           Output: COALESCE(documentdb_api_catalog.bson_array_agg((documentdb_core.bson_repath_and_build('d'::text, documentdb_api_catalog.bsonsum('{ "" : { "$numberInt" : "1" } }'::documentdb_core.bson))), 'b'::text), '{ "b" : [  ] }'::documentdb_core.bson)
                           ->  Aggregate
                                 Output: documentdb_core.bson_repath_and_build('d'::text, documentdb_api_catalog.bsonsum('{ "" : { "$numberInt" : "1" } }'::documentdb_core.bson))
                                 ->  CTE Scan on facet_base_0 facetsub_stage_2
                                       Output: facetsub_stage_2.document
                     ->  Aggregate
                           Output: COALESCE(documentdb_api_catalog.bson_array_agg((documentdb_api_catalog.bson_dollar_unwind(facetsub_stage_3.document, '$a.b'::text)), 'c'::text), '{ "c" : [  ] }'::documentdb_core.bson)
                           ->  ProjectSet
                                 Output: documentdb_api_catalog.bson_dollar_unwind(facetsub_stage_3.document, '$a.b'::text)
                                 ->  CTE Scan on facet_base_0 facetsub_stage_3
                                       Output: facetsub_stage_3.document
(32 rows)

-- facet with parent transform:
SELECT document FROM bson_aggregation_pipeline('db', 
'{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$unwind": "$a.b" }, { "$facet": { "a" : [ { "$unset": "_id" } ],  "b" : [ { "$count": "d" } ], "c": [ { "$replaceWith": { "f": "$_id" } } ] } } ], "cursor": {} }');
                                                                                                                                                                                                                                                            document                                                                                                                                                                                                                                                             
---------------------------------------------------------------------
 { "a" : [ { "int" : { "$numberInt" : "10" }, "a" : { "b" : "x" } }, { "int" : { "$numberInt" : "10" }, "a" : { "b" : { "$numberInt" : "1" } } }, { "int" : { "$numberInt" : "10" }, "a" : { "b" : { "$numberDouble" : "2.0" } } }, { "int" : { "$numberInt" : "10" }, "a" : { "b" : true } }, { "double" : { "$numberDouble" : "2.0" }, "a" : { "b" : { "c" : { "$numberInt" : "3" } } } } ], "b" : [ { "d" : { "$numberInt" : "5" } } ], "c" : [ { "f" : "1" }, { "f" : "1" }, { "f" : "1" }, { "f" : "1" }, { "f" : "2" } ] }
(1 row)

-- facet negative tests
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$facet": { "a" : [ "hello" ] } } ], "cursor": {} }');
ERROR:  Pipeline stage for facet a must be a document
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$facet": { "a" : [ { } ] } } ], "cursor": {} }');
ERROR:  A pipeline stage specification object must contain exactly one field.
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$facet": { "a" : [ { "$count": "d", "$unset": "b" } ] } } ], "cursor": {} }');
ERROR:  A pipeline stage specification object must contain exactly one field.
-- FIND
SELECT document FROM bson_aggregation_find('db', '{ "find": "aggregation_pipeline", "filter": { "_id": { "$gt": "1" } }, "projection": { "a.b": 1 }, "sort": { "_id": 1 }, "skip": 1, "limit": 2 }');
    document     
---------------------------------------------------------------------
 { "_id" : "3" }
(1 row)

EXPLAIN (COSTS OFF, VERBOSE ON) SELECT document FROM bson_aggregation_find('db', '{ "find": "aggregation_pipeline", "filter": { "_id": { "$gt": "1" } }, "projection": { "a.b": 1 }, "sort": { "_id": 1 }, "skip": 1, "limit": 2 }');

---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Output: remote_scan.document
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Query: SELECT documentdb_api_internal.bson_dollar_project_find(document, '{ "a.b" : { "$numberInt" : "1" } }'::documentdb_core.bson, '{ "_id" : { "$gt" : "1" } }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson) AS document FROM documentdb_data.documents_4110_411001 collection WHERE ((document OPERATOR(documentdb_api_catalog.#>) '{ "_id" : "1" }'::documentdb_core.bsonquery) AND (object_id OPERATOR(documentdb_core.>) '{ "" : "1" }'::documentdb_core.bson) AND (shard_key_value OPERATOR(pg_catalog.=) '4110'::bigint)) ORDER BY object_id OFFSET '1'::bigint LIMIT '2'::bigint
         Node: host=localhost port=58070 dbname=regression
         ->  Limit
               Output: (documentdb_api_internal.bson_dollar_project_find(document, '{ "a.b" : { "$numberInt" : "1" } }'::documentdb_core.bson, '{ "_id" : { "$gt" : "1" } }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson)), object_id
               ->  Index Scan using _id_ on documentdb_data.documents_4110_411001 collection
                     Output: documentdb_api_internal.bson_dollar_project_find(document, '{ "a.b" : { "$numberInt" : "1" } }'::documentdb_core.bson, '{ "_id" : { "$gt" : "1" } }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson), object_id
                     Index Cond: ((collection.shard_key_value = '4110'::bigint) AND (collection.object_id OPERATOR(documentdb_core.>) '{ "" : "1" }'::documentdb_core.bson))
                     Filter: (collection.document OPERATOR(documentdb_api_catalog.@>) '{ "_id" : "1" }'::documentdb_core.bson)
(13 rows)

SELECT document FROM bson_aggregation_find('db', '{ "find": "aggregation_pipeline", "filter": { "_id": { "$gt": "1" } }, "projection": { "a.b": 1 }, "sort": { "_id": 1 }, "skip": 1, "limit": -2 }');
    document     
---------------------------------------------------------------------
 { "_id" : "3" }
(1 row)

-- count
SELECT document FROM bson_aggregation_count('db', '{ "count": "aggregation_pipeline" }');
                               document                               
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "3" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT document FROM bson_aggregation_count('db', '{ "count": "aggregation_pipeline", "query": { "_id": { "$gt": "1" } } }');
                               document                               
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "2" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

-- count with skip
SELECT document FROM bson_aggregation_count('db', '{ "count": "aggregation_pipeline", "query": {}, "skip": 0 }');
                               document                               
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "3" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT document FROM bson_aggregation_count('db', '{ "count": "aggregation_pipeline", "query": {}, "skip": 1 }');
                               document                               
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "2" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT document FROM bson_aggregation_count('db', '{ "count": "aggregation_pipeline", "query": {}, "skip": null }');
                               document                               
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "3" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT document FROM bson_aggregation_count('db', '{ "count": "aggregation_pipeline", "query": {}, "skip": -3.14159 }');
ERROR:  BSON field 'skip' value must be >=0, actual value '-3'
SELECT document FROM bson_aggregation_count('db', '{ "count": "aggregation_pipeline", "query": {}, "skip": -9223372036854775808 }');
ERROR:  BSON field 'skip' value must be >=0, actual value '-9223372036854775808'
SELECT document FROM bson_aggregation_count('db', '{ "count": "non_existent_coll" }');
                               document                               
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "0" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT document FROM documentdb_api.count_query('db', '{ "count": "aggregation_pipeline", "query": { "_id": { "$gt": "1" } } }');
                               document                               
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "2" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT document FROM documentdb_api.count_query('db', '{ "count": "aggregation_pipeline" }');
                               document                               
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "3" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT document FROM documentdb_api.count_query('db', '{ "count": "aggregation_pipeline", "query": {}, "skip": null }');
                               document                               
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "3" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT document FROM documentdb_api.count_query('db', '{ "count": "aggregation_pipeline", "query": {}, "skip": -3.14159 }');
ERROR:  BSON field 'skip' value must be >=0, actual value '-3'
SELECT document FROM documentdb_api.count_query('db', '{ "count": "aggregation_pipeline", "query": {}, "skip": -9223372036854775808 }');
ERROR:  BSON field 'skip' value must be >=0, actual value '-9223372036854775808'
-- handling of skip as an aggregation stage; this is different from skip in a count query
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [{ "$match": {}}, { "$skip": 0 }], "cursor": {}}');
                                                               document                                                               
---------------------------------------------------------------------
 { "_id" : "1", "int" : { "$numberInt" : "10" }, "a" : { "b" : [ "x", { "$numberInt" : "1" }, { "$numberDouble" : "2.0" }, true ] } }
 { "_id" : "2", "double" : { "$numberDouble" : "2.0" }, "a" : { "b" : { "c" : { "$numberInt" : "3" } } } }
 { "_id" : "3", "boolean" : false, "a" : "no", "b" : "yes", "c" : true }
(3 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [{ "$match": {}}, { "$skip": 1 }], "cursor": {}}');
                                                 document                                                  
---------------------------------------------------------------------
 { "_id" : "2", "double" : { "$numberDouble" : "2.0" }, "a" : { "b" : { "c" : { "$numberInt" : "3" } } } }
 { "_id" : "3", "boolean" : false, "a" : "no", "b" : "yes", "c" : true }
(2 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [{ "$match": {}}, { "$skip": null }], "cursor": {}}');
ERROR:  Argument to $skip must be a number
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [{ "$match": {}}, { "$skip": -3.14159 }], "cursor": {}}');
ERROR:  invalid argument to $skip stage: Cannot represent as a 64-bit integer $skip: -3.141590
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [{ "$match": {}}, { "$skip": -9223372036854775808 }], "cursor": {}}');
ERROR:  invalid argument to $skip stage: Expected a non-negative number in $skip: -9223372036854775808
EXPLAIN (COSTS OFF) SELECT document FROM bson_aggregation_count('db', '{ "count": "aggregation_pipeline" }');
                     QUERY PLAN                     
---------------------------------------------------------------------
 Function Scan on coll_stats_aggregation collection
(1 row)

EXPLAIN (COSTS OFF) SELECT document FROM bson_aggregation_count('db', '{ "count": "aggregation_pipeline", "query": { "_id": { "$gt": "1" } } }');
                                                                      QUERY PLAN                                                                       
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Node: host=localhost port=58070 dbname=regression
         ->  Aggregate
               ->  Index Scan using _id_ on documents_4110_411001 collection
                     Index Cond: ((shard_key_value = '4110'::bigint) AND (object_id OPERATOR(documentdb_core.>) '{ "" : "1" }'::documentdb_core.bson))
                     Filter: (document OPERATOR(documentdb_api_catalog.@>) '{ "_id" : "1" }'::documentdb_core.bson)
(9 rows)

EXPLAIN (COSTS OFF) SELECT document FROM bson_aggregation_count('db', '{ "count": "non_existent_coll" }');
                     QUERY PLAN                     
---------------------------------------------------------------------
 Aggregate
   ->  Function Scan on empty_data_table collection
(2 rows)

-- distinct
SELECT document FROM bson_aggregation_distinct('db', '{ "distinct": "aggregation_pipeline", "key": "_id" }');
                               document                               
---------------------------------------------------------------------
 { "values" : [ "1", "2", "3" ], "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT document FROM bson_aggregation_distinct('db', '{ "distinct": "non_existent_coll", "key": "foo" }');
                        document                         
---------------------------------------------------------------------
 { "values" : [  ], "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT document FROM documentdb_api.distinct_query('db', '{ "distinct": "aggregation_pipeline", "key": "_id" }');
                               document                               
---------------------------------------------------------------------
 { "values" : [ "1", "2", "3" ], "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT document FROM documentdb_api.distinct_query('db', '{ "distinct": "non_existent_coll", "key": "foo" }');
                        document                         
---------------------------------------------------------------------
 { "values" : [  ], "ok" : { "$numberDouble" : "1.0" } }
(1 row)

-- Explain for LIMIT 1 + Point query
BEGIN;
set local documentdb.enableCursorsOnAggregationQueryRewrite to on;
-- with singleBatch we should not see customScan
EXPLAIN (COSTS OFF, VERBOSE ON) SELECT document FROM bson_aggregation_find('db', '{ "find": "aggregation_pipeline", "filter": { "_id": "1" }, "singleBatch": true }');
                                                                                                                                                              QUERY PLAN                                                                                                                                                               
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Output: remote_scan.document
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Query: SELECT document FROM documentdb_data.documents_4110_411001 collection WHERE ((document OPERATOR(documentdb_api_catalog.#=) '{ "_id" : "1" }'::documentdb_core.bsonquery) AND (object_id OPERATOR(documentdb_core.=) '{ "" : "1" }'::documentdb_core.bson) AND (shard_key_value OPERATOR(pg_catalog.=) '4110'::bigint))
         Node: host=localhost port=58070 dbname=regression
         ->  Index Scan using _id_ on documentdb_data.documents_4110_411001 collection
               Output: document
               Index Cond: ((collection.shard_key_value = '4110'::bigint) AND (collection.object_id OPERATOR(documentdb_core.=) '{ "" : "1" }'::documentdb_core.bson))
(10 rows)

-- with _id query and limit 1 we should see custom scan with primary key lookup.
EXPLAIN (COSTS OFF, VERBOSE ON) SELECT document FROM bson_aggregation_find('db', '{ "find": "aggregation_pipeline", "filter": { "_id": "2" }, "limit": 1 }');
                                                                                                                                                                                                                                                   QUERY PLAN                                                                                                                                                                                                                                                    
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Output: remote_scan.document, remote_scan.continuation
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Query: SELECT document, documentdb_api_internal.current_cursor_state(document) AS continuation FROM documentdb_data.documents_4110_411001 collection WHERE ((document OPERATOR(documentdb_api_catalog.#=) '{ "_id" : "2" }'::documentdb_core.bsonquery) AND (object_id OPERATOR(documentdb_core.=) '{ "" : "2" }'::documentdb_core.bson) AND (shard_key_value OPERATOR(pg_catalog.=) '4110'::bigint) AND documentdb_api_internal.cursor_state(document, '{ }'::documentdb_core.bson)) LIMIT '1'::bigint
         Node: host=localhost port=58070 dbname=regression
         ->  Limit
               Output: document, (documentdb_api_internal.current_cursor_state(document))
               ->  Custom Scan (DocumentDBApiScan)
                     Output: document, documentdb_api_internal.current_cursor_state(document)
                     ->  Bitmap Heap Scan on documentdb_data.documents_4110_411001 collection
                           Output: shard_key_value, object_id, document, creation_time
                           Recheck Cond: ((collection.shard_key_value = '4110'::bigint) AND (collection.object_id OPERATOR(documentdb_core.=) '{ "" : "2" }'::documentdb_core.bson))
                           Filter: documentdb_api_internal.cursor_state(collection.document, '{ }'::documentdb_core.bson)
                           ->  Bitmap Index Scan on _id_
                                 Index Cond: ((collection.shard_key_value = '4110'::bigint) AND (collection.object_id OPERATOR(documentdb_core.=) '{ "" : "2" }'::documentdb_core.bson))
(17 rows)

ROLLBACK;
-- $lookup
SELECT documentdb_api.insert_one('db','agg_pipeline_orders',' { "_id" : 1, "item" : "almonds", "price" : 12, "quantity" : 2 }', NULL);
NOTICE:  creating collection
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','agg_pipeline_orders','{ "_id" : 2, "item" : "pecans", "price" : 20, "quantity" : 1 }', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','agg_pipeline_orders',' { "_id" : 3, "item" : "bread", "price" : 10, "quantity" : 5 }', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','agg_pipeline_orders',' { "_id" : 4, "item" : ["almonds", "bread", "pecans"], "price" : 10, "quantity" : 5 }', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','agg_pipeline_orders',' { "_id" : 5}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','agg_pipeline_orders',' { "_id" : 6, "item" : {"a": "x", "b" : 1, "c" : [1, 2, 3]} }', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','agg_pipeline_orders',' { "_id" : 7, "item" : [{"a": { "b" : 1}}, [1, 2, 3], 1, "x"] }', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','agg_pipeline_inventory',' { "_id" : 11, "sku" : "almonds", "description": "product 1", "instock" : 120 }', NULL);
NOTICE:  creating collection
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','agg_pipeline_inventory',' { "_id" : 12, "sku" : "almonds", "description": "product 1", "instock" : 240 }', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','agg_pipeline_inventory','{ "_id" : 13, "sku" : "bread", "description": "product 2", "instock" : 80 }', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','agg_pipeline_inventory','{ "_id" : 14, "sku" : "cashews", "description": "product 3", "instock" : 60 }', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','agg_pipeline_inventory','{ "_id" : 15, "sku" : "pecans", "description": "product 4", "instock" : 70 }', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','agg_pipeline_inventory','{ "_id" : 16, "sku" : null, "description": "product 4", "instock" : 70 }', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','agg_pipeline_inventory','{ "_id" : 17, "sku" :  {"a": "x", "b" : 1, "c" : [1, 2, 3]}, "description": "complex object" }', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','agg_pipeline_inventory','{ "_id" : 18, "sku" : [{"a": { "b" : 1}}, [1, 2, 3], 1, "x"], "description": "complex array" }', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','agg_pipeline_inventory','{ "_id" : 19, "sku" : [{"a": { "b" : 1}}, [1, 2, 3], 1, "x"], "description": "complex array" }', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT document FROM bson_aggregation_pipeline('db', 
    '{ "aggregate": "agg_pipeline_orders", "pipeline": [ { "$lookup": { "from": "agg_pipeline_inventory", "as": "matched_docs", "localField": "item", "foreignField": "sku" } } ], "cursor": {} }');
                                                                                                                                                                                                                                                                                                                                                document                                                                                                                                                                                                                                                                                                                                                 
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "item" : "almonds", "price" : { "$numberInt" : "12" }, "quantity" : { "$numberInt" : "2" }, "matched_docs" : [ { "_id" : { "$numberInt" : "11" }, "sku" : "almonds", "description" : "product 1", "instock" : { "$numberInt" : "120" } }, { "_id" : { "$numberInt" : "12" }, "sku" : "almonds", "description" : "product 1", "instock" : { "$numberInt" : "240" } } ] }
 { "_id" : { "$numberInt" : "2" }, "item" : "pecans", "price" : { "$numberInt" : "20" }, "quantity" : { "$numberInt" : "1" }, "matched_docs" : [ { "_id" : { "$numberInt" : "15" }, "sku" : "pecans", "description" : "product 4", "instock" : { "$numberInt" : "70" } } ] }
 { "_id" : { "$numberInt" : "3" }, "item" : "bread", "price" : { "$numberInt" : "10" }, "quantity" : { "$numberInt" : "5" }, "matched_docs" : [ { "_id" : { "$numberInt" : "13" }, "sku" : "bread", "description" : "product 2", "instock" : { "$numberInt" : "80" } } ] }
 { "_id" : { "$numberInt" : "4" }, "item" : [ "almonds", "bread", "pecans" ], "price" : { "$numberInt" : "10" }, "quantity" : { "$numberInt" : "5" }, "matched_docs" : [ { "_id" : { "$numberInt" : "11" }, "sku" : "almonds", "description" : "product 1", "instock" : { "$numberInt" : "120" } }, { "_id" : { "$numberInt" : "12" }, "sku" : "almonds", "description" : "product 1", "instock" : { "$numberInt" : "240" } }, { "_id" : { "$numberInt" : "13" }, "sku" : "bread", "description" : "product 2", "instock" : { "$numberInt" : "80" } }, { "_id" : { "$numberInt" : "15" }, "sku" : "pecans", "description" : "product 4", "instock" : { "$numberInt" : "70" } } ] }
 { "_id" : { "$numberInt" : "5" }, "matched_docs" : [ { "_id" : { "$numberInt" : "16" }, "sku" : null, "description" : "product 4", "instock" : { "$numberInt" : "70" } } ] }
 { "_id" : { "$numberInt" : "6" }, "item" : { "a" : "x", "b" : { "$numberInt" : "1" }, "c" : [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ] }, "matched_docs" : [ { "_id" : { "$numberInt" : "17" }, "sku" : { "a" : "x", "b" : { "$numberInt" : "1" }, "c" : [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ] }, "description" : "complex object" } ] }
 { "_id" : { "$numberInt" : "7" }, "item" : [ { "a" : { "b" : { "$numberInt" : "1" } } }, [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ], { "$numberInt" : "1" }, "x" ], "matched_docs" : [ { "_id" : { "$numberInt" : "18" }, "sku" : [ { "a" : { "b" : { "$numberInt" : "1" } } }, [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ], { "$numberInt" : "1" }, "x" ], "description" : "complex array" }, { "_id" : { "$numberInt" : "19" }, "sku" : [ { "a" : { "b" : { "$numberInt" : "1" } } }, [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ], { "$numberInt" : "1" }, "x" ], "description" : "complex array" } ] }
(7 rows)

SELECT document FROM bson_aggregation_pipeline('db', 
    '{ "aggregate": "agg_pipeline_orders", "pipeline": [ { "$lookup": { "from": "agg_pipeline_inventory", "as": "matched_docs", "pipeline": [ { "$count": "efe" } ] } } ], "cursor": {} }');
                                                                                                                           document                                                                                                                            
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "item" : "almonds", "price" : { "$numberInt" : "12" }, "quantity" : { "$numberInt" : "2" }, "matched_docs" : [ { "efe" : { "$numberInt" : "9" } } ] }
 { "_id" : { "$numberInt" : "2" }, "item" : "pecans", "price" : { "$numberInt" : "20" }, "quantity" : { "$numberInt" : "1" }, "matched_docs" : [ { "efe" : { "$numberInt" : "9" } } ] }
 { "_id" : { "$numberInt" : "3" }, "item" : "bread", "price" : { "$numberInt" : "10" }, "quantity" : { "$numberInt" : "5" }, "matched_docs" : [ { "efe" : { "$numberInt" : "9" } } ] }
 { "_id" : { "$numberInt" : "4" }, "item" : [ "almonds", "bread", "pecans" ], "price" : { "$numberInt" : "10" }, "quantity" : { "$numberInt" : "5" }, "matched_docs" : [ { "efe" : { "$numberInt" : "9" } } ] }
 { "_id" : { "$numberInt" : "5" }, "matched_docs" : [ { "efe" : { "$numberInt" : "9" } } ] }
 { "_id" : { "$numberInt" : "6" }, "item" : { "a" : "x", "b" : { "$numberInt" : "1" }, "c" : [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ] }, "matched_docs" : [ { "efe" : { "$numberInt" : "9" } } ] }
 { "_id" : { "$numberInt" : "7" }, "item" : [ { "a" : { "b" : { "$numberInt" : "1" } } }, [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ], { "$numberInt" : "1" }, "x" ], "matched_docs" : [ { "efe" : { "$numberInt" : "9" } } ] }
(7 rows)

SELECT document FROM bson_aggregation_pipeline('db', 
    '{ "aggregate": "agg_pipeline_orders", "pipeline": [ { "$lookup": { "from": "agg_pipeline_inventory", "as": "matched_docs", "localField": "item", "foreignField": "sku", "pipeline": [ { "$count": "efe" } ] } } ], "cursor": {} }');
                                                                                                                           document                                                                                                                            
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "item" : "almonds", "price" : { "$numberInt" : "12" }, "quantity" : { "$numberInt" : "2" }, "matched_docs" : [ { "efe" : { "$numberInt" : "2" } } ] }
 { "_id" : { "$numberInt" : "2" }, "item" : "pecans", "price" : { "$numberInt" : "20" }, "quantity" : { "$numberInt" : "1" }, "matched_docs" : [ { "efe" : { "$numberInt" : "1" } } ] }
 { "_id" : { "$numberInt" : "3" }, "item" : "bread", "price" : { "$numberInt" : "10" }, "quantity" : { "$numberInt" : "5" }, "matched_docs" : [ { "efe" : { "$numberInt" : "1" } } ] }
 { "_id" : { "$numberInt" : "4" }, "item" : [ "almonds", "bread", "pecans" ], "price" : { "$numberInt" : "10" }, "quantity" : { "$numberInt" : "5" }, "matched_docs" : [ { "efe" : { "$numberInt" : "4" } } ] }
 { "_id" : { "$numberInt" : "5" }, "matched_docs" : [ { "efe" : { "$numberInt" : "1" } } ] }
 { "_id" : { "$numberInt" : "6" }, "item" : { "a" : "x", "b" : { "$numberInt" : "1" }, "c" : [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ] }, "matched_docs" : [ { "efe" : { "$numberInt" : "1" } } ] }
 { "_id" : { "$numberInt" : "7" }, "item" : [ { "a" : { "b" : { "$numberInt" : "1" } } }, [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ], { "$numberInt" : "1" }, "x" ], "matched_docs" : [ { "efe" : { "$numberInt" : "2" } } ] }
(7 rows)

EXPLAIN (COSTS OFF, VERBOSE ON) SELECT document FROM bson_aggregation_pipeline('db', 
    '{ "aggregate": "agg_pipeline_orders", "pipeline": [ { "$lookup": { "from": "agg_pipeline_inventory", "as": "matched_docs", "pipeline": [ { "$count": "efe" } ] } }, { "$sample": { "size": 3 } } ], "cursor": {} }');

---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Output: remote_scan.document
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Query: SELECT document FROM (SELECT documentdb_api_internal.bson_dollar_merge_documents(lookup_stage_1.document, "lookupRight_stage_1".document) AS document FROM ((SELECT collection.document FROM documentdb_data.documents_4111_411020 collection WHERE (collection.shard_key_value OPERATOR(pg_catalog.=) '4111'::bigint)) lookup_stage_1 LEFT JOIN LATERAL (SELECT COALESCE(documentdb_api_catalog.bson_array_agg(agg_stage_sub_1_1.document, 'matched_docs'::text), '{ "matched_docs" : [  ] }'::documentdb_core.bson) AS document FROM (SELECT documentdb_core.bson_repath_and_build('efe'::text, documentdb_api_catalog.bsonsum('{ "" : { "$numberInt" : "1" } }'::documentdb_core.bson)) AS document FROM (SELECT collection_0_1.document FROM documentdb_data.documents_4112_411038 collection_0_1 WHERE (collection_0_1.shard_key_value OPERATOR(pg_catalog.=) '4112'::bigint)) agg_stage_sub_1_0) agg_stage_sub_1_1) "lookupRight_stage_1" ON (true))) agg_stage_1 ORDER BY (random()) LIMIT '3'::bigint
         Node: host=localhost port=58070 dbname=regression
         ->  Limit
               Output: (documentdb_api_internal.bson_dollar_merge_documents(collection.document, (COALESCE(documentdb_api_catalog.bson_array_agg((documentdb_core.bson_repath_and_build('efe'::text, documentdb_api_catalog.bsonsum('{ "" : { "$numberInt" : "1" } }'::documentdb_core.bson))), 'matched_docs'::text), '{ "matched_docs" : [  ] }'::documentdb_core.bson)))), (random())
               ->  Sort
                     Output: (documentdb_api_internal.bson_dollar_merge_documents(collection.document, (COALESCE(documentdb_api_catalog.bson_array_agg((documentdb_core.bson_repath_and_build('efe'::text, documentdb_api_catalog.bsonsum('{ "" : { "$numberInt" : "1" } }'::documentdb_core.bson))), 'matched_docs'::text), '{ "matched_docs" : [  ] }'::documentdb_core.bson)))), (random())
                     Sort Key: (random())
                     ->  Nested Loop Left Join
                           Output: documentdb_api_internal.bson_dollar_merge_documents(collection.document, (COALESCE(documentdb_api_catalog.bson_array_agg((documentdb_core.bson_repath_and_build('efe'::text, documentdb_api_catalog.bsonsum('{ "" : { "$numberInt" : "1" } }'::documentdb_core.bson))), 'matched_docs'::text), '{ "matched_docs" : [  ] }'::documentdb_core.bson))), random()
                           ->  Bitmap Heap Scan on documentdb_data.documents_4111_411020 collection
                                 Output: collection.shard_key_value, collection.object_id, collection.document, collection.creation_time
                                 Recheck Cond: (collection.shard_key_value = '4111'::bigint)
                                 ->  Bitmap Index Scan on _id_
                                       Index Cond: (collection.shard_key_value = '4111'::bigint)
                           ->  Materialize
                                 Output: (COALESCE(documentdb_api_catalog.bson_array_agg((documentdb_core.bson_repath_and_build('efe'::text, documentdb_api_catalog.bsonsum('{ "" : { "$numberInt" : "1" } }'::documentdb_core.bson))), 'matched_docs'::text), '{ "matched_docs" : [  ] }'::documentdb_core.bson))
                                 ->  Aggregate
                                       Output: COALESCE(documentdb_api_catalog.bson_array_agg((documentdb_core.bson_repath_and_build('efe'::text, documentdb_api_catalog.bsonsum('{ "" : { "$numberInt" : "1" } }'::documentdb_core.bson))), 'matched_docs'::text), '{ "matched_docs" : [  ] }'::documentdb_core.bson)
                                       ->  Aggregate
                                             Output: documentdb_core.bson_repath_and_build('efe'::text, documentdb_api_catalog.bsonsum('{ "" : { "$numberInt" : "1" } }'::documentdb_core.bson))
                                             ->  Bitmap Heap Scan on documentdb_data.documents_4112_411038 collection_0_1
                                                   Recheck Cond: (collection_0_1.shard_key_value = '4112'::bigint)
                                                   ->  Bitmap Index Scan on _id_
                                                         Index Cond: (collection_0_1.shard_key_value = '4112'::bigint)
(29 rows)

EXPLAIN (COSTS OFF, VERBOSE ON) SELECT document FROM bson_aggregation_pipeline('db', 
    '{ "aggregate": "agg_pipeline_orders", "pipeline": [ { "$lookup": { "from": "agg_pipeline_inventory", "as": "matched_docs", "localField": "item", "foreignField": "sku", "pipeline": [ { "$count": "efe" } ] } } ], "cursor": {} }');

---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Output: remote_scan.document
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Query: SELECT documentdb_api_internal.bson_dollar_merge_documents("left", (SELECT COALESCE(documentdb_api_catalog.bson_array_agg(agg_stage_sub_1_1."funcName", 'matched_docs'::text), '{ "matched_docs" : [  ] }'::documentdb_core.bson) AS "funcName" FROM (SELECT documentdb_core.bson_repath_and_build('efe'::text, documentdb_api_catalog.bsonsum('{ "" : { "$numberInt" : "1" } }'::documentdb_core.bson)) AS "funcName" FROM (SELECT lookup_subpipeline_substage_0.lookup_unwind AS "funcName" FROM documentdb_api_catalog.bson_lookup_unwind(lookup_non_inlined_stage_1."right", 'matched_docs'::text) lookup_subpipeline_substage_0(lookup_unwind)) agg_stage_sub_1_0) agg_stage_sub_1_1)) AS document FROM (SELECT lookup_stage_1.document AS "left", "lookupRight_stage_1".document AS "right" FROM ((SELECT collection.document, documentdb_api_internal.bson_dollar_lookup_extract_filter_expression(collection.document, '{ "sku" : "item" }'::documentdb_core.bson) AS lookup_filter FROM documentdb_data.documents_4111_411020 collection WHERE (collection.shard_key_value OPERATOR(pg_catalog.=) '4111'::bigint)) lookup_stage_1 LEFT JOIN LATERAL (SELECT COALESCE(documentdb_api_catalog.bson_array_agg(lookup_right_query_stage_0.document, 'matched_docs'::text), '{ "matched_docs" : [  ] }'::documentdb_core.bson) AS document FROM (SELECT collection_0_1.document FROM documentdb_data.documents_4112_411038 collection_0_1 WHERE (collection_0_1.shard_key_value OPERATOR(pg_catalog.=) '4112'::bigint)) lookup_right_query_stage_0 WHERE documentdb_api_internal.bson_dollar_lookup_join_filter(lookup_right_query_stage_0.document, lookup_stage_1.lookup_filter, 'sku'::text)) "lookupRight_stage_1" ON (true))) lookup_non_inlined_stage_1
         Node: host=localhost port=58070 dbname=regression
         ->  Nested Loop Left Join
               Output: documentdb_api_internal.bson_dollar_merge_documents(collection.document, (SubPlan 1))
               ->  Bitmap Heap Scan on documentdb_data.documents_4111_411020 collection
                     Output: collection.shard_key_value, collection.object_id, collection.document, collection.creation_time
                     Recheck Cond: (collection.shard_key_value = '4111'::bigint)
                     ->  Bitmap Index Scan on _id_
                           Index Cond: (collection.shard_key_value = '4111'::bigint)
               ->  Aggregate
                     Output: COALESCE(documentdb_api_catalog.bson_array_agg(collection_0_1.document, 'matched_docs'::text), '{ "matched_docs" : [  ] }'::documentdb_core.bson)
                     ->  Bitmap Heap Scan on documentdb_data.documents_4112_411038 collection_0_1
                           Output: collection_0_1.shard_key_value, collection_0_1.object_id, collection_0_1.document, collection_0_1.creation_time
                           Recheck Cond: (collection_0_1.shard_key_value = '4112'::bigint)
                           Filter: documentdb_api_internal.bson_dollar_lookup_join_filter(collection_0_1.document, documentdb_api_internal.bson_dollar_lookup_extract_filter_expression(collection.document, '{ "sku" : "item" }'::documentdb_core.bson), 'sku'::text)
                           ->  Bitmap Index Scan on _id_
                                 Index Cond: (collection_0_1.shard_key_value = '4112'::bigint)
               SubPlan 1
                 ->  Aggregate
                       Output: COALESCE(documentdb_api_catalog.bson_array_agg((documentdb_core.bson_repath_and_build('efe'::text, documentdb_api_catalog.bsonsum('{ "" : { "$numberInt" : "1" } }'::documentdb_core.bson))), 'matched_docs'::text), '{ "matched_docs" : [  ] }'::documentdb_core.bson)
                       ->  Aggregate
                             Output: documentdb_core.bson_repath_and_build('efe'::text, documentdb_api_catalog.bsonsum('{ "" : { "$numberInt" : "1" } }'::documentdb_core.bson))
                             ->  Function Scan on documentdb_api_catalog.bson_lookup_unwind lookup_subpipeline_substage_0
                                   Output: lookup_subpipeline_substage_0.lookup_unwind
                                   Function Call: documentdb_api_catalog.bson_lookup_unwind((COALESCE(documentdb_api_catalog.bson_array_agg(collection_0_1.document, 'matched_docs'::text), '{ "matched_docs" : [  ] }'::documentdb_core.bson)), 'matched_docs'::text)
(30 rows)

SELECT document FROM bson_aggregation_pipeline('db', 
    '{ "aggregate": "agg_pipeline_orders", "pipeline": [ { "$lookup": { "from": "coll_dne", "as": "matched_docs", "localField": "item", "foreignField": "sku", "pipeline": [ { "$count": "efe" } ] } } ], "cursor": {} }');
                                                                                                                           document                                                                                                                            
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "item" : "almonds", "price" : { "$numberInt" : "12" }, "quantity" : { "$numberInt" : "2" }, "matched_docs" : [ { "efe" : { "$numberInt" : "0" } } ] }
 { "_id" : { "$numberInt" : "2" }, "item" : "pecans", "price" : { "$numberInt" : "20" }, "quantity" : { "$numberInt" : "1" }, "matched_docs" : [ { "efe" : { "$numberInt" : "0" } } ] }
 { "_id" : { "$numberInt" : "3" }, "item" : "bread", "price" : { "$numberInt" : "10" }, "quantity" : { "$numberInt" : "5" }, "matched_docs" : [ { "efe" : { "$numberInt" : "0" } } ] }
 { "_id" : { "$numberInt" : "4" }, "item" : [ "almonds", "bread", "pecans" ], "price" : { "$numberInt" : "10" }, "quantity" : { "$numberInt" : "5" }, "matched_docs" : [ { "efe" : { "$numberInt" : "0" } } ] }
 { "_id" : { "$numberInt" : "5" }, "matched_docs" : [ { "efe" : { "$numberInt" : "0" } } ] }
 { "_id" : { "$numberInt" : "6" }, "item" : { "a" : "x", "b" : { "$numberInt" : "1" }, "c" : [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ] }, "matched_docs" : [ { "efe" : { "$numberInt" : "0" } } ] }
 { "_id" : { "$numberInt" : "7" }, "item" : [ { "a" : { "b" : { "$numberInt" : "1" } } }, [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ], { "$numberInt" : "1" }, "x" ], "matched_docs" : [ { "efe" : { "$numberInt" : "0" } } ] }
(7 rows)

SELECT document FROM bson_aggregation_pipeline('db', 
    '{ "aggregate": "agg_pipeline_orders", "pipeline": [ { "$lookup": { "from": "colldne", "pipeline": [], "as": "c" } } ], "cursor": {} }');
                                                                                                     document                                                                                                     
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "item" : "almonds", "price" : { "$numberInt" : "12" }, "quantity" : { "$numberInt" : "2" }, "c" : [  ] }
 { "_id" : { "$numberInt" : "2" }, "item" : "pecans", "price" : { "$numberInt" : "20" }, "quantity" : { "$numberInt" : "1" }, "c" : [  ] }
 { "_id" : { "$numberInt" : "3" }, "item" : "bread", "price" : { "$numberInt" : "10" }, "quantity" : { "$numberInt" : "5" }, "c" : [  ] }
 { "_id" : { "$numberInt" : "4" }, "item" : [ "almonds", "bread", "pecans" ], "price" : { "$numberInt" : "10" }, "quantity" : { "$numberInt" : "5" }, "c" : [  ] }
 { "_id" : { "$numberInt" : "5" }, "c" : [  ] }
 { "_id" : { "$numberInt" : "6" }, "item" : { "a" : "x", "b" : { "$numberInt" : "1" }, "c" : [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ] }, "c" : [  ] }
 { "_id" : { "$numberInt" : "7" }, "item" : [ { "a" : { "b" : { "$numberInt" : "1" } } }, [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ], { "$numberInt" : "1" }, "x" ], "c" : [  ] }
(7 rows)

BEGIN;
set local citus.enable_local_execution to off;
SELECT document FROM bson_aggregation_pipeline('db', 
    '{ "aggregate": "agg_pipeline_orders", "pipeline": [ { "$lookup": { "from": "agg_pipeline_inventory", "as": "matched_docs", "localField": "item", "foreignField": "sku" } } ], "cursor": {} }');
                                                                                                                                                                                                                                                                                                                                                document                                                                                                                                                                                                                                                                                                                                                 
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "item" : "almonds", "price" : { "$numberInt" : "12" }, "quantity" : { "$numberInt" : "2" }, "matched_docs" : [ { "_id" : { "$numberInt" : "11" }, "sku" : "almonds", "description" : "product 1", "instock" : { "$numberInt" : "120" } }, { "_id" : { "$numberInt" : "12" }, "sku" : "almonds", "description" : "product 1", "instock" : { "$numberInt" : "240" } } ] }
 { "_id" : { "$numberInt" : "2" }, "item" : "pecans", "price" : { "$numberInt" : "20" }, "quantity" : { "$numberInt" : "1" }, "matched_docs" : [ { "_id" : { "$numberInt" : "15" }, "sku" : "pecans", "description" : "product 4", "instock" : { "$numberInt" : "70" } } ] }
 { "_id" : { "$numberInt" : "3" }, "item" : "bread", "price" : { "$numberInt" : "10" }, "quantity" : { "$numberInt" : "5" }, "matched_docs" : [ { "_id" : { "$numberInt" : "13" }, "sku" : "bread", "description" : "product 2", "instock" : { "$numberInt" : "80" } } ] }
 { "_id" : { "$numberInt" : "4" }, "item" : [ "almonds", "bread", "pecans" ], "price" : { "$numberInt" : "10" }, "quantity" : { "$numberInt" : "5" }, "matched_docs" : [ { "_id" : { "$numberInt" : "11" }, "sku" : "almonds", "description" : "product 1", "instock" : { "$numberInt" : "120" } }, { "_id" : { "$numberInt" : "12" }, "sku" : "almonds", "description" : "product 1", "instock" : { "$numberInt" : "240" } }, { "_id" : { "$numberInt" : "13" }, "sku" : "bread", "description" : "product 2", "instock" : { "$numberInt" : "80" } }, { "_id" : { "$numberInt" : "15" }, "sku" : "pecans", "description" : "product 4", "instock" : { "$numberInt" : "70" } } ] }
 { "_id" : { "$numberInt" : "5" }, "matched_docs" : [ { "_id" : { "$numberInt" : "16" }, "sku" : null, "description" : "product 4", "instock" : { "$numberInt" : "70" } } ] }
 { "_id" : { "$numberInt" : "6" }, "item" : { "a" : "x", "b" : { "$numberInt" : "1" }, "c" : [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ] }, "matched_docs" : [ { "_id" : { "$numberInt" : "17" }, "sku" : { "a" : "x", "b" : { "$numberInt" : "1" }, "c" : [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ] }, "description" : "complex object" } ] }
 { "_id" : { "$numberInt" : "7" }, "item" : [ { "a" : { "b" : { "$numberInt" : "1" } } }, [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ], { "$numberInt" : "1" }, "x" ], "matched_docs" : [ { "_id" : { "$numberInt" : "18" }, "sku" : [ { "a" : { "b" : { "$numberInt" : "1" } } }, [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ], { "$numberInt" : "1" }, "x" ], "description" : "complex array" }, { "_id" : { "$numberInt" : "19" }, "sku" : [ { "a" : { "b" : { "$numberInt" : "1" } } }, [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ], { "$numberInt" : "1" }, "x" ], "description" : "complex array" } ] }
(7 rows)

SELECT document FROM bson_aggregation_pipeline('db', 
    '{ "aggregate": "agg_pipeline_orders", "pipeline": [ { "$lookup": { "from": "agg_pipeline_inventory", "as": "matched_docs", "pipeline": [ { "$count": "efe" } ] } } ], "cursor": {} }');
                                                                                                                           document                                                                                                                            
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "item" : "almonds", "price" : { "$numberInt" : "12" }, "quantity" : { "$numberInt" : "2" }, "matched_docs" : [ { "efe" : { "$numberInt" : "9" } } ] }
 { "_id" : { "$numberInt" : "2" }, "item" : "pecans", "price" : { "$numberInt" : "20" }, "quantity" : { "$numberInt" : "1" }, "matched_docs" : [ { "efe" : { "$numberInt" : "9" } } ] }
 { "_id" : { "$numberInt" : "3" }, "item" : "bread", "price" : { "$numberInt" : "10" }, "quantity" : { "$numberInt" : "5" }, "matched_docs" : [ { "efe" : { "$numberInt" : "9" } } ] }
 { "_id" : { "$numberInt" : "4" }, "item" : [ "almonds", "bread", "pecans" ], "price" : { "$numberInt" : "10" }, "quantity" : { "$numberInt" : "5" }, "matched_docs" : [ { "efe" : { "$numberInt" : "9" } } ] }
 { "_id" : { "$numberInt" : "5" }, "matched_docs" : [ { "efe" : { "$numberInt" : "9" } } ] }
 { "_id" : { "$numberInt" : "6" }, "item" : { "a" : "x", "b" : { "$numberInt" : "1" }, "c" : [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ] }, "matched_docs" : [ { "efe" : { "$numberInt" : "9" } } ] }
 { "_id" : { "$numberInt" : "7" }, "item" : [ { "a" : { "b" : { "$numberInt" : "1" } } }, [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ], { "$numberInt" : "1" }, "x" ], "matched_docs" : [ { "efe" : { "$numberInt" : "9" } } ] }
(7 rows)

SELECT document FROM bson_aggregation_pipeline('db', 
    '{ "aggregate": "agg_pipeline_orders", "pipeline": [ { "$lookup": { "from": "agg_pipeline_inventory", "as": "matched_docs", "localField": "item", "foreignField": "sku", "pipeline": [ { "$count": "efe" } ] } } ], "cursor": {} }');
                                                                                                                           document                                                                                                                            
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "item" : "almonds", "price" : { "$numberInt" : "12" }, "quantity" : { "$numberInt" : "2" }, "matched_docs" : [ { "efe" : { "$numberInt" : "2" } } ] }
 { "_id" : { "$numberInt" : "2" }, "item" : "pecans", "price" : { "$numberInt" : "20" }, "quantity" : { "$numberInt" : "1" }, "matched_docs" : [ { "efe" : { "$numberInt" : "1" } } ] }
 { "_id" : { "$numberInt" : "3" }, "item" : "bread", "price" : { "$numberInt" : "10" }, "quantity" : { "$numberInt" : "5" }, "matched_docs" : [ { "efe" : { "$numberInt" : "1" } } ] }
 { "_id" : { "$numberInt" : "4" }, "item" : [ "almonds", "bread", "pecans" ], "price" : { "$numberInt" : "10" }, "quantity" : { "$numberInt" : "5" }, "matched_docs" : [ { "efe" : { "$numberInt" : "4" } } ] }
 { "_id" : { "$numberInt" : "5" }, "matched_docs" : [ { "efe" : { "$numberInt" : "1" } } ] }
 { "_id" : { "$numberInt" : "6" }, "item" : { "a" : "x", "b" : { "$numberInt" : "1" }, "c" : [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ] }, "matched_docs" : [ { "efe" : { "$numberInt" : "1" } } ] }
 { "_id" : { "$numberInt" : "7" }, "item" : [ { "a" : { "b" : { "$numberInt" : "1" } } }, [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ], { "$numberInt" : "1" }, "x" ], "matched_docs" : [ { "efe" : { "$numberInt" : "2" } } ] }
(7 rows)

ROLLBACK;
SELECT documentdb_api.shard_collection('db', 'agg_pipeline_orders', '{ "_id": "hashed" }', false);
 shard_collection 
---------------------------------------------------------------------
 
(1 row)

SELECT document FROM bson_aggregation_pipeline('db', 
    '{ "aggregate": "agg_pipeline_orders", "pipeline": [ { "$lookup": { "from": "agg_pipeline_inventory", "as": "matched_docs", "localField": "item", "foreignField": "sku" } } ], "cursor": {} }');
                                                                                                                                                                                                                                                                                                                                                document                                                                                                                                                                                                                                                                                                                                                 
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "4" }, "item" : [ "almonds", "bread", "pecans" ], "price" : { "$numberInt" : "10" }, "quantity" : { "$numberInt" : "5" }, "matched_docs" : [ { "_id" : { "$numberInt" : "11" }, "sku" : "almonds", "description" : "product 1", "instock" : { "$numberInt" : "120" } }, { "_id" : { "$numberInt" : "12" }, "sku" : "almonds", "description" : "product 1", "instock" : { "$numberInt" : "240" } }, { "_id" : { "$numberInt" : "13" }, "sku" : "bread", "description" : "product 2", "instock" : { "$numberInt" : "80" } }, { "_id" : { "$numberInt" : "15" }, "sku" : "pecans", "description" : "product 4", "instock" : { "$numberInt" : "70" } } ] }
 { "_id" : { "$numberInt" : "6" }, "item" : { "a" : "x", "b" : { "$numberInt" : "1" }, "c" : [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ] }, "matched_docs" : [ { "_id" : { "$numberInt" : "17" }, "sku" : { "a" : "x", "b" : { "$numberInt" : "1" }, "c" : [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ] }, "description" : "complex object" } ] }
 { "_id" : { "$numberInt" : "2" }, "item" : "pecans", "price" : { "$numberInt" : "20" }, "quantity" : { "$numberInt" : "1" }, "matched_docs" : [ { "_id" : { "$numberInt" : "15" }, "sku" : "pecans", "description" : "product 4", "instock" : { "$numberInt" : "70" } } ] }
 { "_id" : { "$numberInt" : "3" }, "item" : "bread", "price" : { "$numberInt" : "10" }, "quantity" : { "$numberInt" : "5" }, "matched_docs" : [ { "_id" : { "$numberInt" : "13" }, "sku" : "bread", "description" : "product 2", "instock" : { "$numberInt" : "80" } } ] }
 { "_id" : { "$numberInt" : "7" }, "item" : [ { "a" : { "b" : { "$numberInt" : "1" } } }, [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ], { "$numberInt" : "1" }, "x" ], "matched_docs" : [ { "_id" : { "$numberInt" : "18" }, "sku" : [ { "a" : { "b" : { "$numberInt" : "1" } } }, [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ], { "$numberInt" : "1" }, "x" ], "description" : "complex array" }, { "_id" : { "$numberInt" : "19" }, "sku" : [ { "a" : { "b" : { "$numberInt" : "1" } } }, [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ], { "$numberInt" : "1" }, "x" ], "description" : "complex array" } ] }
 { "_id" : { "$numberInt" : "5" }, "matched_docs" : [ { "_id" : { "$numberInt" : "16" }, "sku" : null, "description" : "product 4", "instock" : { "$numberInt" : "70" } } ] }
 { "_id" : { "$numberInt" : "1" }, "item" : "almonds", "price" : { "$numberInt" : "12" }, "quantity" : { "$numberInt" : "2" }, "matched_docs" : [ { "_id" : { "$numberInt" : "11" }, "sku" : "almonds", "description" : "product 1", "instock" : { "$numberInt" : "120" } }, { "_id" : { "$numberInt" : "12" }, "sku" : "almonds", "description" : "product 1", "instock" : { "$numberInt" : "240" } } ] }
(7 rows)

SELECT document FROM bson_aggregation_pipeline('db', 
    '{ "aggregate": "agg_pipeline_orders", "pipeline": [ { "$lookup": { "from": "agg_pipeline_inventory", "as": "matched_docs", "pipeline": [ { "$count": "efe" } ] } } ], "cursor": {} }');
                                                                                                                           document                                                                                                                            
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "4" }, "item" : [ "almonds", "bread", "pecans" ], "price" : { "$numberInt" : "10" }, "quantity" : { "$numberInt" : "5" }, "matched_docs" : [ { "efe" : { "$numberInt" : "9" } } ] }
 { "_id" : { "$numberInt" : "6" }, "item" : { "a" : "x", "b" : { "$numberInt" : "1" }, "c" : [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ] }, "matched_docs" : [ { "efe" : { "$numberInt" : "9" } } ] }
 { "_id" : { "$numberInt" : "2" }, "item" : "pecans", "price" : { "$numberInt" : "20" }, "quantity" : { "$numberInt" : "1" }, "matched_docs" : [ { "efe" : { "$numberInt" : "9" } } ] }
 { "_id" : { "$numberInt" : "3" }, "item" : "bread", "price" : { "$numberInt" : "10" }, "quantity" : { "$numberInt" : "5" }, "matched_docs" : [ { "efe" : { "$numberInt" : "9" } } ] }
 { "_id" : { "$numberInt" : "7" }, "item" : [ { "a" : { "b" : { "$numberInt" : "1" } } }, [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ], { "$numberInt" : "1" }, "x" ], "matched_docs" : [ { "efe" : { "$numberInt" : "9" } } ] }
 { "_id" : { "$numberInt" : "5" }, "matched_docs" : [ { "efe" : { "$numberInt" : "9" } } ] }
 { "_id" : { "$numberInt" : "1" }, "item" : "almonds", "price" : { "$numberInt" : "12" }, "quantity" : { "$numberInt" : "2" }, "matched_docs" : [ { "efe" : { "$numberInt" : "9" } } ] }
(7 rows)

SELECT document FROM bson_aggregation_pipeline('db', 
    '{ "aggregate": "agg_pipeline_orders", "pipeline": [ { "$lookup": { "from": "agg_pipeline_inventory", "as": "matched_docs", "localField": "item", "foreignField": "sku", "pipeline": [ { "$count": "efe" } ] } } ], "cursor": {} }');
                                                                                                                           document                                                                                                                            
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "4" }, "item" : [ "almonds", "bread", "pecans" ], "price" : { "$numberInt" : "10" }, "quantity" : { "$numberInt" : "5" }, "matched_docs" : [ { "efe" : { "$numberInt" : "4" } } ] }
 { "_id" : { "$numberInt" : "6" }, "item" : { "a" : "x", "b" : { "$numberInt" : "1" }, "c" : [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ] }, "matched_docs" : [ { "efe" : { "$numberInt" : "1" } } ] }
 { "_id" : { "$numberInt" : "2" }, "item" : "pecans", "price" : { "$numberInt" : "20" }, "quantity" : { "$numberInt" : "1" }, "matched_docs" : [ { "efe" : { "$numberInt" : "1" } } ] }
 { "_id" : { "$numberInt" : "3" }, "item" : "bread", "price" : { "$numberInt" : "10" }, "quantity" : { "$numberInt" : "5" }, "matched_docs" : [ { "efe" : { "$numberInt" : "1" } } ] }
 { "_id" : { "$numberInt" : "7" }, "item" : [ { "a" : { "b" : { "$numberInt" : "1" } } }, [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ], { "$numberInt" : "1" }, "x" ], "matched_docs" : [ { "efe" : { "$numberInt" : "2" } } ] }
 { "_id" : { "$numberInt" : "5" }, "matched_docs" : [ { "efe" : { "$numberInt" : "1" } } ] }
 { "_id" : { "$numberInt" : "1" }, "item" : "almonds", "price" : { "$numberInt" : "12" }, "quantity" : { "$numberInt" : "2" }, "matched_docs" : [ { "efe" : { "$numberInt" : "2" } } ] }
(7 rows)

BEGIN;
set local citus.enable_local_execution to off;
SELECT document FROM bson_aggregation_pipeline('db', 
    '{ "aggregate": "agg_pipeline_orders", "pipeline": [ { "$lookup": { "from": "agg_pipeline_inventory", "as": "matched_docs", "localField": "item", "foreignField": "sku" } } ], "cursor": {} }');
                                                                                                                                                                                                                                                                                                                                                document                                                                                                                                                                                                                                                                                                                                                 
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "4" }, "item" : [ "almonds", "bread", "pecans" ], "price" : { "$numberInt" : "10" }, "quantity" : { "$numberInt" : "5" }, "matched_docs" : [ { "_id" : { "$numberInt" : "11" }, "sku" : "almonds", "description" : "product 1", "instock" : { "$numberInt" : "120" } }, { "_id" : { "$numberInt" : "12" }, "sku" : "almonds", "description" : "product 1", "instock" : { "$numberInt" : "240" } }, { "_id" : { "$numberInt" : "13" }, "sku" : "bread", "description" : "product 2", "instock" : { "$numberInt" : "80" } }, { "_id" : { "$numberInt" : "15" }, "sku" : "pecans", "description" : "product 4", "instock" : { "$numberInt" : "70" } } ] }
 { "_id" : { "$numberInt" : "6" }, "item" : { "a" : "x", "b" : { "$numberInt" : "1" }, "c" : [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ] }, "matched_docs" : [ { "_id" : { "$numberInt" : "17" }, "sku" : { "a" : "x", "b" : { "$numberInt" : "1" }, "c" : [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ] }, "description" : "complex object" } ] }
 { "_id" : { "$numberInt" : "2" }, "item" : "pecans", "price" : { "$numberInt" : "20" }, "quantity" : { "$numberInt" : "1" }, "matched_docs" : [ { "_id" : { "$numberInt" : "15" }, "sku" : "pecans", "description" : "product 4", "instock" : { "$numberInt" : "70" } } ] }
 { "_id" : { "$numberInt" : "3" }, "item" : "bread", "price" : { "$numberInt" : "10" }, "quantity" : { "$numberInt" : "5" }, "matched_docs" : [ { "_id" : { "$numberInt" : "13" }, "sku" : "bread", "description" : "product 2", "instock" : { "$numberInt" : "80" } } ] }
 { "_id" : { "$numberInt" : "7" }, "item" : [ { "a" : { "b" : { "$numberInt" : "1" } } }, [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ], { "$numberInt" : "1" }, "x" ], "matched_docs" : [ { "_id" : { "$numberInt" : "18" }, "sku" : [ { "a" : { "b" : { "$numberInt" : "1" } } }, [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ], { "$numberInt" : "1" }, "x" ], "description" : "complex array" }, { "_id" : { "$numberInt" : "19" }, "sku" : [ { "a" : { "b" : { "$numberInt" : "1" } } }, [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ], { "$numberInt" : "1" }, "x" ], "description" : "complex array" } ] }
 { "_id" : { "$numberInt" : "5" }, "matched_docs" : [ { "_id" : { "$numberInt" : "16" }, "sku" : null, "description" : "product 4", "instock" : { "$numberInt" : "70" } } ] }
 { "_id" : { "$numberInt" : "1" }, "item" : "almonds", "price" : { "$numberInt" : "12" }, "quantity" : { "$numberInt" : "2" }, "matched_docs" : [ { "_id" : { "$numberInt" : "11" }, "sku" : "almonds", "description" : "product 1", "instock" : { "$numberInt" : "120" } }, { "_id" : { "$numberInt" : "12" }, "sku" : "almonds", "description" : "product 1", "instock" : { "$numberInt" : "240" } } ] }
(7 rows)

SELECT document FROM bson_aggregation_pipeline('db', 
    '{ "aggregate": "agg_pipeline_orders", "pipeline": [ { "$lookup": { "from": "agg_pipeline_inventory", "as": "matched_docs", "pipeline": [ { "$count": "efe" } ] } } ], "cursor": {} }');
                                                                                                                           document                                                                                                                            
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "4" }, "item" : [ "almonds", "bread", "pecans" ], "price" : { "$numberInt" : "10" }, "quantity" : { "$numberInt" : "5" }, "matched_docs" : [ { "efe" : { "$numberInt" : "9" } } ] }
 { "_id" : { "$numberInt" : "6" }, "item" : { "a" : "x", "b" : { "$numberInt" : "1" }, "c" : [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ] }, "matched_docs" : [ { "efe" : { "$numberInt" : "9" } } ] }
 { "_id" : { "$numberInt" : "2" }, "item" : "pecans", "price" : { "$numberInt" : "20" }, "quantity" : { "$numberInt" : "1" }, "matched_docs" : [ { "efe" : { "$numberInt" : "9" } } ] }
 { "_id" : { "$numberInt" : "3" }, "item" : "bread", "price" : { "$numberInt" : "10" }, "quantity" : { "$numberInt" : "5" }, "matched_docs" : [ { "efe" : { "$numberInt" : "9" } } ] }
 { "_id" : { "$numberInt" : "7" }, "item" : [ { "a" : { "b" : { "$numberInt" : "1" } } }, [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ], { "$numberInt" : "1" }, "x" ], "matched_docs" : [ { "efe" : { "$numberInt" : "9" } } ] }
 { "_id" : { "$numberInt" : "5" }, "matched_docs" : [ { "efe" : { "$numberInt" : "9" } } ] }
 { "_id" : { "$numberInt" : "1" }, "item" : "almonds", "price" : { "$numberInt" : "12" }, "quantity" : { "$numberInt" : "2" }, "matched_docs" : [ { "efe" : { "$numberInt" : "9" } } ] }
(7 rows)

SELECT document FROM bson_aggregation_pipeline('db', 
    '{ "aggregate": "agg_pipeline_orders", "pipeline": [ { "$lookup": { "from": "agg_pipeline_inventory", "as": "matched_docs", "localField": "item", "foreignField": "sku", "pipeline": [ { "$count": "efe" } ] } } ], "cursor": {} }');
                                                                                                                           document                                                                                                                            
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "4" }, "item" : [ "almonds", "bread", "pecans" ], "price" : { "$numberInt" : "10" }, "quantity" : { "$numberInt" : "5" }, "matched_docs" : [ { "efe" : { "$numberInt" : "4" } } ] }
 { "_id" : { "$numberInt" : "6" }, "item" : { "a" : "x", "b" : { "$numberInt" : "1" }, "c" : [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ] }, "matched_docs" : [ { "efe" : { "$numberInt" : "1" } } ] }
 { "_id" : { "$numberInt" : "2" }, "item" : "pecans", "price" : { "$numberInt" : "20" }, "quantity" : { "$numberInt" : "1" }, "matched_docs" : [ { "efe" : { "$numberInt" : "1" } } ] }
 { "_id" : { "$numberInt" : "3" }, "item" : "bread", "price" : { "$numberInt" : "10" }, "quantity" : { "$numberInt" : "5" }, "matched_docs" : [ { "efe" : { "$numberInt" : "1" } } ] }
 { "_id" : { "$numberInt" : "7" }, "item" : [ { "a" : { "b" : { "$numberInt" : "1" } } }, [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ], { "$numberInt" : "1" }, "x" ], "matched_docs" : [ { "efe" : { "$numberInt" : "2" } } ] }
 { "_id" : { "$numberInt" : "5" }, "matched_docs" : [ { "efe" : { "$numberInt" : "1" } } ] }
 { "_id" : { "$numberInt" : "1" }, "item" : "almonds", "price" : { "$numberInt" : "12" }, "quantity" : { "$numberInt" : "2" }, "matched_docs" : [ { "efe" : { "$numberInt" : "2" } } ] }
(7 rows)

ROLLBACK;
SELECT documentdb_api.shard_collection('db', 'agg_pipeline_inventory', '{ "_id": "hashed" }', false);
 shard_collection 
---------------------------------------------------------------------
 
(1 row)

SELECT document FROM bson_aggregation_pipeline('db', 
    '{ "aggregate": "agg_pipeline_orders", "pipeline": [ { "$lookup": { "from": "agg_pipeline_inventory", "as": "matched_docs", "localField": "item", "foreignField": "sku" } } ], "cursor": {} }');
                                                                                                                                                                                                                                                                                                                                                document                                                                                                                                                                                                                                                                                                                                                 
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "4" }, "item" : [ "almonds", "bread", "pecans" ], "price" : { "$numberInt" : "10" }, "quantity" : { "$numberInt" : "5" }, "matched_docs" : [ { "_id" : { "$numberInt" : "12" }, "sku" : "almonds", "description" : "product 1", "instock" : { "$numberInt" : "240" } }, { "_id" : { "$numberInt" : "11" }, "sku" : "almonds", "description" : "product 1", "instock" : { "$numberInt" : "120" } }, { "_id" : { "$numberInt" : "13" }, "sku" : "bread", "description" : "product 2", "instock" : { "$numberInt" : "80" } }, { "_id" : { "$numberInt" : "15" }, "sku" : "pecans", "description" : "product 4", "instock" : { "$numberInt" : "70" } } ] }
 { "_id" : { "$numberInt" : "6" }, "item" : { "a" : "x", "b" : { "$numberInt" : "1" }, "c" : [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ] }, "matched_docs" : [ { "_id" : { "$numberInt" : "17" }, "sku" : { "a" : "x", "b" : { "$numberInt" : "1" }, "c" : [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ] }, "description" : "complex object" } ] }
 { "_id" : { "$numberInt" : "2" }, "item" : "pecans", "price" : { "$numberInt" : "20" }, "quantity" : { "$numberInt" : "1" }, "matched_docs" : [ { "_id" : { "$numberInt" : "15" }, "sku" : "pecans", "description" : "product 4", "instock" : { "$numberInt" : "70" } } ] }
 { "_id" : { "$numberInt" : "3" }, "item" : "bread", "price" : { "$numberInt" : "10" }, "quantity" : { "$numberInt" : "5" }, "matched_docs" : [ { "_id" : { "$numberInt" : "13" }, "sku" : "bread", "description" : "product 2", "instock" : { "$numberInt" : "80" } } ] }
 { "_id" : { "$numberInt" : "7" }, "item" : [ { "a" : { "b" : { "$numberInt" : "1" } } }, [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ], { "$numberInt" : "1" }, "x" ], "matched_docs" : [ { "_id" : { "$numberInt" : "19" }, "sku" : [ { "a" : { "b" : { "$numberInt" : "1" } } }, [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ], { "$numberInt" : "1" }, "x" ], "description" : "complex array" }, { "_id" : { "$numberInt" : "18" }, "sku" : [ { "a" : { "b" : { "$numberInt" : "1" } } }, [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ], { "$numberInt" : "1" }, "x" ], "description" : "complex array" } ] }
 { "_id" : { "$numberInt" : "5" }, "matched_docs" : [ { "_id" : { "$numberInt" : "16" }, "sku" : null, "description" : "product 4", "instock" : { "$numberInt" : "70" } } ] }
 { "_id" : { "$numberInt" : "1" }, "item" : "almonds", "price" : { "$numberInt" : "12" }, "quantity" : { "$numberInt" : "2" }, "matched_docs" : [ { "_id" : { "$numberInt" : "12" }, "sku" : "almonds", "description" : "product 1", "instock" : { "$numberInt" : "240" } }, { "_id" : { "$numberInt" : "11" }, "sku" : "almonds", "description" : "product 1", "instock" : { "$numberInt" : "120" } } ] }
(7 rows)

SELECT document FROM bson_aggregation_pipeline('db', 
    '{ "aggregate": "agg_pipeline_orders", "pipeline": [ { "$lookup": { "from": "agg_pipeline_inventory", "as": "matched_docs", "pipeline": [ { "$count": "efe" } ] } } ], "cursor": {} }');
                                                                                                                           document                                                                                                                            
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "4" }, "item" : [ "almonds", "bread", "pecans" ], "price" : { "$numberInt" : "10" }, "quantity" : { "$numberInt" : "5" }, "matched_docs" : [ { "efe" : { "$numberInt" : "9" } } ] }
 { "_id" : { "$numberInt" : "6" }, "item" : { "a" : "x", "b" : { "$numberInt" : "1" }, "c" : [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ] }, "matched_docs" : [ { "efe" : { "$numberInt" : "9" } } ] }
 { "_id" : { "$numberInt" : "2" }, "item" : "pecans", "price" : { "$numberInt" : "20" }, "quantity" : { "$numberInt" : "1" }, "matched_docs" : [ { "efe" : { "$numberInt" : "9" } } ] }
 { "_id" : { "$numberInt" : "3" }, "item" : "bread", "price" : { "$numberInt" : "10" }, "quantity" : { "$numberInt" : "5" }, "matched_docs" : [ { "efe" : { "$numberInt" : "9" } } ] }
 { "_id" : { "$numberInt" : "7" }, "item" : [ { "a" : { "b" : { "$numberInt" : "1" } } }, [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ], { "$numberInt" : "1" }, "x" ], "matched_docs" : [ { "efe" : { "$numberInt" : "9" } } ] }
 { "_id" : { "$numberInt" : "5" }, "matched_docs" : [ { "efe" : { "$numberInt" : "9" } } ] }
 { "_id" : { "$numberInt" : "1" }, "item" : "almonds", "price" : { "$numberInt" : "12" }, "quantity" : { "$numberInt" : "2" }, "matched_docs" : [ { "efe" : { "$numberInt" : "9" } } ] }
(7 rows)

SELECT document FROM bson_aggregation_pipeline('db', 
    '{ "aggregate": "agg_pipeline_orders", "pipeline": [ { "$lookup": { "from": "agg_pipeline_inventory", "as": "matched_docs", "localField": "item", "foreignField": "sku", "pipeline": [ { "$count": "efe" } ] } } ], "cursor": {} }');
                                                                                                                           document                                                                                                                            
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "4" }, "item" : [ "almonds", "bread", "pecans" ], "price" : { "$numberInt" : "10" }, "quantity" : { "$numberInt" : "5" }, "matched_docs" : [ { "efe" : { "$numberInt" : "4" } } ] }
 { "_id" : { "$numberInt" : "6" }, "item" : { "a" : "x", "b" : { "$numberInt" : "1" }, "c" : [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ] }, "matched_docs" : [ { "efe" : { "$numberInt" : "1" } } ] }
 { "_id" : { "$numberInt" : "2" }, "item" : "pecans", "price" : { "$numberInt" : "20" }, "quantity" : { "$numberInt" : "1" }, "matched_docs" : [ { "efe" : { "$numberInt" : "1" } } ] }
 { "_id" : { "$numberInt" : "3" }, "item" : "bread", "price" : { "$numberInt" : "10" }, "quantity" : { "$numberInt" : "5" }, "matched_docs" : [ { "efe" : { "$numberInt" : "1" } } ] }
 { "_id" : { "$numberInt" : "7" }, "item" : [ { "a" : { "b" : { "$numberInt" : "1" } } }, [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ], { "$numberInt" : "1" }, "x" ], "matched_docs" : [ { "efe" : { "$numberInt" : "2" } } ] }
 { "_id" : { "$numberInt" : "5" }, "matched_docs" : [ { "efe" : { "$numberInt" : "1" } } ] }
 { "_id" : { "$numberInt" : "1" }, "item" : "almonds", "price" : { "$numberInt" : "12" }, "quantity" : { "$numberInt" : "2" }, "matched_docs" : [ { "efe" : { "$numberInt" : "2" } } ] }
(7 rows)

SELECT document FROM bson_aggregation_pipeline('db', 
    '{ "aggregate": "agg_pipeline_orders", "pipeline": [ { "$lookup": { "from": "coll_dne", "as": "matched_docs", "localField": "item", "foreignField": "sku", "pipeline": [ { "$count": "efe" } ] } } ], "cursor": {} }');
                                                                                                                           document                                                                                                                            
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "4" }, "item" : [ "almonds", "bread", "pecans" ], "price" : { "$numberInt" : "10" }, "quantity" : { "$numberInt" : "5" }, "matched_docs" : [ { "efe" : { "$numberInt" : "0" } } ] }
 { "_id" : { "$numberInt" : "6" }, "item" : { "a" : "x", "b" : { "$numberInt" : "1" }, "c" : [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ] }, "matched_docs" : [ { "efe" : { "$numberInt" : "0" } } ] }
 { "_id" : { "$numberInt" : "2" }, "item" : "pecans", "price" : { "$numberInt" : "20" }, "quantity" : { "$numberInt" : "1" }, "matched_docs" : [ { "efe" : { "$numberInt" : "0" } } ] }
 { "_id" : { "$numberInt" : "3" }, "item" : "bread", "price" : { "$numberInt" : "10" }, "quantity" : { "$numberInt" : "5" }, "matched_docs" : [ { "efe" : { "$numberInt" : "0" } } ] }
 { "_id" : { "$numberInt" : "7" }, "item" : [ { "a" : { "b" : { "$numberInt" : "1" } } }, [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ], { "$numberInt" : "1" }, "x" ], "matched_docs" : [ { "efe" : { "$numberInt" : "0" } } ] }
 { "_id" : { "$numberInt" : "5" }, "matched_docs" : [ { "efe" : { "$numberInt" : "0" } } ] }
 { "_id" : { "$numberInt" : "1" }, "item" : "almonds", "price" : { "$numberInt" : "12" }, "quantity" : { "$numberInt" : "2" }, "matched_docs" : [ { "efe" : { "$numberInt" : "0" } } ] }
(7 rows)

SELECT document FROM bson_aggregation_pipeline('db', 
    '{ "aggregate": "agg_pipeline_orders", "pipeline": [ { "$lookup": { "from": "colldne", "pipeline": [], "as": "c" } } ], "cursor": {} }');
                                                                                                     document                                                                                                     
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "4" }, "item" : [ "almonds", "bread", "pecans" ], "price" : { "$numberInt" : "10" }, "quantity" : { "$numberInt" : "5" }, "c" : [  ] }
 { "_id" : { "$numberInt" : "6" }, "item" : { "a" : "x", "b" : { "$numberInt" : "1" }, "c" : [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ] }, "c" : [  ] }
 { "_id" : { "$numberInt" : "2" }, "item" : "pecans", "price" : { "$numberInt" : "20" }, "quantity" : { "$numberInt" : "1" }, "c" : [  ] }
 { "_id" : { "$numberInt" : "3" }, "item" : "bread", "price" : { "$numberInt" : "10" }, "quantity" : { "$numberInt" : "5" }, "c" : [  ] }
 { "_id" : { "$numberInt" : "7" }, "item" : [ { "a" : { "b" : { "$numberInt" : "1" } } }, [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ], { "$numberInt" : "1" }, "x" ], "c" : [  ] }
 { "_id" : { "$numberInt" : "5" }, "c" : [  ] }
 { "_id" : { "$numberInt" : "1" }, "item" : "almonds", "price" : { "$numberInt" : "12" }, "quantity" : { "$numberInt" : "2" }, "c" : [  ] }
(7 rows)

SELECT document FROM bson_aggregation_pipeline('db', 
    '{ "aggregate": "agg_pipeline_orders", "pipeline": [ { "$lookup": { "as": "matched_docs", "pipeline": [ { "$documents": [ { "a": 1}, { "a": 2 } ] }  ] } } ], "cursor": {} }');
                                                                                                                                           document                                                                                                                                            
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "4" }, "item" : [ "almonds", "bread", "pecans" ], "price" : { "$numberInt" : "10" }, "quantity" : { "$numberInt" : "5" }, "matched_docs" : [ { "a" : { "$numberInt" : "1" } }, { "a" : { "$numberInt" : "2" } } ] }
 { "_id" : { "$numberInt" : "6" }, "item" : { "a" : "x", "b" : { "$numberInt" : "1" }, "c" : [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ] }, "matched_docs" : [ { "a" : { "$numberInt" : "1" } }, { "a" : { "$numberInt" : "2" } } ] }
 { "_id" : { "$numberInt" : "2" }, "item" : "pecans", "price" : { "$numberInt" : "20" }, "quantity" : { "$numberInt" : "1" }, "matched_docs" : [ { "a" : { "$numberInt" : "1" } }, { "a" : { "$numberInt" : "2" } } ] }
 { "_id" : { "$numberInt" : "3" }, "item" : "bread", "price" : { "$numberInt" : "10" }, "quantity" : { "$numberInt" : "5" }, "matched_docs" : [ { "a" : { "$numberInt" : "1" } }, { "a" : { "$numberInt" : "2" } } ] }
 { "_id" : { "$numberInt" : "7" }, "item" : [ { "a" : { "b" : { "$numberInt" : "1" } } }, [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ], { "$numberInt" : "1" }, "x" ], "matched_docs" : [ { "a" : { "$numberInt" : "1" } }, { "a" : { "$numberInt" : "2" } } ] }
 { "_id" : { "$numberInt" : "5" }, "matched_docs" : [ { "a" : { "$numberInt" : "1" } }, { "a" : { "$numberInt" : "2" } } ] }
 { "_id" : { "$numberInt" : "1" }, "item" : "almonds", "price" : { "$numberInt" : "12" }, "quantity" : { "$numberInt" : "2" }, "matched_docs" : [ { "a" : { "$numberInt" : "1" } }, { "a" : { "$numberInt" : "2" } } ] }
(7 rows)

SELECT document FROM bson_aggregation_pipeline('db', 
    '{ "aggregate": "agg_pipeline_orders", "pipeline": [ { "$lookup": { "as": "matched_docs",  "foreignField": "foo", "localField": "_id", "pipeline": [ { "$documents": [ { "a": 1}, { "a": 2 } ] }  ] } } ], "cursor": {} }');
                                                                                                          document                                                                                                           
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "4" }, "item" : [ "almonds", "bread", "pecans" ], "price" : { "$numberInt" : "10" }, "quantity" : { "$numberInt" : "5" }, "matched_docs" : [  ] }
 { "_id" : { "$numberInt" : "6" }, "item" : { "a" : "x", "b" : { "$numberInt" : "1" }, "c" : [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ] }, "matched_docs" : [  ] }
 { "_id" : { "$numberInt" : "2" }, "item" : "pecans", "price" : { "$numberInt" : "20" }, "quantity" : { "$numberInt" : "1" }, "matched_docs" : [  ] }
 { "_id" : { "$numberInt" : "3" }, "item" : "bread", "price" : { "$numberInt" : "10" }, "quantity" : { "$numberInt" : "5" }, "matched_docs" : [  ] }
 { "_id" : { "$numberInt" : "7" }, "item" : [ { "a" : { "b" : { "$numberInt" : "1" } } }, [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ], { "$numberInt" : "1" }, "x" ], "matched_docs" : [  ] }
 { "_id" : { "$numberInt" : "5" }, "matched_docs" : [  ] }
 { "_id" : { "$numberInt" : "1" }, "item" : "almonds", "price" : { "$numberInt" : "12" }, "quantity" : { "$numberInt" : "2" }, "matched_docs" : [  ] }
(7 rows)

-- $lookup.pipeline Negative tests
SELECT document FROM bson_aggregation_pipeline('db', 
    '{ "aggregate": "agg_pipeline_orders", "pipeline": [ { "$lookup": { "from": "colldne", "pipeline": { "$count": "efe" }, "as": "c" } } ], "cursor": {} }');
ERROR:  BSON field '$lookup.pipeline' is the wrong type 'object', expected type 'array'
SELECT document FROM bson_aggregation_pipeline('db', 
    '{ "aggregate": "agg_pipeline_orders", "pipeline": [ { "$lookup": { "from": "colldne", "pipeline": [ "$count" ], "as": "c" } } ], "cursor": {} }');
ERROR:  Pipeline stage for lookup pipeline must be a document
SELECT document FROM bson_aggregation_pipeline('db', 
    '{ "aggregate": "agg_pipeline_orders", "pipeline": [ { "$lookup": { "from": "colldne", "pipeline": [ { } ], "as": "c" } } ], "cursor": {} }');
ERROR:  A pipeline stage specification object must contain exactly one field.
SELECT document FROM bson_aggregation_pipeline('db', 
    '{ "aggregate": "agg_pipeline_orders", "pipeline": [ { "$lookup": { "from": "colldne", "pipeline": [ { "$count": "efe", "$match": { "year": 2018 } } ], "as": "c" } } ], "cursor": {} }');
ERROR:  A pipeline stage specification object must contain exactly one field.
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": 1, "pipeline": [ { "$addFields": { "newField" : "1", "a.y": ["p", "q"] } } ], "cursor": {} }');
ERROR:  {aggregate: 1} is not valid for '$addFields'; a collection is required.
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": 1, "pipeline": [ { "$match": { "newField" : "1", "a.y": ["p", "q"] } } ], "cursor": {} }');
ERROR:  {aggregate: 1} is not valid for '$match'; a collection is required.
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": 1, "pipeline": [ { "$project": { "newField" : "1", "a.y": ["p", "q"] } } ], "cursor": {} }');
ERROR:  {aggregate: 1} is not valid for '$project'; a collection is required.
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": 1, "pipeline": [ { "$skip": 1 } ], "cursor": {} }');
ERROR:  {aggregate: 1} is not valid for '$skip'; a collection is required.
-- test sort behavior on sharded/unsharded
SELECT documentdb_distributed_test_helpers.mask_plan_id_from_distributed_subplan($Q$
EXPLAIN (COSTS OFF) SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate" : "agg_pipeline_inventory", "pipeline" : [ { "$match" : { "$or" : [ { "_id" : { "$lt" : 9999.0 }, "some_other_field" : { "$ne" : 3.0 } }, { "this_predicate_matches_nothing" : true } ] } }, { "$sort" : { "_id" : -1.0 } }, { "$limit" : 1.0 }, { "$project" : { "_id" : 1.0, "b" : { "$round" : "$a" } } } ], "cursor" : {  }, "lsid" : { "id" : { "$binary" : { "base64": "VJmzOaS5R46C4aFkQzrFaQ==", "subType" : "04" } } }, "$db" : "test" }')
$Q$);
                                                                                                                                                                                                 mask_plan_id_from_distributed_subplan                                                                                                                                                                                                  
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   ->  Distributed Subplan X_X
         ->  Limit
               ->  Sort
                     Sort Key: remote_scan."?sort?" DESC NULLS LAST
                     ->  Custom Scan (Citus Adaptive)
                           Task Count: 8
                           Tasks Shown: One of 8
                           ->  Task
                                 Node: host=localhost port=58070 dbname=regression
                                 ->  Limit
                                       ->  Sort
                                             Sort Key: (documentdb_api_catalog.bson_orderby(document, '{ "_id" : { "$numberDouble" : "-1.0" } }'::documentdb_core.bson)) DESC NULLS LAST
                                             ->  Seq Scan on documents_4112_411056 collection
                                                   Filter: (((document OPERATOR(documentdb_api_catalog.@<) '{ "_id" : { "$numberDouble" : "9999.0" } }'::documentdb_core.bson) AND (document OPERATOR(documentdb_api_catalog.@!=) '{ "some_other_field" : { "$numberDouble" : "3.0" } }'::documentdb_core.bson)) OR (document OPERATOR(documentdb_api_catalog.@=) '{ "this_predicate_matches_nothing" : true }'::documentdb_core.bson))
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Node: host=localhost port=58070 dbname=regression
         ->  Function Scan on read_intermediate_result intermediate_result
(20 rows)

SELECT documentdb_distributed_test_helpers.drop_primary_key('db','aggregation_pipeline');
 drop_primary_key 
---------------------------------------------------------------------
 
(1 row)

SELECT documentdb_distributed_test_helpers.mask_plan_id_from_distributed_subplan($Q$
EXPLAIN (COSTS OFF) SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate" : "aggregation_pipeline", "pipeline" : [ { "$match" : { "$or" : [ { "_id" : { "$lt" : 9999.0 }, "some_other_field" : { "$ne" : 3.0 } }, { "this_predicate_matches_nothing" : true } ] } }, { "$sort" : { "_id" : -1.0 } }, { "$limit" : 1.0 }, { "$project" : { "_id" : 1.0, "b" : { "$round" : "$a" } } } ], "cursor" : {  }, "lsid" : { "id" : { "$binary" : { "base64": "VJmzOaS5R46C4aFkQzrFaQ==", "subType" : "04" } } }, "$db" : "test" }')
$Q$);
                                                                                                                                                                                        mask_plan_id_from_distributed_subplan                                                                                                                                                                                         
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Node: host=localhost port=58070 dbname=regression
         ->  Subquery Scan on agg_stage_3
               ->  Limit
                     ->  Sort
                           Sort Key: collection.object_id DESC
                           ->  Seq Scan on documents_4110_411001 collection
                                 Filter: (((document OPERATOR(documentdb_api_catalog.@<) '{ "_id" : { "$numberDouble" : "9999.0" } }'::documentdb_core.bson) AND (document OPERATOR(documentdb_api_catalog.@!=) '{ "some_other_field" : { "$numberDouble" : "3.0" } }'::documentdb_core.bson)) OR (document OPERATOR(documentdb_api_catalog.@=) '{ "this_predicate_matches_nothing" : true }'::documentdb_core.bson))
(11 rows)

-- unionWith
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$unionWith": "aggregation_pipeline" } ], "cursor": {} }');
                                                               document                                                               
---------------------------------------------------------------------
 { "_id" : "1", "int" : { "$numberInt" : "10" }, "a" : { "b" : [ "x", { "$numberInt" : "1" }, { "$numberDouble" : "2.0" }, true ] } }
 { "_id" : "2", "double" : { "$numberDouble" : "2.0" }, "a" : { "b" : { "c" : { "$numberInt" : "3" } } } }
 { "_id" : "3", "boolean" : false, "a" : "no", "b" : "yes", "c" : true }
 { "_id" : "1", "int" : { "$numberInt" : "10" }, "a" : { "b" : [ "x", { "$numberInt" : "1" }, { "$numberDouble" : "2.0" }, true ] } }
 { "_id" : "2", "double" : { "$numberDouble" : "2.0" }, "a" : { "b" : { "c" : { "$numberInt" : "3" } } } }
 { "_id" : "3", "boolean" : false, "a" : "no", "b" : "yes", "c" : true }
(6 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$unionWith": { "coll": "aggregation_pipeline" } } ], "cursor": {} }');
                                                               document                                                               
---------------------------------------------------------------------
 { "_id" : "1", "int" : { "$numberInt" : "10" }, "a" : { "b" : [ "x", { "$numberInt" : "1" }, { "$numberDouble" : "2.0" }, true ] } }
 { "_id" : "2", "double" : { "$numberDouble" : "2.0" }, "a" : { "b" : { "c" : { "$numberInt" : "3" } } } }
 { "_id" : "3", "boolean" : false, "a" : "no", "b" : "yes", "c" : true }
 { "_id" : "1", "int" : { "$numberInt" : "10" }, "a" : { "b" : [ "x", { "$numberInt" : "1" }, { "$numberDouble" : "2.0" }, true ] } }
 { "_id" : "2", "double" : { "$numberDouble" : "2.0" }, "a" : { "b" : { "c" : { "$numberInt" : "3" } } } }
 { "_id" : "3", "boolean" : false, "a" : "no", "b" : "yes", "c" : true }
(6 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$unionWith": { "coll": "aggregation_pipeline" } }, { "$unionWith": { "coll": "aggregation_pipeline" } }, { "$unionWith": { "coll": "aggregation_pipeline" } } ], "cursor": {} }');
                                                               document                                                               
---------------------------------------------------------------------
 { "_id" : "1", "int" : { "$numberInt" : "10" }, "a" : { "b" : [ "x", { "$numberInt" : "1" }, { "$numberDouble" : "2.0" }, true ] } }
 { "_id" : "2", "double" : { "$numberDouble" : "2.0" }, "a" : { "b" : { "c" : { "$numberInt" : "3" } } } }
 { "_id" : "3", "boolean" : false, "a" : "no", "b" : "yes", "c" : true }
 { "_id" : "1", "int" : { "$numberInt" : "10" }, "a" : { "b" : [ "x", { "$numberInt" : "1" }, { "$numberDouble" : "2.0" }, true ] } }
 { "_id" : "2", "double" : { "$numberDouble" : "2.0" }, "a" : { "b" : { "c" : { "$numberInt" : "3" } } } }
 { "_id" : "3", "boolean" : false, "a" : "no", "b" : "yes", "c" : true }
 { "_id" : "1", "int" : { "$numberInt" : "10" }, "a" : { "b" : [ "x", { "$numberInt" : "1" }, { "$numberDouble" : "2.0" }, true ] } }
 { "_id" : "2", "double" : { "$numberDouble" : "2.0" }, "a" : { "b" : { "c" : { "$numberInt" : "3" } } } }
 { "_id" : "3", "boolean" : false, "a" : "no", "b" : "yes", "c" : true }
 { "_id" : "1", "int" : { "$numberInt" : "10" }, "a" : { "b" : [ "x", { "$numberInt" : "1" }, { "$numberDouble" : "2.0" }, true ] } }
 { "_id" : "2", "double" : { "$numberDouble" : "2.0" }, "a" : { "b" : { "c" : { "$numberInt" : "3" } } } }
 { "_id" : "3", "boolean" : false, "a" : "no", "b" : "yes", "c" : true }
(12 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$unionWith": { "coll": "aggregation_pipeline" } }, { "$unionWith": { "coll": "aggregation_pipeline" } }, { "$match": { "a": "no" } }], "cursor": {} }');
                                document                                 
---------------------------------------------------------------------
 { "_id" : "3", "boolean" : false, "a" : "no", "b" : "yes", "c" : true }
 { "_id" : "3", "boolean" : false, "a" : "no", "b" : "yes", "c" : true }
 { "_id" : "3", "boolean" : false, "a" : "no", "b" : "yes", "c" : true }
(3 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$unionWith": { "coll": "aggregation_pipeline", "pipeline": [ ] } } ], "cursor": {} }');
                                                               document                                                               
---------------------------------------------------------------------
 { "_id" : "1", "int" : { "$numberInt" : "10" }, "a" : { "b" : [ "x", { "$numberInt" : "1" }, { "$numberDouble" : "2.0" }, true ] } }
 { "_id" : "2", "double" : { "$numberDouble" : "2.0" }, "a" : { "b" : { "c" : { "$numberInt" : "3" } } } }
 { "_id" : "3", "boolean" : false, "a" : "no", "b" : "yes", "c" : true }
 { "_id" : "1", "int" : { "$numberInt" : "10" }, "a" : { "b" : [ "x", { "$numberInt" : "1" }, { "$numberDouble" : "2.0" }, true ] } }
 { "_id" : "2", "double" : { "$numberDouble" : "2.0" }, "a" : { "b" : { "c" : { "$numberInt" : "3" } } } }
 { "_id" : "3", "boolean" : false, "a" : "no", "b" : "yes", "c" : true }
(6 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$unionWith": { "coll": "aggregation_pipeline", "pipeline": [ { "$addFields": { "newField" : "1", "a.y": ["p", "q"] } } ] } } ], "cursor": {} }');
                                                                                  document                                                                                  
---------------------------------------------------------------------
 { "_id" : "1", "int" : { "$numberInt" : "10" }, "a" : { "b" : [ "x", { "$numberInt" : "1" }, { "$numberDouble" : "2.0" }, true ] } }
 { "_id" : "2", "double" : { "$numberDouble" : "2.0" }, "a" : { "b" : { "c" : { "$numberInt" : "3" } } } }
 { "_id" : "3", "boolean" : false, "a" : "no", "b" : "yes", "c" : true }
 { "_id" : "1", "int" : { "$numberInt" : "10" }, "a" : { "b" : [ "x", { "$numberInt" : "1" }, { "$numberDouble" : "2.0" }, true ], "y" : [ "p", "q" ] }, "newField" : "1" }
 { "_id" : "2", "double" : { "$numberDouble" : "2.0" }, "a" : { "b" : { "c" : { "$numberInt" : "3" } }, "y" : [ "p", "q" ] }, "newField" : "1" }
 { "_id" : "3", "boolean" : false, "b" : "yes", "c" : true, "newField" : "1", "a" : { "y" : [ "p", "q" ] } }
(6 rows)

EXPLAIN (COSTS OFF, VERBOSE ON) SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$unionWith": { "coll": "aggregation_pipeline", "pipeline": [ { "$addFields": { "newField" : "1", "a.y": ["p", "q"] } } ] } } ], "cursor": {} }');

---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Output: remote_scan.document
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Query: SELECT document FROM (SELECT collection.document FROM documentdb_data.documents_4110_411001 collection WHERE (collection.shard_key_value OPERATOR(pg_catalog.=) '4110'::bigint) UNION ALL SELECT documentdb_api_internal.bson_dollar_add_fields(collection_0_1.document, '{ "newField" : "1", "a.y" : [ "p", "q" ] }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson) AS document FROM documentdb_data.documents_4110_411001 collection_0_1 WHERE (collection_0_1.shard_key_value OPERATOR(pg_catalog.=) '4110'::bigint)) agg_stage_0
         Node: host=localhost port=58070 dbname=regression
         ->  Append
               ->  Seq Scan on documentdb_data.documents_4110_411001 collection
                     Output: collection.document
               ->  Seq Scan on documentdb_data.documents_4110_411001 collection_0_1
                     Output: documentdb_api_internal.bson_dollar_add_fields(collection_0_1.document, '{ "newField" : "1", "a.y" : [ "p", "q" ] }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson)
(12 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$unionWith": { "coll": "agg_pipeline_inventory", "pipeline": [ { "$match" : { "$or" : [ { "_id" : { "$lt" : 9999.0 }, "some_other_field" : { "$ne" : 3.0 } } ] } } ] } } ], "cursor": {} }');
                                                                                                               document                                                                                                                
---------------------------------------------------------------------
 { "_id" : "1", "int" : { "$numberInt" : "10" }, "a" : { "b" : [ "x", { "$numberInt" : "1" }, { "$numberDouble" : "2.0" }, true ] } }
 { "_id" : "2", "double" : { "$numberDouble" : "2.0" }, "a" : { "b" : { "c" : { "$numberInt" : "3" } } } }
 { "_id" : "3", "boolean" : false, "a" : "no", "b" : "yes", "c" : true }
 { "_id" : { "$numberInt" : "12" }, "sku" : "almonds", "description" : "product 1", "instock" : { "$numberInt" : "240" } }
 { "_id" : { "$numberInt" : "14" }, "sku" : "cashews", "description" : "product 3", "instock" : { "$numberInt" : "60" } }
 { "_id" : { "$numberInt" : "19" }, "sku" : [ { "a" : { "b" : { "$numberInt" : "1" } } }, [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ], { "$numberInt" : "1" }, "x" ], "description" : "complex array" }
 { "_id" : { "$numberInt" : "16" }, "sku" : null, "description" : "product 4", "instock" : { "$numberInt" : "70" } }
 { "_id" : { "$numberInt" : "17" }, "sku" : { "a" : "x", "b" : { "$numberInt" : "1" }, "c" : [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ] }, "description" : "complex object" }
 { "_id" : { "$numberInt" : "11" }, "sku" : "almonds", "description" : "product 1", "instock" : { "$numberInt" : "120" } }
 { "_id" : { "$numberInt" : "13" }, "sku" : "bread", "description" : "product 2", "instock" : { "$numberInt" : "80" } }
 { "_id" : { "$numberInt" : "15" }, "sku" : "pecans", "description" : "product 4", "instock" : { "$numberInt" : "70" } }
 { "_id" : { "$numberInt" : "18" }, "sku" : [ { "a" : { "b" : { "$numberInt" : "1" } } }, [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ], { "$numberInt" : "1" }, "x" ], "description" : "complex array" }
(12 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [{ "$match": { "nonexist": { "$exists": true } } }, { "$unionWith": { "coll": "agg_pipeline_inventory", "pipeline": [ { "$match" : { "$or" : [ { "_id" : { "$lt" : 9999.0 }, "some_other_field" : { "$ne" : 3.0 } } ] } } ] } } ], "cursor": {} }');
                                                                                                               document                                                                                                                
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "12" }, "sku" : "almonds", "description" : "product 1", "instock" : { "$numberInt" : "240" } }
 { "_id" : { "$numberInt" : "14" }, "sku" : "cashews", "description" : "product 3", "instock" : { "$numberInt" : "60" } }
 { "_id" : { "$numberInt" : "19" }, "sku" : [ { "a" : { "b" : { "$numberInt" : "1" } } }, [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ], { "$numberInt" : "1" }, "x" ], "description" : "complex array" }
 { "_id" : { "$numberInt" : "16" }, "sku" : null, "description" : "product 4", "instock" : { "$numberInt" : "70" } }
 { "_id" : { "$numberInt" : "17" }, "sku" : { "a" : "x", "b" : { "$numberInt" : "1" }, "c" : [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ] }, "description" : "complex object" }
 { "_id" : { "$numberInt" : "11" }, "sku" : "almonds", "description" : "product 1", "instock" : { "$numberInt" : "120" } }
 { "_id" : { "$numberInt" : "13" }, "sku" : "bread", "description" : "product 2", "instock" : { "$numberInt" : "80" } }
 { "_id" : { "$numberInt" : "15" }, "sku" : "pecans", "description" : "product 4", "instock" : { "$numberInt" : "70" } }
 { "_id" : { "$numberInt" : "18" }, "sku" : [ { "a" : { "b" : { "$numberInt" : "1" } } }, [ { "$numberInt" : "1" }, { "$numberInt" : "2" }, { "$numberInt" : "3" } ], { "$numberInt" : "1" }, "x" ], "description" : "complex array" }
(9 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$unionWith": { } } ], "cursor": {} }');
ERROR:  $unionWith stage without explicit collection must have a pipeline with $documents as first stage
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$unionWith": { "pipeline": [ ] } } ], "cursor": {} }');
ERROR:  $unionWith stage without explicit collection must have a pipeline with $documents as first stage
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$unionWith": { "pipeline": [ { "$match" : { "$or" : [ { "_id" : { "$lt" : 9999.0 }, "some_other_field" : { "$ne" : 3.0 } } ] } } ] } } ], "cursor": {} }');
ERROR:  $unionWith stage without explicit collection must have a pipeline with $documents as first stage
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$unionWith": { "pipeline": [ { "$documents": [ { "a": 1 }, { "a": 2 } ]}] } } ], "cursor": {} }');
                                                               document                                                               
---------------------------------------------------------------------
 { "_id" : "1", "int" : { "$numberInt" : "10" }, "a" : { "b" : [ "x", { "$numberInt" : "1" }, { "$numberDouble" : "2.0" }, true ] } }
 { "_id" : "2", "double" : { "$numberDouble" : "2.0" }, "a" : { "b" : { "c" : { "$numberInt" : "3" } } } }
 { "_id" : "3", "boolean" : false, "a" : "no", "b" : "yes", "c" : true }
 { "a" : { "$numberInt" : "1" } }
 { "a" : { "$numberInt" : "2" } }
(5 rows)

-- $addFields nested usage
SELECT documentdb_api.insert_one('db','aggregation_pipeline','{ "_id": 100, "student": "Maya", "homework": [10, 5, 10], "quiz": [10, 8], "extraCredit": 0 }', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','aggregation_pipeline','{ "_id": 200, "student": "Ryan", "homework": [5, 6, 5], "quiz": [8, 8], "extraCredit": 8 }', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$match": { "extraCredit": { "$gte": 0 } } }, { "$addFields": { "totalHomework": { "$sum": "$homework" }, "totalQuiz": { "$sum": "$quiz" } }}, { "$addFields": { "totalScore": { "$add": [ "$totalHomework", "$totalQuiz", "$extraCredit" ]} }} ], "cursor": {} }');
                                                                                                                                                                                      document                                                                                                                                                                                       
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "100" }, "student" : "Maya", "homework" : [ { "$numberInt" : "10" }, { "$numberInt" : "5" }, { "$numberInt" : "10" } ], "quiz" : [ { "$numberInt" : "10" }, { "$numberInt" : "8" } ], "extraCredit" : { "$numberInt" : "0" }, "totalHomework" : { "$numberInt" : "25" }, "totalQuiz" : { "$numberInt" : "18" }, "totalScore" : { "$numberInt" : "43" } }
 { "_id" : { "$numberInt" : "200" }, "student" : "Ryan", "homework" : [ { "$numberInt" : "5" }, { "$numberInt" : "6" }, { "$numberInt" : "5" } ], "quiz" : [ { "$numberInt" : "8" }, { "$numberInt" : "8" } ], "extraCredit" : { "$numberInt" : "8" }, "totalHomework" : { "$numberInt" : "16" }, "totalQuiz" : { "$numberInt" : "16" }, "totalScore" : { "$numberInt" : "40" } }
(2 rows)

-- NumberDouble Range+1 and Range-1 Negative test $skip
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$skip": {"$numberDouble" : "-9223372036854776833"} } ], "cursor": {} }');
ERROR:  invalid argument to $skip stage: Cannot represent as a 64-bit integer $skip: -9223372036854777856.000000
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$skip": {"$numberDouble" : "9223372036854775296"} } ], "cursor": {} }');
ERROR:  invalid argument to $skip stage: Cannot represent as a 64-bit integer $skip: 9223372036854775808.000000
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "aggregation_pipeline", "pipeline": [ { "$skip": {"$numberDouble" : "-9223372036854776832"} } ], "cursor": {} }');
ERROR:  invalid argument to $skip stage: Expected a non-negative number in $skip: -9223372036854775808
-- samplerate
/* insert 100 documents */
/* test unshard case */
DO $$
DECLARE i int;
BEGIN
FOR i IN 1..100 LOOP
PERFORM documentdb_api.insert_one('db', 'agg_pipeline_samplerate', FORMAT('{ "_id": %s }',i)::documentdb_core.bson);
END LOOP;
END;
$$;
NOTICE:  creating collection
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "agg_pipeline_samplerate", "pipeline": [ { "$match": { "$sampleRate": 1 } }, {"$count": "count"} ], "cursor": {} }');
                document                
---------------------------------------------------------------------
 { "count" : { "$numberInt" : "100" } }
(1 row)

EXPLAIN (COSTS OFF) SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "agg_pipeline_samplerate", "pipeline": [ { "$match": { "$sampleRate": 1 } }, {"$count": "count"} ], "cursor": {} }');
                                QUERY PLAN                                
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Node: host=localhost port=58070 dbname=regression
         ->  Aggregate
               ->  Bitmap Heap Scan on documents_4113_411069 collection
                     Recheck Cond: (shard_key_value = '4113'::bigint)
                     Filter: (random() < '1'::double precision)
                     ->  Bitmap Index Scan on _id_
                           Index Cond: (shard_key_value = '4113'::bigint)
(11 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "agg_pipeline_samplerate", "pipeline": [ { "$match": { "$sampleRate": 0 } }, {"$count": "count"} ], "cursor": {} }');
               document               
---------------------------------------------------------------------
 { "count" : { "$numberInt" : "0" } }
(1 row)

EXPLAIN (COSTS OFF) SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "agg_pipeline_samplerate", "pipeline": [ { "$match": { "$sampleRate": 0 } }, {"$count": "count"} ], "cursor": {} }');
                                QUERY PLAN                                
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Node: host=localhost port=58070 dbname=regression
         ->  Aggregate
               ->  Bitmap Heap Scan on documents_4113_411069 collection
                     Recheck Cond: (shard_key_value = '4113'::bigint)
                     Filter: (random() < '0'::double precision)
                     ->  Bitmap Index Scan on _id_
                           Index Cond: (shard_key_value = '4113'::bigint)
(11 rows)

/* sampleRate will random select document, use greater than 0 to make sure slice of documents is selected */
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "agg_pipeline_samplerate", "pipeline": [ { "$match": { "$sampleRate": 0.5 } }, { "$count": "numMatches" }, { "$addFields": { "gtZero": { "$gt": ["$numMatches", 0] } } }, {"$project": { "_id": 0, "gtZero": 1 } }], "cursor": {} }');
      document       
---------------------------------------------------------------------
 { "gtZero" : true }
(1 row)

EXPLAIN (COSTS OFF) SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "agg_pipeline_samplerate", "pipeline": [ { "$match": { "$sampleRate": 0.5 } }, { "$count": "numMatches" }, { "$addFields": { "gtZero": { "$gt": ["$numMatches", 0] } } }, {"$project": { "_id": 0, "gtZero": 1 } }], "cursor": {} }');
                                   QUERY PLAN                                   
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Node: host=localhost port=58070 dbname=regression
         ->  Subquery Scan on agg_stage_2
               ->  Aggregate
                     ->  Bitmap Heap Scan on documents_4113_411069 collection
                           Recheck Cond: (shard_key_value = '4113'::bigint)
                           Filter: (random() < '0.5'::double precision)
                           ->  Bitmap Index Scan on _id_
                                 Index Cond: (shard_key_value = '4113'::bigint)
(12 rows)

/* test shard case */
SELECT documentdb_api.shard_collection('db', 'agg_pipeline_samplerate', '{ "_id": "hashed" }', false);
 shard_collection 
---------------------------------------------------------------------
 
(1 row)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "agg_pipeline_samplerate", "pipeline": [ { "$match": { "$sampleRate": 1 } }, {"$count": "count"} ], "cursor": {} }');
                document                
---------------------------------------------------------------------
 { "count" : { "$numberInt" : "100" } }
(1 row)

EXPLAIN (COSTS OFF) SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "agg_pipeline_samplerate", "pipeline": [ { "$match": { "$sampleRate": 1 } }, {"$count": "count"} ], "cursor": {} }');
                              QUERY PLAN                              
---------------------------------------------------------------------
 Aggregate
   ->  Custom Scan (Citus Adaptive)
         Task Count: 8
         Tasks Shown: One of 8
         ->  Task
               Node: host=localhost port=58070 dbname=regression
               ->  Aggregate
                     ->  Seq Scan on documents_4113_411080 collection
                           Filter: (random() < '1'::double precision)
(9 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "agg_pipeline_samplerate", "pipeline": [ { "$match": { "$sampleRate": 0 } }, {"$count": "count"} ], "cursor": {} }');
               document               
---------------------------------------------------------------------
 { "count" : { "$numberInt" : "0" } }
(1 row)

EXPLAIN (COSTS OFF) SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "agg_pipeline_samplerate", "pipeline": [ { "$match": { "$sampleRate": 0 } }, {"$count": "count"} ], "cursor": {} }');
                              QUERY PLAN                              
---------------------------------------------------------------------
 Aggregate
   ->  Custom Scan (Citus Adaptive)
         Task Count: 8
         Tasks Shown: One of 8
         ->  Task
               Node: host=localhost port=58070 dbname=regression
               ->  Aggregate
                     ->  Seq Scan on documents_4113_411080 collection
                           Filter: (random() < '0'::double precision)
(9 rows)

/* sampleRate will random select document, use greater than 0 to make sure slice of documents is selected */
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "agg_pipeline_samplerate", "pipeline": [ { "$match": { "$sampleRate": 0.5 } }, { "$count": "numMatches" }, { "$addFields": { "gtZero": { "$gt": ["$numMatches", 0] } } }, {"$project": { "_id": 0, "gtZero": 1 } }], "cursor": {} }');
      document       
---------------------------------------------------------------------
 { "gtZero" : true }
(1 row)

-- negative samplerate
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "agg_pipeline_samplerate", "pipeline": [ { "$match": { "$sampleRate": -1.23 } }, { "$limit": 1 }, {"$count": "count"} ], "cursor": {} }');
ERROR:  numeric argument to $sampleRate must be in [0, 1]
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "agg_pipeline_samplerate", "pipeline": [ { "$match": { "$sampleRate": null } }, { "$limit": 1 }, {"$count": "count"} ], "cursor": {} }');
ERROR:  argument to $sampleRate must be a numeric type
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "agg_pipeline_samplerate", "pipeline": [ { "$match": { "$sampleRate": NaN } }, { "$limit": 1 }, {"$count": "count"} ], "cursor": {} }');
ERROR:  numeric argument to $sampleRate must be in [0, 1]
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "agg_pipeline_samplerate", "pipeline": [ { "$match": { "$sampleRate": Infinity } }, { "$limit": 1 }, {"$count": "count"} ], "cursor": {} }');
ERROR:  numeric argument to $sampleRate must be in [0, 1]
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "agg_pipeline_samplerate", "pipeline": [ { "$match": { "$sampleRate": -Infinity } }, { "$limit": 1 }, {"$count": "count"} ], "cursor": {} }');
ERROR:  numeric argument to $sampleRate must be in [0, 1]
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "agg_pipeline_samplerate", "pipeline": [ { "$match": { "$sampleRate": "0.65" } }, { "$limit": 1 }, {"$count": "count"} ], "cursor": {} }');
ERROR:  argument to $sampleRate must be a numeric type
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "agg_pipeline_samplerate", "pipeline": [ { "$match": { "$sampleRate": 10 } }, { "$limit": 1 }, {"$count": "count"} ], "cursor": {} }');
ERROR:  numeric argument to $sampleRate must be in [0, 1]
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "agg_pipeline_samplerate", "pipeline": [ { "$match": { "$sampleRate": false } }, { "$limit": 1 }, {"$count": "count"} ], "cursor": {} }');
ERROR:  argument to $sampleRate must be a numeric type
-- Pipeline directly push to shards if all stages refer to same collection and that is not sharded and is present on the same node as coordinator.
SELECT documentdb_api.insert_one('pipelineDB','agg_pipeline_optimizations','{ "_id": 1, "a": "RANDOM_A", "b": {"c": ["SAMPLE1", "SAMPLE2"], "d": [[1,2], [3, 4]]} }', NULL);
NOTICE:  creating collection
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('pipelineDB','agg_pipeline_optimizations','{ "_id": 2, "a": "RANDOM_B", "b": {"c": ["SAMPLE3", "SAMPLE4"], "d": [[5,6], [7, 8]]} }', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT document FROM bson_aggregation_pipeline('pipelineDB', '{ "aggregate": "agg_pipeline_optimizations", "pipeline": [ { "$match": { "a": "RANDOM_A" } } ] }');
                                                                                                     document                                                                                                     
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "RANDOM_A", "b" : { "c" : [ "SAMPLE1", "SAMPLE2" ], "d" : [ [ { "$numberInt" : "1" }, { "$numberInt" : "2" } ], [ { "$numberInt" : "3" }, { "$numberInt" : "4" } ] ] } }
(1 row)

EXPLAIN (VERBOSE ON, COSTS OFF) SELECT document FROM bson_aggregation_pipeline('pipelineDB', '{ "aggregate": "agg_pipeline_optimizations", "pipeline": [ { "$match": { "a": "RANDOM_A" } } ] }');
                              QUERY PLAN                              
---------------------------------------------------------------------
 Bitmap Heap Scan on documentdb_data.documents_4115_411090 collection
   Output: document
   Recheck Cond: (collection.shard_key_value = '4115'::bigint)
   Filter: (collection.document @= '{ "a" : "RANDOM_A" }'::bson)
   ->  Bitmap Index Scan on _id_
         Index Cond: (collection.shard_key_value = '4115'::bigint)
(6 rows)

SELECT document FROM bson_aggregation_pipeline('pipelineDB', '{ "aggregate": "agg_pipeline_optimizations", "pipeline": [ { "$project": { "a" : 1 } } ] }');
                       document                       
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "RANDOM_A" }
 { "_id" : { "$numberInt" : "2" }, "a" : "RANDOM_B" }
(2 rows)

EXPLAIN (VERBOSE ON, COSTS OFF) SELECT document FROM bson_aggregation_pipeline('pipelineDB', '{ "aggregate": "agg_pipeline_optimizations", "pipeline": [ { "$project": { "a" : 1 } } ] }');
                                                                                              QUERY PLAN                                                                                               
---------------------------------------------------------------------
 Bitmap Heap Scan on documentdb_data.documents_4115_411090 collection
   Output: bson_dollar_project(document, '{ "a" : { "$numberInt" : "1" } }'::bson, '{ "now" : NOW_SYS_VARIABLE }'::bson)
   Recheck Cond: (collection.shard_key_value = '4115'::bigint)
   ->  Bitmap Index Scan on _id_
         Index Cond: (collection.shard_key_value = '4115'::bigint)
(5 rows)

EXPLAIN (VERBOSE OFF, COSTS OFF) SELECT document FROM bson_aggregation_pipeline('pipelineDB', '{ "aggregate": "agg_pipeline_optimizations", "pipeline": [ { "$merge": "agg_pipeline_optimizations" } ] }');
                                                                        QUERY PLAN                                                                        
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Node: host=localhost port=58070 dbname=regression
         ->  Merge on documents_4115_411090 documents_4115
               ->  Nested Loop Left Join
                     Join Filter: (documents_4115.object_id OPERATOR(documentdb_core.=) documentdb_core.bson_get_value(collection.document, '_id'::text))
                     ->  Bitmap Heap Scan on documents_4115_411090 collection
                           Recheck Cond: (shard_key_value = '4115'::bigint)
                           ->  Bitmap Index Scan on _id_
                                 Index Cond: (shard_key_value = '4115'::bigint)
                     ->  Materialize
                           ->  Bitmap Heap Scan on documents_4115_411090 documents_4115
                                 Recheck Cond: (shard_key_value = '4115'::bigint)
                                 ->  Bitmap Index Scan on _id_
                                       Index Cond: (shard_key_value = '4115'::bigint)
(17 rows)

SELECT documentdb_api.create_collection('pipelineDB', 'agg_pipeline_optimizations_new');
NOTICE:  creating collection
 create_collection 
---------------------------------------------------------------------
 t
(1 row)

EXPLAIN (VERBOSE OFF, COSTS OFF) SELECT document FROM bson_aggregation_pipeline('pipelineDB', '{ "aggregate": "agg_pipeline_optimizations", "pipeline": [ { "$merge": "agg_pipeline_optimizations_new" } ] }');
                                                                        QUERY PLAN                                                                        
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Node: host=localhost port=58070 dbname=regression
         ->  Merge on documents_4116_411092 documents_4116
               ->  Nested Loop Left Join
                     Join Filter: (documents_4116.object_id OPERATOR(documentdb_core.=) documentdb_core.bson_get_value(collection.document, '_id'::text))
                     ->  Bitmap Heap Scan on documents_4115_411090 collection
                           Recheck Cond: (shard_key_value = '4115'::bigint)
                           ->  Bitmap Index Scan on _id_
                                 Index Cond: (shard_key_value = '4115'::bigint)
                     ->  Materialize
                           ->  Bitmap Heap Scan on documents_4116_411092 documents_4116
                                 Recheck Cond: (shard_key_value = '4116'::bigint)
                                 ->  Bitmap Index Scan on _id_
                                       Index Cond: (shard_key_value = '4116'::bigint)
(17 rows)

EXPLAIN (VERBOSE OFF, COSTS OFF) SELECT document FROM bson_aggregation_pipeline('pipelineDB', '{ "aggregate": "agg_pipeline_optimizations", "pipeline": [ { "$merge": "agg_pipeline_optimizations" } ] }');
                                                                        QUERY PLAN                                                                        
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Task Count: 1
   Tasks Shown: All
   ->  Task
         Node: host=localhost port=58070 dbname=regression
         ->  Merge on documents_4115_411090 documents_4115
               ->  Nested Loop Left Join
                     Join Filter: (documents_4115.object_id OPERATOR(documentdb_core.=) documentdb_core.bson_get_value(collection.document, '_id'::text))
                     ->  Bitmap Heap Scan on documents_4115_411090 collection
                           Recheck Cond: (shard_key_value = '4115'::bigint)
                           ->  Bitmap Index Scan on _id_
                                 Index Cond: (shard_key_value = '4115'::bigint)
                     ->  Materialize
                           ->  Bitmap Heap Scan on documents_4115_411090 documents_4115
                                 Recheck Cond: (shard_key_value = '4115'::bigint)
                                 ->  Bitmap Index Scan on _id_
                                       Index Cond: (shard_key_value = '4115'::bigint)
(17 rows)

-- Shard the collection now
SELECT documentdb_api.shard_collection('pipelineDB', 'agg_pipeline_optimizations', '{ "_id": "hashed" }', false);
 shard_collection 
---------------------------------------------------------------------
 
(1 row)

SELECT document FROM bson_aggregation_pipeline('pipelineDB', '{ "aggregate": "agg_pipeline_optimizations", "pipeline": [ { "$match": { "a": "RANDOM_A" } } ] }');
                                                                                                     document                                                                                                     
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "a" : "RANDOM_A", "b" : { "c" : [ "SAMPLE1", "SAMPLE2" ], "d" : [ [ { "$numberInt" : "1" }, { "$numberInt" : "2" } ], [ { "$numberInt" : "3" }, { "$numberInt" : "4" } ] ] } }
(1 row)

EXPLAIN (VERBOSE ON, COSTS OFF) SELECT document FROM bson_aggregation_pipeline('pipelineDB', '{ "aggregate": "agg_pipeline_optimizations", "pipeline": [ { "$match": { "a": "RANDOM_A" } } ] }');
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Output: remote_scan.document
   Task Count: 8
   Tasks Shown: One of 8
   ->  Task
         Query: SELECT document FROM documentdb_data.documents_4115_411094 collection WHERE (document OPERATOR(documentdb_api_catalog.#=) '{ "a" : "RANDOM_A" }'::documentdb_core.bsonquery)
         Node: host=localhost port=58070 dbname=regression
         ->  Seq Scan on documentdb_data.documents_4115_411094 collection
               Output: document
               Filter: (collection.document OPERATOR(documentdb_api_catalog.@=) '{ "a" : "RANDOM_A" }'::documentdb_core.bson)
(10 rows)

SELECT document FROM bson_aggregation_pipeline('pipelineDB', '{ "aggregate": "agg_pipeline_optimizations", "pipeline": [ { "$project": { "a" : 1 } } ] }');
                       document                       
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "2" }, "a" : "RANDOM_B" }
 { "_id" : { "$numberInt" : "1" }, "a" : "RANDOM_A" }
(2 rows)

EXPLAIN (VERBOSE ON, COSTS OFF) SELECT document FROM bson_aggregation_pipeline('pipelineDB', '{ "aggregate": "agg_pipeline_optimizations", "pipeline": [ { "$project": { "a" : 1 } } ] }');
                                                                                                                                                                       QUERY PLAN                                                                                                                                                                       
---------------------------------------------------------------------
 Custom Scan (Citus Adaptive)
   Output: remote_scan.document
   Task Count: 8
   Tasks Shown: One of 8
   ->  Task
         Query: SELECT documentdb_api_internal.bson_dollar_project(document, '{ "a" : { "$numberInt" : "1" } }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson) AS document FROM documentdb_data.documents_4115_411094 collection WHERE true
         Node: host=localhost port=58070 dbname=regression
         ->  Seq Scan on documentdb_data.documents_4115_411094 collection
               Output: documentdb_api_internal.bson_dollar_project(document, '{ "a" : { "$numberInt" : "1" } }'::documentdb_core.bson, '{ "now" : NOW_SYS_VARIABLE }'::documentdb_core.bson)
(9 rows)

-- Test limit on aggregation stages
CREATE OR REPLACE FUNCTION check_aggregation_stages_limit(num_stages int)
RETURNS boolean AS $fn$
DECLARE
    pipeline jsonb := '[]'::jsonb;
    aggregate_spec jsonb;
BEGIN
    -- Create a json array of form [{$match: {}}] with num_stages elements
    FOR i IN 1..num_stages LOOP
        pipeline := pipeline || '{"$match": {}}'::jsonb;
    END LOOP;
    aggregate_spec := jsonb_build_object('aggregate', 'dummy', 'pipeline', pipeline);

    PERFORM document FROM bson_aggregation_pipeline('db', aggregate_spec::text::documentdb_core.bson);

    RETURN true;
END;
$fn$ LANGUAGE plpgsql;
CREATE OR REPLACE FUNCTION check_lookup_stages_limit(num_inline_stages int, num_non_inline_stages int)
RETURNS boolean AS $fn$
DECLARE
    pipeline jsonb := '[]'::jsonb;
    aggregate_spec jsonb;
    lookup_spec jsonb;
BEGIN
    -- Create a json array of form [{$match: {}}] with num_stages elements
    FOR i IN 1..num_inline_stages LOOP
        pipeline := pipeline || '{"$match": {  }}'::jsonb;
    END LOOP;
    FOR i IN 1..num_non_inline_stages LOOP
        pipeline := pipeline || '{"$count": "dummy" }'::jsonb;
    END LOOP;
    
    lookup_spec := jsonb_build_object('$lookup', jsonb_build_object('from', 'dummy', 'as', 'dummy', 'localField', 'dummy', 'foreignField', 'dummy', 'pipeline', pipeline));
    aggregate_spec := jsonb_build_object('aggregate', 'dummy', 'pipeline', '[]'::jsonb || lookup_spec);

    PERFORM document FROM bson_aggregation_pipeline('db', aggregate_spec::text::documentdb_core.bson);

    RETURN true;
END;
$fn$ LANGUAGE plpgsql;
SELECT check_aggregation_stages_limit(100);
 check_aggregation_stages_limit 
---------------------------------------------------------------------
 t
(1 row)

SELECT check_aggregation_stages_limit(1000);
 check_aggregation_stages_limit 
---------------------------------------------------------------------
 t
(1 row)

SELECT check_aggregation_stages_limit(1001);
ERROR:  Pipeline length must be no longer than 1000 stages.
CONTEXT:  SQL statement "SELECT document FROM bson_aggregation_pipeline('db', aggregate_spec::text::documentdb_core.bson)"
PL/pgSQL function check_aggregation_stages_limit(integer) line 12 at PERFORM
SELECT check_lookup_stages_limit(1, 1);
 check_lookup_stages_limit 
---------------------------------------------------------------------
 t
(1 row)

SELECT check_lookup_stages_limit(1000, 0);
 check_lookup_stages_limit 
---------------------------------------------------------------------
 t
(1 row)

SELECT check_lookup_stages_limit(0, 1000);
 check_lookup_stages_limit 
---------------------------------------------------------------------
 t
(1 row)

SELECT check_lookup_stages_limit(500, 500);
 check_lookup_stages_limit 
---------------------------------------------------------------------
 t
(1 row)

SELECT check_lookup_stages_limit(1000, 1);
ERROR:  Pipeline length must be no longer than 1000 stages.
CONTEXT:  SQL statement "SELECT document FROM bson_aggregation_pipeline('db', aggregate_spec::text::documentdb_core.bson)"
PL/pgSQL function check_lookup_stages_limit(integer,integer) line 18 at PERFORM
SELECT check_lookup_stages_limit(1, 1000);
ERROR:  Pipeline length must be no longer than 1000 stages.
CONTEXT:  SQL statement "SELECT document FROM bson_aggregation_pipeline('db', aggregate_spec::text::documentdb_core.bson)"
PL/pgSQL function check_lookup_stages_limit(integer,integer) line 18 at PERFORM
SET documentdb.aggregation_stages_limit = 1005;
SELECT check_aggregation_stages_limit(1001);
 check_aggregation_stages_limit 
---------------------------------------------------------------------
 t
(1 row)

SELECT check_lookup_stages_limit(1000, 1);
 check_lookup_stages_limit 
---------------------------------------------------------------------
 t
(1 row)

SELECT check_lookup_stages_limit(1, 1000);
 check_lookup_stages_limit 
---------------------------------------------------------------------
 t
(1 row)

RESET documentdb.aggregation_stages_limit;
