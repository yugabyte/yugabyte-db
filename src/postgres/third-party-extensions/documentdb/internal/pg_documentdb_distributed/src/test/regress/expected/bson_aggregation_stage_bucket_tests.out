SET search_path TO documentdb_core,documentdb_api,documentdb_api_catalog,documentdb_api_internal;
SET citus.next_shard_id TO 5120000;
SET documentdb.next_collection_id TO 51200;
SET documentdb.next_collection_index_id TO 51200;
-- Insert data
SELECT documentdb_api.insert_one('db','dollarBucket',' { "_id" : 1, "item" : "almonds", "pricing" : { "wholesale": 10, "retail": 15 }, "quantity" : 2, "year": 2020 }', NULL);
NOTICE:  creating collection
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','dollarBucket','{ "_id" : 2, "item" : "pecans", "pricing" : { "wholesale": 10, "retail": 9 }, "quantity" : 1, "year": 2021 }', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','dollarBucket',' { "_id" : 3, "item" : "bread", "pricing" : { "wholesale": 10, "retail": 15 }, "quantity" : 5 , "year": 2020}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','dollarBucket',' { "_id" : 4, "item" : "meat", "pricing" : { "wholesale": 4, "retail": 10 }, "quantity" : 3 , "year": 2022}', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','dollarBucket','{ "_id" : 5, "item" : "bread", "pricing" : { "wholesale": 75, "retail": 100 }, "quantity" : 1, "year": 2021 }', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','dollarBucket','{ "_id" : 6, "item" : "bread", "pricing" : { "wholesale": 75, "retail": 100 }, "quantity" : 1, "year": 2021 }', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','dollarBucket','{ "_id" : 7, "item" : "bread", "pricing" : { "retail": 15, "wholesale": 10 }, "quantity" : 1, "year": 2020 }', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

-- positive cases:
-- $bucket with only required fields
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "dollarBucket", "pipeline": [ { "$bucket": { "groupBy": "$year", "boundaries": [2020, 2021, 2022, 2023] } } ] }');
                                document                                 
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "2020" }, "count" : { "$numberInt" : "3" } }
 { "_id" : { "$numberInt" : "2021" }, "count" : { "$numberInt" : "3" } }
 { "_id" : { "$numberInt" : "2022" }, "count" : { "$numberInt" : "1" } }
(3 rows)

-- $bucket with default value
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "dollarBucket", "pipeline": [ { "$bucket": { "groupBy": "$year", "boundaries": [2020, 2021, 2022], "default": "others" } } ] }');
                                document                                 
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "2020" }, "count" : { "$numberInt" : "3" } }
 { "_id" : { "$numberInt" : "2021" }, "count" : { "$numberInt" : "3" } }
 { "_id" : "others", "count" : { "$numberInt" : "1" } }
(3 rows)

-- $bucket with output fields
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "dollarBucket", "pipeline": [ { "$bucket": { "groupBy": "$year", "boundaries": [2020, 2021, 2022, 2023], "output": { "count": { "$sum": 1 }, "averageQuantity": { "$avg": "$quantity" } } } } ] }');
                                                                  document                                                                  
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "2020" }, "count" : { "$numberInt" : "3" }, "averageQuantity" : { "$numberDouble" : "2.6666666666666665186" } }
 { "_id" : { "$numberInt" : "2021" }, "count" : { "$numberInt" : "3" }, "averageQuantity" : { "$numberDouble" : "1.0" } }
 { "_id" : { "$numberInt" : "2022" }, "count" : { "$numberInt" : "1" }, "averageQuantity" : { "$numberDouble" : "3.0" } }
(3 rows)

-- $bucket with output fields and default value
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "dollarBucket", "pipeline": [ { "$bucket": { "groupBy": "$year", "boundaries": [2020, 2021, 2022], "default": "others", "output": { "count": { "$sum": 1 }, "averageQuantity": { "$avg": "$quantity" } } } } ] }');
                                                                  document                                                                  
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "2020" }, "count" : { "$numberInt" : "3" }, "averageQuantity" : { "$numberDouble" : "2.6666666666666665186" } }
 { "_id" : { "$numberInt" : "2021" }, "count" : { "$numberInt" : "3" }, "averageQuantity" : { "$numberDouble" : "1.0" } }
 { "_id" : "others", "count" : { "$numberInt" : "1" }, "averageQuantity" : { "$numberDouble" : "3.0" } }
(3 rows)

-- $bucket with nested field path in groupBy field
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "dollarBucket", "pipeline": [ { "$bucket": { "groupBy": "$pricing.wholesale", "boundaries": [10, 20, 30], "default": "unknown" } } ] }');
                               document                                
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "10" }, "count" : { "$numberInt" : "4" } }
 { "_id" : "unknown", "count" : { "$numberInt" : "3" } }
(2 rows)

-- $bucket with expression in groupBy field
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "dollarBucket", "pipeline": [ { "$bucket": { "groupBy": { "$subtract": ["$year", 2019] }, "boundaries": [1, 2, 3, 4] } } ] }');
                               document                               
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "1" }, "count" : { "$numberInt" : "3" } }
 { "_id" : { "$numberInt" : "2" }, "count" : { "$numberInt" : "3" } }
 { "_id" : { "$numberInt" : "3" }, "count" : { "$numberInt" : "1" } }
(3 rows)

-- $bucket with another stage before it
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "dollarBucket", "pipeline": [ { "$match": { "item": "bread" } }, { "$bucket": { "groupBy": "$year", "boundaries": [2020, 2021, 2022, 2023] } } ] }');
                                document                                 
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "2020" }, "count" : { "$numberInt" : "2" } }
 { "_id" : { "$numberInt" : "2021" }, "count" : { "$numberInt" : "2" } }
(2 rows)

-- $bucket without count in output fields
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "dollarBucket", "pipeline": [ { "$bucket": { "groupBy": "$year", "boundaries": [2020, 2021, 2022, 2023], "output": { "averageQuantity": { "$avg": "$quantity" }, "totalQuantity": { "$sum": "$quantity" } } } } ] }');
                                                                      document                                                                      
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "2020" }, "averageQuantity" : { "$numberDouble" : "2.6666666666666665186" }, "totalQuantity" : { "$numberInt" : "8" } }
 { "_id" : { "$numberInt" : "2021" }, "averageQuantity" : { "$numberDouble" : "1.0" }, "totalQuantity" : { "$numberInt" : "3" } }
 { "_id" : { "$numberInt" : "2022" }, "averageQuantity" : { "$numberDouble" : "3.0" }, "totalQuantity" : { "$numberInt" : "3" } }
(3 rows)

-- $bucket with default value equals to the highest boundaries value
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "dollarBucket", "pipeline": [ { "$bucket": { "groupBy": "$year", "boundaries": [2020, 2021], "default": 2021 } } ] }');
                                document                                 
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "2020" }, "count" : { "$numberInt" : "3" } }
 { "_id" : { "$numberInt" : "2021" }, "count" : { "$numberInt" : "4" } }
(2 rows)

-- groupBy non-integar field
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "dollarBucket", "pipeline": [ { "$bucket": { "groupBy": "$item", "boundaries": ["a", "c", "n"], "default": "others" } } ] }');
                        document                        
---------------------------------------------------------------------
 { "_id" : "a", "count" : { "$numberInt" : "5" } }
 { "_id" : "c", "count" : { "$numberInt" : "1" } }
 { "_id" : "others", "count" : { "$numberInt" : "1" } }
(3 rows)

-- groupBy array or document field
SELECT documentdb_api.insert_one('db','dollarBucketGroupBy', '{ "_id" : 1, "valueArray" : [1, 2, 3], "valueDocument" : { "a": 1, "b": 2 } }', NULL);
NOTICE:  creating collection
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','dollarBucketGroupBy', '{ "_id" : 2, "valueArray" : [4, 5, 6], "valueDocument" : { "a": 3, "b": 4 } }', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT documentdb_api.insert_one('db','dollarBucketGroupBy', '{ "_id" : 3, "valueArray" : [9, 8], "valueDocument" : { "a": 5, "b": 6 } }', NULL);
                              insert_one                              
---------------------------------------------------------------------
 { "n" : { "$numberInt" : "1" }, "ok" : { "$numberDouble" : "1.0" } }
(1 row)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "dollarBucketGroupBy", "pipeline": [ { "$bucket": { "groupBy": "$valueArray", "boundaries": [[0], [5], [10]] } } ] }');
                                 document                                 
---------------------------------------------------------------------
 { "_id" : [ { "$numberInt" : "0" } ], "count" : { "$numberInt" : "2" } }
 { "_id" : [ { "$numberInt" : "5" } ], "count" : { "$numberInt" : "1" } }
(2 rows)

SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "dollarBucketGroupBy", "pipeline": [ { "$bucket": { "groupBy": "$valueDocument", "boundaries": [{"a": 0}, {"a": 5}, {"a": 10}] } } ] }');
                                    document                                    
---------------------------------------------------------------------
 { "_id" : { "a" : { "$numberInt" : "0" } }, "count" : { "$numberInt" : "2" } }
 { "_id" : { "a" : { "$numberInt" : "5" } }, "count" : { "$numberInt" : "1" } }
(2 rows)

-- negative cases, validations:
-- required fields
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "dollarBucket", "pipeline": [ { "$bucket": { "boundaries": [2020, 2021,2022,2023] } } ] }');
ERROR:  $bucket requires 'groupBy' and 'boundaries' to be specified.
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "dollarBucket", "pipeline": [ { "$bucket": { "groupBy": "$year"} } ] }');
ERROR:  $bucket requires 'groupBy' and 'boundaries' to be specified.
-- groupBy must be a path with prefix $ or expression
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "dollarBucket", "pipeline": [ { "$bucket": { "groupBy": "year", "boundaries": [2020, 2021, 2022, 2023] } } ] }');
ERROR:  $bucket could not find a bucket for an input value "year", and no default was specified.
-- boundaries is acsending constant array, more than one element, same type.
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "dollarBucket", "pipeline": [ { "$bucket": { "groupBy": "$year", "boundaries": 2020 } } ] }');
ERROR:  The $bucket 'boundaries' field must be an array of values. But found: int
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "dollarBucket", "pipeline": [ { "$bucket": { "groupBy": "$year", "boundaries": [2020] } } ] }');
ERROR:  The $bucket 'boundaries' field must have at least 2 values, but found: 1
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "dollarBucket", "pipeline": [ { "$bucket": { "groupBy": "$year", "boundaries": [2020, 2020, 2022, 2023] } } ] }');
ERROR:  The $bucket 'boundaries' field must be an array of values in ascending order.
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "dollarBucket", "pipeline": [ { "$bucket": { "groupBy": "$year", "boundaries": [2020, 2021, 1999, 2023] } } ] }');
ERROR:  The $bucket 'boundaries' field must be an array of values in ascending order.
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "dollarBucket", "pipeline": [ { "$bucket": { "groupBy": "$year", "boundaries": [2020, "a", 2022, 2023] } } ] }');
ERROR:  The $bucket 'boundaries' field must be an array of values of the same type. Found different types: int and string
-- default must be a constant, the default value must be less than the lowest boundaries value, or greater than or equal to the highest boundaries value, if having same type.
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "dollarBucket", "pipeline": [ { "$bucket": { "groupBy": "$year", "boundaries": [2020, 2021, 2022], "default": "$pricing"  } } ] }');
ERROR:  The $bucket 'default' field must be a constant. Input value: "$pricing"
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "dollarBucket", "pipeline": [ { "$bucket": { "groupBy": "$year", "boundaries": [2020, 2021], "default": 2020 } } ] }');
ERROR:  The $bucket 'default' field must be less than the lowest boundary or greater than or equal to the highest boundary.
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "dollarBucket", "pipeline": [ { "$bucket": { "groupBy": "$year", "boundaries": [2020, 2022, 2023], "default": 2021 } } ] }');
ERROR:  The $bucket 'default' field must be less than the lowest boundary or greater than or equal to the highest boundary.
-- output must be document
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "dollarBucket", "pipeline": [ { "$bucket": { "groupBy": "$year", "boundaries": [2020, 2021, 2022], "output": 1 } } ] }');
ERROR:  The $bucket 'output' field must be a document. But found: int
-- More validations
-- unknown argument of $bucket
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "dollarBucket", "pipeline": [ { "$bucket": { "groupBy": "$year", "boundaries": [2020, 2021, 2022], "default": "others", "output": { "averageQuantity": { "$avg": "$quantity" }}, "unknown": 1 } } ] }');
ERROR:  Unrecognized option to $bucket: unknown
-- document cannot fall into any bucket with no default being set.
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "dollarBucket", "pipeline": [ { "$bucket": { "groupBy": "$year", "boundaries": [2020, 2021] } } ] }');
ERROR:  $bucket could not find a bucket for an input value 2021, and no default was specified.
-- sharded collection
SELECT documentdb_api.shard_collection('db', 'dollarBucket', '{ "_id": "hashed" }', false);
 shard_collection 
---------------------------------------------------------------------
 
(1 row)

-- $bucket with only required fields
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "dollarBucket", "pipeline": [ { "$bucket": { "groupBy": "$year", "boundaries": [2020, 2021, 2022, 2023] } } ] }');
                                document                                 
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "2022" }, "count" : { "$numberInt" : "1" } }
 { "_id" : { "$numberInt" : "2021" }, "count" : { "$numberInt" : "3" } }
 { "_id" : { "$numberInt" : "2020" }, "count" : { "$numberInt" : "3" } }
(3 rows)

-- $bucket with default value
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "dollarBucket", "pipeline": [ { "$bucket": { "groupBy": "$year", "boundaries": [2020, 2021, 2022], "default": "others" } } ] }');
                                document                                 
---------------------------------------------------------------------
 { "_id" : "others", "count" : { "$numberInt" : "1" } }
 { "_id" : { "$numberInt" : "2021" }, "count" : { "$numberInt" : "3" } }
 { "_id" : { "$numberInt" : "2020" }, "count" : { "$numberInt" : "3" } }
(3 rows)

-- $bucket with output fields
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "dollarBucket", "pipeline": [ { "$bucket": { "groupBy": "$year", "boundaries": [2020, 2021, 2022, 2023], "output": { "count": { "$sum": 1 }, "averageQuantity": { "$avg": "$quantity" } } } } ] }');
                                                                  document                                                                  
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "2022" }, "count" : { "$numberInt" : "1" }, "averageQuantity" : { "$numberDouble" : "3.0" } }
 { "_id" : { "$numberInt" : "2021" }, "count" : { "$numberInt" : "3" }, "averageQuantity" : { "$numberDouble" : "1.0" } }
 { "_id" : { "$numberInt" : "2020" }, "count" : { "$numberInt" : "3" }, "averageQuantity" : { "$numberDouble" : "2.6666666666666665186" } }
(3 rows)

-- $bucket with output fields and default value
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "dollarBucket", "pipeline": [ { "$bucket": { "groupBy": "$year", "boundaries": [2020, 2021, 2022], "default": "others", "output": { "count": { "$sum": 1 }, "averageQuantity": { "$avg": "$quantity" } } } } ] }');
                                                                  document                                                                  
---------------------------------------------------------------------
 { "_id" : "others", "count" : { "$numberInt" : "1" }, "averageQuantity" : { "$numberDouble" : "3.0" } }
 { "_id" : { "$numberInt" : "2021" }, "count" : { "$numberInt" : "3" }, "averageQuantity" : { "$numberDouble" : "1.0" } }
 { "_id" : { "$numberInt" : "2020" }, "count" : { "$numberInt" : "3" }, "averageQuantity" : { "$numberDouble" : "2.6666666666666665186" } }
(3 rows)

-- $bucket with nested field path in groupBy field
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "dollarBucket", "pipeline": [ { "$bucket": { "groupBy": "$pricing.wholesale", "boundaries": [10, 20, 30], "default": "unknown" } } ] }');
                               document                                
---------------------------------------------------------------------
 { "_id" : "unknown", "count" : { "$numberInt" : "3" } }
 { "_id" : { "$numberInt" : "10" }, "count" : { "$numberInt" : "4" } }
(2 rows)

-- $bucket with expression in groupBy field
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "dollarBucket", "pipeline": [ { "$bucket": { "groupBy": { "$subtract": ["$year", 2019] }, "boundaries": [1, 2, 3, 4] } } ] }');
                               document                               
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "3" }, "count" : { "$numberInt" : "1" } }
 { "_id" : { "$numberInt" : "2" }, "count" : { "$numberInt" : "3" } }
 { "_id" : { "$numberInt" : "1" }, "count" : { "$numberInt" : "3" } }
(3 rows)

-- $bucket with another stage before it
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "dollarBucket", "pipeline": [ { "$match": { "item": "bread" } }, { "$bucket": { "groupBy": "$year", "boundaries": [2020, 2021, 2022, 2023] } } ] }');
                                document                                 
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "2021" }, "count" : { "$numberInt" : "2" } }
 { "_id" : { "$numberInt" : "2020" }, "count" : { "$numberInt" : "2" } }
(2 rows)

-- $bucket without count in output fields
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "dollarBucket", "pipeline": [ { "$bucket": { "groupBy": "$year", "boundaries": [2020, 2021, 2022, 2023], "output": { "averageQuantity": { "$avg": "$quantity" }, "totalQuantity": { "$sum": "$quantity" } } } } ] }');
                                                                      document                                                                      
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "2022" }, "averageQuantity" : { "$numberDouble" : "3.0" }, "totalQuantity" : { "$numberInt" : "3" } }
 { "_id" : { "$numberInt" : "2021" }, "averageQuantity" : { "$numberDouble" : "1.0" }, "totalQuantity" : { "$numberInt" : "3" } }
 { "_id" : { "$numberInt" : "2020" }, "averageQuantity" : { "$numberDouble" : "2.6666666666666665186" }, "totalQuantity" : { "$numberInt" : "8" } }
(3 rows)

-- $bucket with default value equals to the highest boundaries value
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "dollarBucket", "pipeline": [ { "$bucket": { "groupBy": "$year", "boundaries": [2020, 2021], "default": 2021 } } ] }');
                                document                                 
---------------------------------------------------------------------
 { "_id" : { "$numberInt" : "2021" }, "count" : { "$numberInt" : "4" } }
 { "_id" : { "$numberInt" : "2020" }, "count" : { "$numberInt" : "3" } }
(2 rows)

-- groupBy non-integar field
SELECT document FROM bson_aggregation_pipeline('db', '{ "aggregate": "dollarBucket", "pipeline": [ { "$bucket": { "groupBy": "$item", "boundaries": ["a", "c", "n"], "default": "others" } } ] }');
                        document                        
---------------------------------------------------------------------
 { "_id" : "others", "count" : { "$numberInt" : "1" } }
 { "_id" : "a", "count" : { "$numberInt" : "5" } }
 { "_id" : "c", "count" : { "$numberInt" : "1" } }
(3 rows)

