SET search_path TO documentdb_core;
CREATE TABLE test (document bson);
-- insert int32
INSERT INTO test (document) VALUES ('{"_id":"1", "value": { "$numberInt" : "11" }, "valueMax": { "$numberInt" : "2147483647" }, "valueMin": { "$numberInt" : "-2147483648" }}');
-- insert int64
INSERT INTO test (document) VALUES ('{"_id":"2", "value":{"$numberLong" : "134311"}, "valueMax": { "$numberLong" : "9223372036854775807" }, "valueMin": { "$numberLong" : "-9223372036854775808" }}');
-- insert double
INSERT INTO test (document) VALUES ('{"_id":"3", "value":{"$numberDouble" : "0"}, "valueMax": { "$numberDouble" : "1.7976931348623157E+308" }, "valueMin": { "$numberDouble" : "-1.7976931348623157E+308" }, "valueEpsilon": { "$numberDouble": "4.94065645841247E-324"}, "valueinfinity": {"$numberDouble":"Infinity"}}');
-- insert string
INSERT INTO test (document) VALUES ('{"_id":"4", "value": "A quick brown fox jumps over the lazy dog."}');
-- insert binary
INSERT INTO test (document) VALUES ('{"_id":"5", "value": {"$binary": { "base64": "U29tZVRleHRUb0VuY29kZQ==", "subType": "02"}}}');
-- minKey/maxKey
INSERT INTO test (document) VALUES ('{"_id":"6", "valueMin": { "$minKey": 1 }, "valueMax": { "$maxKey": 1 }}');
-- oid, date, time
INSERT INTO test (document) VALUES ('{"_id":"7", "tsField": {"$timestamp":{"t":1565545664,"i":1}}, "dateBefore1970": {"$date":{"$numberLong":"-1577923200000"}}, "dateField": {"$date":{"$numberLong":"1565546054692"}}, "oidField": {"$oid":"5d505646cf6d4fe581014ab2"}}');
-- array & nested object
INSERT INTO test (document) VALUES ('{"_id":"8", "arrayOfObject": [ { "ola": "ola"}, { "tudo bem?": "tudo bem!"}, { "o que tu fizeste essa semana?" : "nada" } ]}');
-- fetch all rows
SELECT * FROM test;
                                                                                                                                          document                                                                                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 BSONHEX37000000025f6964000200000031001076616c7565000b0000001076616c75654d617800ffffff7f1076616c75654d696e000000008000
 BSONHEX43000000025f6964000200000032001276616c756500a70c0200000000001276616c75654d617800ffffffffffffff7f1276616c75654d696e00000000000000008000
 BSONHEX70000000025f6964000200000033000176616c75650000000000000000000176616c75654d617800ffffffffffffef7f0176616c75654d696e00ffffffffffffefff0176616c7565457073696c6f6e0001000000000000000176616c7565696e66696e69747900000000000000f07f00
 BSONHEX46000000025f6964000200000034000276616c7565002b0000004120717569636b2062726f776e20666f78206a756d7073206f76657220746865206c617a7920646f672e0000
 BSONHEX30000000025f6964000200000035000576616c756500140000000210000000536f6d6554657874546f456e636f646500
 BSONHEX24000000025f696400020000003600ff76616c75654d696e007f76616c75654d61780000
 BSONHEX62000000025f6964000200000037001174734669656c640001000000c054505d09646174654265666f7265313937300000bc729c90feffff09646174654669656c64002404d1816c010000076f69644669656c64005d505646cf6d4fe581014ab200
 BSONHEX8a000000025f6964000200000038000461727261794f664f626a656374006b00000003300012000000026f6c6100040000006f6c6100000331001e000000027475646f2062656d3f000a0000007475646f2062656d2100000332002d000000026f207175652074752066697a6573746520657373612073656d616e613f00050000006e61646100000000
(8 rows)

\copy test to 'test.bin' with (format 'binary')
CREATE TABLE tmp_test_table (LIKE test);
\copy tmp_test_table from 'test.bin' with (format 'binary')
-- verify that all records are same after serialization/deserialization
SELECT COUNT(*)=0 FROM (
    (TABLE test EXCEPT TABLE tmp_test_table)
    UNION
    (TABLE tmp_test_table EXCEPT TABLE test)
) q;
 ?column? 
----------
 t
(1 row)

-- verify output via hex strings and json
BEGIN;
set local documentdb_core.bsonUseEJson TO true;
SELECT document FROM test;
                                                                                                                                                      document                                                                                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 { "_id" : "1", "value" : { "$numberInt" : "11" }, "valueMax" : { "$numberInt" : "2147483647" }, "valueMin" : { "$numberInt" : "-2147483648" } }
 { "_id" : "2", "value" : { "$numberLong" : "134311" }, "valueMax" : { "$numberLong" : "9223372036854775807" }, "valueMin" : { "$numberLong" : "-9223372036854775808" } }
 { "_id" : "3", "value" : { "$numberDouble" : "0.0" }, "valueMax" : { "$numberDouble" : "1.7976931348623157081e+308" }, "valueMin" : { "$numberDouble" : "-1.7976931348623157081e+308" }, "valueEpsilon" : { "$numberDouble" : "4.9406564584124654418e-324" }, "valueinfinity" : { "$numberDouble" : "Infinity" } }
 { "_id" : "4", "value" : "A quick brown fox jumps over the lazy dog." }
 { "_id" : "5", "value" : { "$binary" : { "base64" : "U29tZVRleHRUb0VuY29kZQ==", "subType" : "02" } } }
 { "_id" : "6", "valueMin" : { "$minKey" : 1 }, "valueMax" : { "$maxKey" : 1 } }
 { "_id" : "7", "tsField" : { "$timestamp" : { "t" : 1565545664, "i" : 1 } }, "dateBefore1970" : { "$date" : { "$numberLong" : "-1577923200000" } }, "dateField" : { "$date" : { "$numberLong" : "1565546054692" } }, "oidField" : { "$oid" : "5d505646cf6d4fe581014ab2" } }
 { "_id" : "8", "arrayOfObject" : [ { "ola" : "ola" }, { "tudo bem?" : "tudo bem!" }, { "o que tu fizeste essa semana?" : "nada" } ] }
(8 rows)

ROLLBACK;
BEGIN;
set local documentdb_core.bsonUseEJson TO false;
SELECT document FROM test;
                                                                                                                                          document                                                                                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 BSONHEX37000000025f6964000200000031001076616c7565000b0000001076616c75654d617800ffffff7f1076616c75654d696e000000008000
 BSONHEX43000000025f6964000200000032001276616c756500a70c0200000000001276616c75654d617800ffffffffffffff7f1276616c75654d696e00000000000000008000
 BSONHEX70000000025f6964000200000033000176616c75650000000000000000000176616c75654d617800ffffffffffffef7f0176616c75654d696e00ffffffffffffefff0176616c7565457073696c6f6e0001000000000000000176616c7565696e66696e69747900000000000000f07f00
 BSONHEX46000000025f6964000200000034000276616c7565002b0000004120717569636b2062726f776e20666f78206a756d7073206f76657220746865206c617a7920646f672e0000
 BSONHEX30000000025f6964000200000035000576616c756500140000000210000000536f6d6554657874546f456e636f646500
 BSONHEX24000000025f696400020000003600ff76616c75654d696e007f76616c75654d61780000
 BSONHEX62000000025f6964000200000037001174734669656c640001000000c054505d09646174654265666f7265313937300000bc729c90feffff09646174654669656c64002404d1816c010000076f69644669656c64005d505646cf6d4fe581014ab200
 BSONHEX8a000000025f6964000200000038000461727261794f664f626a656374006b00000003300012000000026f6c6100040000006f6c6100000331001e000000027475646f2062656d3f000a0000007475646f2062656d2100000332002d000000026f207175652074752066697a6573746520657373612073656d616e613f00050000006e61646100000000
(8 rows)

ROLLBACK;
BEGIN;
set local documentdb_core.bsonUseEJson TO true;
SELECT document FROM test;
                                                                                                                                                      document                                                                                                                                                      
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 { "_id" : "1", "value" : { "$numberInt" : "11" }, "valueMax" : { "$numberInt" : "2147483647" }, "valueMin" : { "$numberInt" : "-2147483648" } }
 { "_id" : "2", "value" : { "$numberLong" : "134311" }, "valueMax" : { "$numberLong" : "9223372036854775807" }, "valueMin" : { "$numberLong" : "-9223372036854775808" } }
 { "_id" : "3", "value" : { "$numberDouble" : "0.0" }, "valueMax" : { "$numberDouble" : "1.7976931348623157081e+308" }, "valueMin" : { "$numberDouble" : "-1.7976931348623157081e+308" }, "valueEpsilon" : { "$numberDouble" : "4.9406564584124654418e-324" }, "valueinfinity" : { "$numberDouble" : "Infinity" } }
 { "_id" : "4", "value" : "A quick brown fox jumps over the lazy dog." }
 { "_id" : "5", "value" : { "$binary" : { "base64" : "U29tZVRleHRUb0VuY29kZQ==", "subType" : "02" } } }
 { "_id" : "6", "valueMin" : { "$minKey" : 1 }, "valueMax" : { "$maxKey" : 1 } }
 { "_id" : "7", "tsField" : { "$timestamp" : { "t" : 1565545664, "i" : 1 } }, "dateBefore1970" : { "$date" : { "$numberLong" : "-1577923200000" } }, "dateField" : { "$date" : { "$numberLong" : "1565546054692" } }, "oidField" : { "$oid" : "5d505646cf6d4fe581014ab2" } }
 { "_id" : "8", "arrayOfObject" : [ { "ola" : "ola" }, { "tudo bem?" : "tudo bem!" }, { "o que tu fizeste essa semana?" : "nada" } ] }
(8 rows)

ROLLBACK;
BEGIN;
set local documentdb_core.bsonUseEJson TO false;
SELECT document FROM test;
                                                                                                                                          document                                                                                                                                           
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 BSONHEX37000000025f6964000200000031001076616c7565000b0000001076616c75654d617800ffffff7f1076616c75654d696e000000008000
 BSONHEX43000000025f6964000200000032001276616c756500a70c0200000000001276616c75654d617800ffffffffffffff7f1276616c75654d696e00000000000000008000
 BSONHEX70000000025f6964000200000033000176616c75650000000000000000000176616c75654d617800ffffffffffffef7f0176616c75654d696e00ffffffffffffefff0176616c7565457073696c6f6e0001000000000000000176616c7565696e66696e69747900000000000000f07f00
 BSONHEX46000000025f6964000200000034000276616c7565002b0000004120717569636b2062726f776e20666f78206a756d7073206f76657220746865206c617a7920646f672e0000
 BSONHEX30000000025f6964000200000035000576616c756500140000000210000000536f6d6554657874546f456e636f646500
 BSONHEX24000000025f696400020000003600ff76616c75654d696e007f76616c75654d61780000
 BSONHEX62000000025f6964000200000037001174734669656c640001000000c054505d09646174654265666f7265313937300000bc729c90feffff09646174654669656c64002404d1816c010000076f69644669656c64005d505646cf6d4fe581014ab200
 BSONHEX8a000000025f6964000200000038000461727261794f664f626a656374006b00000003300012000000026f6c6100040000006f6c6100000331001e000000027475646f2062656d3f000a0000007475646f2062656d2100000332002d000000026f207175652074752066697a6573746520657373612073656d616e613f00050000006e61646100000000
(8 rows)

ROLLBACK;
BEGIN;
set local documentdb_core.bsonUseEJson TO true;
SELECT bson_hex_to_bson(bson_to_bson_hex(document)) FROM test;
                                                                                                                                                  bson_hex_to_bson                                                                                                                                                  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 { "_id" : "1", "value" : { "$numberInt" : "11" }, "valueMax" : { "$numberInt" : "2147483647" }, "valueMin" : { "$numberInt" : "-2147483648" } }
 { "_id" : "2", "value" : { "$numberLong" : "134311" }, "valueMax" : { "$numberLong" : "9223372036854775807" }, "valueMin" : { "$numberLong" : "-9223372036854775808" } }
 { "_id" : "3", "value" : { "$numberDouble" : "0.0" }, "valueMax" : { "$numberDouble" : "1.7976931348623157081e+308" }, "valueMin" : { "$numberDouble" : "-1.7976931348623157081e+308" }, "valueEpsilon" : { "$numberDouble" : "4.9406564584124654418e-324" }, "valueinfinity" : { "$numberDouble" : "Infinity" } }
 { "_id" : "4", "value" : "A quick brown fox jumps over the lazy dog." }
 { "_id" : "5", "value" : { "$binary" : { "base64" : "U29tZVRleHRUb0VuY29kZQ==", "subType" : "02" } } }
 { "_id" : "6", "valueMin" : { "$minKey" : 1 }, "valueMax" : { "$maxKey" : 1 } }
 { "_id" : "7", "tsField" : { "$timestamp" : { "t" : 1565545664, "i" : 1 } }, "dateBefore1970" : { "$date" : { "$numberLong" : "-1577923200000" } }, "dateField" : { "$date" : { "$numberLong" : "1565546054692" } }, "oidField" : { "$oid" : "5d505646cf6d4fe581014ab2" } }
 { "_id" : "8", "arrayOfObject" : [ { "ola" : "ola" }, { "tudo bem?" : "tudo bem!" }, { "o que tu fizeste essa semana?" : "nada" } ] }
(8 rows)

ROLLBACK;
BEGIN;
-- test that hex strings can be coerced to bson (bson_in accepts both)
set local documentdb_core.bsonUseEJson TO true;
SELECT bson_to_bson_hex(document)::text::bson FROM test;
                                                                                                                                                  bson_to_bson_hex                                                                                                                                                  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 { "_id" : "1", "value" : { "$numberInt" : "11" }, "valueMax" : { "$numberInt" : "2147483647" }, "valueMin" : { "$numberInt" : "-2147483648" } }
 { "_id" : "2", "value" : { "$numberLong" : "134311" }, "valueMax" : { "$numberLong" : "9223372036854775807" }, "valueMin" : { "$numberLong" : "-9223372036854775808" } }
 { "_id" : "3", "value" : { "$numberDouble" : "0.0" }, "valueMax" : { "$numberDouble" : "1.7976931348623157081e+308" }, "valueMin" : { "$numberDouble" : "-1.7976931348623157081e+308" }, "valueEpsilon" : { "$numberDouble" : "4.9406564584124654418e-324" }, "valueinfinity" : { "$numberDouble" : "Infinity" } }
 { "_id" : "4", "value" : "A quick brown fox jumps over the lazy dog." }
 { "_id" : "5", "value" : { "$binary" : { "base64" : "U29tZVRleHRUb0VuY29kZQ==", "subType" : "02" } } }
 { "_id" : "6", "valueMin" : { "$minKey" : 1 }, "valueMax" : { "$maxKey" : 1 } }
 { "_id" : "7", "tsField" : { "$timestamp" : { "t" : 1565545664, "i" : 1 } }, "dateBefore1970" : { "$date" : { "$numberLong" : "-1577923200000" } }, "dateField" : { "$date" : { "$numberLong" : "1565546054692" } }, "oidField" : { "$oid" : "5d505646cf6d4fe581014ab2" } }
 { "_id" : "8", "arrayOfObject" : [ { "ola" : "ola" }, { "tudo bem?" : "tudo bem!" }, { "o que tu fizeste essa semana?" : "nada" } ] }
(8 rows)

ROLLBACK;
BEGIN;
set local documentdb_core.bsonUseEJson TO false;
SELECT COUNT(1) FROM test WHERE bson_hex_to_bson(bson_out(document)) != document;
 count 
-------
     0
(1 row)

ROLLBACK;
