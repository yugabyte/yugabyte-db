name: postgresql-12-build
on: [push]

jobs:
  build:
    name: pg-12-build-test
    runs-on: ubuntu-22.04
    steps:
      - name: Clone postgres repository
        uses: actions/checkout@v2
        with:
          repository: 'postgres/postgres'
          ref: 'REL_12_STABLE'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt purge postgresql-client-common postgresql-common \
           postgresql postgresql*
          sudo apt-get install -y libreadline6-dev systemtap-sdt-dev \
           zlib1g-dev libssl-dev libpam0g-dev bison flex \
           libipc-run-perl docbook-xsl docbook-xsl libxml2 libxml2-utils \
           libxml2-dev libxslt-dev xsltproc libkrb5-dev libldap2-dev \
           libsystemd-dev gettext tcl-dev libperl-dev pkg-config clang-11 \
           llvm-11 llvm-11-dev libselinux1-dev python3-dev uuid-dev liblz4-dev
          sudo rm -rf /var/lib/postgresql /var/log/postgresql /etc/postgresql \
           /usr/lib/postgresql /usr/include/postgresql /usr/share/postgresql \
           /etc/postgresql
          sudo rm -f /usr/bin/pg_config
          sudo /usr/bin/perl -MCPAN -e 'install IPC::RUN'
          sudo /usr/bin/perl -MCPAN -e 'install Text::Trim'

      - name: Create pgsql dir
        run: mkdir -p /opt/pgsql

      - name: Build postgres
        run: |
          export PATH="/opt/pgsql/bin:$PATH"
          ./configure '--build=x86_64-linux-gnu' '--prefix=/usr' \
            '--includedir=/usr/include' '--mandir=/usr/share/man' \
            '--infodir=/usr/share/info' '--sysconfdir=/etc' '--with-gnu-ld' \
            '--localstatedir=/var' '--libdir=/usr/lib/x86_64-linux-gnu' \
            'runstatedir=/run' '--with-icu' '--with-tcl' '--with-perl' \
            '--with-python' '--with-pam' '--with-openssl' '--with-libxml' \
            '--with-libxslt' 'PYTHON=/usr/bin/python3' '--enable-tap-tests' \
            '--mandir=/usr/share/postgresql/12/man' '--enable-thread-safety' \
            '--docdir=/usr/share/doc/postgresql-doc-12' '--enable-debug' \
            '--sysconfdir=/etc/postgresql-common' '--datarootdir=/usr/share' \
            '--datadir=/usr/share/postgresql/12' '--enable-dtrace' \
            '--bindir=/usr/lib/postgresql/12/bin' '--disable-rpath' \
            '--libdir=/usr/lib/x86_64-linux-gnu' '--with-pgport=5432' \
            '--libexecdir=/usr/lib/postgresql' '--with-uuid=e2fs' \
            '--includedir=/usr/include/postgresql' 'TAR=/bin/tar' \
            '--with-system-tzdata=/usr/share/zoneinfo' '--with-llvm' \
            'LLVM_CONFIG=/usr/bin/llvm-config-11' 'CLANG=/usr/bin/clang-11' \
            '--with-systemd' '--with-selinux' 'MKDIR_P=/bin/mkdir -p' \
            'PROVE=/usr/bin/prove' '--with-gssapi' '--with-ldap' \
            'LDFLAGS=-Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,-z,now' \
            '--with-includes=/usr/include/mit-krb5' '--with-libs=/usr/lib/mit-krb5' \
            '--with-libs=/usr/lib/x86_64-linux-gnu/mit-krb5' \
            'build_alias=x86_64-linux-gnu' \
            'CPPFLAGS=-Wdate-time -D_FORTIFY_SOURCE=2' '--enable-nls' \
            'CFLAGS=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -fno-omit-frame-pointer' \
            'CXXFLAGS=-g -O2 -fstack-protector-strong -Wformat -Werror=format-security'
           make world
           sudo make install-world

      - name: Start postgresql cluster
        run: |
          export PATH="/usr/lib/postgresql/12/bin:$PATH"
          sudo cp /usr/lib/postgresql/12/bin/pg_config /usr/bin
          initdb -D /opt/pgsql/data
          pg_ctl -D /opt/pgsql/data -l logfile start

      - name: Clone pg_stat_monitor repository
        uses: actions/checkout@v2
        with:
          path: 'src/pg_stat_monitor'

      - name: Build pg_stat_monitor
        run: |
          make USE_PGXS=1
          sudo make USE_PGXS=1 install
        working-directory: src/pg_stat_monitor

      - name: Load pg_stat_monitor library and Restart Server
        run: |
          export PATH="/usr/lib/postgresql/12/bin:$PATH"
          pg_ctl -D /opt/pgsql/data -l logfile stop
          echo "shared_preload_libraries = 'pg_stat_monitor'" >> \
            /opt/pgsql/data/postgresql.conf
          pg_ctl -D /opt/pgsql/data -l logfile start
        working-directory: src/pg_stat_monitor

      - name: Start pg_stat_monitor_tests
        run: |
          make installcheck
        working-directory: src/pg_stat_monitor

      - name: Change dir permissions on fail
        if: ${{ failure() }}
        run: |
          sudo chmod -R ugo+rwx t
          sudo chmod -R ugo+rwx tmp_check
          exit 2 # regenerate error so that we can upload files in next step
        working-directory: src/pg_stat_monitor

      - name: Upload logs on fail
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: Regressions diff and postgresql log
          path: |
            src/pg_stat_monitor/regression.diffs
            src/pg_stat_monitor/regression.out
            src/pg_stat_monitor/logfile
            src/pg_stat_monitor/t/results/
            src/pg_stat_monitor/tmp_check/log/
            !src/pg_stat_monitor/tmp_check/**/archives/*
            !src/pg_stat_monitor/tmp_check/**/backup/*
            !src/pg_stat_monitor/tmp_check/**/pgdata/*
            !src/pg_stat_monitor/tmp_check/**/archives/
            !src/pg_stat_monitor/tmp_check/**/backup/
            !src/pg_stat_monitor/tmp_check/**/pgdata/
          if-no-files-found: warn
          retention-days: 3

      - name: Start Server installcheck-world tests
        run: |
          make installcheck-world

      - name: Report on installcheck-world test suites fail
        uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        with:
          name: Regressions output files of failed testsuite, and pg log
          path: |
            **/regression.diffs
            **/regression.out
            src/pg_stat_monitor/logfile
          retention-days: 3
