\unset ECHO
# Subtest: whatever."test ident"()
    ok 1 - ident
    ok 2 - ident 2
    1..2
ok 1 - whatever."test ident"
# Subtest: whatever.testnada()
    1..0
    # No tests run!
not ok 2 - whatever.testnada
# Failed test 2: "whatever.testnada"
# Subtest: whatever.testplpgsql()
    ok 1 - plpgsql simple
    ok 2 - plpgsql simple 2
    ok 3 - Should be a 1 in the test table
    1..3
ok 3 - whatever.testplpgsql
# Subtest: whatever.testplpgsqldie()
    # Test died: P0001: This test should die, but not halt execution.
    # Note that in some cases we get what appears to be a duplicate context message, but that is due to Postgres itself.
    #         DETAIL:     DETAIL
    #         SCHEMA:     SCHEMA
    #         TABLE:      TABLE
    #         COLUMN:     COLUMN
    #         CONSTRAINT: CONSTRAINT
    #         TYPE:       TYPE
    #         CONTEXT:
    #             SQL statement "SELECT __die();"
    #             PL/pgSQL function whatever.testplpgsqldie() line 43 at EXECUTE statement
    #             PL/pgSQL function _runner(text[],text[],text[],text[],text[]) line 62 at FOR over EXECUTE statement
    #             SQL function "runtests" statement 1
    #             SQL function "runtests" statement 1
not ok 4 - whatever.testplpgsqldie
# Failed test 4: "whatever.testplpgsqldie"
# Subtest: whatever.testthis()
    ok 1 - simple pass
    ok 2 - another simple pass
    1..2
ok 5 - whatever.testthis
# Subtest: whatever.testy()
    ok 1 - pass
    not ok 2 - this test intentionally fails
    # Failed test 2: "this test intentionally fails"
    1..2
    # Looks like you failed 1 test of 2
not ok 6 - whatever.testy
# Failed test 6: "whatever.testy"
# Subtest: whatever.testz()
    ok 1 - Late test should find nothing in the test table
    1..1
ok 7 - whatever.testz
1..7
# Looks like you failed 3 tests of 7
