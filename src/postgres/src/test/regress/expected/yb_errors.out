-- Check for unsupported system columns.
CREATE TABLE test_tab1(id INT);
INSERT INTO test_tab1 VALUES (1) RETURNING ctid;
ERROR:  system column "ctid" is not supported yet
INSERT INTO test_tab1 VALUES (2) RETURNING cmin;
ERROR:  system column "cmin" is not supported yet
INSERT INTO test_tab1 VALUES (3) RETURNING cmax;
ERROR:  system column "cmax" is not supported yet
INSERT INTO test_tab1 VALUES (4) RETURNING xmin;
ERROR:  system column "xmin" is not supported yet
INSERT INTO test_tab1 VALUES (5) RETURNING xmax;
ERROR:  system column "xmax" is not supported yet
EXPLAIN (VERBOSE, COSTS OFF) SELECT ctid FROM test_tab1;
ERROR:  system column "ctid" is not supported yet
EXPLAIN (VERBOSE, COSTS OFF) SELECT cmin FROM test_tab1;
ERROR:  system column "cmin" is not supported yet
EXPLAIN (VERBOSE, COSTS OFF) SELECT cmax FROM test_tab1;
ERROR:  system column "cmax" is not supported yet
EXPLAIN (VERBOSE, COSTS OFF) SELECT xmin FROM test_tab1;
ERROR:  system column "xmin" is not supported yet
EXPLAIN (VERBOSE, COSTS OFF) SELECT xmax FROM test_tab1;
ERROR:  system column "xmax" is not supported yet
SELECT ctid FROM test_tab1;
ERROR:  system column "ctid" is not supported yet
SELECT cmin FROM test_tab1;
ERROR:  system column "cmin" is not supported yet
SELECT cmax FROM test_tab1;
ERROR:  system column "cmax" is not supported yet
SELECT xmin FROM test_tab1;
ERROR:  system column "xmin" is not supported yet
SELECT xmax FROM test_tab1;
ERROR:  system column "xmax" is not supported yet
EXPLAIN (VERBOSE, COSTS OFF) SELECT ctid FROM test_tab1 WHERE id = 1;
ERROR:  system column "ctid" is not supported yet
EXPLAIN (VERBOSE, COSTS OFF) SELECT cmin FROM test_tab1 WHERE id = 2;
ERROR:  system column "cmin" is not supported yet
EXPLAIN (VERBOSE, COSTS OFF) SELECT cmax FROM test_tab1 WHERE id = 3;
ERROR:  system column "cmax" is not supported yet
EXPLAIN (VERBOSE, COSTS OFF) SELECT xmin FROM test_tab1 WHERE id = 4;
ERROR:  system column "xmin" is not supported yet
EXPLAIN (VERBOSE, COSTS OFF) SELECT xmax FROM test_tab1 WHERE id = 5;
ERROR:  system column "xmax" is not supported yet
SELECT ctid FROM test_tab1 WHERE id = 1;
ERROR:  system column "ctid" is not supported yet
SELECT cmin FROM test_tab1 WHERE id = 2;
ERROR:  system column "cmin" is not supported yet
SELECT cmax FROM test_tab1 WHERE id = 3;
ERROR:  system column "cmax" is not supported yet
SELECT xmin FROM test_tab1 WHERE id = 4;
ERROR:  system column "xmin" is not supported yet
SELECT xmax FROM test_tab1 WHERE id = 5;
ERROR:  system column "xmax" is not supported yet
-- With primary key.
CREATE TABLE test_tab2(id INT, PRIMARY KEY(id));
INSERT INTO test_tab2 VALUES (1) RETURNING ctid;
ERROR:  system column "ctid" is not supported yet
INSERT INTO test_tab2 VALUES (2) RETURNING cmin;
ERROR:  system column "cmin" is not supported yet
INSERT INTO test_tab2 VALUES (3) RETURNING cmax;
ERROR:  system column "cmax" is not supported yet
INSERT INTO test_tab2 VALUES (4) RETURNING xmin;
ERROR:  system column "xmin" is not supported yet
INSERT INTO test_tab2 VALUES (5) RETURNING xmax;
ERROR:  system column "xmax" is not supported yet
EXPLAIN (VERBOSE, COSTS OFF) SELECT ctid FROM test_tab2 WHERE id = 1;
ERROR:  system column "ctid" is not supported yet
EXPLAIN (VERBOSE, COSTS OFF) SELECT cmin FROM test_tab2 WHERE id = 2;
ERROR:  system column "cmin" is not supported yet
EXPLAIN (VERBOSE, COSTS OFF) SELECT cmax FROM test_tab2 WHERE id = 3;
ERROR:  system column "cmax" is not supported yet
EXPLAIN (VERBOSE, COSTS OFF) SELECT xmin FROM test_tab2 WHERE id = 4;
ERROR:  system column "xmin" is not supported yet
EXPLAIN (VERBOSE, COSTS OFF) SELECT xmax FROM test_tab2 WHERE id = 5;
ERROR:  system column "xmax" is not supported yet
SELECT ctid FROM test_tab2 WHERE id = 1;
ERROR:  system column "ctid" is not supported yet
SELECT cmin FROM test_tab2 WHERE id = 2;
ERROR:  system column "cmin" is not supported yet
SELECT cmax FROM test_tab2 WHERE id = 3;
ERROR:  system column "cmax" is not supported yet
SELECT xmin FROM test_tab2 WHERE id = 4;
ERROR:  system column "xmin" is not supported yet
SELECT xmax FROM test_tab2 WHERE id = 5;
ERROR:  system column "xmax" is not supported yet
-- All system columns should work for temp TABLE.
CREATE temp TABLE test_temp_tab(id INT, PRIMARY KEY(id));
INSERT INTO test_temp_tab VALUES (1) RETURNING ctid;
 ctid
-------
 (0,1)
(1 row)

INSERT INTO test_temp_tab VALUES (2) RETURNING cmin;
 cmin
------
    0
(1 row)

INSERT INTO test_temp_tab VALUES (3) RETURNING cmax;
 cmax
------
    0
(1 row)

/* YB TODO: uncomment with issue #17154.
-- Since xmin and xmax output can easily change, don't directly output them.
WITH yb_with AS (
INSERT INTO test_temp_tab VALUES (4) RETURNING xmin
) SELECT count(*) FROM yb_with;
WITH yb_with AS (
INSERT INTO test_temp_tab VALUES (5) RETURNING xmax
) SELECT count(*) FROM yb_with;
*/
EXPLAIN (VERBOSE, COSTS OFF) SELECT ctid FROM test_temp_tab;
            QUERY PLAN
-----------------------------------
 Seq Scan on pg_temp.test_temp_tab
   Output: ctid
(2 rows)

EXPLAIN (VERBOSE, COSTS OFF) SELECT cmin FROM test_temp_tab;
            QUERY PLAN
-----------------------------------
 Seq Scan on pg_temp.test_temp_tab
   Output: cmin
(2 rows)

EXPLAIN (VERBOSE, COSTS OFF) SELECT cmax FROM test_temp_tab;
            QUERY PLAN
-----------------------------------
 Seq Scan on pg_temp.test_temp_tab
   Output: cmax
(2 rows)

-- Since xmin and xmax output can easily change, don't directly output them.
EXPLAIN (VERBOSE, COSTS OFF)
WITH yb_with AS (
SELECT xmin FROM test_temp_tab
) SELECT count(*) FROM yb_with;
               QUERY PLAN
-----------------------------------------
 Aggregate
   Output: count(*)
   ->  Seq Scan on pg_temp.test_temp_tab
         Output: test_temp_tab.id
(4 rows)

EXPLAIN (VERBOSE, COSTS OFF)
WITH yb_with AS (
SELECT xmax FROM test_temp_tab
) SELECT count(*) FROM yb_with;
               QUERY PLAN
-----------------------------------------
 Aggregate
   Output: count(*)
   ->  Seq Scan on pg_temp.test_temp_tab
         Output: test_temp_tab.id
(4 rows)

SELECT ctid FROM test_temp_tab;
 ctid
-------
 (0,1)
 (0,2)
 (0,3)
(3 rows)

SELECT cmin FROM test_temp_tab;
 cmin
------
    0
    0
    0
(3 rows)

SELECT cmax FROM test_temp_tab;
 cmax
------
    0
    0
    0
(3 rows)

-- Since xmin and xmax output can easily change, don't directly output them.
WITH yb_with AS (
SELECT xmin FROM test_temp_tab
) SELECT count(*) FROM yb_with;
 count
-------
     3
(1 row)

WITH yb_with AS (
SELECT xmax FROM test_temp_tab
) SELECT count(*) FROM yb_with;
 count
-------
     3
(1 row)

EXPLAIN (VERBOSE, COSTS OFF) SELECT ctid FROM test_temp_tab WHERE id = 1;
                          QUERY PLAN
--------------------------------------------------------------
 Index Scan using test_temp_tab_pkey on pg_temp.test_temp_tab
   Output: ctid
   Index Cond: (test_temp_tab.id = 1)
(3 rows)

EXPLAIN (VERBOSE, COSTS OFF) SELECT cmin FROM test_temp_tab WHERE id = 2;
                          QUERY PLAN
--------------------------------------------------------------
 Index Scan using test_temp_tab_pkey on pg_temp.test_temp_tab
   Output: cmin
   Index Cond: (test_temp_tab.id = 2)
(3 rows)

EXPLAIN (VERBOSE, COSTS OFF) SELECT cmax FROM test_temp_tab WHERE id = 3;
                          QUERY PLAN
--------------------------------------------------------------
 Index Scan using test_temp_tab_pkey on pg_temp.test_temp_tab
   Output: cmax
   Index Cond: (test_temp_tab.id = 3)
(3 rows)

-- Since xmin and xmax output can easily change, don't directly output them.
EXPLAIN (VERBOSE, COSTS OFF)
WITH yb_with AS (
SELECT xmin FROM test_temp_tab WHERE id = 4
) SELECT count(*) FROM yb_with;
                               QUERY PLAN
-------------------------------------------------------------------------
 Aggregate
   Output: count(*)
   ->  Index Only Scan using test_temp_tab_pkey on pg_temp.test_temp_tab
         Output: test_temp_tab.id
         Index Cond: (test_temp_tab.id = 4)
(5 rows)

EXPLAIN (VERBOSE, COSTS OFF)
WITH yb_with AS (
SELECT xmax FROM test_temp_tab WHERE id = 5
) SELECT count(*) FROM yb_with;
                               QUERY PLAN
-------------------------------------------------------------------------
 Aggregate
   Output: count(*)
   ->  Index Only Scan using test_temp_tab_pkey on pg_temp.test_temp_tab
         Output: test_temp_tab.id
         Index Cond: (test_temp_tab.id = 5)
(5 rows)

SELECT ctid FROM test_temp_tab WHERE id = 1;
 ctid
-------
 (0,1)
(1 row)

SELECT cmin FROM test_temp_tab WHERE id = 2;
 cmin
------
    0
(1 row)

SELECT cmax FROM test_temp_tab WHERE id = 3;
 cmax
------
    0
(1 row)

-- Since xmin and xmax output can easily change, don't directly output them.
WITH yb_with AS (
SELECT xmin FROM test_temp_tab WHERE id = 4
) SELECT count(*) FROM yb_with;
 count
-------
     0
(1 row)

WITH yb_with AS (
SELECT xmax FROM test_temp_tab WHERE id = 5
) SELECT count(*) FROM yb_with;
 count
-------
     0
(1 row)
