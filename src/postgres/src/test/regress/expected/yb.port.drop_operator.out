CREATE OPERATOR === (
        PROCEDURE = int8eq,
        LEFTARG = bigint,
        RIGHTARG = bigint,
        COMMUTATOR = ===
);
CREATE OPERATOR !== (
        PROCEDURE = int8ne,
        LEFTARG = bigint,
        RIGHTARG = bigint,
        NEGATOR = ===,
        COMMUTATOR = !==
);
DROP OPERATOR !==(bigint, bigint);
SELECT  ctid, oprcom
FROM    pg_catalog.pg_operator fk
WHERE   oprcom != 0 AND
        NOT EXISTS(SELECT 1 FROM pg_catalog.pg_operator pk WHERE pk.oid = fk.oprcom);
ERROR:  system column "ctid" is not supported yet
SELECT  '' AS ctid, oprcom -- YB: workaround for ctid not supported
FROM    pg_catalog.pg_operator fk -- YB
WHERE   oprcom != 0 AND -- YB
        NOT EXISTS(SELECT 1 FROM pg_catalog.pg_operator pk WHERE pk.oid = fk.oprcom); -- YB
 ctid | oprcom 
------+--------
(0 rows)

SELECT  '' AS ctid, oprnegate -- YB: workaround for ctid not supported
FROM    pg_catalog.pg_operator fk
WHERE   oprnegate != 0 AND
        NOT EXISTS(SELECT 1 FROM pg_catalog.pg_operator pk WHERE pk.oid = fk.oprnegate);
 ctid | oprnegate 
------+-----------
(0 rows)

DROP OPERATOR ===(bigint, bigint);
CREATE OPERATOR <| (
        PROCEDURE = int8lt,
        LEFTARG = bigint,
        RIGHTARG = bigint
);
CREATE OPERATOR |> (
        PROCEDURE = int8gt,
        LEFTARG = bigint,
        RIGHTARG = bigint,
        NEGATOR = <|,
        COMMUTATOR = <|
);
DROP OPERATOR |>(bigint, bigint);
SELECT  '' AS ctid, oprcom -- YB: workaround for ctid not supported
FROM    pg_catalog.pg_operator fk
WHERE   oprcom != 0 AND
        NOT EXISTS(SELECT 1 FROM pg_catalog.pg_operator pk WHERE pk.oid = fk.oprcom);
 ctid | oprcom 
------+--------
(0 rows)

SELECT  '' AS ctid, oprnegate -- YB: workaround for ctid not supported
FROM    pg_catalog.pg_operator fk
WHERE   oprnegate != 0 AND
        NOT EXISTS(SELECT 1 FROM pg_catalog.pg_operator pk WHERE pk.oid = fk.oprnegate);
 ctid | oprnegate 
------+-----------
(0 rows)

DROP OPERATOR <|(bigint, bigint);
