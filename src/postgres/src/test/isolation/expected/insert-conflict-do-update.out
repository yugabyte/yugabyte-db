Parsed test spec with 2 sessions

starting permutation: insert1 insert2 c1 select2 c2
step insert1: INSERT INTO upsert(key, val) VALUES(1, 'insert1') ON CONFLICT (key) DO UPDATE set val = upsert.val || ' updated by insert1';
step insert2: INSERT INTO upsert(key, val) VALUES(1, 'insert2') ON CONFLICT (key) DO UPDATE set val = upsert.val || ' updated by insert2'; <waiting ...>
step c1: COMMIT;
step insert2: <... completed>
step select2: SELECT * FROM upsert;
key|val                       
---+--------------------------
  1|insert1 updated by insert2
(1 row)

step c2: COMMIT;

starting permutation: insert1 insert2 a1 select2 c2
step insert1: INSERT INTO upsert(key, val) VALUES(1, 'insert1') ON CONFLICT (key) DO UPDATE set val = upsert.val || ' updated by insert1';
step insert2: INSERT INTO upsert(key, val) VALUES(1, 'insert2') ON CONFLICT (key) DO UPDATE set val = upsert.val || ' updated by insert2'; <waiting ...>
step a1: ABORT;
step insert2: <... completed>
step select2: SELECT * FROM upsert;
key|val    
---+-------
  1|insert2
(1 row)

step c2: COMMIT;
