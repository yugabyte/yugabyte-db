//--------------------------------------------------------------------------------------------------
// Copyright (c) YugaByte, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.  You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License
// is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
// or implied.  See the License for the specific language governing permissions and limitations
// under the License.
//
//--------------------------------------------------------------------------------------------------

#pragma once

#ifdef __cplusplus

namespace yb::pggate {

#endif // __cplusplus

typedef enum PgAnalyzeGaugeMetrics {
    YB_STORAGE_GAUGE_REGULARDB_BLOCK_CACHE_MISS = 0,
    YB_STORAGE_GAUGE_REGULARDB_BLOCK_CACHE_HIT,
    YB_STORAGE_GAUGE_REGULARDB_BLOCK_CACHE_ADD,
    YB_STORAGE_GAUGE_REGULARDB_BLOCK_CACHE_ADD_FAILURES,
    YB_STORAGE_GAUGE_REGULARDB_BLOCK_CACHE_INDEX_MISS,
    YB_STORAGE_GAUGE_REGULARDB_BLOCK_CACHE_INDEX_HIT,
    YB_STORAGE_GAUGE_REGULARDB_BLOCK_CACHE_FILTER_MISS,
    YB_STORAGE_GAUGE_REGULARDB_BLOCK_CACHE_FILTER_HIT,
    YB_STORAGE_GAUGE_REGULARDB_BLOCK_CACHE_DATA_MISS,
    YB_STORAGE_GAUGE_REGULARDB_BLOCK_CACHE_DATA_HIT,
    YB_STORAGE_GAUGE_REGULARDB_BLOCK_CACHE_BYTES_READ,
    YB_STORAGE_GAUGE_REGULARDB_BLOCK_CACHE_BYTES_WRITE,
    YB_STORAGE_GAUGE_REGULARDB_BLOOM_FILTER_USEFUL,
    YB_STORAGE_GAUGE_REGULARDB_BLOOM_FILTER_CHECKED,
    YB_STORAGE_GAUGE_REGULARDB_MEMTABLE_HIT,
    YB_STORAGE_GAUGE_REGULARDB_MEMTABLE_MISS,
    YB_STORAGE_GAUGE_REGULARDB_GET_HIT_L0,
    YB_STORAGE_GAUGE_REGULARDB_GET_HIT_L1,
    YB_STORAGE_GAUGE_REGULARDB_GET_HIT_L2_AND_UP,
    YB_STORAGE_GAUGE_REGULARDB_NUMBER_KEYS_WRITTEN,
    YB_STORAGE_GAUGE_REGULARDB_NUMBER_KEYS_READ,
    YB_STORAGE_GAUGE_REGULARDB_NUMBER_KEYS_UPDATED,
    YB_STORAGE_GAUGE_REGULARDB_BYTES_WRITTEN,
    YB_STORAGE_GAUGE_REGULARDB_BYTES_READ,
    YB_STORAGE_GAUGE_REGULARDB_NUMBER_DB_SEEK,
    YB_STORAGE_GAUGE_REGULARDB_NUMBER_DB_NEXT,
    YB_STORAGE_GAUGE_REGULARDB_NUMBER_DB_PREV,
    YB_STORAGE_GAUGE_REGULARDB_NUMBER_DB_SEEK_FOUND,
    YB_STORAGE_GAUGE_REGULARDB_NUMBER_DB_NEXT_FOUND,
    YB_STORAGE_GAUGE_REGULARDB_NUMBER_DB_PREV_FOUND,
    YB_STORAGE_GAUGE_REGULARDB_ITER_BYTES_READ,
    YB_STORAGE_GAUGE_REGULARDB_NO_FILE_CLOSES,
    YB_STORAGE_GAUGE_REGULARDB_NO_FILE_OPENS,
    YB_STORAGE_GAUGE_REGULARDB_NO_FILE_ERRORS,
    YB_STORAGE_GAUGE_REGULARDB_STALL_L0_SLOWDOWN_MICROS,
    YB_STORAGE_GAUGE_REGULARDB_STALL_MEMTABLE_COMPACTION_MICROS,
    YB_STORAGE_GAUGE_REGULARDB_STALL_L0_NUM_FILES_MICROS,
    YB_STORAGE_GAUGE_REGULARDB_STALL_MICROS,
    YB_STORAGE_GAUGE_REGULARDB_DB_MUTEX_WAIT_MICROS,
    YB_STORAGE_GAUGE_REGULARDB_RATE_LIMIT_DELAY_MILLIS,
    YB_STORAGE_GAUGE_REGULARDB_NO_ITERATORS,
    YB_STORAGE_GAUGE_REGULARDB_NUMBER_MULTIGET_CALLS,
    YB_STORAGE_GAUGE_REGULARDB_NUMBER_MULTIGET_KEYS_READ,
    YB_STORAGE_GAUGE_REGULARDB_NUMBER_MULTIGET_BYTES_READ,
    YB_STORAGE_GAUGE_REGULARDB_NUMBER_FILTERED_DELETES,
    YB_STORAGE_GAUGE_REGULARDB_NUMBER_MERGE_FAILURES,
    YB_STORAGE_GAUGE_REGULARDB_SEQUENCE_NUMBER,
    YB_STORAGE_GAUGE_REGULARDB_BLOOM_FILTER_PREFIX_CHECKED,
    YB_STORAGE_GAUGE_REGULARDB_BLOOM_FILTER_PREFIX_USEFUL,
    YB_STORAGE_GAUGE_REGULARDB_NUMBER_OF_RESEEKS_IN_ITERATION,
    YB_STORAGE_GAUGE_REGULARDB_GET_UPDATES_SINCE_CALLS,
    YB_STORAGE_GAUGE_REGULARDB_BLOCK_CACHE_COMPRESSED_MISS,
    YB_STORAGE_GAUGE_REGULARDB_BLOCK_CACHE_COMPRESSED_HIT,
    YB_STORAGE_GAUGE_REGULARDB_BLOCK_CACHE_COMPRESSED_ADD,
    YB_STORAGE_GAUGE_REGULARDB_BLOCK_CACHE_COMPRESSED_ADD_FAILURES,
    YB_STORAGE_GAUGE_REGULARDB_WAL_FILE_SYNCED,
    YB_STORAGE_GAUGE_REGULARDB_WAL_FILE_BYTES,
    YB_STORAGE_GAUGE_REGULARDB_WRITE_DONE_BY_SELF,
    YB_STORAGE_GAUGE_REGULARDB_WRITE_DONE_BY_OTHER,
    YB_STORAGE_GAUGE_REGULARDB_WRITE_WITH_WAL,
    YB_STORAGE_GAUGE_REGULARDB_COMPACT_READ_BYTES,
    YB_STORAGE_GAUGE_REGULARDB_COMPACT_WRITE_BYTES,
    YB_STORAGE_GAUGE_REGULARDB_FLUSH_WRITE_BYTES,
    YB_STORAGE_GAUGE_REGULARDB_NUMBER_DIRECT_LOAD_TABLE_PROPERTIES,
    YB_STORAGE_GAUGE_REGULARDB_NUMBER_SUPERVERSION_ACQUIRES,
    YB_STORAGE_GAUGE_REGULARDB_NUMBER_SUPERVERSION_RELEASES,
    YB_STORAGE_GAUGE_REGULARDB_NUMBER_SUPERVERSION_CLEANUPS,
    YB_STORAGE_GAUGE_REGULARDB_NUMBER_BLOCK_NOT_COMPRESSED,
    YB_STORAGE_GAUGE_REGULARDB_MERGE_OPERATION_TOTAL_TIME,
    YB_STORAGE_GAUGE_REGULARDB_FILTER_OPERATION_TOTAL_TIME,
    YB_STORAGE_GAUGE_REGULARDB_ROW_CACHE_HIT,
    YB_STORAGE_GAUGE_REGULARDB_ROW_CACHE_MISS,
    YB_STORAGE_GAUGE_REGULARDB_NO_TABLE_CACHE_ITERATORS,
    YB_STORAGE_GAUGE_REGULARDB_BLOCK_CACHE_SINGLE_TOUCH_HIT,
    YB_STORAGE_GAUGE_REGULARDB_BLOCK_CACHE_SINGLE_TOUCH_ADD,
    YB_STORAGE_GAUGE_REGULARDB_BLOCK_CACHE_SINGLE_TOUCH_BYTES_READ,
    YB_STORAGE_GAUGE_REGULARDB_BLOCK_CACHE_SINGLE_TOUCH_BYTES_WRITE,
    YB_STORAGE_GAUGE_REGULARDB_BLOCK_CACHE_MULTI_TOUCH_HIT,
    YB_STORAGE_GAUGE_REGULARDB_BLOCK_CACHE_MULTI_TOUCH_ADD,
    YB_STORAGE_GAUGE_REGULARDB_BLOCK_CACHE_MULTI_TOUCH_BYTES_READ,
    YB_STORAGE_GAUGE_REGULARDB_BLOCK_CACHE_MULTI_TOUCH_BYTES_WRITE,

    YB_STORAGE_GAUGE_INTENTSDB_BLOCK_CACHE_MISS,
    YB_STORAGE_GAUGE_INTENTSDB_BLOCK_CACHE_HIT,
    YB_STORAGE_GAUGE_INTENTSDB_BLOCK_CACHE_ADD,
    YB_STORAGE_GAUGE_INTENTSDB_BLOCK_CACHE_ADD_FAILURES,
    YB_STORAGE_GAUGE_INTENTSDB_BLOCK_CACHE_INDEX_MISS,
    YB_STORAGE_GAUGE_INTENTSDB_BLOCK_CACHE_INDEX_HIT,
    YB_STORAGE_GAUGE_INTENTSDB_BLOCK_CACHE_FILTER_MISS,
    YB_STORAGE_GAUGE_INTENTSDB_BLOCK_CACHE_FILTER_HIT,
    YB_STORAGE_GAUGE_INTENTSDB_BLOCK_CACHE_DATA_MISS,
    YB_STORAGE_GAUGE_INTENTSDB_BLOCK_CACHE_DATA_HIT,
    YB_STORAGE_GAUGE_INTENTSDB_BLOCK_CACHE_BYTES_READ,
    YB_STORAGE_GAUGE_INTENTSDB_BLOCK_CACHE_BYTES_WRITE,
    YB_STORAGE_GAUGE_INTENTSDB_BLOOM_FILTER_USEFUL,
    YB_STORAGE_GAUGE_INTENTSDB_BLOOM_FILTER_CHECKED,
    YB_STORAGE_GAUGE_INTENTSDB_MEMTABLE_HIT,
    YB_STORAGE_GAUGE_INTENTSDB_MEMTABLE_MISS,
    YB_STORAGE_GAUGE_INTENTSDB_GET_HIT_L0,
    YB_STORAGE_GAUGE_INTENTSDB_GET_HIT_L1,
    YB_STORAGE_GAUGE_INTENTSDB_GET_HIT_L2_AND_UP,
    YB_STORAGE_GAUGE_INTENTSDB_NUMBER_KEYS_WRITTEN,
    YB_STORAGE_GAUGE_INTENTSDB_NUMBER_KEYS_READ,
    YB_STORAGE_GAUGE_INTENTSDB_NUMBER_KEYS_UPDATED,
    YB_STORAGE_GAUGE_INTENTSDB_BYTES_WRITTEN,
    YB_STORAGE_GAUGE_INTENTSDB_BYTES_READ,
    YB_STORAGE_GAUGE_INTENTSDB_NUMBER_DB_SEEK,
    YB_STORAGE_GAUGE_INTENTSDB_NUMBER_DB_NEXT,
    YB_STORAGE_GAUGE_INTENTSDB_NUMBER_DB_PREV,
    YB_STORAGE_GAUGE_INTENTSDB_NUMBER_DB_SEEK_FOUND,
    YB_STORAGE_GAUGE_INTENTSDB_NUMBER_DB_NEXT_FOUND,
    YB_STORAGE_GAUGE_INTENTSDB_NUMBER_DB_PREV_FOUND,
    YB_STORAGE_GAUGE_INTENTSDB_ITER_BYTES_READ,
    YB_STORAGE_GAUGE_INTENTSDB_NO_FILE_CLOSES,
    YB_STORAGE_GAUGE_INTENTSDB_NO_FILE_OPENS,
    YB_STORAGE_GAUGE_INTENTSDB_NO_FILE_ERRORS,
    YB_STORAGE_GAUGE_INTENTSDB_STALL_L0_SLOWDOWN_MICROS,
    YB_STORAGE_GAUGE_INTENTSDB_STALL_MEMTABLE_COMPACTION_MICROS,
    YB_STORAGE_GAUGE_INTENTSDB_STALL_L0_NUM_FILES_MICROS,
    YB_STORAGE_GAUGE_INTENTSDB_STALL_MICROS,
    YB_STORAGE_GAUGE_INTENTSDB_DB_MUTEX_WAIT_MICROS,
    YB_STORAGE_GAUGE_INTENTSDB_RATE_LIMIT_DELAY_MILLIS,
    YB_STORAGE_GAUGE_INTENTSDB_NO_ITERATORS,
    YB_STORAGE_GAUGE_INTENTSDB_NUMBER_MULTIGET_CALLS,
    YB_STORAGE_GAUGE_INTENTSDB_NUMBER_MULTIGET_KEYS_READ,
    YB_STORAGE_GAUGE_INTENTSDB_NUMBER_MULTIGET_BYTES_READ,
    YB_STORAGE_GAUGE_INTENTSDB_NUMBER_FILTERED_DELETES,
    YB_STORAGE_GAUGE_INTENTSDB_NUMBER_MERGE_FAILURES,
    YB_STORAGE_GAUGE_INTENTSDB_SEQUENCE_NUMBER,
    YB_STORAGE_GAUGE_INTENTSDB_BLOOM_FILTER_PREFIX_CHECKED,
    YB_STORAGE_GAUGE_INTENTSDB_BLOOM_FILTER_PREFIX_USEFUL,
    YB_STORAGE_GAUGE_INTENTSDB_NUMBER_OF_RESEEKS_IN_ITERATION,
    YB_STORAGE_GAUGE_INTENTSDB_GET_UPDATES_SINCE_CALLS,
    YB_STORAGE_GAUGE_INTENTSDB_BLOCK_CACHE_COMPRESSED_MISS,
    YB_STORAGE_GAUGE_INTENTSDB_BLOCK_CACHE_COMPRESSED_HIT,
    YB_STORAGE_GAUGE_INTENTSDB_BLOCK_CACHE_COMPRESSED_ADD,
    YB_STORAGE_GAUGE_INTENTSDB_BLOCK_CACHE_COMPRESSED_ADD_FAILURES,
    YB_STORAGE_GAUGE_INTENTSDB_WAL_FILE_SYNCED,
    YB_STORAGE_GAUGE_INTENTSDB_WAL_FILE_BYTES,
    YB_STORAGE_GAUGE_INTENTSDB_WRITE_DONE_BY_SELF,
    YB_STORAGE_GAUGE_INTENTSDB_WRITE_DONE_BY_OTHER,
    YB_STORAGE_GAUGE_INTENTSDB_WRITE_WITH_WAL,
    YB_STORAGE_GAUGE_INTENTSDB_COMPACT_READ_BYTES,
    YB_STORAGE_GAUGE_INTENTSDB_COMPACT_WRITE_BYTES,
    YB_STORAGE_GAUGE_INTENTSDB_FLUSH_WRITE_BYTES,
    YB_STORAGE_GAUGE_INTENTSDB_NUMBER_DIRECT_LOAD_TABLE_PROPERTIES,
    YB_STORAGE_GAUGE_INTENTSDB_NUMBER_SUPERVERSION_ACQUIRES,
    YB_STORAGE_GAUGE_INTENTSDB_NUMBER_SUPERVERSION_RELEASES,
    YB_STORAGE_GAUGE_INTENTSDB_NUMBER_SUPERVERSION_CLEANUPS,
    YB_STORAGE_GAUGE_INTENTSDB_NUMBER_BLOCK_NOT_COMPRESSED,
    YB_STORAGE_GAUGE_INTENTSDB_MERGE_OPERATION_TOTAL_TIME,
    YB_STORAGE_GAUGE_INTENTSDB_FILTER_OPERATION_TOTAL_TIME,
    YB_STORAGE_GAUGE_INTENTSDB_ROW_CACHE_HIT,
    YB_STORAGE_GAUGE_INTENTSDB_ROW_CACHE_MISS,
    YB_STORAGE_GAUGE_INTENTSDB_NO_TABLE_CACHE_ITERATORS,
    YB_STORAGE_GAUGE_INTENTSDB_BLOCK_CACHE_SINGLE_TOUCH_HIT,
    YB_STORAGE_GAUGE_INTENTSDB_BLOCK_CACHE_SINGLE_TOUCH_ADD,
    YB_STORAGE_GAUGE_INTENTSDB_BLOCK_CACHE_SINGLE_TOUCH_BYTES_READ,
    YB_STORAGE_GAUGE_INTENTSDB_BLOCK_CACHE_SINGLE_TOUCH_BYTES_WRITE,
    YB_STORAGE_GAUGE_INTENTSDB_BLOCK_CACHE_MULTI_TOUCH_HIT,
    YB_STORAGE_GAUGE_INTENTSDB_BLOCK_CACHE_MULTI_TOUCH_ADD,
    YB_STORAGE_GAUGE_INTENTSDB_BLOCK_CACHE_MULTI_TOUCH_BYTES_READ,
    YB_STORAGE_GAUGE_INTENTSDB_BLOCK_CACHE_MULTI_TOUCH_BYTES_WRITE,

    YB_STORAGE_GAUGE_ACTIVE_WRITE_QUERY_OBJECTS,

    YB_STORAGE_GAUGE_COUNT,
} YbPgGaugeMetrics;

typedef enum PgAnalyzeCounterMetrics {
    YB_STORAGE_COUNTER_NOT_LEADER_REJECTIONS = 0,
    YB_STORAGE_COUNTER_LEADER_MEMORY_PRESSURE_REJECTIONS,
    YB_STORAGE_COUNTER_MAJORITY_SST_FILES_REJECTIONS,
    YB_STORAGE_COUNTER_TRANSACTION_CONFLICTS,
    YB_STORAGE_COUNTER_EXPIRED_TRANSACTIONS,
    YB_STORAGE_COUNTER_RESTART_READ_REQUESTS,
    YB_STORAGE_COUNTER_CONSISTENT_PREFIX_READ_REQUESTS,
    YB_STORAGE_COUNTER_PICKED_READ_TIME_ON_DOCDB,
    YB_STORAGE_COUNTER_PGSQL_CONSISTENT_PREFIX_READ_ROWS,
    YB_STORAGE_COUNTER_TABLET_DATA_CORRUPTIONS,
    YB_STORAGE_COUNTER_ROWS_INSERTED,
    YB_STORAGE_COUNTER_FAILED_BATCH_LOCK,
    YB_STORAGE_COUNTER_DOCDB_KEYS_FOUND,
    YB_STORAGE_COUNTER_DOCDB_OBSOLETE_KEYS_FOUND,
    YB_STORAGE_COUNTER_DOCDB_OBSOLETE_KEYS_FOUND_PAST_CUTOFF,

    YB_STORAGE_COUNTER_COUNT,
} YbPgCounterMetrics;

typedef enum PgAnalyzeEventStatsMetrics {
    YB_STORAGE_EVENT_REGULARDB_DB_GET = 0,
    YB_STORAGE_EVENT_REGULARDB_DB_WRITE,
    YB_STORAGE_EVENT_REGULARDB_COMPACTION_TIME,
    YB_STORAGE_EVENT_REGULARDB_WAL_FILE_SYNC_MICROS,
    YB_STORAGE_EVENT_REGULARDB_DB_MULTIGET,
    YB_STORAGE_EVENT_REGULARDB_READ_BLOCK_COMPACTION_MICROS,
    YB_STORAGE_EVENT_REGULARDB_READ_BLOCK_GET_MICROS,
    YB_STORAGE_EVENT_REGULARDB_WRITE_RAW_BLOCK_MICROS,
    YB_STORAGE_EVENT_REGULARDB_NUM_FILES_IN_SINGLE_COMPACTION,
    YB_STORAGE_EVENT_REGULARDB_DB_SEEK,
    YB_STORAGE_EVENT_REGULARDB_SST_READ_MICROS,
    YB_STORAGE_EVENT_REGULARDB_BYTES_PER_READ,
    YB_STORAGE_EVENT_REGULARDB_BYTES_PER_WRITE,
    YB_STORAGE_EVENT_REGULARDB_BYTES_PER_MULTIGET,

    YB_STORAGE_EVENT_INTENTSDB_DB_GET,
    YB_STORAGE_EVENT_INTENTSDB_DB_WRITE,
    YB_STORAGE_EVENT_INTENTSDB_COMPACTION_TIME,
    YB_STORAGE_EVENT_INTENTSDB_WAL_FILE_SYNC_MICROS,
    YB_STORAGE_EVENT_INTENTSDB_DB_MULTIGET,
    YB_STORAGE_EVENT_INTENTSDB_READ_BLOCK_COMPACTION_MICROS,
    YB_STORAGE_EVENT_INTENTSDB_READ_BLOCK_GET_MICROS,
    YB_STORAGE_EVENT_INTENTSDB_WRITE_RAW_BLOCK_MICROS,
    YB_STORAGE_EVENT_INTENTSDB_NUM_FILES_IN_SINGLE_COMPACTION,
    YB_STORAGE_EVENT_INTENTSDB_DB_SEEK,
    YB_STORAGE_EVENT_INTENTSDB_SST_READ_MICROS,
    YB_STORAGE_EVENT_INTENTSDB_BYTES_PER_READ,
    YB_STORAGE_EVENT_INTENTSDB_BYTES_PER_WRITE,
    YB_STORAGE_EVENT_INTENTSDB_BYTES_PER_MULTIGET,
    YB_STORAGE_EVENT_INTENTSDB_WRITE_JOIN_GROUP_MICROS,
    YB_STORAGE_EVENT_INTENTSDB_REMOVE_JOIN_GROUP_MICROS,

    YB_STORAGE_EVENT_SNAPSHOT_READ_INFLIGHT_WAIT_DURATION,
    YB_STORAGE_EVENT_QL_READ_LATENCY,
    YB_STORAGE_EVENT_WRITE_LOCK_LATENCY,
    YB_STORAGE_EVENT_QL_WRITE_LATENCY,
    YB_STORAGE_EVENT_READ_TIME_WAIT,
    YB_STORAGE_EVENT_TOTAL_WAIT_QUEUE_TIME,

    YB_STORAGE_EVENT_COUNT,
} YbPgEventMetrics;

#ifdef __cplusplus

} // namespace yb::pggate

#endif // __cplusplus
