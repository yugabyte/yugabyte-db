// Copyright (c) YugaByte, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.  You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License
// is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
// or implied.  See the License for the specific language governing permissions and limitations
// under the License.
//
syntax = "proto2";

package yb.master;

option java_package = "org.yb.master";

import "yb/common/common_types.proto";
import "yb/common/version_info.proto";
import "yb/common/wire_protocol.proto";

enum RelationType {
  SYSTEM_TABLE_RELATION = 1;
  USER_TABLE_RELATION = 2;
  INDEX_TABLE_RELATION = 3;
  MATVIEW_TABLE_RELATION = 4;
  COLOCATED_PARENT_TABLE_RELATION = 5;
}

enum SysRowEntryType {
  UNKNOWN = 0;
  TABLE = 1;
  TABLET = 2;
  CLUSTER_CONFIG = 3;
  NAMESPACE = 4;
  UDTYPE = 5;
  ROLE = 6;
  SNAPSHOT = 7;
  REDIS_CONFIG = 8;
  SYS_CONFIG = 9;
  CDC_STREAM = 10;
  UNIVERSE_REPLICATION = 11;
  SNAPSHOT_SCHEDULE = 12;
  DDL_LOG_ENTRY = 13;
  SNAPSHOT_RESTORATION = 14;
  XCLUSTER_SAFE_TIME = 15;
  XCLUSTER_CONFIG = 16;
  UNIVERSE_REPLICATION_BOOTSTRAP = 17;
  XCLUSTER_OUTBOUND_REPLICATION_GROUP = 18;
  CLONE_STATE = 19;
  TSERVER_REGISTRATION = 20;
  OBJECT_LOCK_ENTRY = 21;

  // Each value must have a corresponding entry in CATALOG_ENTITY_TYPE_MAP of
  // catalog_entity_types.h
}

// Master specific errors use this protobuf.
message MasterErrorPB {
  enum Code {
    // An error which has no more specific error code.
    // The code and message in 'status' may reveal more details.
    //
    // RPCs should avoid returning this, since callers will not be
    // able to easily parse the error.
    UNKNOWN_ERROR = 1;

    // The schema provided for a request was not well-formed.
    INVALID_SCHEMA = 2;

    // The requested table or index does not exist
    OBJECT_NOT_FOUND = 3;

    // The name requested for the table or index is already in use
    OBJECT_ALREADY_PRESENT = 4;

    // The number of tablets requested for a new table is over the per TS limit.
    TOO_MANY_TABLETS = 5;

    // Catalog manager is not yet initialized.
    CATALOG_MANAGER_NOT_INITIALIZED = 6;

    // The operation attempted can only be invoked against either the
    // leader or a single non-distributed master, which this node
    // isn't.
    NOT_THE_LEADER = 7;

    // The number of replicas requested is greater than the number of live servers
    // in the cluster.
    REPLICATION_FACTOR_TOO_HIGH = 8;

    // Change config should always be issued with the latest config version set.
    // If the client fails to do so, or there is a concurrent change, we will
    // set this error code.
    CONFIG_VERSION_MISMATCH = 9;

    // If there is an operation in progress causing the current rpc to be in an indeterminate state,
    // we return this error code. Client can retry on a case by case basis as needed.
    IN_TRANSITION_CAN_RETRY = 10;

    // Invalid namespace name or id for the namespace operation.
    NAMESPACE_NOT_FOUND = 11;
    NAMESPACE_ALREADY_PRESENT = 12;
    NO_NAMESPACE_USED = 13;
    NAMESPACE_IS_NOT_EMPTY = 14;

    // Client set some fields incorrectly in the cluster config proto.
    INVALID_CLUSTER_CONFIG = 15;

    // Indicator to client that the load balance operation can be retried.
    CAN_RETRY_LOAD_BALANCE_CHECK = 16;

    // Invalid (User-Defined) Type operation
    TYPE_NOT_FOUND = 17;
    INVALID_TYPE = 18;
    TYPE_ALREADY_PRESENT = 19;

    // Snapshot related errors.
    INVALID_TABLE_TYPE = 20;
    TABLE_CREATION_IS_IN_PROGRESS = 21;
    SNAPSHOT_NOT_FOUND = 22;
    SNAPSHOT_FAILED = 23;
    SNAPSHOT_CANCELLED = 24;
    PARALLEL_SNAPSHOT_OPERATION = 25;
    SNAPSHOT_IS_NOT_READY = 26;

    // Roles and permissions errors.
    ROLE_ALREADY_PRESENT = 27;
    ROLE_NOT_FOUND = 28;
    INVALID_REQUEST = 29;
    NOT_AUTHORIZED = 32;

    // Indicator to client that the are leaders on preferred only operation can be retried.
    CAN_RETRY_ARE_LEADERS_ON_PREFERRED_ONLY_CHECK = 30;

    REDIS_CONFIG_NOT_FOUND = 31;

    // Indicator to client that load balancer was recently active.
    LOAD_BALANCER_RECENTLY_ACTIVE = 33;

    INTERNAL_ERROR = 34;

    // Client set some fields in the table replication info incorrectly.
    INVALID_TABLE_REPLICATION_INFO = 35;

    REACHED_SPLIT_LIMIT = 36;

    SPLIT_OR_BACKFILL_IN_PROGRESS = 37;

    // Error in case a tablet-level operation was attempted on a tablet which is not running.
    TABLET_NOT_RUNNING = 38;

    TABLE_NOT_RUNNING = 39;

    TABLE_SCHEMA_CHANGE_IN_PROGRESS = 40;

    // The number of existing replication slots have reached `max_replication_slots`.
    REPLICATION_SLOT_LIMIT_REACHED = 41;

    TABLET_SERVER_NOT_FOUND = 42;
  }

  // The error code.
  required Code code = 1;

  // The Status object for the error. This will include a textual
  // message that may be more useful to present in log messages, etc,
  // though its error code is less specific.
  required AppStatusPB status = 2;
}

message NamespaceIdentifierPB {
  // The namespace ID to fetch info.
  optional bytes id = 1;

  // The namespace name to fetch info.
  optional string name = 2;

  // Database type.
  optional YQLDatabase database_type = 3 [ default = YQL_DATABASE_CQL ];
}

message TableIdentifierPB {
  // The table ID to fetch info.
  optional bytes table_id = 1;

  // The table name to fetch info.
  optional string table_name = 2;

  // The table namespace (if empty - using default namespace).
  optional NamespaceIdentifierPB namespace = 3;
}

message ResourcesPB {
  optional int64 core_count = 1;
  // The amount of memory the TServer has reserved for tablet overheads.
  optional int64 tablet_overhead_ram_in_bytes = 2;
}

// Sent by the TS when it first heartbeats with a master. This sends the
// master all of the necessary information about the current instance
// of the TS.
message TSRegistrationPB {
  optional ServerRegistrationPB common = 1;

  // DEPRECATED Capabilities of tablet server.
  reserved 2;

  // Resources available at the tserver.
  optional ResourcesPB resources = 3;

  optional VersionInfoPB version_info = 4;
}

message TServerMetricsPB {
  optional int64 total_sst_file_size = 1;
  optional int64 total_ram_usage = 2;
  optional double read_ops_per_sec = 3;
  optional double write_ops_per_sec = 4;
  optional int64 uncompressed_sst_file_size = 5;
  optional uint64 uptime_seconds = 6;
  optional uint64 num_sst_files = 7;

  message PathMetrics {
    // Device path provided by user in --fs_data_dirs
    required bytes path_id = 1;
    optional uint64 used_space = 2;
    optional uint64 total_space = 3;
  }
  repeated PathMetrics path_metrics = 8;
  optional bool disable_tablet_split_if_default_ttl = 9;
}
