// Copyright (c) YugaByte, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
// in compliance with the License.  You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License
// is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
// or implied.  See the License for the specific language governing permissions and limitations
// under the License.

syntax = "proto2";

package yb;

option java_package = "org.yb";

message HostPortPB {
  required string host = 1;
  required uint32 port = 2;
}

message CloudInfoPB {
  optional string placement_cloud = 1;
  optional string placement_region = 2;
  optional string placement_zone = 3;
}

message CloudInfoListPB {
  repeated CloudInfoPB zones = 1;
}

// This represents one instance of a placement constraint for a table. It is
// used to dictate what is the minimum number of expected replicas in a certain
// cloud/region/zone combo.
message PlacementBlockPB {
  // The cloud, region and zone information for this placement block.
  optional CloudInfoPB cloud_info = 1;

  // The minimum number of replicas that should always be up in this placement.
  optional int32 min_num_replicas = 2;
}

// This keeps track of the set of PlacementBlockPBs defining the placement
// requirements for a certain table. This is used both in the on-disk storage
// in SysCatalog, as well as in the actual table creation calls and in the
// schema returned to client queries.
//
// This is tightly coupled with the overall num_replicas for a certain table,
// as we want to both be able to specify requirements, per placement block, but
// also for the overall RF factor of the table.
message PlacementInfoPB {
  optional int32 num_replicas = 1;
  repeated PlacementBlockPB placement_blocks = 2;
  optional bytes placement_uuid = 3;
}

// Higher level structure to keep track of all types of replicas configured. This will have, at a
// minimum, the information about the replicas that are supposed to be active members of the raft
// configs, but can also include extra information, such as read only replicas.
message ReplicationInfoPB {
  optional PlacementInfoPB live_replicas = 1;
  repeated PlacementInfoPB read_replicas = 2;
  repeated CloudInfoPB affinitized_leaders = 3;
  repeated CloudInfoListPB multi_affinitized_leaders = 4;
}
