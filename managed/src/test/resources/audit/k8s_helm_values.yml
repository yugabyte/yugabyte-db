recievers:
  ysql:
    regex: '(?P<timestamp_with_ms>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}[.]\d{3} \w{3})[
      ][[](?P<process_id>\d+)[]][ ](?P<log_level>\w+):  AUDIT: (?P<audit_type>\w+),(?P<statement_id>\d+),(?P<substatement_id>\d+),(?P<class>\w+),(?P<command>[^,]+),(?P<object_type>[^,]*),(?P<object_name>[^,]*),(?P<statement>(.|\n|\r|\s)*)'
    lineStartPattern: ([A-Z]\d{4})|((?P<timestamp_with_ms>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}[.]\d{3}
      \w{3})[ ][[](?P<process_id>\d+)[]][ ])
    timestamp: !!com.yugabyte.yw.common.audit.otel.OtelCollectorConfigFormat$OperatorTimestamp {
      layout: '%Y-%m-%d %H:%M:%S.%L %Z', parse_from: attributes.timestamp_with_ms}
secretEnv:
- {envName: AWS_ACCESS_KEY_ID, envValue: YWNjZXNzX2tleQ==}
- {envName: AWS_SECRET_ACCESS_KEY, envValue: c2VjcmV0X2tleQ==}
enabled: true
exporters:
  awscloudwatchlogs/00000000-0000-0000-0000-000000000000: !!com.yugabyte.yw.common.audit.otel.OtelCollectorConfigFormat$AWSCloudWatchExporter
    endpoint: endpoint
    log_group_name: logGroup
    log_stream_name: logStream
    region: us-west2
    retry_on_failure: {enabled: true, initial_interval: 1m, max_elapsed_time: 1800m,
      max_interval: 1800m}
    sending_queue: {enabled: false, storage: file_storage/queue}
