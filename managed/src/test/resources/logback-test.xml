<!-- https://www.playframework.com/documentation/latest/SettingsLogger -->
<configuration>

  <property name="cloud" value="${yb.cloud.enabled}"/>
  <property name="LOGTESTTOFILE" value="${yb.test.logtofile:-false}"/>

  <conversionRule conversionWord="coloredLevel" converterClass="play.api.libs.logback.ColoredLevel" />


  <if condition='property("cloud").equals("true")'>
    <then>
      <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
          <providers>
            <timestamp/>
            <version/>
            <logLevel/>
            <mdc/>
            <pattern>
              <pattern>
                {
                "message": "%message%n%xException",
                "logger":
                {
                "thread": "%thread",
                "name": "%logger",
                "file": "%file",
                "line": "#asLong{%line}"
                }
                }
              </pattern>
            </pattern>
          </providers>
        </encoder>

        <filter class="ch.qos.logback.core.filter.EvaluatorFilter">
          <evaluator class="ch.qos.logback.classic.boolex.OnMarkerEvaluator">
            <marker>fileOnly</marker>
          </evaluator>
          <onMatch>DENY</onMatch>
        </filter>

        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
          <level>${APPLICATION_CONSOLE_LOG_LEVEL:-${applicationLogLevel:-DEBUG}}</level>
        </filter>
      </appender>
    </then>
    <else>
      <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
          <pattern>%d{"yyyy-MM-dd'T'HH:mm:ss.SSSXXX", UTC} %X{logType} %-5coloredLevel %X{correlation-id} %F:%L [%thread] %logger %msg%n</pattern>
        </encoder>

        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
          <level>${APPLICATION_CONSOLE_LOG_LEVEL:-${applicationLogLevel:-DEBUG}}</level>
        </filter>
      </appender>

    <if condition='property("LOGTESTTOFILE").equals("true")'>
    <then>
      <appender name="FILE" class="ch.qos.logback.core.FileAppender">
        <encoder>
          <pattern>%d{"yyyy-MM-dd'T'HH:mm:ss.SSSXXX", UTC} %X{logType} %-5coloredLevel %X{correlation-id} %F:%L [%thread] %logger %msg%n</pattern>
        </encoder>
        <file>/tmp/yw.test.log</file>
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
          <level>${APPLICATION_CONSOLE_LOG_LEVEL:-${applicationLogLevel:-DEBUG}}</level>
        </filter>
      </appender>
    </then>
    </if>
    </else>
  </if>

  <appender name="ASYNCSTDOUT" class="ch.qos.logback.classic.AsyncAppender">
    <appender-ref ref="STDOUT" />
    <includeCallerData>true</includeCallerData>
    <neverBlock>true</neverBlock>
  </appender>

<if condition='property("LOGTESTTOFILE").equals("true")'>
    <then>
  <appender name="ASYNCFILE" class="ch.qos.logback.classic.AsyncAppender">
    <appender-ref ref="FILE" />
    <includeCallerData>true</includeCallerData>
    <neverBlock>true</neverBlock>
  </appender>
</then>
</if>

  <logger name="play" level="INFO" />
  <logger name="org.yb" level="INFO" />
  <logger name="db.migration" level="INFO" />
  <logger name="application" level="TRACE" />
  <logger name="com.yugabyte.yw" level="TRACE" />
  <logger name="api" level="DEBUG" />

  <!-- Off these ones as they are annoying, and anyway we manage configuration ourselves -->
  <logger name="com.gargoylesoftware.htmlunit.javascript" level="OFF" />

  <logger name="oshi.software.os.linux.LinuxFileSystem" level="ERROR" />
  <logger name="org.apache.pekko.actor.ActorSystemImpl" level="ERROR"/>


    <if condition='property("LOGTESTTOFILE").equals("true")'>
    <then>
  <root level="WARN">
    <appender-ref ref="ASYNCSTDOUT" />
    <appender-ref ref="ASYNCFILE" />
     </root>
</then>
<else>
  <root level="WARN">
    <appender-ref ref="ASYNCSTDOUT" />
     </root>
</else>
</if>


</configuration>
