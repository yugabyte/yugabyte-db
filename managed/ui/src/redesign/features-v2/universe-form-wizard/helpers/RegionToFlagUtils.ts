// Mapping of common cloud regions to country ISO codes (Alpha-2)
const regionToCountryCode: Record<string, string> = {
    "us-east-2": "US",
    "us-east-1": "US",
    "us-west-1": "US",
    "us-west-2": "US",
    "af-south-1": "ZA",
    "ap-east-1": "HK",
    "ap-south-2": "IN",
    "ap-southeast-3": "ID",
    "ap-southeast-5": "MY",
    "ap-southeast-4": "AU",
    "ap-south-1": "IN",
    "ap-northeast-3": "JP",
    "ap-northeast-2": "KR",
    "ap-southeast-1": "SG",
    "ap-southeast-2": "AU",
    "ap-east-2": "GLOBE",
    "ap-southeast-7": "TH",
    "ap-northeast-1": "JP",
    "ca-central-1": "CA",
    "ca-west-1": "CA",
    "eu-central-1": "DE",
    "eu-west-1": "IE",
    "eu-west-2": "GB",
    "eu-south-1": "IT",
    "eu-west-3": "FR",
    "eu-south-2": "ES",
    "eu-north-1": "SE",
    "eu-central-2": "CH",
    "il-central-1": "IL",
    "mx-central-1": "MX",
    "me-south-1": "BH",
    "me-central-1": "AE",
    "sa-east-1": "BR"

    //GCP regions
    , "us-central1": "US",
    "us-east4": "US",
    "us-east1": "US",
    "us-west1": "US",
    "us-west2": "US",
    "us-west3": "US",
    "us-west4": "US",
    "asia-east1": "TW",
    "asia-east2": "TW",
    "asia-northeast1": "JP",
    "asia-northeast2": "JP",
    "asia-northeast3": "KR",
    "asia-south1": "IN",
    "asia-south2": "IN",
    "asia-southeast1": "SG",
    "australia-southeast1": "AU",
    "australia-southeast2": "AU",
    "europe-central2": "PL",
    "europe-north1": "FI",
    "europe-west1": "BE",
    "europe-west2": "GB",
    "europe-west3": "FR",
    "europe-west4": "NL",
    "europe-west6": "DE",
    "europe-west8": "IT",
    "europe-west9": "ES",
    "northamerica-northeast1": "CA",
    "southamerica-east1": "BR",
    "southamerica-west1": "CL",
    "asia-southeast2": "ID",
    "asia-southeast3": "PH",
    "asia-southeast4": "MY",
    "europe-southwest1": "PT",
    "northamerica-northeast2": "US",

    //Azure regions continued
    "eastus": "US",
    "eastus2": "US",
    "southcentralus": "US",
    "westus2": "US",
    "westus3": "US",
    "australiaeast": "AU",
    "southeastasia": "SG",
    "northeurope": "SE",
    "swedencentral": "SE",
    "uksouth": "GB",
    "westeurope": "IE",
    "centralus": "US",
    "southafricanorth": "ZA",
    "centralindia": "IN",
    "eastasia": "TW",
    "japaneast": "JP",
    "koreacentral": "KR",
    "canadacentral": "CA",
    "francecentral": "FR",
    "germanywestcentral": "DE",
    "italynorth": "IT",
    "norwayeast": "NO",
    "polandcentral": "PL",
    "spaincentral": "ES",
    "switzerlandnorth": "CH",
    "mexicocentral": "MX",
    "uaenorth": "AE",
    "brazilsouth": "BR",
    "israelcentral": "IL",
    "qatarcentral": "QA",
    "centralusstage": "US",
    "eastusstage": "US",
    "eastus2stage": "US",
    "northcentralusstage": "US",
    "southcentralusstage": "US",
    "westusstage": "US",
    "westus2stage": "US",
    "asia": "GLOBE",
    "asiapacific": "GLOBE",
    "australia": "AU",
    "brazil": "BR",
    "canada": "CA",
    "europe": "EUROPE",
    "france": "FR",
    "germany": "DE",
    "global": "GLOBE",
    "india": "IN",
    "israel": "IL",
    "italy": "IT",
    "japan": "JP",
    "korea": "KR",
    "newzealand": "NZ",
    "norway": "NO",
    "poland": "PL",
    "qatar": "QA",
    "singapore": "SG",
    "southafrica": "ZA",
    "sweden": "SE",
    "switzerland": "CH",
    "uae": "AE",
    "uk": "GB",
    "unitedstates": "US",
    "unitedstateseuap": "US",
    "eastasiastage": "HK",
    "southeastasiastage": "HK",
    "northcentralus": "US",
    "westus": "US",
    "japanwest": "JP",
    "jioindiawest": "IN",
    "centraluseuap": "US",
    "eastus2euap": "US",
    "westcentralus": "US",
    "southafricawest": "ZA",
    "australiacentral": "AU",
    "australiacentral2": "AU",
    "australiasoutheast": "AU",
    "jioindiacentral": "IN",
    "koreasouth": "KR",
    "southindia": "IN",
    "westindia": "IN",
    "canadaeast": "CA",
    "francesouth": "FR",
    "germanynorth": "DE",
    "norwaywest": "NO",
    "switzerlandwest": "CH",
    "ukwest": "GB",
    "uaecentral": "AE",
    "brazilsoutheast": "BR",
    // Add more as needed
};

/**
 * Converts a country code (ISO Alpha-2) to a Unicode emoji flag.
 */
function countryCodeToFlagEmoji(code: string): string {
    return code
        .toUpperCase()
        .replace(/./g, char => String.fromCodePoint(127397 + char.charCodeAt(0)));
}

/**
 * Gets the country flag emoji from a known region string.
 * @param region Cloud region name (e.g. "us-west", "asia-southeast1")
 * @returns Emoji flag or null if region not recognized
 */
export function getFlagFromRegion(region: string): string | null {
    const countryCode = regionToCountryCode[region];
    if(!countryCode || countryCode === "GLOBE") {
        return `ðŸŒŽ`; // Globe emoji for global regions
    }
    if(countryCode === "EUROPE") {
        return `ðŸ‡ªðŸ‡º`; // European Union flag for Europe
    }
    return countryCodeToFlagEmoji(countryCode);
};
