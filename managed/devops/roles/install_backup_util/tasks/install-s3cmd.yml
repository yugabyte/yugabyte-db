# Copyright 2020 YugabyteDB, Inc. and Contributors
#
# Licensed under the Polyform Free Trial License 1.0.0 (the "License"); you
# may not use this file except in compliance with the License. You
# may obtain a copy of the License at
#
# https://github.com/YugaByte/yugabyte-db/blob/master/licenses/POLYFORM-FREE-TRIAL-LICENSE-1.0.0.txt

- name: Check s3cmd version
  set_fact:
    s3cmd_cur_version: "{{ util_cur_version.stdout | regex_search('s3cmd version (.+)', '\\1')\
     | first }}"
  when: util_exists.rc == 0

- debug:
    msg: "s3cmd current version {{ s3cmd_cur_version }} new version {{ s3cmd_version }}"
  when: util_exists.rc == 0

- block:
    - name: Set variables for package paths and python interpreter
      set_fact:
        setuptools_package_path: "/usr/local/setuptools-59.6.0"
        python_magic_package_path: "/usr/local/python-magic-0.4.18"
        python_dateutil_package_path: "/usr/local/python-dateutil-2.8.2"
        s3cmd_package_path: "/usr/local/{{ s3cmd_package_name }}"
        setuptools_scm_package_path: "/usr/local/setuptools_scm-1.17.0"
        python_interpreter: "python2"

    - set_fact:
        prefix: "--prefix /usr"
      when: ansible_os_family != "Debian"

    - set_fact:
        prefix: ""
      when: ansible_os_family == "Debian"

    - name: Determine Python interpreter version
      raw: 'which python2 2> /dev/null || which python3 2> /dev/null'
      register: py_interpreter
      changed_when: py_interpreter.stdout != ""

    - name: Set Python interpreter to python3 if python2 is not present
      set_fact:
        python_interpreter: "python3"
      when: py_interpreter.stdout.find("python3") != -1

    - name: Extract the current Python version on the host machine
      raw: '{{ python_interpreter }} --version'
      register: py_version
      changed_when: py_version.stdout != ""

    - name: Download python3-distutils required for setup.py on Python 3 installed OS
      ansible.builtin.package:
        name: python3-distutils
        state: present
      when: not (air_gap | default(false)) and
            py_version.stdout is match("Python 3.") and ansible_os_family == "Debian"

    - name: Copy and unarchive required packages
      unarchive:
        src: "{{ package_path }}/{{ item }}.tar.gz"
        dest: "/usr/local"
        creates: "/usr/local/{{ item }}"
        remote_src: "{{ is_remote }}"
        owner: root
        group: root
      loop:
        - "setuptools-59.6.0"
        - "python-magic-0.4.18"
        - "python-dateutil-2.8.2"
        - "{{ s3cmd_package_name }}"
        - "setuptools_scm-1.17.0"
      become: true

    - name: Install setuptools, python magic, setuptools_scm, dateutil, and s3cmd
      command: "{{ python_interpreter }} setup.py install {{ prefix }}"
      args:
        chdir: "/usr/local/{{ item }}"
      environment:
        PYTHONPATH: "{{ setuptools_package_path }}:{{ python_magic_package_path }}:\
                     {{ setuptools_scm_package_path }}:{{ python_dateutil_package_path }}"
      loop:
        - "setuptools-59.6.0"
        - "python-magic-0.4.18"
        - "setuptools_scm-1.17.0"
        - "python-dateutil-2.8.2"
        - "{{ s3cmd_package_name }}"
      become: true

    - name: Create symlinks to s3cmd
      file:
        src: "{{ s3cmd_package_path }}/s3cmd"
        path: "{{ bin_path }}/s3cmd"
        state: link
        force: yes
      # We don't want to symlink on db hosts on which python3 is used rather than python2.
      when: py_version.stdout is match("Python 2.")
      become: true

  when: util_exists.rc != 0 or s3cmd_version != s3cmd_cur_version
  become: true
